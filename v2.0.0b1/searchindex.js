Search.setIndex({"docnames": ["1_installation", "2_package_overview", "3_getting_started", "4_minimal_example", "5_api", "6_references", "7_glossary", "8_faq", "9_license", "advanced_usage/10_continue", "advanced_usage/11_reproducibility", "advanced_usage/1_components", "advanced_usage/2_multi_fidelity", "advanced_usage/3_multi_objective", "advanced_usage/4_instances", "advanced_usage/5_ask_and_tell", "advanced_usage/6_commandline", "advanced_usage/7_stopping_criteria", "advanced_usage/8_logging", "advanced_usage/9_parallelism", "advanced_usage/index", "api/smac.acquisition", "api/smac.acquisition.function", "api/smac.acquisition.function.abstract_acquisition_function", "api/smac.acquisition.function.confidence_bound", "api/smac.acquisition.function.expected_improvement", "api/smac.acquisition.function.integrated_acquisition_function", "api/smac.acquisition.function.prior_acqusition_function", "api/smac.acquisition.function.probability_improvement", "api/smac.acquisition.function.thompson", "api/smac.acquisition.maximizer", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer", "api/smac.acquisition.maximizer.differential_evolution", "api/smac.acquisition.maximizer.helpers", "api/smac.acquisition.maximizer.local_and_random_search", "api/smac.acquisition.maximizer.local_search", "api/smac.acquisition.maximizer.random_search", "api/smac.callback", "api/smac.facade", "api/smac.facade.abstract_facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.hyperband_facade", "api/smac.facade.hyperparameter_optimization_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.facade.random_facade", "api/smac.initial_design", "api/smac.initial_design.abstract_initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensifier", "api/smac.intensifier.abstract_intensifier", "api/smac.intensifier.hyperband", "api/smac.intensifier.intensifier", "api/smac.intensifier.successive_halving", "api/smac.main", "api/smac.main.config_selector", "api/smac.main.smbo", "api/smac.model", "api/smac.model.abstract_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.abstract_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch_gaussian_process", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.abstract_prior", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.abstract_random_forest", "api/smac.model.random_forest.random_forest", "api/smac.model.random_model", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.random_design", "api/smac.random_design.abstract_random_design", "api/smac.random_design.annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inverse_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.errors", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.abstract_runner", "api/smac.runner.abstract_serial_runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.target_function_runner", "api/smac.runner.target_function_script_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.configspace", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.multi_objective", "api/smac.utils.pareto_front", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "examples/1_basics/1_quadratic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_ask_and_tell", "examples/1_basics/4_callback", "examples/1_basics/5_continue", "examples/1_basics/6_priors", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/2_parego", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/5_commandline/1_call_target_function_script", "examples/5_commandline/index", "examples/5_commandline/sg_execution_times", "examples/index", "images/README", "index"], "filenames": ["1_installation.rst", "2_package_overview.rst", "3_getting_started.rst", "4_minimal_example.rst", "5_api.rst", "6_references.rst", "7_glossary.rst", "8_faq.rst", "9_license.rst", "advanced_usage/10_continue.rst", "advanced_usage/11_reproducibility.rst", "advanced_usage/1_components.rst", "advanced_usage/2_multi_fidelity.rst", "advanced_usage/3_multi_objective.rst", "advanced_usage/4_instances.rst", "advanced_usage/5_ask_and_tell.rst", "advanced_usage/6_commandline.rst", "advanced_usage/7_stopping_criteria.rst", "advanced_usage/8_logging.rst", "advanced_usage/9_parallelism.rst", "advanced_usage/index.rst", "api/smac.acquisition.rst", "api/smac.acquisition.function.rst", "api/smac.acquisition.function.abstract_acquisition_function.rst", "api/smac.acquisition.function.confidence_bound.rst", "api/smac.acquisition.function.expected_improvement.rst", "api/smac.acquisition.function.integrated_acquisition_function.rst", "api/smac.acquisition.function.prior_acqusition_function.rst", "api/smac.acquisition.function.probability_improvement.rst", "api/smac.acquisition.function.thompson.rst", "api/smac.acquisition.maximizer.rst", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer.rst", "api/smac.acquisition.maximizer.differential_evolution.rst", "api/smac.acquisition.maximizer.helpers.rst", "api/smac.acquisition.maximizer.local_and_random_search.rst", "api/smac.acquisition.maximizer.local_search.rst", "api/smac.acquisition.maximizer.random_search.rst", "api/smac.callback.rst", "api/smac.facade.rst", "api/smac.facade.abstract_facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.hyperband_facade.rst", "api/smac.facade.hyperparameter_optimization_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.facade.random_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.abstract_initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensifier.rst", "api/smac.intensifier.abstract_intensifier.rst", "api/smac.intensifier.hyperband.rst", "api/smac.intensifier.intensifier.rst", "api/smac.intensifier.successive_halving.rst", "api/smac.main.rst", "api/smac.main.config_selector.rst", "api/smac.main.smbo.rst", "api/smac.model.rst", "api/smac.model.abstract_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.abstract_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch_gaussian_process.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.abstract_prior.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.abstract_random_forest.rst", "api/smac.model.random_forest.random_forest.rst", "api/smac.model.random_model.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.random_design.rst", "api/smac.random_design.abstract_random_design.rst", "api/smac.random_design.annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inverse_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.errors.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.abstract_runner.rst", "api/smac.runner.abstract_serial_runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.target_function_runner.rst", "api/smac.runner.target_function_script_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.configspace.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.multi_objective.rst", "api/smac.utils.pareto_front.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "examples/1_basics/1_quadratic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_ask_and_tell.rst", "examples/1_basics/4_callback.rst", "examples/1_basics/5_continue.rst", "examples/1_basics/6_priors.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/2_parego.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/5_commandline/1_call_target_function_script.rst", "examples/5_commandline/index.rst", "examples/5_commandline/sg_execution_times.rst", "examples/index.rst", "images/README.md", "index.rst"], "titles": ["Installation", "Package Overview", "Getting Started", "Minimal Example", "API References", "References", "Glossary", "F.A.Q.", "License", "Continue", "Reproducibility", "Components", "Multi-Fidelity Optimization", "Multi-Objective Optimization", "Optimization across Instances", "Ask-and-Tell Interface", "Command-Line Interface", "Stopping Criteria", "Logging", "Parallelism", "Advanced Usage", "smac.acquisition", "smac.acquisition.function", "smac.acquisition.function.abstract_acquisition_function", "smac.acquisition.function.confidence_bound", "smac.acquisition.function.expected_improvement", "smac.acquisition.function.integrated_acquisition_function", "smac.acquisition.function.prior_acqusition_function", "smac.acquisition.function.probability_improvement", "smac.acquisition.function.thompson", "smac.acquisition.maximizer", "smac.acquisition.maximizer.abstract_acqusition_maximizer", "smac.acquisition.maximizer.differential_evolution", "smac.acquisition.maximizer.helpers", "smac.acquisition.maximizer.local_and_random_search", "smac.acquisition.maximizer.local_search", "smac.acquisition.maximizer.random_search", "smac.callback", "smac.facade", "smac.facade.abstract_facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.hyperband_facade", "smac.facade.hyperparameter_optimization_facade", "smac.facade.multi_fidelity_facade", "smac.facade.random_facade", "smac.initial_design", "smac.initial_design.abstract_initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensifier", "smac.intensifier.abstract_intensifier", "smac.intensifier.hyperband", "smac.intensifier.intensifier", "smac.intensifier.successive_halving", "smac.main", "smac.main.config_selector", "smac.main.smbo", "smac.model", "smac.model.abstract_model", "smac.model.gaussian_process", "smac.model.gaussian_process.abstract_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch_gaussian_process", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.abstract_prior", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.abstract_random_forest", "smac.model.random_forest.random_forest", "smac.model.random_model", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.random_design", "smac.random_design.abstract_random_design", "smac.random_design.annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inverse_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.errors", "smac.runhistory.runhistory", "smac.runner", "smac.runner.abstract_runner", "smac.runner.abstract_serial_runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.target_function_runner", "smac.runner.target_function_script_runner", "smac.scenario", "smac.utils", "smac.utils.configspace", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.multi_objective", "smac.utils.pareto_front", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "Quadratic Function", "Support Vector Machine with Cross-Validation", "Ask-and-Tell", "Custom Callback", "Continue an Optimization", "User Priors over the Optimum", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function with Objective Weights", "ParEGO", "Multi-Objective", "Computation times", "Call Target Function From Script", "Command-Line Interface", "Computation times", "Examples", "Overview Figure", "Home"], "terms": {"smac": [0, 1, 2, 3, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 143, 145, 147], "i": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 22, 27, 30, 31, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 77, 80, 81, 83, 89, 90, 91, 92, 93, 94, 95, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 121, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 143, 145, 147], "written": [0, 147], "python3": [0, 147], "therefor": [0, 2, 6, 11, 38, 45, 67, 68, 116, 134, 139], "an": [0, 1, 2, 6, 7, 11, 12, 13, 15, 16, 22, 23, 30, 31, 33, 37, 38, 39, 40, 41, 43, 45, 53, 54, 56, 63, 73, 85, 87, 89, 90, 91, 92, 93, 94, 95, 108, 109, 110, 111, 112, 113, 114, 115, 119, 120, 126, 127, 131, 132, 133, 134, 135, 139, 145, 147], "environ": [0, 2, 3, 38, 39, 116, 126, 129, 130, 131, 134, 139, 142], "python": [0, 1, 7, 16, 33, 63, 65, 73, 75, 109, 114, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 143, 145, 147], "3": [0, 6, 8, 11, 13, 38, 40, 41, 42, 43, 44, 45, 53, 55, 56, 57, 81, 83, 89, 92, 109, 112, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 147], "8": [0, 2, 11, 38, 39, 41, 53, 57, 59, 81, 83, 127, 131, 134, 138, 139, 142, 147], "furthermor": [0, 53, 54, 129], "random": [0, 2, 6, 20, 22, 27, 30, 31, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 51, 53, 54, 56, 57, 61, 62, 81, 82, 83, 84, 89, 90, 91, 92, 93, 116, 127, 131, 134, 139, 147], "forest": [0, 2, 6, 11, 22, 27, 38, 40, 43, 61, 62, 81, 82, 83, 127, 131, 147], "us": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 19, 22, 23, 27, 29, 30, 31, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 77, 79, 80, 81, 83, 89, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 105, 108, 109, 110, 112, 115, 116, 118, 119, 120, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 142, 143, 145, 147], "swig": 0, "build": [0, 127, 131, 134, 135], "depend": [0, 1, 2, 7, 11, 16, 20, 38, 41, 61, 62, 85, 86, 109, 113, 116, 127], "either": [0, 2, 7, 38, 39, 63, 73, 94, 108, 109, 114], "your": [0, 1, 2, 6, 7, 13, 14, 16, 18, 20, 116], "system": 0, "directli": [0, 2, 11, 12, 13, 16, 109, 114], "The": [0, 1, 2, 3, 6, 7, 11, 12, 13, 16, 17, 18, 19, 22, 23, 30, 31, 34, 38, 39, 40, 41, 43, 45, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 76, 79, 80, 81, 83, 89, 90, 92, 94, 95, 96, 97, 108, 109, 110, 111, 112, 114, 115, 116, 118, 122, 126, 128, 134, 138, 139, 147], "command": [0, 1, 6, 20], "linux": 0, "machin": [0, 3, 22, 26, 132, 133, 145, 147], "follow": [0, 1, 2, 3, 7, 11, 13, 14, 16, 18, 38, 45, 53, 56, 57, 81, 83, 109, 110, 112, 115, 142, 147], "apt": 0, "get": [0, 11, 30, 31, 32, 36, 53, 54, 57, 67, 68, 109, 112, 120, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "test": [0, 16, 61, 62, 63, 65, 94, 108, 115, 147], "mac": [0, 7], "9": [0, 138, 147], "10": [0, 2, 6, 18, 22, 27, 30, 34, 35, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 63, 65, 81, 83, 126, 127, 128, 129, 130, 131, 134, 138, 139, 147], "we": [0, 2, 6, 7, 11, 13, 14, 16, 20, 22, 29, 30, 31, 38, 45, 53, 57, 59, 63, 73, 75, 109, 110, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 145, 147], "recommend": [0, 7, 11, 16, 20], "creat": [0, 7, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 46, 47, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 109, 110, 112, 114, 115, 127, 131, 134, 135, 139], "activ": [0, 7, 67, 68, 109, 112, 131, 134, 139], "n": [0, 5, 22, 23, 26, 29, 53, 56, 59, 63, 65, 73, 75, 109, 112, 119, 138, 139], "If": [0, 2, 7, 8, 9, 11, 15, 16, 17, 20, 22, 27, 30, 31, 38, 39, 43, 45, 53, 54, 56, 57, 59, 60, 61, 63, 67, 68, 73, 80, 81, 83, 89, 92, 94, 96, 97, 108, 109, 112, 115, 116, 121, 127, 135, 147], "you": [0, 1, 2, 6, 7, 8, 9, 11, 12, 13, 14, 16, 18, 19, 20, 38, 43, 45, 63, 73, 109, 112, 116, 127, 131, 138, 143, 145, 147], "haven": 0, "t": [0, 2, 7, 22, 24, 25, 28, 29, 67, 68, 130], "yet": [0, 7, 53, 57, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "can": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 29, 30, 31, 35, 38, 39, 42, 44, 53, 57, 63, 73, 94, 108, 109, 110, 111, 112, 114, 116, 120, 127, 128, 130, 131, 134, 138, 139, 143, 145, 147], "insid": [0, 11, 129], "gxx_linux": 0, "64": [0, 30, 35], "gcc_linux": 0, "now": [0, 13, 126, 127, 128, 129, 130, 135, 142], "via": [0, 11, 13, 30, 32, 36, 109, 110, 112], "pypi": 0, "pip": 0, "Or": [0, 13], "altern": [0, 13, 127, 135], "clone": 0, "from": [0, 1, 2, 3, 7, 9, 11, 16, 17, 18, 30, 31, 32, 34, 38, 39, 45, 46, 47, 53, 54, 56, 57, 59, 60, 63, 65, 67, 68, 75, 94, 108, 109, 110, 112, 115, 116, 122, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143, 144, 145], "github": [0, 7, 46, 52, 122, 147], "git": 0, "http": [0, 5, 8, 22, 26, 33, 46, 50, 52, 85, 88, 122, 147], "com": [0, 33, 122, 147], "automl": [0, 7, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 147], "smac3": [0, 7, 147], "cd": 0, "e": [0, 1, 6, 11, 13, 16, 22, 25, 30, 34, 38, 42, 44, 53, 57, 59, 74, 76, 109, 110, 135], "dev": 0, "channel": 0, "achiev": [0, 2], "ad": [0, 11, 37, 53, 54, 56, 57, 67, 68, 94, 108, 118, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "config": [0, 2, 3, 6, 11, 37, 38, 39, 46, 47, 53, 54, 56, 57, 59, 60, 94, 95, 106, 108, 109, 110, 112, 114, 115, 116, 118, 122, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "add": [0, 7, 11, 14, 38, 39, 40, 41, 43, 44, 45, 46, 47, 53, 56, 57, 60, 94, 108, 127, 131, 134, 135, 139], "set": [0, 1, 5, 7, 9, 11, 16, 17, 38, 39, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 60, 89, 91, 93, 94, 108, 109, 114, 116, 120, 121, 130, 131, 138, 139, 142], "channel_prior": 0, "strict": 0, "must": [0, 2, 16, 30, 31, 33, 38, 40, 41, 43, 45, 61, 62, 67, 68, 74, 75, 76, 79, 80, 85, 87, 115, 116, 134], "have": [0, 6, 7, 8, 9, 11, 12, 13, 15, 16, 30, 34, 38, 45, 53, 54, 59, 94, 95, 108, 109, 110, 111, 112, 128, 131, 135, 139], "4": [0, 1, 11, 16, 38, 40, 53, 57, 96, 97, 99, 100, 102, 103, 104, 115, 126, 128, 129, 131, 134, 135, 138, 139], "To": [0, 7, 9, 11, 14, 109, 112, 131, 134], "updat": [0, 11, 16, 22, 23, 37, 38, 39, 45, 53, 54, 60, 85, 86, 88, 94, 108, 130], "check": [0, 11, 59, 60, 89, 90, 91, 92, 93, 94, 108, 109, 110, 116, 130], "current": [0, 6, 11, 22, 23, 25, 26, 30, 31, 38, 39, 45, 53, 54, 55, 56, 57, 60, 63, 65, 89, 93, 94, 95, 96, 97, 108, 129], "version": [0, 2, 7, 11, 17, 18, 30, 34], "pleas": [0, 1, 2, 7, 8, 9, 11, 12, 15, 16, 19, 22, 29, 38, 45, 53, 54, 94, 108, 147], "instruct": 0, "offici": 0, "document": [0, 2, 5, 53, 55], "onc": [0, 11, 30, 35, 38, 42, 44, 45, 53, 57, 131, 134, 139], "ha": [0, 1, 11, 17, 30, 31, 46, 47, 53, 54, 57, 67, 68, 95], "been": [0, 1, 7, 11, 15, 17, 53, 57, 59, 94, 95, 108, 109, 110, 111, 112, 128], "enabl": [0, 16, 38, 40, 43, 81, 83, 94, 108], "read": [0, 9, 20, 94, 108], "feedstock": 0, "more": [0, 2, 6, 11, 13, 17, 20, 53, 54, 56, 109, 110, 112, 138], "detail": [0, 2, 6, 22, 26, 27, 134], "support": [1, 2, 3, 11, 19, 38, 40, 42, 44, 53, 54, 56, 57, 67, 68, 132, 133, 145], "determin": [1, 7, 11, 12, 38, 39, 53, 54, 63, 67, 68, 73, 111], "well": [1, 11, 15, 22, 27, 109, 110, 127, 128, 131], "perform": [1, 2, 6, 7, 11, 12, 16, 30, 34, 35, 38, 39, 40, 42, 43, 44, 45, 53, 54, 57, 60, 81, 83, 94, 108, 109, 110, 116, 135, 147], "hyperparamet": [1, 2, 3, 5, 6, 11, 16, 22, 26, 27, 30, 34, 38, 39, 41, 43, 44, 46, 47, 61, 62, 63, 65, 67, 68, 69, 73, 74, 75, 79, 80, 81, 83, 118, 126, 127, 128, 129, 130, 131, 134, 139, 142, 147], "configur": [1, 3, 6, 7, 13, 15, 16, 20, 22, 23, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 59, 60, 74, 75, 79, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 122, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 147], "algorithm": [1, 2, 5, 6, 7, 12, 13, 20, 22, 26, 38, 39, 40, 41, 42, 43, 45, 53, 54, 94, 96, 97, 108, 109, 110, 114, 115, 122, 135, 147], "By": [1, 134], "being": [1, 6, 67, 68, 109, 114], "robust": [1, 63, 65, 73, 75], "flexibl": [1, 63, 65, 73, 75], "framework": [1, 2, 6, 63, 65, 73, 75], "bayesian": [1, 5, 6, 11, 22, 26, 27, 38, 39, 60, 63, 65, 73, 75, 89, 92, 129, 147], "optim": [1, 2, 3, 5, 6, 7, 11, 15, 17, 18, 19, 20, 22, 24, 26, 27, 29, 30, 34, 37, 38, 39, 45, 53, 54, 60, 63, 65, 73, 75, 85, 86, 89, 92, 116, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 139, 142, 143, 145, 147], "improv": [1, 2, 11, 22, 25, 28, 38, 40, 41, 43, 96, 99], "within": [1, 59, 109, 112], "few": [1, 6, 38, 45, 135], "function": [1, 5, 6, 7, 12, 13, 20, 30, 31, 33, 34, 37, 38, 39, 40, 41, 43, 45, 59, 60, 63, 65, 67, 68, 73, 94, 96, 97, 99, 108, 109, 110, 111, 112, 113, 114, 115, 116, 128, 130, 131, 132, 133, 134, 135, 139, 140, 141, 143, 144, 145], "evalu": [1, 2, 6, 7, 11, 12, 17, 19, 22, 23, 30, 31, 38, 39, 40, 41, 43, 45, 46, 47, 48, 51, 53, 54, 56, 57, 59, 67, 68, 89, 90, 91, 92, 93, 94, 95, 108, 109, 114, 126, 127, 128, 129, 134, 135, 138, 139], "It": [1, 6, 11, 15, 53, 54, 59, 81, 83, 109, 112, 127, 128], "offer": [1, 2, 13, 109, 110], "sever": [1, 33, 37, 145], "entri": [1, 2], "point": [1, 2, 11, 13, 22, 24, 30, 31, 34, 38, 40, 43, 53, 54, 61, 62, 63, 65, 80, 81, 83, 138], "pre": [1, 14], "typic": 1, "case": [1, 2, 11, 12, 13, 15, 22, 27, 30, 34, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57, 59, 60, 94, 95, 108, 109, 110, 111, 112, 116, 135, 145], "solv": 1, "low": [1, 2, 11, 38, 45], "dimension": [1, 11, 38, 40, 61, 62, 63, 64, 65, 73, 81, 83, 128], "continu": [1, 11, 20, 38, 39, 41, 53, 54, 55, 56, 57, 59, 94, 108, 127, 128, 131, 132, 133, 134, 138, 145, 147], "artifici": [1, 130], "global": [1, 6, 18, 53, 54], "problem": [1, 5, 6, 7, 38, 39, 109, 110, 112, 114, 115, 126, 128], "across": [1, 6, 20, 38, 42, 44, 53, 57, 94, 108, 135], "multipl": [1, 6, 7, 11, 12, 13, 19, 22, 27, 38, 39, 46, 47, 61, 80, 94, 108, 116, 131, 136, 137, 139, 145], "instanc": [1, 2, 6, 7, 11, 12, 16, 17, 20, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 73, 80, 81, 83, 94, 95, 96, 97, 108, 109, 110, 112, 114, 115, 116, 118, 122, 126, 127, 128, 130, 131, 134, 135, 139, 142], "characterist": 1, "capabl": [1, 109, 112], "sampl": [1, 11, 13, 14, 22, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 53, 56, 57, 59, 61, 62, 63, 65, 73, 75, 80, 81, 83, 116], "effici": [1, 2, 53, 54, 94, 108, 147], "black": [1, 2, 6, 126], "box": [1, 2, 6, 126], "onli": [1, 6, 7, 10, 11, 13, 16, 18, 19, 22, 23, 29, 38, 42, 44, 46, 48, 53, 54, 56, 57, 59, 60, 61, 62, 67, 68, 80, 94, 96, 97, 108, 109, 111, 112, 116, 122, 126, 128, 130, 131, 134, 135, 138, 139, 142], "awar": 1, "input": [1, 6, 11, 22, 24, 38, 42, 44, 53, 56, 57, 61, 62, 63, 65, 75, 80, 81, 83, 96, 100, 121, 128], "output": [1, 6, 16, 60, 61, 62, 63, 65, 73, 116], "agnost": 1, "intern": [1, 11, 12, 14, 38, 39, 46, 47, 53, 54, 55, 56, 57, 60, 61, 62, 63, 67, 68, 73, 74, 75, 79, 80, 85, 86, 88, 109, 110, 112, 114, 115, 116, 134], "categor": [1, 2, 30, 34, 38, 41, 127, 131, 134, 135, 139], "hierarch": 1, "condit": [1, 67, 68, 118, 127, 134, 135, 139], "integr": [1, 11, 22, 26, 63, 73, 129, 131], "configurationspac": [1, 2, 3, 30, 31, 33, 34, 35, 61, 62, 63, 64, 65, 73, 94, 108, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "up": [1, 11, 53, 57, 59, 94, 108, 120, 126], "100": [1, 3, 6, 116, 126, 128, 129, 135, 138], "ani": [1, 6, 7, 8, 9, 11, 18, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 42, 44, 46, 47, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 109, 110, 111, 112, 114, 115, 116, 126, 130, 131, 142], "object": [1, 2, 3, 6, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 126, 127, 128, 129, 130, 131, 134, 135, 139, 141, 142], "g": [1, 5, 6, 11, 13, 16, 30, 34, 135], "accuraci": [1, 2, 17, 131, 134, 139], "runtim": [1, 16, 17, 22, 25, 60, 96, 99, 109, 110, 112, 114, 115], "cross": [1, 6, 116, 131, 132, 133, 134, 135, 139, 145], "valid": [1, 2, 6, 38, 39, 53, 54, 57, 60, 61, 62, 116, 126, 128, 130, 131, 132, 133, 134, 135, 138, 139, 142, 145], "possibl": [1, 2, 11, 22, 27, 38, 39, 67, 68, 135], "multi": [1, 2, 6, 16, 20, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57, 60, 85, 86, 87, 88, 94, 95, 96, 97, 108, 109, 114, 115, 116, 131, 135, 137, 138, 139], "arbitrari": [1, 2, 109, 110, 112, 114, 115, 128, 147], "number": [1, 6, 11, 12, 14, 17, 22, 24, 26, 27, 30, 31, 34, 35, 38, 40, 41, 43, 44, 45, 46, 47, 53, 54, 56, 61, 62, 63, 64, 65, 67, 68, 73, 75, 81, 83, 85, 87, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 114, 115, 116, 127, 131, 134, 138, 139, 142], "scalar": [1, 11, 13, 38, 39, 75, 94, 108], "both": [1, 2, 12, 13, 59, 111, 139], "parego": [1, 5, 11, 13, 85, 140, 141, 145], "know06": [1, 5, 13], "mean": [1, 3, 7, 11, 13, 14, 38, 40, 41, 43, 45, 53, 56, 61, 62, 63, 65, 73, 74, 76, 78, 80, 81, 83, 85, 87, 94, 108, 116, 127, 131, 134, 135, 139], "aggreg": [1, 13, 38, 40, 41, 43, 45, 85, 87], "strategi": [1, 6, 13, 38, 39, 40, 41, 43, 45, 46, 47, 85, 86], "ar": [1, 2, 6, 7, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 25, 30, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 75, 81, 83, 94, 96, 97, 108, 109, 110, 111, 112, 114, 115, 116, 118, 121, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "fidel": [1, 2, 6, 11, 17, 20, 38, 39, 44, 53, 54, 56, 57, 60, 94, 108, 116, 134, 135], "judg": [1, 38, 39, 60], "budget": [1, 2, 6, 11, 12, 15, 16, 17, 38, 39, 40, 42, 44, 45, 53, 54, 56, 57, 59, 60, 94, 95, 96, 97, 108, 109, 110, 112, 114, 115, 116, 122, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "discard": [1, 38, 42, 44, 53, 57], "unsuit": 1, "earli": [1, 38, 45], "thi": [1, 2, 7, 8, 11, 13, 14, 18, 20, 22, 23, 30, 31, 34, 37, 38, 39, 41, 43, 44, 45, 46, 47, 53, 54, 56, 57, 59, 60, 61, 62, 63, 65, 67, 68, 69, 73, 74, 75, 79, 81, 83, 89, 90, 92, 94, 95, 108, 109, 110, 111, 112, 113, 116, 118, 128, 129, 130, 131, 134, 135, 142, 143, 145, 147], "result": [1, 2, 11, 15, 38, 39, 53, 54, 60, 109, 110, 111, 112, 114, 115, 116, 126, 130, 142], "massiv": 1, "speed": 1, "find": [1, 2, 3, 6, 11, 53, 54, 59, 126, 127, 128, 129, 130, 142], "one": [1, 6, 7, 10, 13, 16, 17, 30, 33, 34, 38, 45, 53, 54, 56, 57, 63, 73, 94, 96, 101, 103, 104, 105, 108, 109, 110, 111, 112, 115, 116, 126, 128, 130, 131, 135, 138, 139, 142], "dataset": [1, 3, 6, 14, 116, 127, 131, 134, 136, 137, 139, 145], "mani": [1, 2, 6, 38, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57, 59, 61, 80, 94, 95, 108], "line": [1, 5, 6, 20], "interfac": [1, 2, 6, 13, 20, 128], "execut": [1, 7, 11, 16, 38, 39, 60, 109, 110, 111, 112, 114, 115, 133, 137, 141, 144], "file": [1, 8, 9, 16, 20, 38, 39, 60, 94, 108, 116, 133, 137, 141, 144], "also": [1, 2, 6, 7, 11, 12, 16, 17, 53, 54, 63, 73, 94, 108, 109, 110, 112, 115, 121, 127, 130, 131, 134, 139], "commandlin": 1, "consequ": 1, "implement": [1, 2, 7, 11, 22, 23, 30, 31, 34, 35, 46, 47, 53, 54, 56, 57, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 81, 83, 85, 88, 109, 110, 112, 134], "other": [1, 11, 17, 22, 29, 38, 39, 53, 54, 60, 94, 108], "languag": 1, "temporarili": 1, "disabl": [1, 18, 38, 41, 43, 44, 46, 47, 129], "v2": [1, 7, 15, 16], "0": [1, 2, 3, 7, 11, 13, 14, 15, 16, 17, 18, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 50, 51, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 108, 115, 116, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 144], "fall": 1, "back": [1, 11], "v1": [1, 16], "need": [1, 2, 11, 14, 16, 20, 33, 38, 39, 53, 54, 56, 57, 67, 68, 94, 108, 109, 110, 111, 112, 135], "tabl": [1, 2, 18], "provid": [1, 2, 7, 11, 15, 17, 33, 38, 42, 44, 53, 57, 61, 80, 109, 112, 145], "": [1, 2, 5, 6, 7, 9, 11, 12, 18, 30, 34, 35, 38, 39, 60, 63, 65, 73, 75, 109, 110, 112, 114, 115, 116, 126, 127, 128, 129, 131, 134, 139, 142], "tool": [1, 7, 147], "complex": [1, 11, 20, 109, 110], "space": [1, 11, 16, 22, 24, 25, 27, 30, 31, 34, 38, 41, 43, 44, 45, 46, 47, 74, 75, 79, 115, 116, 126, 127, 131, 134, 135], "parallel": [1, 20, 109, 110, 111, 112, 116], "hypermapp": 1, "optuna": 1, "hyperopt": 1, "botorch": 1, "openbox": 1, "hpbandster": [1, 7], "four": [2, 61, 62], "core": [2, 147], "compon": [2, 9, 16, 20, 38, 39, 40, 59, 61, 62, 63, 64, 65, 73, 81, 83], "run": [2, 6, 7, 9, 11, 12, 13, 16, 17, 37, 38, 39, 42, 44, 45, 53, 54, 55, 56, 57, 59, 60, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "process": [2, 5, 6, 7, 11, 13, 15, 16, 17, 19, 37, 38, 39, 41, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 75, 109, 110, 114, 115, 116, 126, 129, 135], "all": [2, 6, 11, 13, 15, 16, 17, 18, 20, 22, 27, 30, 34, 38, 39, 42, 44, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 75, 80, 81, 82, 83, 94, 96, 97, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 126, 127, 128, 131, 134, 135, 138, 145], "which": [2, 6, 7, 11, 13, 16, 18, 22, 23, 30, 33, 34, 38, 39, 40, 41, 45, 46, 47, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 73, 80, 81, 83, 84, 89, 91, 93, 94, 108, 109, 110, 111, 112, 114, 115, 116, 122, 127, 128, 131, 134, 135, 147], "explain": [2, 11], "page": [2, 18, 20, 147], "thei": [2, 11, 15, 53, 56, 59], "interact": [2, 109, 110], "wai": [2, 18, 129], "defin": [2, 14, 17, 22, 27, 30, 31, 34, 38, 39, 75, 94, 106, 109, 110, 116, 127, 128, 131, 134, 135, 139], "search": [2, 11, 22, 27, 30, 34, 35, 38, 40, 41, 43, 45, 128], "tunabl": 2, "paramet": [2, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 47, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 127, 128, 131, 134, 135, 142, 147], "legal": 2, "rang": [2, 85, 86, 87, 88, 127, 128, 131, 134, 135], "default": [2, 7, 11, 12, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 87, 88, 89, 92, 93, 94, 95, 96, 97, 108, 109, 110, 112, 114, 115, 116, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "valu": [2, 11, 12, 13, 16, 17, 22, 23, 24, 25, 26, 27, 29, 30, 31, 37, 38, 39, 45, 60, 61, 62, 63, 65, 67, 68, 73, 75, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 118, 121, 126, 127, 128, 129, 130, 131, 134, 139, 142], "configspac": [2, 3, 30, 31, 32, 33, 34, 35, 36, 61, 62, 63, 64, 65, 73, 81, 83, 84, 94, 108, 116, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "import": [2, 3, 7, 11, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "c": [2, 3, 85, 88, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 147], "myfloat": 2, "1": [2, 3, 11, 12, 17, 18, 22, 23, 24, 25, 28, 38, 42, 43, 44, 46, 47, 53, 55, 56, 57, 59, 61, 62, 63, 65, 67, 68, 69, 70, 71, 72, 74, 76, 80, 81, 83, 85, 86, 87, 88, 96, 97, 99, 100, 102, 103, 104, 109, 112, 116, 118, 119, 121, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "5": [2, 3, 11, 16, 30, 34, 38, 40, 43, 67, 70, 81, 83, 96, 97, 99, 100, 102, 103, 104, 109, 112, 115, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 147], "uniform": [2, 30, 34, 131], "float": [2, 3, 16, 22, 24, 25, 26, 27, 28, 29, 30, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 53, 54, 60, 61, 62, 63, 64, 65, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 108, 109, 110, 112, 114, 115, 116, 118, 121, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "myint": 2, "2": [2, 6, 11, 22, 24, 30, 33, 35, 38, 43, 53, 56, 81, 83, 89, 92, 96, 97, 99, 100, 102, 103, 104, 109, 112, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "integ": [2, 89, 91, 92, 93, 120, 127, 131, 134, 139], "speci": 2, "mous": 2, "cat": 2, "dog": 2, "see": [2, 6, 7, 8, 11, 12, 22, 26, 27, 46, 50, 52, 53, 55, 94, 108, 138], "take": [2, 7, 11, 15, 38, 39, 61, 62, 81, 83, 109, 112, 134], "return": [2, 3, 6, 11, 13, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "For": [2, 6, 7, 11, 13, 14, 38, 39, 41, 43, 44, 46, 47, 53, 54, 57, 59, 67, 68, 109, 110, 111, 116, 134, 147], "exampl": [2, 6, 7, 9, 11, 12, 13, 14, 15, 16, 22, 23, 38, 39, 41, 43, 44, 46, 47, 53, 54, 57, 59, 109, 110, 115, 116, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "could": [2, 7, 11, 16, 109, 113, 116, 135], "neural": [2, 134], "network": [2, 131, 134], "predict": [2, 11, 61, 62, 80, 81, 83], "data": [2, 3, 6, 11, 12, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 40, 43, 46, 47, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 108, 109, 110, 114, 115, 116, 126, 127, 130, 131, 134, 135, 139, 142], "some": [2, 20, 53, 56, 67, 68, 96, 97, 129], "would": [2, 11], "tune": [2, 30, 35, 63, 73, 131], "learn": [2, 22, 26, 131, 134, 147], "rate": [2, 131, 134], "everi": [2, 11, 53, 54, 89, 91, 92], "chang": [2, 9, 11, 18, 53, 54, 57, 67, 68, 94, 108, 127, 131], "final": [2, 89, 91], "tri": 2, "best": [2, 3, 6, 11, 22, 24, 25, 30, 34, 38, 39, 42, 44, 45, 53, 57, 60, 126, 127, 128, 129, 130, 135, 139, 142], "try": [2, 7, 38, 43, 135], "differ": [2, 6, 7, 11, 14, 15, 16, 30, 34, 37, 38, 39, 53, 54, 81, 83, 85, 86, 109, 110, 116, 118, 119, 131, 134, 135, 139], "def": [2, 3, 11, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "train": [2, 3, 6, 11, 13, 14, 19, 37, 38, 39, 43, 53, 54, 59, 61, 62, 63, 64, 65, 73, 81, 83, 96, 97, 116, 126, 127, 128, 129, 130, 131, 134, 135, 139], "self": [2, 11, 30, 31, 53, 54, 61, 62, 63, 67, 68, 73, 74, 75, 79, 89, 91, 94, 108, 109, 110, 111, 112, 126, 127, 128, 129, 130, 131, 134, 135, 139], "seed": [2, 3, 6, 7, 9, 11, 16, 17, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 108, 109, 110, 112, 114, 115, 116, 122, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "int": [2, 3, 22, 24, 30, 31, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 109, 110, 111, 112, 114, 115, 116, 118, 120, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "model": [2, 6, 7, 13, 14, 19, 20, 22, 23, 26, 27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 59, 60, 96, 97, 109, 112, 116, 126, 127, 128, 129, 130, 131, 135, 147], "multilayerperceptron": 2, "learning_r": [2, 134, 135, 139], "fit": [2, 8, 22, 23, 61, 84], "alwai": [2, 7, 11, 53, 54, 57, 128], "minim": [2, 17, 30, 35, 89, 91], "smaller": [2, 81, 83, 118], "better": [2, 11, 38, 45, 53, 54, 56, 126, 127, 128, 130, 131, 134, 135, 139, 142, 147], "In": [2, 6, 11, 12, 13, 14, 16, 17, 20, 30, 31, 38, 39, 53, 54, 57, 60, 63, 65, 73, 74, 75, 79, 94, 95, 108, 109, 110, 111, 112, 114, 116, 129, 130, 135, 138, 139, 147], "gener": [2, 6, 7, 9, 11, 12, 33, 38, 39, 46, 50, 52, 53, 54, 85, 86, 109, 110, 111, 112, 116, 127, 146, 147], "argument": [2, 11, 12, 16, 22, 23, 38, 39, 41, 43, 44, 46, 47, 60, 67, 68, 109, 110, 114, 115, 116, 135, 139, 142], "intensifi": [2, 12, 13, 18, 20, 37, 38, 39, 40, 41, 42, 43, 44, 45, 60, 109, 110, 111, 112, 116, 128, 129, 130, 131, 138, 139], "howev": [2, 6, 7, 11, 13, 15, 16, 20, 38, 39, 53, 57, 59, 115, 138], "first": [2, 7, 11, 15, 16, 38, 39, 53, 54, 56, 57, 59, 67, 68, 94, 108, 109, 113, 114, 119, 127, 130, 138, 142], "name": [2, 9, 13, 14, 18, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 60, 67, 68, 94, 96, 97, 108, 116, 120], "here": [2, 7, 11, 17, 22, 29, 53, 54, 59, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 147], "specifi": [2, 3, 9, 13, 15, 18, 19, 30, 31, 34, 38, 39, 53, 57, 60, 61, 62, 63, 65, 67, 68, 74, 78, 116, 118, 126, 129, 130, 134, 142], "requir": [2, 7, 11, 12, 22, 23, 27, 29, 53, 57, 59, 81, 83, 94, 108, 109, 110, 114, 115, 116, 135], "addition": [2, 14, 96, 97], "successivehalv": [2, 53, 55, 57], "hyperband": [2, 5, 6, 12, 38, 42, 44, 53, 57, 134], "did": [2, 9], "pass": [2, 7, 11, 12, 13, 16, 18, 38, 39, 53, 54, 81, 83, 94, 96, 97, 108, 109, 110, 112, 114, 115, 116, 120, 121, 122, 126, 130, 131, 134, 135, 139, 142], "But": [2, 135], "don": [2, 7, 130], "worri": 2, "tell": [2, 11, 20, 38, 39, 53, 57, 60, 132, 133, 145], "someth": [2, 11, 16], "miss": 2, "never": [2, 33], "variabl": [2, 16, 53, 54, 55, 56, 57, 60, 116, 131, 134, 139], "want": [2, 6, 7, 9, 11, 13, 14, 18, 20, 22, 29, 38, 45, 127, 130, 131, 134, 135, 139, 143, 145, 147], "limit": [2, 7, 11, 16, 109, 110, 112, 114, 115], "time": [2, 7, 10, 11, 15, 17, 33, 38, 45, 53, 54, 60, 89, 92, 93, 94, 95, 108, 109, 110, 112, 114, 115, 116, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "where": [2, 6, 7, 9, 11, 22, 23, 27, 30, 34, 38, 45, 135, 139], "save": [2, 11, 38, 39, 53, 54, 60, 94, 108, 116], "output_directori": [2, 9, 116], "path": [2, 16, 18, 38, 39, 60, 94, 108, 116, 120], "your_output_directori": 2, "walltime_limit": [2, 116, 134, 135, 139], "120": 2, "two": [2, 11, 30, 34, 59, 81, 83, 118, 135, 139, 147], "minut": [2, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "n_trial": [2, 3, 15, 22, 27, 38, 41, 43, 44, 46, 47, 116, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "500": [2, 142], "max": [2, 12, 15, 22, 25, 38, 43, 45, 53, 54, 56, 121, 127, 134, 135, 139], "trial": [2, 6, 11, 15, 17, 19, 37, 38, 39, 53, 54, 56, 57, 59, 60, 94, 95, 96, 97, 108, 109, 110, 111, 112, 114, 115, 116, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "n_worker": [2, 19, 109, 112, 116, 134, 139], "eight": 2, "worker": [2, 10, 11, 19, 109, 110, 111, 112, 116], "A": [2, 5, 6, 8, 22, 27, 30, 34, 59, 63, 65, 73, 75, 85, 86, 87, 88, 109, 110, 111, 112, 114, 115, 130, 138, 147], "construct": [2, 109, 112], "pipelin": [2, 38, 39], "variou": [2, 38, 39], "satisfi": [2, 11], "common": [2, 109, 110, 112, 131], "crucial": [2, 18, 134], "peak": 2, "idea": [2, 7, 11, 147], "behind": [2, 11], "simpl": [2, 6, 11, 18, 127, 130, 138, 142], "easi": 2, "understand": 2, "without": [2, 8, 22, 25, 33], "deep": [2, 67, 68, 134], "dive": [2, 11], "materi": 2, "expert": 2, "invit": 2, "specif": [2, 7, 11, 13, 18, 22, 23, 38, 39, 53, 54, 67, 68, 81, 83, 96, 99, 135], "horizont": 2, "scrollabl": 2, "show": [2, 7, 11, 13, 16, 18, 115, 126, 128, 138, 139, 142, 145], "what": [2, 7, 61, 62, 109, 110, 112], "reveal": 2, "medium": 2, "high": [2, 11], "initi": [2, 20, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 57, 59, 60, 89, 90, 91, 92, 93, 109, 112, 116, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "design": [2, 5, 6, 20, 30, 31, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 89, 90, 109, 112, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "sobol": [2, 11, 38, 41, 43, 46, 52], "surrog": [2, 13, 14, 19, 20, 22, 23, 27, 37, 38, 39, 40, 41, 43, 45, 59, 61, 62, 80, 96, 97, 116, 126, 127], "gaussian": [2, 5, 6, 11, 38, 41, 61, 62, 63, 64, 65, 67, 68, 73, 75, 126], "Not": 2, "acquisit": [2, 5, 13, 20, 37, 38, 39, 40, 41, 43, 45, 59, 60, 63, 73, 96, 99, 131], "expect": [2, 7, 11, 22, 25, 38, 39, 40, 41, 43, 81, 83, 96, 99, 109, 110], "log": [2, 11, 20, 22, 24, 25, 38, 39, 43, 63, 65, 74, 75, 78, 79, 81, 83, 96, 99, 102, 103, 127, 129, 131, 134, 135, 139], "maxim": [2, 13, 20, 22, 23, 24, 29, 38, 39, 40, 41, 43, 45, 59], "local": [2, 11, 30, 34, 35, 38, 40, 41, 43, 109, 112], "sort": [2, 11, 30, 34, 38, 40, 41, 43, 53, 54, 94, 108, 122, 139], "runhistori": [2, 20, 37, 38, 39, 40, 41, 43, 45, 53, 54, 56, 57, 59, 60, 122, 126, 128, 129, 130, 138, 139], "encod": [2, 20, 38, 39, 40, 41, 43, 45], "probabl": [2, 11, 22, 28, 38, 40, 41, 43, 74, 75, 79, 89, 91, 93], "20": [2, 18, 38, 40, 41, 43, 63, 73, 81, 83, 128, 129], "50": [2, 11, 18, 38, 41, 43, 44, 46, 47, 63, 73, 126, 127, 128, 129, 130, 135, 138, 139], "closest": [2, 7, 134], "bohb": [2, 6, 7, 134], "emphas": 2, "highli": 2, "modular": 2, "accept": [2, 38, 45, 134], "note": [2, 16, 17, 128], "contrast": 2, "previou": [2, 11, 30, 31, 34, 38, 39, 60, 94, 108, 126, 130, 131, 142], "instanti": [2, 6, 11, 38, 39, 41, 94, 95], "instead": [2, 6, 13, 16, 18, 59, 67, 68], "kwarg": [2, 22, 23, 46, 52, 67, 68, 81, 82, 96, 101, 105], "modul": [2, 18, 120], "blackboxfacad": [2, 16, 38, 41, 142], "bbfacad": 2, "hyperparameteroptimizationfacad": [2, 3, 38, 43, 44, 126, 127, 128, 129, 130, 131, 138, 139], "hpofacad": [2, 11, 126, 129, 130, 138, 139], "multifidelityfacad": [2, 7, 11, 38, 44, 134, 135], "mffacad": [2, 134, 135], "algorithmconfigurationfacad": [2, 38, 40], "acfacad": 2, "randomfacad": [2, 38, 42, 45], "rfacad": 2, "hyperbandfacad": [2, 38, 42, 45], "hbfacad": 2, "target_funct": [2, 16, 38, 39, 40, 41, 42, 43, 44, 45, 109, 114, 115, 138], "code": [3, 7, 9, 11, 16, 17, 30, 34, 63, 65, 73, 74, 79, 109, 112, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 143, 145], "vector": [3, 30, 35, 96, 97, 132, 133, 145], "iri": [3, 127], "numpi": [3, 67, 68, 126, 127, 131, 134, 135, 138, 139], "np": [3, 17, 22, 23, 25, 61, 62, 63, 65, 67, 68, 75, 80, 81, 83, 89, 92, 96, 97, 99, 116, 118, 126, 127, 131, 134, 135, 138, 139], "scenario": [3, 9, 12, 13, 14, 15, 16, 17, 19, 22, 27, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 85, 87, 88, 96, 97, 99, 100, 102, 103, 104, 109, 110, 111, 114, 115, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "sklearn": [3, 67, 68, 127, 131, 134, 135, 139], "svm": [3, 127], "svc": [3, 127], "model_select": [3, 127, 131, 134, 135, 139], "cross_val_scor": [3, 127, 131, 134, 135, 139], "load_iri": [3, 127], "classifi": [3, 127, 131, 134, 135, 139], "random_st": [3, 127, 131, 134, 135, 139], "score": [3, 127, 131, 134, 135, 139], "target": [3, 6, 7, 12, 13, 20, 60, 61, 62, 81, 83, 94, 108, 109, 110, 112, 113, 114, 115, 116, 126, 127, 130, 131, 134, 135, 139, 143, 144, 145], "cv": [3, 6, 127, 131, 134, 135, 139], "1000": [3, 38, 41, 126, 127, 142], "determinist": [3, 7, 116, 126, 128, 130, 138, 142], "true": [3, 38, 39, 40, 43, 60, 63, 65, 67, 68, 73, 81, 83, 94, 108, 116, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "200": [3, 13, 129, 134, 135, 139], "incumb": [3, 6, 11, 13, 16, 17, 22, 25, 26, 28, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57, 60, 95, 118, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "ljdr18": [5, 38, 42], "l": 5, "li": [5, 53, 54], "k": [5, 11, 67, 68, 94, 108, 126, 147], "jamieson": 5, "desalvo": 5, "rostamizadeh": 5, "talwalkar": 5, "novel": [5, 6], "bandit": [5, 6], "base": [5, 6, 7, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 121, 127, 135, 147], "approach": [5, 38, 45], "jmlr": [5, 147], "org": [5, 8, 46, 50, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 147], "paper": [5, 22, 26, 147], "v18": 5, "16": [5, 38, 39, 53, 56, 59, 131, 139], "558": 5, "html": [5, 46, 50, 52], "hssl22": [5, 22, 27], "carl": [5, 22, 27], "hvarfner": [5, 22, 27], "danni": 5, "stoll": 5, "artur": 5, "souza": 5, "mariu": [5, 147], "lindauer": [5, 147], "frank": [5, 147], "hutter": [5, 7, 63, 65, 73, 75, 147], "luigi": 5, "nardi": 5, "\u03c0bo": 5, "augment": [5, 6, 14, 22, 27], "user": [5, 11, 15, 16, 17, 18, 22, 27, 30, 34, 38, 39, 42, 44, 53, 56, 57, 60, 109, 112, 132, 133, 145], "belief": [5, 22, 27, 131], "arxiv": [5, 147], "pdf": [5, 22, 26, 85, 88], "2204": 5, "11051": 5, "j": 5, "knowl": 5, "hybrid": 5, "landscap": 5, "approxim": [5, 11], "expens": [5, 6], "multiobject": 5, "ieeexplor": 5, "ieee": 5, "1583627": 5, "skks10": [5, 22, 24], "sriniva": 5, "m": 5, "kakad": 5, "kraus": 5, "seeger": 5, "No": [5, 38, 42, 44, 53, 57], "regret": 5, "experiment": 5, "0912": 5, "3995": 5, "bb": 6, "bo": [6, 38, 39], "cli": 6, "gp": [6, 63, 73], "mcmc": [6, 38, 41, 63, 73], "markov": 6, "chain": [6, 63, 73], "mont": [6, 63, 73], "carlo": [6, 63, 73], "hb": 6, "hp": [6, 11, 131], "mf": 6, "rf": [6, 22, 27], "roar": [6, 38, 42, 45], "onlin": [6, 38, 42, 45], "adapt": [6, 75, 134, 135, 139], "race": [6, 38, 42, 45, 53, 54, 56, 134, 147], "sequenti": [6, 7, 147], "smbo": [6, 11, 37, 38, 39, 85, 86, 88, 89, 90, 91, 92, 93, 109, 110, 111, 112, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "mode": 6, "doe": [6, 7, 18, 22, 29, 33, 89, 92, 94, 108, 109, 112], "assum": [6, 7, 38, 39, 109, 113], "form": [6, 16, 74, 76, 115], "usual": [6, 109, 113], "emploi": 6, "weight": [6, 11, 22, 27, 30, 34, 38, 40, 41, 43, 45, 85, 87, 94, 108, 131, 140, 141, 145], "explor": [6, 11, 22, 24, 25, 28, 38, 39, 40, 41, 43], "exploit": [6, 11, 22, 24, 25, 28, 38, 39, 40, 41, 43], "minimum": [6, 38, 40, 43, 81, 83, 94, 108, 116, 126, 130], "its": [6, 11, 14, 17, 63, 67, 68, 73, 94, 108, 109, 110, 111, 112, 126, 127], "refer": [6, 7, 11, 12, 46, 50, 52, 53, 54, 147], "observ": [6, 11, 22, 25, 53, 54, 94, 108, 118], "anoth": [6, 11, 94, 108], "word": [6, 11, 17], "epoch": [6, 12, 116, 136, 137, 145], "size": [6, 116, 119, 131, 134], "subset": [6, 12, 14, 94, 108, 116, 135], "context": [6, 116], "let": [6, 11, 126, 127, 128, 129, 131, 134, 139, 142], "sai": 6, "them": [6, 11, 96, 101, 103, 104, 105, 109, 112, 134, 139], "extens": 6, "success": [6, 12, 15, 16, 38, 42, 44, 53, 57, 94, 95, 96, 97, 99, 100, 102, 103, 104, 108, 115, 134, 135], "halv": [6, 12, 15, 38, 42, 44, 53, 57, 134, 135], "work": [6, 7, 11, 12, 14, 20, 109, 112, 126, 139], "known": 6, "often": [6, 7, 11, 13, 14, 38, 45, 53, 54, 59, 128], "even": [6, 8, 11, 14, 17], "transform": [6, 11, 38, 39, 75, 81, 83, 85, 86, 87, 88, 96, 97, 99, 101, 102, 103, 104, 105, 135], "each": [6, 11, 12, 14, 17, 22, 27, 30, 33, 35, 38, 39, 42, 44, 53, 54, 57, 59, 60, 63, 65, 73, 85, 86, 88, 89, 93, 94, 108, 109, 112, 116, 139], "call": [6, 11, 15, 20, 22, 23, 30, 31, 35, 37, 38, 39, 45, 46, 47, 53, 54, 60, 61, 62, 67, 68, 69, 74, 75, 79, 84, 109, 110, 111, 112, 114, 115, 119, 128, 130, 131, 143, 144, 145], "so": [6, 9, 11, 17, 22, 24, 25, 38, 39, 42, 44, 53, 57, 60, 95, 109, 110, 111, 112, 129, 131, 134], "found": [6, 7, 11, 22, 27, 38, 39, 53, 54, 56, 60, 89, 92, 126, 130, 142, 147], "superior": 6, "intensif": [6, 11, 15, 37, 53, 56, 134], "mechan": [6, 109, 110, 134, 147], "govern": 6, "how": [6, 7, 11, 12, 13, 16, 18, 20, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57, 59, 60, 94, 95, 108, 109, 110, 112, 115, 119, 128, 134, 138, 139, 142, 145], "when": [6, 11, 12, 15, 38, 39, 40, 42, 44, 45, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 73, 81, 83, 109, 112, 116, 120, 134], "trust": 6, "enough": [6, 38, 45, 109, 110], "make": [6, 7, 11, 13, 16, 22, 29, 53, 54, 56, 57, 63, 73, 89, 92, 109, 110, 111, 112, 116, 130, 131, 134, 135, 139], "new": [6, 7, 9, 11, 33, 37, 38, 45, 53, 54, 56, 57, 59, 94, 108, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "therebi": [6, 12], "prematur": [6, 12], "than": [6, 38, 45, 53, 54, 56, 60, 74, 75, 76, 81, 83, 116, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "goal": 6, "solut": [6, 7, 30, 32, 36], "least": [6, 94, 108, 134], "good": [6, 134], "compromis": 6, "metric": 6, "qualiti": 6, "free": [6, 7, 8, 38, 42], "select": [6, 11, 38, 39, 42, 44, 45, 46, 47, 49, 53, 57, 59, 94, 108, 109, 110, 139], "uniformli": [6, 38, 45], "iter": [6, 11, 17, 30, 31, 33, 34, 35, 37, 38, 39, 41, 43, 53, 54, 56, 59, 85, 86, 88, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 119], "compar": [6, 11, 17, 38, 42, 45, 53, 54, 57, 118, 119, 122], "against": [6, 7, 53, 54, 56], "extend": 6, "chapter": [6, 20], "cost": [6, 11, 13, 14, 16, 20, 38, 39, 43, 53, 54, 57, 60, 85, 86, 87, 88, 94, 95, 96, 97, 108, 109, 110, 112, 114, 115, 116, 121, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "given": [6, 16, 22, 23, 24, 53, 54, 57, 61, 62, 89, 91, 93, 94, 96, 97, 108, 109, 110, 114, 115, 121, 122, 135], "singl": [6, 11, 13, 16, 38, 40, 43, 45, 53, 54, 61, 80, 81, 83, 85, 86, 87, 88, 94, 108, 109, 110, 111, 112, 115], "combin": [6, 38, 39, 60, 85, 86, 87, 88, 94, 108, 109, 110, 112, 116, 127, 134, 135, 147], "should": [7, 8, 11, 16, 18, 22, 23, 33, 38, 39, 40, 41, 43, 45, 53, 54, 56, 59, 60, 61, 67, 68, 80, 89, 90, 91, 92, 93, 116, 122, 126, 128], "smac2": [7, 81, 83, 130], "reimplement": 7, "origin": [7, 13, 30, 34, 74, 75, 79, 121, 147], "et": [7, 22, 26, 27, 63, 73], "al": [7, 22, 26, 27, 63, 73], "2021": [7, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 147], "slightli": 7, "comparison": 7, "stabl": 7, "releas": 7, "java": 7, "sinc": [7, 11, 13, 16, 17, 20, 38, 45, 53, 54, 134, 138, 139], "maintain": 7, "applic": [7, 12], "cannot": 7, "root": [7, 18, 96, 105, 119], "directori": [7, 60, 116], "instal": 7, "pyrfr": 7, "rais": [7, 96, 97, 131, 134, 139], "cryptic": 7, "error": [7, 18], "ensur": [7, 10, 22, 27, 116], "gcc": 7, "compil": 7, "same": [7, 11, 30, 34, 38, 40, 41, 42, 43, 44, 45, 53, 56, 57, 85, 87, 94, 108, 121, 130], "link": 7, "dure": [7, 11, 30, 34, 35, 38, 39, 45, 60, 81, 83], "happen": [7, 11], "anaconda": 7, "facad": [7, 11, 12, 13, 18, 60, 116, 126, 127, 131, 134, 138, 139], "discov": 7, "bug": 7, "behav": [7, 22, 27], "report": [7, 15], "open": 7, "issu": [7, 11, 38, 43, 147], "our": [7, 9, 12, 13, 15, 127, 131, 134, 135, 139, 142, 147], "list": [7, 13, 16, 22, 23, 26, 30, 31, 33, 38, 39, 40, 41, 43, 44, 45, 46, 47, 53, 54, 57, 60, 61, 62, 63, 64, 65, 67, 68, 73, 80, 81, 83, 85, 86, 87, 88, 89, 90, 94, 95, 96, 97, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 121, 122, 126, 135, 139], "befor": [7, 11, 22, 23, 30, 34, 35, 37, 38, 39, 43, 59, 63, 73, 89, 92, 109, 110, 111, 112, 134, 139], "sure": [7, 11, 13, 16, 63, 73, 89, 92, 109, 110, 112, 113, 130], "hasn": 7, "alreadi": [7, 11, 22, 23, 53, 56, 59, 60, 94, 108, 128], "tracker": [7, 11, 53, 55, 57], "latest": [7, 53, 54], "u": 7, "inform": [7, 11, 38, 39, 46, 50, 52, 53, 54, 57, 60, 94, 95, 108, 109, 110, 112, 114, 115, 127], "descript": 7, "reproduc": [7, 20, 116], "about": [7, 11, 53, 56, 60, 67, 68, 94, 95, 109, 110, 127, 131], "setup": [7, 38, 39, 45, 60], "help": 7, "resolv": 7, "packag": [7, 147], "feel": 7, "screenshot": 7, "contribut": [7, 147], "discuss": [7, 20], "care": [7, 11, 38, 39], "question": 7, "feedback": 7, "prefer": 7, "locat": [7, 22, 25], "featur": [7, 11, 14, 16, 38, 40, 43, 61, 62, 63, 64, 65, 73, 80, 81, 83, 96, 97, 115, 116, 118, 135], "ongo": 7, "look": [7, 9, 12, 15, 33, 38, 45], "guid": [7, 11], "flag": [7, 130], "fals": [7, 18, 22, 25, 27, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 57, 60, 63, 67, 68, 69, 70, 71, 72, 73, 81, 83, 94, 108, 109, 112, 116, 127, 128, 129, 130], "non": [7, 16, 22, 27, 67, 68, 143, 145], "thu": [7, 14, 30, 31, 131], "nevertheless": [7, 109, 112], "still": [7, 9, 11, 13, 16, 19, 94, 108, 109, 110, 111, 112, 128], "why": [7, 12], "colab": 7, "crash": [7, 96, 97, 99, 100, 102, 103, 104, 109, 113], "child": [7, 46, 47, 109, 110, 127, 134, 139], "pynish": [7, 109, 114, 116], "enforc": [7, 116], "memori": [7, 109, 114, 116], "runner": [7, 11, 60], "mai": [7, 53, 54], "overcom": 7, "remov": [7, 22, 27, 30, 34, 53, 56, 115, 138, 139], "program": [8, 33, 59], "softwar": 8, "redistribut": 8, "modifi": 8, "under": 8, "term": 8, "claus": [8, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "bsd": [8, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "distribut": [8, 11, 74, 76, 78, 81, 83, 109, 112], "hope": 8, "warranti": 8, "impli": [8, 134], "merchant": 8, "FOR": 8, "particular": 8, "purpos": [8, 14], "receiv": [8, 11, 13, 16, 59, 94, 108, 109, 112], "copi": [8, 22, 26, 53, 54], "along": [8, 61, 62], "opensourc": 8, "automat": [9, 20, 109, 112], "restor": [9, 53, 54, 55, 56, 57], "state": [9, 11, 53, 54, 55, 56, 57, 85, 86, 88, 89, 91, 92, 93, 94, 96, 97, 108, 127], "left": [9, 22, 25, 67, 68], "off": [9, 11, 22, 24, 25, 38, 39], "wa": [9, 11, 17, 22, 23, 53, 57, 59, 60, 94, 108, 109, 112, 130], "interrupt": 9, "finish": [9, 11, 37, 94, 108, 109, 110, 111, 112, 126, 127, 128, 129, 130, 135, 138, 139], "do": [9, 11, 13, 14, 16, 18, 22, 29, 38, 45, 109, 112, 131, 142], "old": [9, 38, 39, 60], "deriv": [9, 131], "ask": [9, 11, 20, 37, 38, 39, 60, 132, 133, 145], "whether": [9, 11, 22, 25, 27, 38, 39, 53, 54, 60, 67, 68, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 116, 130], "resum": 9, "delet": [9, 109, 112], "complet": [9, 11, 17, 38, 39, 60, 109, 110, 111, 112], "affect": [9, 38, 41, 43, 44, 46, 47, 53, 54], "wallclock": [10, 11, 15, 17, 53, 54, 60, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "cpu": [10, 116, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "involv": [10, 11, 59], "addit": [11, 17, 19, 22, 23, 38, 40, 41, 43, 44, 45, 46, 47, 53, 54, 94, 108, 109, 110, 112, 114, 115, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "basic": [11, 13, 38, 40, 41, 43, 45, 53, 54, 56, 128], "mention": [11, 147], "start": [11, 15, 20, 37, 38, 39, 63, 73, 85, 86, 88, 109, 112, 129, 134, 135, 139], "paragraph": 11, "give": [11, 15, 18, 20, 59, 116], "pictur": 11, "These": [11, 131], "influenc": [11, 13], "drastic": 11, "shortli": 11, "main": [11, 19, 30, 34, 38, 45, 53, 54, 109, 112, 129, 130, 147], "loop": [11, 38, 39, 45, 53, 54, 56, 57, 60, 109, 110, 129], "logic": [11, 53, 56], "while": [11, 53, 56, 57], "next": [11, 13, 15, 17, 30, 31, 37, 38, 39, 53, 55, 59, 60, 89, 90, 91, 92, 93, 109, 110, 112, 127, 128], "submit": [11, 94, 108, 109, 110, 111, 112], "wait": [11, 53, 54, 109, 110, 111, 112], "decoupl": 11, "thread": [11, 19], "occupi": 11, "until": [11, 109, 110, 111, 112], "avail": [11, 16, 53, 54, 109, 110, 111, 112, 138], "again": [11, 17, 59], "moreov": [11, 53, 54, 131], "like": [11, 16, 17, 38, 39, 45, 53, 54, 56, 57, 131], "remain": [11, 60, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "empir": [11, 22, 27, 94, 108], "epm": 11, "mostli": 11, "associ": [11, 17, 60, 116], "incorpor": [11, 38, 39, 45, 53, 54, 61, 62, 63, 64, 65, 73, 81, 83, 94, 108, 116, 131], "higher": [11, 127], "collect": [11, 67, 68, 69, 109, 110, 112], "highest": [11, 17, 38, 39, 42, 44, 53, 54, 57, 59, 60, 94, 108], "min_trial": [11, 59], "config_selector": [11, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54], "imagin": 11, "75": [11, 134], "505": 11, "7": [11, 61, 62, 63, 64, 65, 73, 81, 83, 84, 138, 139, 142], "lead": 11, "becaus": [11, 67, 68, 94, 108, 109, 110, 113, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "end": [11, 30, 31, 37], "step": [11, 30, 34, 35, 53, 57, 63, 73, 111, 139], "request": [11, 130], "config_gener": [11, 53, 54], "over": [11, 22, 24, 26, 27, 53, 56, 61, 62, 63, 73, 80, 81, 83, 89, 92, 93, 94, 108, 111, 132, 133, 138, 145], "considered_st": [11, 96, 97, 99, 100, 102, 103, 104], "timeout": 11, "consid": [11, 15, 17, 38, 40, 43, 45, 53, 54, 81, 83, 94, 96, 97, 108, 111, 134, 135, 139], "normalize_cost": [11, 121], "objective_bound": [11, 94, 108], "might": [11, 15, 53, 54, 56, 67, 68, 94, 108, 109, 110, 111, 112], "inact": [11, 38, 39, 118], "after": [11, 13, 17, 22, 23, 37, 38, 45, 53, 57, 59, 89, 92, 128, 129, 130, 134, 139], "mathemat": 11, "techniqu": 11, "varianc": [11, 61, 62, 63, 65, 73, 80, 81, 83, 135], "section": 11, "otherwis": [11, 109, 112, 114, 116], "bunch": 11, "lower": [11, 22, 24, 53, 57, 59, 74, 79, 94, 96, 97, 108, 131], "confid": [11, 22, 24, 38, 45], "bound": [11, 22, 24, 74, 79, 94, 108, 118, 121, 139], "thompson": [11, 22], "prior": [11, 22, 27, 30, 34, 67, 68, 69, 70, 71, 72, 132, 133, 145], "literatur": 11, "calcul": [11, 15, 22, 23, 94, 108, 126, 127, 128, 131, 134, 142], "respons": [11, 38, 39, 96, 97, 99, 101, 102, 103, 104, 105], "wrapper": [11, 61, 80, 109, 110, 111, 112], "differenti": 11, "evolut": 11, "neighbour": 11, "pai": 11, "attent": 11, "challeng": [11, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 53, 56, 89, 90, 109, 110, 118], "experi": [11, 18, 38, 43], "ram": [11, 38, 43], "long": 11, "comput": [11, 22, 23, 24, 26, 74, 75, 79, 94, 108, 122], "challengerlist": [11, 30, 31, 33], "latin": [11, 46, 50], "hypercub": [11, 46, 50], "factori": [11, 46, 49, 94, 95], "corner": [11, 46, 49], "sequenc": [11, 46, 52], "quasi": 11, "discrep": 11, "statist": [11, 60], "method": [11, 13, 17, 22, 23, 30, 31, 37, 38, 39, 53, 54, 56, 57, 59, 61, 62, 67, 68, 69, 74, 75, 79, 81, 83, 109, 110, 111, 112, 114, 115, 131, 134, 135, 139], "multidimension": 11, "yield": [11, 53, 57, 59], "keep": [11, 13, 18, 19, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57, 61, 62, 63, 64, 65, 73, 81, 83, 109, 110, 111, 112], "track": [11, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57], "twice": [11, 138], "chanc": 11, "although": [11, 53, 54], "includ": [11, 19, 53, 54, 55, 56, 57, 60, 61, 62, 80, 131, 135, 147], "trade": [11, 22, 24, 25, 38, 39], "stuck": 11, "optimum": [11, 22, 27, 96, 97, 132, 133, 145], "guarante": [11, 20, 94, 108], "anneal": [11, 89, 91], "modulu": [11, 33, 89, 92], "far": [11, 17, 22, 24, 25, 38, 42, 44, 53, 57, 60, 95, 129], "decid": [11, 38, 39, 60, 109, 110, 147], "worth": 11, "spend": [11, 60], "pair": [11, 38, 42, 44, 53, 57, 94, 108, 139], "max_config_cal": [11, 38, 40, 41, 43, 45, 53, 54, 56, 128, 131, 139], "n_seed": [11, 38, 42, 44, 53, 54, 55, 57, 116], "lot": [11, 20, 135], "throughout": 11, "uses_se": [11, 53, 54, 56, 57], "uses_budget": [11, 53, 54, 56, 57], "uses_inst": [11, 53, 54, 56, 57], "callabl": [11, 33, 38, 39, 109, 114, 115], "saniti": 11, "fact": [11, 53, 56], "repeat": 11, "taken": [11, 30, 34, 96, 97, 122], "recogn": 11, "beforehand": [11, 131], "queue": [11, 53, 56], "That": [11, 12, 38, 43], "nativ": [11, 19, 53, 57], "everytim": [11, 16, 53, 54, 56, 115], "straight": 11, "forward": 11, "retrain_aft": [11, 38, 39, 59], "were": [11, 53, 54, 145], "go": [11, 19, 131, 139], "stop": [11, 20, 37, 59, 116, 129, 130, 134, 139], "update_on_iteration_start": [11, 85, 86, 88], "normal": [11, 16, 22, 28, 63, 65, 73, 74, 78, 85, 86, 87, 88, 94, 108, 121, 131], "access": [11, 67, 68], "plai": [11, 14], "role": [11, 14], "get_cost": [11, 94, 108, 129], "ambigu": 11, "pareto": [11, 13, 53, 54, 122, 138, 139], "front": [11, 13, 53, 54, 122, 138, 139], "get_incumb": [11, 13, 53, 54, 129, 130, 138], "hold": [11, 20, 22, 26, 38, 39, 53, 56, 60, 127], "un": 11, "trial_info": [11, 109, 110, 111, 112], "trial_valu": 11, "item": [11, 95, 126], "info": [11, 18, 37, 38, 39, 60, 94, 108, 109, 110, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "statu": [11, 16, 38, 39, 94, 95, 106, 108, 109, 110, 112, 114, 115], "starttim": [11, 94, 95, 108], "endtim": [11, 94, 95, 108], "additional_info": [11, 16, 94, 95, 108, 109, 110, 112, 114, 115], "get_config": [11, 94, 108, 126, 138, 139], "average_cost": [11, 17, 94, 108, 139], "format": [11, 18, 119], "afterward": [11, 53, 56], "abil": 11, "easili": [11, 116], "inherit": [11, 67, 68], "overwrit": [11, 38, 39, 40, 41, 42, 43, 44, 45, 60, 94, 108, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "class": [11, 13, 18, 22, 30, 38, 46, 53, 61, 63, 67, 74, 81, 85, 89, 94, 96, 109, 126, 127, 128, 129, 130, 131, 134, 135, 139], "customcallback": [11, 129], "on_start": [11, 37, 129], "none": [11, 22, 23, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 126, 127, 128, 129, 130, 134, 135, 138, 139], "on_end": [11, 37], "on_iteration_start": [11, 37], "on_iteration_end": [11, 37], "runinfo": [11, 109, 110, 112], "runvalu": 11, "bool": [11, 22, 25, 27, 37, 38, 39, 40, 43, 53, 54, 56, 57, 60, 63, 65, 67, 68, 73, 81, 83, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 116, 129, 130], "just": [11, 13, 19, 38, 45, 129], "print": [11, 16, 60, 118, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "min_budget": [12, 116, 134, 135], "max_budget": [12, 116, 134, 135], "real": [12, 38, 39, 60, 109, 110, 112, 114, 115], "stage": [12, 37, 53, 57, 129], "reason": [12, 67, 68], "simpli": [12, 13, 38, 45, 53, 57, 142], "wherea": 12, "world": 12, "exactli": [13, 53, 56], "right": [13, 16, 22, 25, 67, 68], "histori": [13, 17, 60], "recip": 13, "obj1": 13, "obj2": 13, "dictionari": [13, 94, 108, 119], "contain": [13, 38, 39, 60, 67, 68, 94, 108, 109, 110, 111, 112, 122], "kei": [13, 16, 38, 40, 41, 42, 43, 44, 45, 53, 54, 56, 57, 94, 95, 108, 122, 142], "option": [13, 14, 16, 22, 23, 27, 30, 31, 34, 37, 38, 39, 53, 54, 60, 61, 62, 67, 68, 94, 96, 97, 108, 109, 113, 115, 121, 129, 130], "custom": [13, 20, 120, 130, 132, 133, 145], "multi_objective_algorithm": [13, 38, 39, 40, 41, 42, 43, 44, 45, 94, 96, 97, 108, 138, 139], "plot": [13, 126, 138, 139], "five": [14, 38, 41, 43, 44, 46, 47, 134, 139], "identifi": [14, 116], "id": [14, 94, 95, 108], "d0": 14, "d1": [14, 119], "d2": [14, 119], "d3": 14, "d4": 14, "instance_featur": [14, 16, 61, 62, 63, 64, 65, 73, 81, 83, 84, 115, 116, 118, 135], "those": 14, "expand": [14, 53, 54, 57, 116], "x": [14, 22, 23, 24, 25, 28, 29, 61, 62, 63, 64, 65, 67, 68, 73, 74, 76, 80, 81, 83, 96, 97, 118, 126, 128, 130, 138, 139], "matrix": [14, 61, 62], "underli": 14, "121": 14, "6": [14, 38, 40, 43, 81, 83, 118, 126, 138, 139], "140": 14, "65": 14, "99": 14, "45": [14, 135], "102": 14, "59": 14, "132": 14, "48": 14, "opportun": 15, "regist": 15, "count": [15, 116], "min": [15, 121, 134, 135, 139], "intermedi": 15, "obvious": 15, "flow": 15, "further": [16, 22, 26, 27, 46, 50, 52, 89, 92, 109, 110, 112, 113, 114, 115, 116], "script": [16, 38, 39, 115, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143, 144, 145], "popen": [16, 115], "standard": [16, 17, 22, 28, 61, 62, 74, 78, 131], "interpret": [16, 38, 39], "filenam": [16, 18, 53, 54, 60, 94, 108, 142], "hyperparameter1": [16, 115], "5323": [16, 115], "sh": [16, 142], "bash": [16, 142], "anyth": [16, 67, 68], "els": [16, 18, 127, 134, 139], "wih": 16, "mark": 16, "type": [16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 126, 127, 131, 134, 135, 138], "bin": [16, 22, 27, 142], "usr": 16, "env": 16, "comma": [16, 115], "separ": [16, 38, 39, 115], "empti": [16, 53, 56, 59, 94, 108, 109, 110, 111, 112, 115], "echo": [16, 115, 142], "cut": [16, 142], "f1": [16, 138, 142], "d": [16, 18, 22, 24, 142], "f2": [16, 138, 142], "v": [16, 94, 108, 109, 112, 126, 135, 142], "declar": [16, 67, 68, 142], "fi": [16, 142], "done": [16, 38, 39, 53, 56, 109, 110, 111, 112, 142], "stdout": [16, 18], "white": [16, 38, 41, 67, 72, 115], "ignor": [16, 17, 38, 39, 53, 56, 59, 60, 67, 68, 126, 131, 134, 135, 139], "01": [16, 115, 133, 137], "except": [16, 38, 39, 109, 111, 112, 131], "semicolon": 16, "string": [16, 38, 39, 115, 119], "match": 16, "statustyp": [16, 94, 95, 96, 97, 99, 100, 102, 103, 104, 106, 108, 109, 110, 112, 114, 115], "chmod": 16, "advanc": 17, "reach": [17, 59, 89, 92], "averag": [17, 38, 39, 40, 41, 43, 45, 60, 85, 87, 94, 108, 134, 139], "below": 17, "termination_cost_threshold": [17, 116], "inf": [17, 89, 92, 116, 126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "abov": 17, "infin": 17, "come": [17, 109, 112], "part": [18, 30, 31, 53, 54], "customiz": 18, "overview": 18, "easiest": 18, "behaviour": [18, 38, 39, 53, 56, 57, 60], "logger": [18, 118, 120], "logging_level": [18, 38, 39, 40, 41, 42, 43, 44, 45, 129], "debug": [18, 38, 39], "30": [18, 129, 134, 135, 139, 142], "warn": [18, 94, 108, 131, 134, 135, 139], "40": [18, 129, 131, 134, 135], "critic": 18, "sometim": 18, "highlight": [18, 139], "yaml": [18, 38, 39], "displai": 18, "messag": 18, "everyth": [18, 142], "disable_existing_logg": 18, "formatt": 18, "levelnam": 18, "lineno": 18, "handler": 18, "consol": 18, "streamhandl": 18, "stream": 18, "ext": 18, "sy": 18, "readi": 19, "mind": 19, "orchestr": 19, "librari": 20, "strongli": 20, "hint": 20, "react": 20, "certain": 20, "thing": 20, "selector": [20, 38, 39, 53, 54, 59], "callback": [20, 33, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 130, 132, 133, 145], "criteria": 20, "termin": [20, 30, 34, 35, 109, 112], "threshold": [20, 116], "level": [20, 38, 39, 119, 120], "abstractacquisitionfunct": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 39, 45], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 145], "abstract": [22, 23, 30, 31, 38, 39, 53, 54, 61, 62, 63, 64, 75, 81, 82, 85, 86, 89, 90, 96, 97, 109, 110, 112], "__call__": [22, 23, 67, 68, 85, 86, 87, 88, 109, 114, 115], "ndarrai": [22, 23, 61, 62, 63, 65, 67, 68, 75, 80, 81, 83, 96, 97, 99, 100, 101, 102, 103, 104, 105, 118, 135], "properti": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 39, 46, 47, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 108, 109, 110, 114, 115, 116, 126, 127, 128, 129, 130, 131, 134, 135, 139], "meta": [22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 46, 47, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 97, 109, 110, 114, 115, 116, 126, 130, 142], "dict": [22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 46, 47, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 109, 110, 112, 114, 115, 116, 119, 135, 138, 139], "str": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 39, 41, 42, 44, 46, 47, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 108, 109, 110, 112, 114, 115, 116, 118, 119, 135, 138, 139], "abstract_model": [22, 23, 27, 61, 80], "abstractmodel": [22, 23, 27, 38, 39, 61, 62, 63, 64, 80, 81, 82, 84], "full": [22, 23, 24, 25, 26, 27, 28, 29, 61, 62, 94, 108, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "attribut": [22, 23], "As": [22, 23, 111, 131], "ei": [22, 23, 25, 38, 40, 41, 43], "fmin": [22, 23], "acqusit": [22, 23], "present": [22, 23], "_updat": [22, 23], "xi": [22, 25, 28, 29, 38, 40, 41, 43, 126], "mathbb": [22, 25], "f": [22, 25, 28, 63, 65, 73, 74, 75, 76, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 147], "mathbf": [22, 24, 25, 28, 29], "f_": [22, 25, 28], "control": [22, 24, 25, 28, 38, 40, 41, 42, 43, 44, 53, 57], "balanc": [22, 24, 25, 28, 38, 40, 41, 43], "between": [22, 24, 25, 28, 38, 40, 41, 43, 61, 62, 81, 83, 96, 101, 103, 104, 105], "_xi": [22, 25], "exloit": [22, 25], "_log": [22, 25], "_eta": [22, 25, 26], "eip": [22, 25, 96, 99], "per": [22, 25, 38, 41, 43, 44, 46, 47, 81, 83, 94, 96, 99, 108, 128, 131], "second": [22, 25, 33, 96, 99, 109, 112, 114, 116, 119, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "frac": [22, 25, 28], "r": [22, 25, 139], "integratedacquisitionfunct": [22, 26], "acquisition_funct": [22, 24, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 60, 131], "margin": [22, 26, 61, 62, 63, 65, 80, 81, 83], "practic": [22, 26, 145], "jasper": [22, 26], "snoek": [22, 26, 63, 73], "nip": [22, 26, 63, 65, 73, 75], "cc": [22, 26], "4522": [22, 26], "_acquisition_funct": [22, 26], "_function": [22, 26], "lcb": [22, 24], "beta": [22, 24, 131], "mu": [22, 24, 28, 29, 131], "sqrt": [22, 24, 138], "beta_t": [22, 24], "sigma": [22, 24, 28, 29, 74, 78, 131], "text": [22, 24], "dimens": [22, 24, 61, 62, 127, 128], "tradeoff": [22, 24], "_beta": [22, 24], "_num_data": [22, 24], "seen": [22, 24], "pi": [22, 28], "p": [22, 28, 74, 76], "geq": [22, 28], "phi": [22, 28], "cdf": [22, 28], "prioracquisitionfunct": [22, 27, 131], "decay_beta": [22, 27, 131], "prior_floor": [22, 27], "1e": [22, 27, 67, 68, 69, 70, 71, 72, 81, 83, 131], "12": [22, 27], "discret": [22, 27, 131], "discrete_bins_factor": [22, 27], "pibo": [22, 27], "decai": [22, 27], "factor": [22, 27, 89, 93], "solid": [22, 27, 131], "lowest": [22, 27, 38, 39, 53, 54, 56, 94, 108], "neg": [22, 27], "densiti": [22, 27], "contin": [22, 27], "trigger": [22, 27, 109, 113, 129], "avoid": [22, 27], "patholog": [22, 27], "piecewis": [22, 27], "constant": [22, 27, 89, 92, 134, 135, 139], "allow": [22, 27, 53, 54, 116], "togeth": [22, 29, 38, 45, 53, 57], "randomsearch": [22, 29, 30, 36, 38, 45], "localandsortedrandomsearch": [22, 29, 30, 34, 38, 40, 41, 43], "math": [22, 29, 75], "mathcal": [22, 29], "consist": [22, 29, 30, 31, 131, 134, 135, 139, 147], "abstractacquisitionmaxim": [30, 31, 32, 34, 35, 36, 38, 39], "5000": [30, 31, 32, 34, 35, 36, 135], "order": [30, 31, 38, 42, 44, 53, 57, 96, 97], "subclass": [30, 31, 38, 39, 67, 68], "_maxim": [30, 31], "becom": [30, 31], "candid": [30, 31, 32, 36], "abstract_acquisition_funct": [30, 31, 34], "previous_config": [30, 31], "n_point": [30, 31], "random_design": [30, 31, 33, 38, 39, 40, 41, 42, 43, 44, 45], "_challeng": [30, 31], "abstractrandomdesign": [30, 31, 33, 38, 39, 45, 89, 90, 91, 92, 93], "interleav": [30, 31, 33, 34, 38, 39, 40, 41, 43, 89, 90, 91, 92, 93], "scheme": [30, 31, 109, 110], "next_iter": [30, 31, 89, 90, 91, 92, 93], "differentialevolut": [30, 32], "differentialevolutionsolv": [30, 32], "scipi": [30, 32, 46, 50, 52], "localandsortedpriorrandomsearch": [30, 34], "uniform_configspac": [30, 34], "max_step": [30, 34, 35], "n_steps_plateau_walk": [30, 34, 35], "local_search_iter": [30, 34, 38, 41, 43], "prior_sampling_fract": [30, 34], "accord": [30, 34, 89, 91, 93], "randomli": [30, 34, 38, 39, 45], "retriev": [30, 34, 53, 54, 135], "normalfloathp": [30, 34], "localsearch": [30, 34, 35], "maximum": [30, 34, 35, 38, 40, 41, 43, 45, 53, 54, 56, 81, 83, 89, 91, 92, 116], "plateau": [30, 34, 35], "walk": [30, 34, 35], "ratio": [30, 34, 38, 40, 43, 81, 83], "oppos": [30, 34], "defaut": [30, 34], "vectorization_min_obtain": [30, 35], "vectorization_max_obtain": [30, 35], "neighbor": [30, 35], "obtain": [30, 35, 63, 65, 75], "reduc": [30, 33, 35, 38, 40, 43, 61, 62, 63, 64, 65, 73, 81, 83, 109, 112, 142], "overhead": [30, 35], "challenger_callback": 33, "modulus_design": 33, "modulusrandomdesign": [33, 89, 92], "necessari": 33, "hundr": 33, "closur": 33, "www": [33, 85, 88], "programiz": 33, "on_ask_end": 37, "on_ask_start": 37, "on_next_configurations_end": 37, "essenti": 37, "on_next_configurations_start": 37, "on_tell_end": [37, 129, 130], "stat": [37, 46, 50, 52, 60, 130], "gracefulli": [37, 130], "on_tell_start": 37, "abstractfacad": [38, 39, 40, 41, 43, 45, 138, 139], "acquisition_maxim": [38, 39, 40, 41, 42, 43, 44, 45], "initial_design": [38, 39, 40, 41, 42, 43, 44, 45, 127, 131, 134, 139], "runhistory_encod": [38, 39, 40, 41, 42, 43, 44, 45], "top": [38, 39], "backend": [38, 39], "organ": [38, 39], "manner": [38, 39, 40, 41, 43, 45], "suit": [38, 39], "With": [38, 39], "explicitli": [38, 39, 109, 112], "get_": [38, 39], "environment": [38, 39, 60], "abstractrunn": [38, 39, 60, 109, 110, 111, 112], "targetfunctionscriptrunn": [38, 39, 115], "most": [38, 39, 41, 43, 44, 46, 47, 94, 108, 131, 134], "promis": [38, 39, 45], "initialdesign": [38, 39], "randomdesign": [38, 39], "drawn": [38, 39, 40, 41, 43, 63, 65, 75, 89, 93], "abstractintensifi": [38, 39, 53, 54, 56, 57, 60], "abstractmultiobjectivealgorithm": [38, 39, 85, 86, 87, 88, 94, 96, 97, 108], "runhistoryencod": [38, 39, 40, 41, 45, 96, 100, 101, 102, 103, 104, 105], "indic": [38, 39, 89, 90, 92, 109, 113, 135, 139], "noth": [38, 39], "yml": [38, 39], "inconsist": [38, 39, 60, 126, 130, 142], "exact": [38, 39, 60], "trialinfo": [38, 39, 53, 54, 56, 57, 60, 94, 95, 108, 109, 110, 111, 112, 129, 130], "static": [38, 39, 40, 41, 42, 43, 44, 45, 116], "get_acquisition_funct": [38, 39, 40, 41, 43, 45, 131], "get_acquisition_maxim": [38, 39, 40, 41, 43, 45], "get_config_selector": [38, 39], "retri": [38, 39, 53, 56, 59], "configselector": [38, 39, 53, 54, 59], "get_initial_design": [38, 39, 40, 41, 43, 44, 45, 127, 131, 134, 139], "warm": [38, 39], "abstractinitialdesign": [38, 39, 46, 47, 48, 49, 50, 51, 52], "get_intensifi": [38, 39, 40, 41, 42, 43, 44, 45, 128, 131, 139], "get_model": [38, 39, 40, 41, 43, 45], "get_multi_objective_algorithm": [38, 39, 40, 41, 43, 45, 138], "get_random_design": [38, 39, 40, 41, 43, 45], "get_runhistory_encod": [38, 39, 40, 41, 43, 45], "prepar": [38, 39, 96, 97], "abstractrunhistoryencod": [38, 39, 96, 97, 99, 100], "hash": [38, 39, 116, 118], "fill": [38, 39, 53, 54, 57, 60, 111], "describ": [38, 39, 60], "trialvalu": [38, 39, 60, 94, 95, 108, 109, 110, 111, 112, 128, 129, 130], "relev": [38, 39, 60], "regard": [38, 39, 60], "ones": [38, 39, 60, 122, 139], "additional_config": [38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 131], "defaultinitialdesign": [38, 40, 45, 46, 48], "2000": [38, 40], "max_incumb": [38, 40, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57], "n_tree": [38, 40, 43, 81, 83], "ratio_featur": [38, 40, 43, 81, 83], "8333333333333334": [38, 40, 81, 83], "min_samples_split": [38, 40, 43, 81, 83], "min_samples_leaf": [38, 40, 43, 81, 83], "max_depth": [38, 40, 43, 81, 83], "bootstrap": [38, 40, 43, 81, 83], "pca_compon": [38, 40, 61, 62, 63, 64, 65, 73, 81, 83, 84], "tree": [38, 40, 43, 81, 83], "split": [38, 40, 43, 81, 83, 131, 134, 135, 139], "leaf": [38, 40, 43, 81, 83], "depth": [38, 40, 43, 81, 83], "pca": [38, 40, 61, 62, 63, 64, 65, 73, 81, 83], "randomforest": [38, 40, 43, 81, 83], "objective_weight": [38, 40, 41, 43, 45, 85, 87, 138], "length": [38, 40, 41, 43, 45, 63, 67, 69, 73, 85, 87], "meanaggregationstrategi": [38, 40, 41, 43, 45, 85, 87], "probabilityrandomdesign": [38, 40, 41, 43, 89, 93], "n_config": [38, 41, 43, 44, 46, 47, 48, 49, 50, 51, 127, 134, 139], "n_configs_per_hyperparamt": [38, 41, 43, 44], "max_ratio": [38, 41, 43, 44, 46, 47, 48, 49, 50, 51, 142], "25": [38, 41, 43, 44, 46, 47, 48, 49, 50, 51, 126, 130, 131, 134, 142], "n_configs_per_hyperparamet": [38, 41, 43, 44, 46, 47, 48, 49, 50, 51], "my": [38, 41, 43, 44, 46, 47], "cover": [38, 41, 43, 44, 46, 47], "sobolinitialdesign": [38, 41, 43, 46, 52], "race_against": [38, 41, 43], "get_kernel": [38, 41], "kernel": [38, 41, 63, 64, 65, 73, 127], "composit": [38, 41], "hammingkernel": [38, 41, 67, 69], "matern": [38, 41, 67, 70], "nois": [38, 41], "model_typ": [38, 41], "chosen": [38, 41, 134, 145], "choos": [38, 41, 63, 73, 134], "vanilla": [38, 41], "gaussianprocess": [38, 41, 63, 65, 73], "mcmcgaussianprocess": [38, 41, 63, 73], "08447232371720552": [38, 41], "aggress": [38, 42, 45, 134, 147], "eta": [38, 42, 44, 53, 55, 57, 134, 135], "instance_seed_ord": [38, 42, 44, 53, 55, 57], "shuffle_onc": [38, 42, 44, 53, 55, 57], "incumbent_select": [38, 42, 44, 53, 55, 57], "highest_observed_budget": [38, 42, 44, 53, 55, 57], "proport": [38, 42, 44, 53, 57], "round": [38, 42, 44, 53, 57], "shuffl": [38, 42, 44, 53, 54, 56, 57, 131, 134, 135, 139], "bracket": [38, 42, 44, 53, 55, 57], "individu": [38, 42, 44, 53, 57, 94, 108], "any_budget": [38, 42, 44, 53, 57], "regardless": [38, 42, 44, 53, 57], "highest_budget": [38, 42, 44, 53, 57], "10000": [38, 43, 126], "1048576": [38, 43, 81, 83], "scale": [38, 43, 67, 69, 74, 75, 76, 77, 79, 96, 97, 101, 103, 104, 105, 127], "runhistorylogscaledencod": [38, 43, 96, 103], "randominitialdesign": [38, 44, 46, 51], "\u03b8": [38, 45], "unpromis": [38, 45], "reject": [38, 45, 53, 54, 56, 126, 127, 128, 130, 131, 134, 135, 139, 142], "veri": [38, 45, 53, 54], "replac": [38, 45, 109, 114, 134], "dummi": [38, 45], "neither": [38, 45, 94, 108], "nor": [38, 45, 94, 108], "increas": [38, 45, 89, 92], "randommodel": [38, 45, 61, 84], "select_configur": [46, 47], "_select_configur": [46, 47], "factorialinitialdesign": [46, 49], "middl": [46, 49], "latinhypercubeinitialdesign": [46, 50], "doc": [46, 50], "qmc": [46, 50, 52], "latinhypercub": [46, 50], "arg": [46, 52, 81, 82, 96, 101, 105], "scrambl": [46, 52], "io": [46, 52], "devdoc": [46, 52], "event": [53, 54, 56, 57], "__iter__": [53, 54, 56, 59, 94, 108], "__post_init__": [53, 54, 57, 116], "_tf_seed": [53, 54], "_tf_instanc": [53, 54], "get_callback": [53, 54], "develop": [53, 54, 147], "futur": [53, 54, 109, 112], "get_incumbent_instance_seed_budget_key_differ": [53, 54], "There": [53, 54], "situat": [53, 54], "intersect": [53, 54], "instanceseedbudgetkei": [53, 54, 57, 94, 95, 108, 122], "get_incumbent_instance_seed_budget_kei": [53, 54], "sort_bi": [53, 54, 94, 108], "num_trial": [53, 54, 94, 108], "get_instance_seed_budget_kei": [53, 54, 57, 94, 95, 108], "get_instance_seed_keys_of_interest": [53, 54, 57], "instance_seed_kei": [53, 54], "interest": [53, 54, 57], "instanceseedkei": [53, 54, 94, 95], "get_rejected_config": [53, 54], "fail": [53, 54, 109, 112, 113, 116], "get_stat": [53, 54, 55, 56, 57], "get_trials_of_interest": [53, 54, 57], "incumbents_chang": [53, 54], "load": [53, 54, 60, 94, 108, 116, 127], "trajectori": [53, 54, 95], "reset": [53, 54, 55, 56, 57, 60, 94, 108], "set_stat": [53, 54, 55, 56, 57], "dataclass": [53, 54, 128], "trajectoryitem": [53, 54, 95], "update_incumb": [53, 54, 57], "used_walltim": [53, 54, 60], "forev": [53, 56], "exist": [53, 56, 60, 94, 108, 127, 130], "amount": [53, 56, 89, 92, 109, 112], "succes": [53, 57], "group": [53, 57], "out": [53, 57, 63, 73], "batch": [53, 57, 119, 131, 134], "post": [53, 57, 139], "queri": [53, 57, 94, 108], "rid": [53, 57], "handl": [59, 94, 108, 109, 110, 112, 114, 115], "retrain": 59, "three": 59, "etc": [59, 67, 68, 116], "intiti": 59, "next_config": 59, "store": [60, 94, 108, 134], "budget_exhaust": 60, "walltim": [60, 95], "cputim": 60, "exceed": 60, "folder": 60, "print_stat": 60, "remaining_cputim": 60, "subtract": 60, "remaining_tri": 60, "ta": 60, "remaining_walltim": 60, "update_acquisition_funct": 60, "update_model": 60, "used_target_function_walltim": 60, "much": [60, 94, 95, 108, 109, 112, 134, 138], "y": [61, 62, 67, 68, 81, 83, 96, 97, 118, 126, 130], "concret": [61, 62], "covariance_typ": [61, 62], "diagon": [61, 62], "_predict": [61, 62], "appli": [61, 62, 75, 126], "std": [61, 62], "deviat": [61, 62, 74, 78, 131], "covari": [61, 62], "whole": [61, 62], "tupl": [61, 62, 67, 68, 80, 81, 83, 94, 96, 97, 108, 109, 110, 111, 112, 114, 115, 118, 121, 135, 138], "var": [61, 62, 80, 81, 83, 116, 135], "predict_margin": [61, 62, 80, 81, 83], "_train": [61, 62], "correspond": [61, 62, 74, 76, 121], "multiobjectivemodel": [61, 80], "abstractgaussianprocess": [63, 64, 65, 73], "n_restart": [63, 65], "normalize_i": [63, 65, 73], "likelihood": [63, 65], "robo": [63, 65, 73, 75], "klein": [63, 65, 73, 75], "falkner": [63, 65, 73, 75], "mansur": [63, 65, 73, 75], "2017": [63, 65, 73, 75], "workshop": [63, 65, 73, 75], "restart": [63, 65, 89, 91], "zero": [63, 65, 73, 96, 101, 103, 104, 105, 128], "unit": [63, 65, 73, 131], "sample_funct": [63, 65], "x_test": [63, 65], "n_func": [63, 65], "posterior": [63, 65], "function_sampl": [63, 65], "n_mcmc_walker": [63, 73], "chain_length": [63, 73], "burning_step": [63, 73], "mcmc_sampler": [63, 73], "emce": [63, 73], "average_sampl": [63, 73], "markow": [63, 73], "propos": [63, 73], "walker": [63, 73], "last": [63, 73, 127, 130], "burn": [63, 73], "actual": [63, 73, 109, 110], "sampler": [63, 73], "nut": [63, 73], "abstractkernel": [67, 68, 69, 70, 71, 72], "operate_on": [67, 68, 69, 70, 71, 72], "has_condit": [67, 68, 69, 70, 71, 72], "mixin": [67, 68], "overrid": [67, 68, 126, 130, 142], "place": [67, 68, 131], "hierarchi": [67, 68], "prevent": [67, 68], "instantiat": [67, 68], "mypi": [67, 68], "won": [67, 68], "know": [67, 68, 126, 128], "relat": [67, 68], "superclass": [67, 68], "statement": [67, 68], "member": [67, 68], "_call": [67, 68], "super": [67, 68], "get_param": [67, 68, 69], "On": [67, 68, 109, 110, 111, 112, 136, 137, 145], "arrai": [67, 68, 139], "oper": [67, 68], "abstractprior": [67, 68, 74, 75, 76, 77, 78, 79], "primarili": [67, 68], "eval_gradi": [67, 68], "estim": [67, 68, 81, 83, 96, 97], "subobject": [67, 68], "param": [67, 68], "map": [67, 68, 94, 108], "n_dim": [67, 68], "fix": [67, 68], "constantkernel": [67, 68], "constant_valu": [67, 68], "constant_value_bound": [67, 68], "05": [67, 68, 69, 70, 71, 72, 85, 88, 126], "100000": [67, 68, 69, 70, 71, 72], "gradient": [67, 68, 74, 75, 79, 136, 137, 145], "shape": [67, 68, 74, 76], "n_samples_x": [67, 68], "n_featur": [67, 68], "n_samples_i": [67, 68], "respect": [67, 68, 74, 75, 79], "boolean": [67, 68], "k_gradient": [67, 68], "opt": [67, 68], "length_scal": [67, 69, 70, 71], "length_scale_bound": [67, 69, 70, 71], "stationarykernelmixin": [67, 69], "normalizedkernelmixin": [67, 69], "ham": [67, 69], "hyperparameter_length_scal": [67, 69], "maternkernel": [67, 70], "nu": [67, 70], "productkernel": [67, 68], "k1": [67, 68], "k2": [67, 68], "product": [67, 68], "rbfkernel": [67, 71], "rbf": [67, 71, 127], "sumkernel": [67, 68], "sum": [67, 68, 94, 108], "whitekernel": [67, 72], "noise_level": [67, 72], "noise_level_bound": [67, 72], "gammaprior": [74, 76], "loc": [74, 76], "gamma": [74, 76, 127], "greater": [74, 76, 116], "canon": [74, 76], "greather": [74, 76, 116], "horseshoeprior": [74, 77], "horsesho": [74, 77], "spearmint": [74, 77, 79], "lognormalprior": [74, 78], "softtophatprior": [74, 79], "lower_bound": [74, 79], "upper_bound": [74, 79], "expon": [74, 79], "soft": [74, 79], "tophat": [74, 79], "upper": [74, 79, 94, 108, 131], "get_gradi": [74, 75, 79], "theta": [74, 75, 79], "hi": [74, 75, 79], "_get_gradi": [74, 75, 79], "get_log_prob": [74, 75, 79], "exponenti": [74, 75, 79], "_get_log_prob": [74, 75, 79], "tophatprior": [74, 79], "whenev": 75, "lnprob": 75, "rather": 75, "sample_from_prior": 75, "n_sampl": 75, "_sample_from_prior": 75, "abstractrandomforest": [81, 82, 83], "n_points_per_tre": [81, 83], "eps_pur": [81, 83], "08": [81, 83], "max_nod": [81, 83], "log_i": [81, 83], "account": [81, 83, 96, 97, 134], "total": [81, 83, 109, 112, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 144], "node": [81, 83, 109, 112], "assumpt": [81, 83], "uncertainti": [81, 83], "abc": [85, 86, 109, 110], "loss": [85, 86, 87, 88, 109, 114, 135], "rho": [85, 88], "bham": [85, 88], "ac": [85, 88], "uk": [85, 88], "jdk": [85, 88], "ukci": [85, 88], "2015": [85, 88], "small": [85, 88], "posit": [85, 88, 109, 110, 112, 114, 115], "helper": [89, 90], "th": [89, 90, 91, 92, 93], "begin": [89, 90, 92], "cosineannealingrandomdesign": [89, 91], "min_prob": [89, 91], "max_prob": [89, 91], "restart_iter": [89, 91], "decreas": [89, 91, 92, 93], "cosin": [89, 91], "schedul": [89, 91], "move": [89, 91, 94, 108], "_probabl": [89, 91], "dynamicmodulusrandomdesign": [89, 92], "start_modulu": [89, 92], "modulus_incr": [89, 92], "end_modulu": [89, 92], "fraction": [89, 92], "ever": [89, 92], "adjust": [89, 92], "dynamicprobabilityrandomdesign": [89, 93], "multipli": [89, 93], "get_instance_seed_kei": [94, 95], "omit": [94, 95], "overwrite_existing_tri": [94, 108], "trialkei": [94, 95, 108], "importantli": [94, 108], "theoret": [94, 108], "picklabl": [94, 108], "__contains__": [94, 108], "semant": [94, 108], "__eq__": [94, 108], "equal": [94, 108], "__getitem__": [94, 108], "__len__": [94, 108], "len": [94, 108], "force_upd": [94, 108], "add_running_tri": [94, 108], "add_trial": [94, 108], "instance_seed_budget_kei": [94, 108], "wrt": [94, 108], "config_id": [94, 95, 108, 126], "configuration_spac": [94, 108], "get_config_id": [94, 108], "get_configs_per_budget": [94, 108], "budget_subset": [94, 96, 97, 108], "docstr": [94, 108], "re": [94, 108], "cach": [94, 108], "highest_observed_budget_onli": [94, 108], "get_trial": [94, 108], "get_min_cost": [94, 108], "min_cost": [94, 108], "get_running_config": [94, 108], "get_running_tri": [94, 108], "ids_config": [94, 108], "incremental_update_cost": [94, 108], "increment": [94, 108], "disk": [94, 108], "multi_object": [94, 96, 97, 108, 139], "abstract_multi_objective_algorithm": [94, 96, 97, 108], "scaral": [94, 108], "json": [94, 108], "sum_cost": [94, 108], "update_cost": [94, 108], "_cost_per_config": [94, 108], "_num_trials_per_config": [94, 108], "scratch": [94, 108], "accordingli": [94, 108, 131], "update_from_json": [94, 108], "intenum": [94, 106], "memoryout": [96, 97, 99, 100, 102, 103, 104], "lower_budget_st": [96, 97, 99, 100, 102, 103, 104], "scale_percentag": [96, 97, 99, 100, 102, 103, 104], "noqa": [96, 97], "e501": [96, 97], "percentil": [96, 97], "distanc": [96, 97, 122, 138], "sub": [96, 97], "typeerror": [96, 97], "get_configur": [96, 97], "represent": [96, 97], "append": [96, 97], "configs_arrai": [96, 97], "transform_response_valu": [96, 97, 99, 100, 101, 102, 103, 104, 105], "transformed_valu": [96, 97], "runhistoryeipsencod": [96, 99], "runhistoryinversescaledencod": [96, 101], "linearli": [96, 101, 103, 104, 105], "invers": [96, 101], "runhistorylogencod": [96, 102], "runhistoryscaledencod": [96, 104], "runhistorysqrtscaledencod": [96, 105], "squar": [96, 105, 138], "notevaluatederror": 107, "runtimeerror": 107, "required_argu": [109, 110, 111, 114, 115], "perspect": [109, 110], "launch": [109, 110, 111, 112], "submit_run": [109, 110, 112], "run_wrapp": [109, 110, 112], "among": [109, 110], "realli": [109, 110], "translat": [109, 110], "iter_result": [109, 110, 111, 112], "consum": [109, 110], "decis": [109, 110, 111, 112], "abl": [109, 110, 127], "count_available_work": [109, 110, 111, 112], "is_run": [109, 110, 111, 112], "serial": [109, 110, 111, 112], "instantli": [109, 110, 111, 112], "pend": [109, 110, 111, 112], "popul": [109, 110, 111, 112], "_results_queu": [109, 110, 111, 112], "get_finish": [109, 110, 111, 112], "produc": [109, 110, 111, 112], "aka": [109, 110, 112], "repres": [109, 110, 112, 114, 115, 120, 135, 147], "took": [109, 110, 112, 114, 115], "around": [109, 110], "encapsul": [109, 110], "simplifi": [109, 110], "isol": [109, 110], "submit_tri": [109, 110, 111, 112], "embed": [109, 110, 112], "eventu": [109, 110], "fifo": [109, 110], "dictat": [109, 110, 112], "submiss": [109, 110], "endeavor": [109, 110], "daskparallelrunn": [109, 112], "single_work": [109, 112], "patienc": [109, 112], "dask_client": [109, 112], "job": [109, 112], "fashion": [109, 111, 112], "intend": [109, 112], "compli": [109, 112], "bridg": [109, 112], "pattern": [109, 112], "wrap": [109, 112], "baserunn": [109, 112], "dask": [109, 112, 116], "precis": [109, 112], "task": [109, 111, 112, 116, 131], "pickl": [109, 112], "manag": [109, 112, 116], "client": [109, 112], "Will": [109, 112], "cluster": [109, 112], "attach": [109, 112], "close": [109, 112], "manual": [109, 112, 131], "upon": [109, 112], "__del__": [109, 112], "forc": [109, 112], "dynam": [109, 112], "resourc": [109, 112, 114], "alloc": [109, 112, 134], "procedur": [109, 112], "firstruncrashedexcept": [109, 113], "targetalgorithmabortexcept": [109, 113], "abort": [109, 113, 130], "suggest": [109, 113], "targetfunctionrunn": [109, 114], "abstractserialrunn": [109, 111, 114, 115], "element": [109, 114], "algorithm_kwarg": [109, 114, 115], "wall": [109, 114], "properli": 111, "immedi": 111, "subprocess": 115, "posixpath": 116, "smac3_output": 116, "crash_cost": 116, "cputime_limit": 116, "trial_walltime_limit": 116, "trial_memory_limit": 116, "frame": 116, "constraint": [116, 135], "spawn": 116, "mb": [116, 133, 137, 141, 144], "count_instance_featur": 116, "count_object": 116, "make_serializ": 116, "serializ": 116, "convert_configurations_to_arrai": 118, "imput": 118, "get_conditional_hyperparamet": 118, "get_config_hash": 118, "char": 118, "get_typ": 118, "print_config_chang": 118, "chunk": 119, "recursively_compare_dict": 119, "diff": 119, "recurs": 119, "get_logg": 120, "logger_nam": 120, "setup_log": 120, "normalized_cost": 121, "calculate_pareto_front": 122, "config_instance_seed_budget_kei": 122, "basi": 122, "sort_by_crowding_dist": 122, "crowd": [122, 138], "anyoptim": 122, "pymoo": 122, "blob": 122, "20abef1ade71915352217400c11ece4c2f35163": 122, "nsga2": 122, "py": [122, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 142, 144], "sorted_list": 122, "click": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "download": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 145], "numer": 126, "larg": 126, "abstract_initial_design": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "133": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "abstract_intensifi": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "306": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "493": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "3ce33d": [126, 130], "565": [126, 127, 128, 130, 131, 134, 135, 139, 142], "c53710": [126, 130], "175": [126, 127, 128, 130, 131, 134, 135, 139, 142], "331214789301157": [126, 130], "1608731895685196": [126, 130], "50b580": [126, 130], "4316552169620991": [126, 130], "d16e41": [126, 130], "3100988641381264": [126, 130], "4dcc97": [126, 130], "22015188896172422": [126, 130], "4d21be": [126, 130], "1481212818284119": [126, 130], "348898": [126, 130], "13225703373856135": [126, 130], "c56201": [126, 130], "008886632260822758": [126, 130], "b6eee0": [126, 130], "00353744136744627": [126, 130], "06e28a": [126, 130], "0029625967410442655": [126, 130], "4026d1": [126, 130], "0009114180407276962": [126, 130], "025ea5": [126, 130], "00032238773647641494": [126, 130], "298": [126, 127, 128, 130, 135, 138, 139], "342683": 126, "0002551446012351022": 126, "860384": 126, "682757473086554e": 126, "exhaust": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "307": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "308": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "309": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "465924744409418e": 126, "09": 126, "matplotlib": [126, 138, 139], "pyplot": [126, 138, 139], "plt": [126, 138, 139], "__copyright__": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "copyright": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "freiburg": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "hannov": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "__license__": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "quadraticfunct": [126, 130], "add_hyperparamet": [126, 127, 128, 129, 130, 131, 134, 135, 139], "figur": [126, 138], "ground": 126, "truth": 126, "linspac": 126, "scatter": [126, 138, 139], "blue": [126, 138], "alpha": [126, 131, 135, 138], "zorder": [126, 138], "9999": 126, "marker": [126, 138, 139], "o": [126, 138], "red": [126, 138, 139], "__name__": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "__main__": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "default_cost": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "get_default_configur": [126, 127, 128, 130, 131, 134, 135, 138, 139, 142], "incumbent_cost": [126, 127, 128, 130, 131, 134, 135, 142], "too": 126, "484": [126, 133], "1_quadratic_funct": [126, 133], "jupyt": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 145], "notebook": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 145], "ipynb": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "mix": 127, "eb23b4": 127, "60c7ff": 127, "03992740880515713": 127, "2760639488343621": 127, "linear": 127, "shrink": 127, "03333333333333344": 127, "013333333333333308": 127, "incondit": [127, 134, 139], "wide": [127, 131], "benchmark": 127, "poli": 127, "sigmoid": 127, "001": [127, 134, 139], "degre": 127, "coef": 127, "coef0": 127, "auto": 127, "gamma_valu": 127, "0001": [127, 134, 139], "Then": 127, "use_degre": 127, "parent": [127, 134, 139], "use_coef": 127, "use_gamma": 127, "use_gamma_valu": 127, "add_condit": [127, 134, 139], "config_dict": 127, "get_dictionari": [127, 129], "pop": 127, "163": [127, 133], "2_svm_cv": [127, 133], "98ccec": 128, "94dccd": 128, "x0": [128, 129, 142], "9968221839517355": [128, 129], "03135360777378082": [128, 129], "x1": [128, 129], "30847043171525": [128, 129], "21179260686039925": [128, 129], "94b2fe": 128, "8422549832482282": 128, "526509233029728": 128, "026b73": 128, "10203668300079549": 128, "1151862278387501": 128, "5db1de": 128, "10138875906166067": 128, "10325090860241648": 128, "c89070": 128, "08653325483166885": 128, "08549815086526724": 128, "f3174e": 128, "05367820946404134": 128, "07009655254860192": 128, "458538": 128, "08292029094844988": 128, "06495875484764024": 128, "d95598": 128, "08393076270018529": 128, "034451435520161944": 128, "2b7962": 128, "07805927091208886": 128, "0059357711510132916": 128, "16916": 128, "8499771879028607": 128, "rosenbrock2d": [128, 129], "rosenbrock": 128, "toi": 128, "commun": 128, "serv": 128, "minimium": 128, "x_i": 128, "domain": 128, "interv": 128, "x2": [128, 129], "_": [128, 135], "assert": [128, 129, 130], "90": 128, "999": [128, 133], "3_ask_and_tel": [128, 133], "easieast": 129, "1102": 129, "7877872130716": 129, "465623793958126": 129, "__future__": [129, 130, 135, 138, 139], "annot": [129, 130, 135, 138, 139], "__init__": [129, 130, 135], "trials_count": 129, "999999": 129, "137": [129, 133, 139], "4_callback": [129, 133], "quadrat": [130, 132, 133, 145], "222": 130, "311": 130, "shut": 130, "down": 130, "462": 130, "288": 130, "209652396": 130, "09616130553975616": 130, "0393385263038637e": 130, "07": 130, "stopcallback": 130, "stop_aft": 130, "_stop_aft": 130, "And": [130, 131], "incumbent2": 130, "830": [130, 133], "5_continu": [130, 133], "layer": [131, 135, 136, 137, 145], "perceptron": [131, 135, 136, 137, 145], "mlp": [131, 134, 135, 139], "knowledg": 131, "similar": 131, "intuit": 131, "gain": 131, "categoricalhyperparamet": 131, "optimizt": 131, "stick": 131, "prior_acqusition_funct": 131, "107": 131, "fec0cb": 131, "34b1eb": 131, "logist": [131, 134, 139], "relu": [131, 134, 139], "batch_siz": [131, 134, 139], "324": 131, "128": 131, "learning_rate_init": [131, 134, 139], "1134996369914405": 131, "0010000000000000002": 131, "n_layer": [131, 134, 139], "n_neuron": [131, 134, 139], "157": 131, "108": 131, "sgd": [131, 134, 135, 139], "adam": [131, 134, 139], "a5447": 131, "29": 131, "71520a": 131, "0008561309336666343": 131, "104": 131, "038952336737852145": 131, "028935314144227897": 131, "betaintegerhyperparamet": 131, "normalfloathyperparamet": 131, "uniformintegerhyperparamet": 131, "load_digit": [131, 134, 135, 139], "convergencewarn": 131, "stratifiedkfold": [131, 134, 135, 139], "neural_network": [131, 134, 139], "mlpclassifi": [131, 134, 139], "digit": [131, 134, 135, 139], "illustr": [131, 134], "educ": 131, "believ": 131, "rel": 131, "skew": 131, "toward": 131, "wider": 131, "256": [131, 134, 139], "60": 131, "tanh": [131, 134, 139], "default_valu": 131, "opinion": 131, "leav": 131, "512": 131, "center": 131, "catch_warn": [131, 134, 135, 139], "filterwarn": [131, 134, 135, 139], "categori": 131, "hidden_layer_s": [131, 134, 139], "solver": [131, 134, 139], "max_it": [131, 134, 135, 139], "fold": [131, 134, 139], "n_split": [131, 134, 135, 139], "error_scor": [131, 134, 139], "default_config": 131, "conduct": 131, "proven": 131, "37": [131, 133, 139, 141], "004": [131, 133], "6_prior": [131, 133], "00": [133, 137, 138, 141, 144], "44": [133, 141], "618": 133, "examples_1_bas": 133, "02": [133, 144], "advantag": 134, "choic": 134, "successive_halv": [134, 135], "155": [134, 135], "6b0504": 134, "622bf8": 134, "006677306766018313": 134, "123": 134, "56": 134, "lbfg": [134, 139], "8db41e": 134, "4ce3a0": 134, "196": 134, "715620994567871": 134, "174": 134, "36672856700711853": 134, "02671618693902822": 134, "equalscondit": [134, 139], "300": [134, 135, 139], "invscal": [134, 135, 139], "restrict": 134, "use_lr": [134, 139], "use_lr_init": [134, 139], "use_batch_s": [134, 139], "deactiv": 134, "virtu": 134, "placehold": 134, "lr": [134, 139], "lr_init": [134, 139], "ceil": [134, 139], "46": [134, 137], "023": [134, 137], "1_mlp_epoch": [134, 137], "wlog": 135, "had": 135, "binari": 135, "longer": 135, "due": 135, "588a4c": 135, "d431b1": 135, "5488135039273248": 135, "6027633760716439": 135, "eta0": 135, "0006273927602293597": 135, "03077201812975574": 135, "l1_ratio": 135, "317983179393976": 135, "06414749634878436": 135, "d7ee7": 135, "02021839744032572": 135, "018430691395340162": 135, "5865129348100832": 135, "15": 135, "150": [135, 138], "250": 135, "4893882274627686": 135, "4651": 135, "15489347419148672": 135, "006249006102246613": 135, "itertool": 135, "linear_model": 135, "sgdclassifi": 135, "digitsdataset": 135, "_data": 135, "get_inst": 135, "classa": 135, "classb": 135, "target_nam": 135, "get_instance_featur": 135, "get_instance_data": 135, "logical_or": 135, "00001": 135, "clf": 135, "penalti": 135, "elasticnet": 135, "early_stop": 135, "38": [135, 137], "829": [135, 137], "2_sgd_dataset": [135, 137], "stochast": [136, 137, 145], "descent": [136, 137, 145], "24": 137, "852": 137, "examples_2_multi_fidel": 137, "shown": [138, 139], "notic": 138, "priorit": 138, "8a8909": 138, "573": [138, 139], "3a64dd": 138, "c865cf": 138, "9c7523": 138, "1c02c1": 138, "555ee4": 138, "a21a9d": 138, "726247": 138, "15d504": 138, "2b6ad4": 138, "914391": 138, "11": [138, 139], "598": 138, "bf8bea": 138, "d05e80": 138, "df4cbd": 138, "8ba166": 138, "a50db0": 138, "346c91": 138, "c40dc1": 138, "003ffb": 138, "54cbf0": 138, "478ad0": 138, "74f0dd": 138, "ab860b": 138, "460755": 138, "d94cdf": 138, "178c1b": 138, "e7e8b7": 138, "85de3f": 138, "e837bf": 138, "2c9ff3": 138, "df9292": 138, "b3f2de": 138, "7d5595": 138, "b9185b": 138, "b90a99": 138, "e4a69b": 138, "4816bf": 138, "4558f3": 138, "b50fcc": 138, "1dc67b": 138, "74d2ac": 138, "6955fb": 138, "977060": 138, "b0a618": 138, "4e6b25": 138, "ce64ab": 138, "85f2cf": 138, "003f9a": 138, "af0c3f": 138, "36e58": 138, "993356": 138, "094fd4": 138, "3ff59b": 138, "36ae0d": 138, "ecb618": 138, "0f8a3a": 138, "6962d0": 138, "782459": 138, "80e42c": 138, "1869d6": 138, "456310": 138, "0021ff": 138, "ea381b": 138, "41b92b": 138, "57f079": 138, "25cbd8": 138, "95052f": 138, "70707c": 138, "f6e131": 138, "e1cf58": 138, "584c42": 138, "047685": 138, "b67a4d": 138, "1e8dd4": 138, "05127f": 138, "7a4361": 138, "e7fcea": 138, "f8de06": 138, "549803": 138, "71481f": 138, "232333": 138, "5cb077": 138, "6e86f8": 138, "b55ebe": 138, "ce7af0": 138, "9718a3": 138, "981229": 138, "191e0a": 138, "59c51b": 138, "0ffdff": 138, "35d45b": 138, "a7ed9": 138, "1bf099": 138, "4925ae": 138, "445f11": 138, "181e78": 138, "f660f5": 138, "8cb608": 138, "25257b": 138, "0c8f8e": 138, "d8ea27": 138, "fceb3d": 138, "20d65b": 138, "cbca1d": 138, "f5155a": 138, "accc3c": 138, "ce9297": 138, "81b9ac": 138, "0c11a6": 138, "5706ae": 138, "c81c9a": 138, "d14060": 138, "481bd6": 138, "d74a3e": 138, "b80c96": 138, "4e664": 138, "cbcc66": 138, "5dc22c": 138, "98c70e": 138, "206fc8": 138, "cedbe5": 138, "5ce981": 138, "3bfad0": 138, "3b1777": 138, "bd5424": 138, "d710c6": 138, "8f0869": 138, "2715ad": 138, "3bb3a3": 138, "18173d": 138, "a3edd7": 138, "3132a2": 138, "86b17f": 138, "9f4f72": 138, "63b5d0": 138, "8c6c08": 138, "ed3fe5": 138, "f741ba": 138, "860fa6": 138, "9c786d": 138, "c75780": 138, "c5167c": 138, "33cfef": 138, "854545": 138, "97176f": 138, "ccdc50": 138, "33c795": 138, "f33294": 138, "82d292": 138, "70f1b6": 138, "01538581": 138, "51922763": 138, "81477017e": 138, "19551629e": 138, "03": 138, "66494111": 138, "40318427": 138, "28063773": 138, "16162765": 138, "21948125": 138, "80227625": 138, "09228592": 138, "87714199": 138, "16368713": 138, "04898446": 138, "51598724": 138, "17124171": 138, "60303937": 138, "53859173": 138, "0255363": 138, "33268282": 138, "metric1": 138, "metric2": 138, "plot_from_smac": 138, "enumer": 138, "label": [138, 139], "3000": 138, "xlabel": [138, 139], "ylabel": [138, 139], "titl": [138, 139, 147], "legend": [138, 139], "098": [138, 141], "1_schaffer": [138, 141], "target_function_runn": 139, "71": 139, "97ef22": 139, "f88a6b": 139, "d77b40": 139, "4a1218": 139, "e30d19": 139, "a2e933": 139, "a83db2": 139, "181": 139, "217": 139, "019048398723423437": 139, "00832487063675394": 139, "167": 139, "169": 139, "162cb7": 139, "2e4c63": 139, "811156": 139, "691cc4": 139, "30b5e9": 139, "0fc823": 139, "1644818782806396": 139, "60155834": 139, "14625251": 139, "0353389": 139, "28269339": 139, "02699629": 139, "31970608": 139, "02393454": 139, "36493123": 139, "03617456": 139, "28584182": 139, "07706825": 139, "25389981": 139, "09544259": 139, "25013351": 139, "04730269": 139, "26488304": 139, "4245783": 139, "1530304": 139, "abstract_facad": 139, "start_tim": 139, "plot_pareto": 139, "average_pareto_cost": 139, "vstack": 139, "pareto_cost": 139, "argsort": 139, "costs_x": 139, "costs_i": 139, "pareto_costs_x": 139, "pareto_costs_i": 139, "tolist": 139, "linestyl": 139, "943": [139, 141], "2_parego": [139, 141], "2d": [140, 141, 145], "schaffer": [140, 141, 145], "040": 141, "examples_3_multi_object": 141, "06": 141, "content": 142, "81": 142, "33ba44": 142, "249a5c": 142, "267": 142, "144": 142, "17babd": 142, "98": 142, "6bd331": 142, "884": [142, 144], "1_call_target_function_script": [142, 144], "examples_5_commandlin": 144, "varieti": 145, "examples_python": 145, "zip": 145, "examples_jupyt": 145, "miro": 146, "Its": 147, "cite": 147, "inproceed": 147, "arxiv21a": 147, "author": 147, "katharina": 147, "eggensperg": 147, "matthia": 147, "feurer": 147, "andr\u00e9": 147, "biedenkapp": 147, "difan": 147, "deng": 147, "carolin": 147, "benjamin": 147, "tim": 147, "ruhkopf": 147, "ren\u00e9": 147, "sass": 147, "versatil": 147, "booktitl": 147, "2109": 147, "09831": 147, "year": 147, "url": 147, "ab": 147, "hoo": 147, "h": 147, "leyton": 147, "brown": 147, "proceed": 147, "confer": 147, "intellig": 147, "lion": 147, "visit": 147, "guidelin": 147}, "objects": {"smac": [[21, 0, 0, "-", "acquisition"], [37, 0, 0, "-", "callback"], [38, 0, 0, "-", "facade"], [46, 0, 0, "-", "initial_design"], [53, 0, 0, "-", "intensifier"], [58, 0, 0, "-", "main"], [61, 0, 0, "-", "model"], [85, 0, 0, "-", "multi_objective"], [89, 0, 0, "-", "random_design"], [94, 0, 0, "-", "runhistory"], [109, 0, 0, "-", "runner"], [116, 0, 0, "-", "scenario"], [117, 0, 0, "-", "utils"]], "smac.acquisition": [[22, 0, 0, "-", "function"], [30, 0, 0, "-", "maximizer"]], "smac.acquisition.function": [[22, 1, 1, "", "AbstractAcquisitionFunction"], [22, 1, 1, "", "EI"], [22, 1, 1, "", "EIPS"], [22, 1, 1, "", "IntegratedAcquisitionFunction"], [22, 1, 1, "", "LCB"], [22, 1, 1, "", "PI"], [22, 1, 1, "", "PriorAcquisitionFunction"], [22, 1, 1, "", "TS"], [23, 0, 0, "-", "abstract_acquisition_function"], [24, 0, 0, "-", "confidence_bound"], [25, 0, 0, "-", "expected_improvement"], [26, 0, 0, "-", "integrated_acquisition_function"], [27, 0, 0, "-", "prior_acqusition_function"], [28, 0, 0, "-", "probability_improvement"], [29, 0, 0, "-", "thompson"]], "smac.acquisition.function.AbstractAcquisitionFunction": [[22, 2, 1, "", "__call__"], [22, 3, 1, "", "meta"], [22, 3, 1, "", "model"], [22, 3, 1, "", "name"], [22, 2, 1, "", "update"]], "smac.acquisition.function.EI": [[22, 4, 1, "", "_eta"], [22, 4, 1, "", "_log"], [22, 4, 1, "", "_xi"], [22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.EIPS": [[22, 3, 1, "", "name"]], "smac.acquisition.function.IntegratedAcquisitionFunction": [[22, 4, 1, "", "_acquisition_function"], [22, 4, 1, "", "_eta"], [22, 4, 1, "", "_functions"], [22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.LCB": [[22, 4, 1, "", "_beta"], [22, 4, 1, "", "_num_data"], [22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.PI": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.PriorAcquisitionFunction": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "model"], [22, 3, 1, "", "name"]], "smac.acquisition.function.TS": [[22, 3, 1, "", "name"]], "smac.acquisition.function.abstract_acquisition_function": [[23, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction": [[23, 2, 1, "", "__call__"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "model"], [23, 3, 1, "", "name"], [23, 2, 1, "", "update"]], "smac.acquisition.function.confidence_bound": [[24, 1, 1, "", "LCB"]], "smac.acquisition.function.confidence_bound.LCB": [[24, 4, 1, "", "_beta"], [24, 4, 1, "", "_num_data"], [24, 3, 1, "", "meta"], [24, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement": [[25, 1, 1, "", "EI"], [25, 1, 1, "", "EIPS"]], "smac.acquisition.function.expected_improvement.EI": [[25, 4, 1, "", "_eta"], [25, 4, 1, "", "_log"], [25, 4, 1, "", "_xi"], [25, 3, 1, "", "meta"], [25, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement.EIPS": [[25, 3, 1, "", "name"]], "smac.acquisition.function.integrated_acquisition_function": [[26, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction": [[26, 4, 1, "", "_acquisition_function"], [26, 4, 1, "", "_eta"], [26, 4, 1, "", "_functions"], [26, 3, 1, "", "meta"], [26, 3, 1, "", "name"]], "smac.acquisition.function.prior_acqusition_function": [[27, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction": [[27, 3, 1, "", "meta"], [27, 3, 1, "", "model"], [27, 3, 1, "", "name"]], "smac.acquisition.function.probability_improvement": [[28, 1, 1, "", "PI"]], "smac.acquisition.function.probability_improvement.PI": [[28, 3, 1, "", "meta"], [28, 3, 1, "", "name"]], "smac.acquisition.function.thompson": [[29, 1, 1, "", "TS"]], "smac.acquisition.function.thompson.TS": [[29, 3, 1, "", "name"]], "smac.acquisition.maximizer": [[30, 1, 1, "", "AbstractAcquisitionMaximizer"], [30, 1, 1, "", "DifferentialEvolution"], [30, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [30, 1, 1, "", "LocalAndSortedRandomSearch"], [30, 1, 1, "", "LocalSearch"], [30, 1, 1, "", "RandomSearch"], [31, 0, 0, "-", "abstract_acqusition_maximizer"], [32, 0, 0, "-", "differential_evolution"], [33, 0, 0, "-", "helpers"], [34, 0, 0, "-", "local_and_random_search"], [35, 0, 0, "-", "local_search"], [36, 0, 0, "-", "random_search"]], "smac.acquisition.maximizer.AbstractAcquisitionMaximizer": [[30, 3, 1, "", "acquisition_function"], [30, 2, 1, "", "maximize"], [30, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalAndSortedRandomSearch": [[30, 3, 1, "", "acquisition_function"], [30, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalSearch": [[30, 3, 1, "", "meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[31, 1, 1, "", "AbstractAcquisitionMaximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer": [[31, 3, 1, "", "acquisition_function"], [31, 2, 1, "", "maximize"], [31, 3, 1, "", "meta"]], "smac.acquisition.maximizer.differential_evolution": [[32, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.maximizer.helpers": [[33, 1, 1, "", "ChallengerList"]], "smac.acquisition.maximizer.local_and_random_search": [[34, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [34, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch": [[34, 3, 1, "", "acquisition_function"], [34, 3, 1, "", "meta"]], "smac.acquisition.maximizer.local_search": [[35, 1, 1, "", "LocalSearch"]], "smac.acquisition.maximizer.local_search.LocalSearch": [[35, 3, 1, "", "meta"]], "smac.acquisition.maximizer.random_search": [[36, 1, 1, "", "RandomSearch"]], "smac.callback": [[37, 1, 1, "", "Callback"]], "smac.callback.Callback": [[37, 2, 1, "", "on_ask_end"], [37, 2, 1, "", "on_ask_start"], [37, 2, 1, "", "on_end"], [37, 2, 1, "", "on_iteration_end"], [37, 2, 1, "", "on_iteration_start"], [37, 2, 1, "", "on_next_configurations_end"], [37, 2, 1, "", "on_next_configurations_start"], [37, 2, 1, "", "on_start"], [37, 2, 1, "", "on_tell_end"], [37, 2, 1, "", "on_tell_start"]], "smac.facade": [[38, 1, 1, "", "AbstractFacade"], [38, 1, 1, "", "AlgorithmConfigurationFacade"], [38, 1, 1, "", "BlackBoxFacade"], [38, 1, 1, "", "HyperbandFacade"], [38, 1, 1, "", "HyperparameterOptimizationFacade"], [38, 1, 1, "", "MultiFidelityFacade"], [38, 1, 1, "", "RandomFacade"], [39, 0, 0, "-", "abstract_facade"], [40, 0, 0, "-", "algorithm_configuration_facade"], [41, 0, 0, "-", "blackbox_facade"], [42, 0, 0, "-", "hyperband_facade"], [43, 0, 0, "-", "hyperparameter_optimization_facade"], [44, 0, 0, "-", "multi_fidelity_facade"], [45, 0, 0, "-", "random_facade"]], "smac.facade.AbstractFacade": [[38, 2, 1, "", "ask"], [38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_config_selector"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"], [38, 3, 1, "", "intensifier"], [38, 3, 1, "", "meta"], [38, 2, 1, "", "optimize"], [38, 3, 1, "", "optimizer"], [38, 3, 1, "", "runhistory"], [38, 3, 1, "", "scenario"], [38, 2, 1, "", "tell"], [38, 2, 1, "", "validate"]], "smac.facade.AlgorithmConfigurationFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.BlackBoxFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_kernel"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.HyperbandFacade": [[38, 2, 1, "", "get_intensifier"]], "smac.facade.HyperparameterOptimizationFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.MultiFidelityFacade": [[38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"]], "smac.facade.RandomFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.abstract_facade": [[39, 1, 1, "", "AbstractFacade"]], "smac.facade.abstract_facade.AbstractFacade": [[39, 2, 1, "", "ask"], [39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_config_selector"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"], [39, 3, 1, "", "intensifier"], [39, 3, 1, "", "meta"], [39, 2, 1, "", "optimize"], [39, 3, 1, "", "optimizer"], [39, 3, 1, "", "runhistory"], [39, 3, 1, "", "scenario"], [39, 2, 1, "", "tell"], [39, 2, 1, "", "validate"]], "smac.facade.algorithm_configuration_facade": [[40, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade": [[40, 2, 1, "", "get_acquisition_function"], [40, 2, 1, "", "get_acquisition_maximizer"], [40, 2, 1, "", "get_initial_design"], [40, 2, 1, "", "get_intensifier"], [40, 2, 1, "", "get_model"], [40, 2, 1, "", "get_multi_objective_algorithm"], [40, 2, 1, "", "get_random_design"], [40, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[41, 1, 1, "", "BlackBoxFacade"]], "smac.facade.blackbox_facade.BlackBoxFacade": [[41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_kernel"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.hyperband_facade": [[42, 1, 1, "", "HyperbandFacade"]], "smac.facade.hyperband_facade.HyperbandFacade": [[42, 2, 1, "", "get_intensifier"]], "smac.facade.hyperparameter_optimization_facade": [[43, 1, 1, "", "HyperparameterOptimizationFacade"]], "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade": [[43, 2, 1, "", "get_acquisition_function"], [43, 2, 1, "", "get_acquisition_maximizer"], [43, 2, 1, "", "get_initial_design"], [43, 2, 1, "", "get_intensifier"], [43, 2, 1, "", "get_model"], [43, 2, 1, "", "get_multi_objective_algorithm"], [43, 2, 1, "", "get_random_design"], [43, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.multi_fidelity_facade": [[44, 1, 1, "", "MultiFidelityFacade"]], "smac.facade.multi_fidelity_facade.MultiFidelityFacade": [[44, 2, 1, "", "get_initial_design"], [44, 2, 1, "", "get_intensifier"]], "smac.facade.random_facade": [[45, 1, 1, "", "RandomFacade"]], "smac.facade.random_facade.RandomFacade": [[45, 2, 1, "", "get_acquisition_function"], [45, 2, 1, "", "get_acquisition_maximizer"], [45, 2, 1, "", "get_initial_design"], [45, 2, 1, "", "get_intensifier"], [45, 2, 1, "", "get_model"], [45, 2, 1, "", "get_multi_objective_algorithm"], [45, 2, 1, "", "get_random_design"], [45, 2, 1, "", "get_runhistory_encoder"]], "smac.initial_design": [[46, 1, 1, "", "AbstractInitialDesign"], [46, 1, 1, "", "DefaultInitialDesign"], [46, 1, 1, "", "FactorialInitialDesign"], [46, 1, 1, "", "LatinHypercubeInitialDesign"], [46, 1, 1, "", "RandomInitialDesign"], [46, 1, 1, "", "SobolInitialDesign"], [47, 0, 0, "-", "abstract_initial_design"], [48, 0, 0, "-", "default_design"], [49, 0, 0, "-", "factorial_design"], [50, 0, 0, "-", "latin_hypercube_design"], [51, 0, 0, "-", "random_design"], [52, 0, 0, "-", "sobol_design"]], "smac.initial_design.AbstractInitialDesign": [[46, 3, 1, "", "meta"], [46, 2, 1, "", "select_configurations"]], "smac.initial_design.abstract_initial_design": [[47, 1, 1, "", "AbstractInitialDesign"]], "smac.initial_design.abstract_initial_design.AbstractInitialDesign": [[47, 3, 1, "", "meta"], [47, 2, 1, "", "select_configurations"]], "smac.initial_design.default_design": [[48, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[49, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[50, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.random_design": [[51, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[52, 1, 1, "", "SobolInitialDesign"]], "smac.intensifier": [[53, 1, 1, "", "AbstractIntensifier"], [53, 1, 1, "", "Hyperband"], [53, 1, 1, "", "Intensifier"], [53, 1, 1, "", "SuccessiveHalving"], [54, 0, 0, "-", "abstract_intensifier"], [55, 0, 0, "-", "hyperband"], [56, 0, 0, "-", "intensifier"], [57, 0, 0, "-", "successive_halving"]], "smac.intensifier.AbstractIntensifier": [[53, 2, 1, "", "__iter__"], [53, 2, 1, "", "__post_init__"], [53, 3, 1, "", "config_generator"], [53, 3, 1, "", "config_selector"], [53, 2, 1, "", "get_callback"], [53, 2, 1, "", "get_incumbent"], [53, 2, 1, "", "get_incumbent_instance_seed_budget_key_differences"], [53, 2, 1, "", "get_incumbent_instance_seed_budget_keys"], [53, 2, 1, "", "get_incumbents"], [53, 2, 1, "", "get_instance_seed_budget_keys"], [53, 2, 1, "", "get_instance_seed_keys_of_interest"], [53, 2, 1, "", "get_rejected_configs"], [53, 2, 1, "", "get_state"], [53, 2, 1, "", "get_trials_of_interest"], [53, 3, 1, "", "incumbents_changed"], [53, 2, 1, "", "load"], [53, 3, 1, "", "meta"], [53, 2, 1, "", "reset"], [53, 3, 1, "", "runhistory"], [53, 2, 1, "", "save"], [53, 2, 1, "", "set_state"], [53, 3, 1, "", "trajectory"], [53, 2, 1, "", "update_incumbents"], [53, 3, 1, "", "used_walltime"], [53, 3, 1, "", "uses_budgets"], [53, 3, 1, "", "uses_instances"], [53, 3, 1, "", "uses_seeds"]], "smac.intensifier.Hyperband": [[53, 2, 1, "", "get_state"], [53, 2, 1, "", "reset"], [53, 2, 1, "", "set_state"]], "smac.intensifier.Intensifier": [[53, 2, 1, "", "__iter__"], [53, 2, 1, "", "get_state"], [53, 2, 1, "", "reset"], [53, 2, 1, "", "set_state"], [53, 3, 1, "", "uses_budgets"], [53, 3, 1, "", "uses_instances"], [53, 3, 1, "", "uses_seeds"]], "smac.intensifier.SuccessiveHalving": [[53, 2, 1, "", "__post_init__"], [53, 2, 1, "", "get_instance_seed_budget_keys"], [53, 2, 1, "", "get_state"], [53, 2, 1, "", "get_trials_of_interest"], [53, 3, 1, "", "meta"], [53, 2, 1, "", "reset"], [53, 2, 1, "", "set_state"], [53, 3, 1, "", "uses_budgets"], [53, 3, 1, "", "uses_instances"], [53, 3, 1, "", "uses_seeds"]], "smac.intensifier.abstract_intensifier": [[54, 1, 1, "", "AbstractIntensifier"]], "smac.intensifier.abstract_intensifier.AbstractIntensifier": [[54, 2, 1, "", "__iter__"], [54, 2, 1, "", "__post_init__"], [54, 3, 1, "", "config_generator"], [54, 3, 1, "", "config_selector"], [54, 2, 1, "", "get_callback"], [54, 2, 1, "", "get_incumbent"], [54, 2, 1, "", "get_incumbent_instance_seed_budget_key_differences"], [54, 2, 1, "", "get_incumbent_instance_seed_budget_keys"], [54, 2, 1, "", "get_incumbents"], [54, 2, 1, "", "get_instance_seed_budget_keys"], [54, 2, 1, "", "get_instance_seed_keys_of_interest"], [54, 2, 1, "", "get_rejected_configs"], [54, 2, 1, "", "get_state"], [54, 2, 1, "", "get_trials_of_interest"], [54, 3, 1, "", "incumbents_changed"], [54, 2, 1, "", "load"], [54, 3, 1, "", "meta"], [54, 2, 1, "", "reset"], [54, 3, 1, "", "runhistory"], [54, 2, 1, "", "save"], [54, 2, 1, "", "set_state"], [54, 3, 1, "", "trajectory"], [54, 2, 1, "", "update_incumbents"], [54, 3, 1, "", "used_walltime"], [54, 3, 1, "", "uses_budgets"], [54, 3, 1, "", "uses_instances"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.hyperband": [[55, 1, 1, "", "Hyperband"]], "smac.intensifier.hyperband.Hyperband": [[55, 2, 1, "", "get_state"], [55, 2, 1, "", "reset"], [55, 2, 1, "", "set_state"]], "smac.intensifier.intensifier": [[56, 1, 1, "", "Intensifier"]], "smac.intensifier.intensifier.Intensifier": [[56, 2, 1, "", "__iter__"], [56, 2, 1, "", "get_state"], [56, 2, 1, "", "reset"], [56, 2, 1, "", "set_state"], [56, 3, 1, "", "uses_budgets"], [56, 3, 1, "", "uses_instances"], [56, 3, 1, "", "uses_seeds"]], "smac.intensifier.successive_halving": [[57, 1, 1, "", "SuccessiveHalving"]], "smac.intensifier.successive_halving.SuccessiveHalving": [[57, 2, 1, "", "__post_init__"], [57, 2, 1, "", "get_instance_seed_budget_keys"], [57, 2, 1, "", "get_state"], [57, 2, 1, "", "get_trials_of_interest"], [57, 3, 1, "", "meta"], [57, 2, 1, "", "reset"], [57, 2, 1, "", "set_state"], [57, 3, 1, "", "uses_budgets"], [57, 3, 1, "", "uses_instances"], [57, 3, 1, "", "uses_seeds"]], "smac.main": [[59, 0, 0, "-", "config_selector"], [60, 0, 0, "-", "smbo"]], "smac.main.config_selector": [[59, 1, 1, "", "ConfigSelector"]], "smac.main.config_selector.ConfigSelector": [[59, 2, 1, "", "__iter__"], [59, 3, 1, "", "meta"]], "smac.main.smbo": [[60, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[60, 2, 1, "", "ask"], [60, 3, 1, "", "budget_exhausted"], [60, 2, 1, "", "exists"], [60, 3, 1, "", "intensifier"], [60, 2, 1, "", "load"], [60, 2, 1, "", "optimize"], [60, 2, 1, "", "print_stats"], [60, 3, 1, "", "remaining_cputime"], [60, 3, 1, "", "remaining_trials"], [60, 3, 1, "", "remaining_walltime"], [60, 2, 1, "", "reset"], [60, 3, 1, "", "runhistory"], [60, 2, 1, "", "save"], [60, 2, 1, "", "tell"], [60, 2, 1, "", "update_acquisition_function"], [60, 2, 1, "", "update_model"], [60, 3, 1, "", "used_target_function_walltime"], [60, 3, 1, "", "used_walltime"], [60, 2, 1, "", "validate"]], "smac.model": [[61, 1, 1, "", "AbstractModel"], [61, 1, 1, "", "MultiObjectiveModel"], [61, 1, 1, "", "RandomModel"], [62, 0, 0, "-", "abstract_model"], [63, 0, 0, "-", "gaussian_process"], [80, 0, 0, "-", "multi_objective_model"], [81, 0, 0, "-", "random_forest"], [84, 0, 0, "-", "random_model"]], "smac.model.AbstractModel": [[61, 3, 1, "", "meta"], [61, 2, 1, "", "predict"], [61, 2, 1, "", "predict_marginalized"], [61, 2, 1, "", "train"]], "smac.model.MultiObjectiveModel": [[61, 3, 1, "", "models"], [61, 2, 1, "", "predict_marginalized"]], "smac.model.abstract_model": [[62, 1, 1, "", "AbstractModel"]], "smac.model.abstract_model.AbstractModel": [[62, 3, 1, "", "meta"], [62, 2, 1, "", "predict"], [62, 2, 1, "", "predict_marginalized"], [62, 2, 1, "", "train"]], "smac.model.gaussian_process": [[63, 1, 1, "", "AbstractGaussianProcess"], [63, 1, 1, "", "GaussianProcess"], [63, 1, 1, "", "MCMCGaussianProcess"], [64, 0, 0, "-", "abstract_gaussian_process"], [65, 0, 0, "-", "gaussian_process"], [66, 0, 0, "-", "gpytorch_gaussian_process"], [67, 0, 0, "-", "kernels"], [73, 0, 0, "-", "mcmc_gaussian_process"], [74, 0, 0, "-", "priors"]], "smac.model.gaussian_process.AbstractGaussianProcess": [[63, 3, 1, "", "meta"]], "smac.model.gaussian_process.GaussianProcess": [[63, 3, 1, "", "meta"], [63, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.MCMCGaussianProcess": [[63, 3, 1, "", "meta"], [63, 3, 1, "", "models"]], "smac.model.gaussian_process.abstract_gaussian_process": [[64, 1, 1, "", "AbstractGaussianProcess"]], "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess": [[64, 3, 1, "", "meta"]], "smac.model.gaussian_process.gaussian_process": [[65, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[65, 3, 1, "", "meta"], [65, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.kernels": [[67, 1, 1, "", "AbstractKernel"], [67, 1, 1, "", "ConstantKernel"], [67, 1, 1, "", "HammingKernel"], [67, 1, 1, "", "MaternKernel"], [67, 1, 1, "", "ProductKernel"], [67, 1, 1, "", "RBFKernel"], [67, 1, 1, "", "SumKernel"], [67, 1, 1, "", "WhiteKernel"], [68, 0, 0, "-", "base_kernels"], [69, 0, 0, "-", "hamming_kernel"], [70, 0, 0, "-", "matern_kernel"], [71, 0, 0, "-", "rbf_kernel"], [72, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.AbstractKernel": [[67, 2, 1, "", "__call__"], [67, 2, 1, "", "get_params"], [67, 4, 1, "", "has_conditions"], [67, 3, 1, "", "hyperparameters"], [67, 3, 1, "", "meta"], [67, 3, 1, "", "n_dims"], [67, 4, 1, "", "operate_on"], [67, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[67, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.HammingKernel": [[67, 3, 1, "", "hyperparameter_length_scale"], [67, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[67, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.SumKernel": [[67, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels": [[68, 1, 1, "", "AbstractKernel"], [68, 1, 1, "", "ConstantKernel"], [68, 1, 1, "", "ProductKernel"], [68, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel": [[68, 2, 1, "", "__call__"], [68, 2, 1, "", "get_params"], [68, 4, 1, "", "has_conditions"], [68, 3, 1, "", "hyperparameters"], [68, 3, 1, "", "meta"], [68, 3, 1, "", "n_dims"], [68, 4, 1, "", "operate_on"], [68, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[68, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[68, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[68, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[69, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[69, 3, 1, "", "hyperparameter_length_scale"], [69, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.matern_kernel": [[70, 1, 1, "", "MaternKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[71, 1, 1, "", "RBFKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[72, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[73, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess": [[73, 3, 1, "", "meta"], [73, 3, 1, "", "models"]], "smac.model.gaussian_process.priors": [[74, 1, 1, "", "GammaPrior"], [74, 1, 1, "", "HorseshoePrior"], [74, 1, 1, "", "LogNormalPrior"], [74, 1, 1, "", "SoftTopHatPrior"], [74, 1, 1, "", "TophatPrior"], [75, 0, 0, "-", "abstract_prior"], [76, 0, 0, "-", "gamma_prior"], [77, 0, 0, "-", "horseshoe_prior"], [78, 0, 0, "-", "log_normal_prior"], [79, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.GammaPrior": [[74, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.HorseshoePrior": [[74, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.LogNormalPrior": [[74, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.SoftTopHatPrior": [[74, 2, 1, "", "get_gradient"], [74, 2, 1, "", "get_log_probability"], [74, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.TophatPrior": [[74, 2, 1, "", "get_gradient"], [74, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.abstract_prior": [[75, 1, 1, "", "AbstractPrior"]], "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior": [[75, 2, 1, "", "get_gradient"], [75, 2, 1, "", "get_log_probability"], [75, 3, 1, "", "meta"], [75, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[76, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.gamma_prior.GammaPrior": [[76, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[77, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior": [[77, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[78, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior": [[78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[79, 1, 1, "", "SoftTopHatPrior"], [79, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[79, 2, 1, "", "get_gradient"], [79, 2, 1, "", "get_log_probability"], [79, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[79, 2, 1, "", "get_gradient"], [79, 3, 1, "", "meta"]], "smac.model.multi_objective_model": [[80, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[80, 3, 1, "", "models"], [80, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest": [[81, 1, 1, "", "AbstractRandomForest"], [81, 1, 1, "", "RandomForest"], [82, 0, 0, "-", "abstract_random_forest"], [83, 0, 0, "-", "random_forest"]], "smac.model.random_forest.RandomForest": [[81, 3, 1, "", "meta"], [81, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest.abstract_random_forest": [[82, 1, 1, "", "AbstractRandomForest"]], "smac.model.random_forest.random_forest": [[83, 1, 1, "", "RandomForest"]], "smac.model.random_forest.random_forest.RandomForest": [[83, 3, 1, "", "meta"], [83, 2, 1, "", "predict_marginalized"]], "smac.model.random_model": [[84, 1, 1, "", "RandomModel"]], "smac.multi_objective": [[85, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [85, 1, 1, "", "MeanAggregationStrategy"], [85, 1, 1, "", "ParEGO"], [86, 0, 0, "-", "abstract_multi_objective_algorithm"], [87, 0, 0, "-", "aggregation_strategy"], [88, 0, 0, "-", "parego"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[85, 2, 1, "", "__call__"], [85, 3, 1, "", "meta"], [85, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.MeanAggregationStrategy": [[85, 2, 1, "", "__call__"], [85, 3, 1, "", "meta"]], "smac.multi_objective.ParEGO": [[85, 2, 1, "", "__call__"], [85, 3, 1, "", "meta"], [85, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[86, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[86, 2, 1, "", "__call__"], [86, 3, 1, "", "meta"], [86, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.aggregation_strategy": [[87, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[87, 2, 1, "", "__call__"], [87, 3, 1, "", "meta"]], "smac.multi_objective.parego": [[88, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[88, 2, 1, "", "__call__"], [88, 3, 1, "", "meta"], [88, 2, 1, "", "update_on_iteration_start"]], "smac.random_design": [[89, 1, 1, "", "AbstractRandomDesign"], [89, 1, 1, "", "CosineAnnealingRandomDesign"], [89, 1, 1, "", "DynamicModulusRandomDesign"], [89, 1, 1, "", "DynamicProbabilityRandomDesign"], [89, 1, 1, "", "ModulusRandomDesign"], [89, 1, 1, "", "ProbabilityRandomDesign"], [90, 0, 0, "-", "abstract_random_design"], [91, 0, 0, "-", "annealing_design"], [92, 0, 0, "-", "modulus_design"], [93, 0, 0, "-", "probability_design"]], "smac.random_design.AbstractRandomDesign": [[89, 2, 1, "", "check"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "next_iteration"]], "smac.random_design.CosineAnnealingRandomDesign": [[89, 2, 1, "", "check"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicModulusRandomDesign": [[89, 2, 1, "", "check"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicProbabilityRandomDesign": [[89, 2, 1, "", "check"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "next_iteration"]], "smac.random_design.ModulusRandomDesign": [[89, 2, 1, "", "check"], [89, 3, 1, "", "meta"]], "smac.random_design.ProbabilityRandomDesign": [[89, 2, 1, "", "check"], [89, 3, 1, "", "meta"]], "smac.random_design.abstract_random_design": [[90, 1, 1, "", "AbstractRandomDesign"]], "smac.random_design.abstract_random_design.AbstractRandomDesign": [[90, 2, 1, "", "check"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "next_iteration"]], "smac.random_design.annealing_design": [[91, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.annealing_design.CosineAnnealingRandomDesign": [[91, 2, 1, "", "check"], [91, 3, 1, "", "meta"], [91, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[92, 1, 1, "", "DynamicModulusRandomDesign"], [92, 1, 1, "", "ModulusRandomDesign"]], "smac.random_design.modulus_design.DynamicModulusRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.ModulusRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"]], "smac.random_design.probability_design": [[93, 1, 1, "", "DynamicProbabilityRandomDesign"], [93, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.DynamicProbabilityRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"]], "smac.runhistory": [[94, 1, 1, "", "InstanceSeedBudgetKey"], [94, 1, 1, "", "InstanceSeedKey"], [94, 1, 1, "", "RunHistory"], [94, 1, 1, "", "StatusType"], [94, 1, 1, "", "TrialInfo"], [94, 1, 1, "", "TrialKey"], [94, 1, 1, "", "TrialValue"], [95, 0, 0, "-", "dataclasses"], [96, 0, 0, "-", "encoder"], [106, 0, 0, "-", "enumerations"], [107, 0, 0, "-", "errors"], [108, 0, 0, "-", "runhistory"]], "smac.runhistory.InstanceSeedBudgetKey": [[94, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.RunHistory": [[94, 2, 1, "", "__contains__"], [94, 2, 1, "", "__eq__"], [94, 2, 1, "", "__getitem__"], [94, 2, 1, "", "__iter__"], [94, 2, 1, "", "__len__"], [94, 2, 1, "", "add"], [94, 2, 1, "", "add_running_trial"], [94, 2, 1, "", "add_trial"], [94, 2, 1, "", "average_cost"], [94, 3, 1, "", "config_ids"], [94, 2, 1, "", "empty"], [94, 3, 1, "", "finished"], [94, 2, 1, "", "get_config"], [94, 2, 1, "", "get_config_id"], [94, 2, 1, "", "get_configs"], [94, 2, 1, "", "get_configs_per_budget"], [94, 2, 1, "", "get_cost"], [94, 2, 1, "", "get_instance_seed_budget_keys"], [94, 2, 1, "", "get_min_cost"], [94, 2, 1, "", "get_running_configs"], [94, 2, 1, "", "get_running_trials"], [94, 2, 1, "", "get_trials"], [94, 3, 1, "", "ids_config"], [94, 2, 1, "", "incremental_update_cost"], [94, 2, 1, "", "load"], [94, 2, 1, "", "min_cost"], [94, 3, 1, "", "multi_objective_algorithm"], [94, 3, 1, "", "objective_bounds"], [94, 2, 1, "", "reset"], [94, 3, 1, "", "running"], [94, 2, 1, "", "save"], [94, 3, 1, "", "submitted"], [94, 2, 1, "", "sum_cost"], [94, 2, 1, "", "update"], [94, 2, 1, "", "update_cost"], [94, 2, 1, "", "update_costs"], [94, 2, 1, "", "update_from_json"]], "smac.runhistory.TrialInfo": [[94, 2, 1, "", "get_instance_seed_budget_key"], [94, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.dataclasses": [[95, 1, 1, "", "InstanceSeedBudgetKey"], [95, 1, 1, "", "InstanceSeedKey"], [95, 1, 1, "", "TrajectoryItem"], [95, 1, 1, "", "TrialInfo"], [95, 1, 1, "", "TrialKey"], [95, 1, 1, "", "TrialValue"]], "smac.runhistory.dataclasses.InstanceSeedBudgetKey": [[95, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.dataclasses.TrialInfo": [[95, 2, 1, "", "get_instance_seed_budget_key"], [95, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.encoder": [[96, 1, 1, "", "AbstractRunHistoryEncoder"], [96, 1, 1, "", "RunHistoryEIPSEncoder"], [96, 1, 1, "", "RunHistoryEncoder"], [96, 1, 1, "", "RunHistoryInverseScaledEncoder"], [96, 1, 1, "", "RunHistoryLogEncoder"], [96, 1, 1, "", "RunHistoryLogScaledEncoder"], [96, 1, 1, "", "RunHistoryScaledEncoder"], [96, 1, 1, "", "RunHistorySqrtScaledEncoder"], [97, 0, 0, "-", "abstract_encoder"], [98, 0, 0, "-", "boing_encoder"], [99, 0, 0, "-", "eips_encoder"], [100, 0, 0, "-", "encoder"], [101, 0, 0, "-", "inverse_scaled_encoder"], [102, 0, 0, "-", "log_encoder"], [103, 0, 0, "-", "log_scaled_encoder"], [104, 0, 0, "-", "scaled_encoder"], [105, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[96, 2, 1, "", "get_configurations"], [96, 3, 1, "", "meta"], [96, 3, 1, "", "multi_objective_algorithm"], [96, 3, 1, "", "runhistory"], [96, 2, 1, "", "transform"], [96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[97, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[97, 2, 1, "", "get_configurations"], [97, 3, 1, "", "meta"], [97, 3, 1, "", "multi_objective_algorithm"], [97, 3, 1, "", "runhistory"], [97, 2, 1, "", "transform"], [97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.eips_encoder": [[99, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[100, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[101, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[102, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[103, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[104, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[104, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[105, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[105, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[106, 1, 1, "", "StatusType"]], "smac.runhistory.errors": [[107, 5, 1, "", "NotEvaluatedError"]], "smac.runhistory.runhistory": [[108, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[108, 2, 1, "", "__contains__"], [108, 2, 1, "", "__eq__"], [108, 2, 1, "", "__getitem__"], [108, 2, 1, "", "__iter__"], [108, 2, 1, "", "__len__"], [108, 2, 1, "", "add"], [108, 2, 1, "", "add_running_trial"], [108, 2, 1, "", "add_trial"], [108, 2, 1, "", "average_cost"], [108, 3, 1, "", "config_ids"], [108, 2, 1, "", "empty"], [108, 3, 1, "", "finished"], [108, 2, 1, "", "get_config"], [108, 2, 1, "", "get_config_id"], [108, 2, 1, "", "get_configs"], [108, 2, 1, "", "get_configs_per_budget"], [108, 2, 1, "", "get_cost"], [108, 2, 1, "", "get_instance_seed_budget_keys"], [108, 2, 1, "", "get_min_cost"], [108, 2, 1, "", "get_running_configs"], [108, 2, 1, "", "get_running_trials"], [108, 2, 1, "", "get_trials"], [108, 3, 1, "", "ids_config"], [108, 2, 1, "", "incremental_update_cost"], [108, 2, 1, "", "load"], [108, 2, 1, "", "min_cost"], [108, 3, 1, "", "multi_objective_algorithm"], [108, 3, 1, "", "objective_bounds"], [108, 2, 1, "", "reset"], [108, 3, 1, "", "running"], [108, 2, 1, "", "save"], [108, 3, 1, "", "submitted"], [108, 2, 1, "", "sum_cost"], [108, 2, 1, "", "update"], [108, 2, 1, "", "update_cost"], [108, 2, 1, "", "update_costs"], [108, 2, 1, "", "update_from_json"]], "smac.runner": [[109, 1, 1, "", "AbstractRunner"], [109, 1, 1, "", "DaskParallelRunner"], [109, 5, 1, "", "FirstRunCrashedException"], [109, 5, 1, "", "TargetAlgorithmAbortException"], [109, 1, 1, "", "TargetFunctionRunner"], [110, 0, 0, "-", "abstract_runner"], [111, 0, 0, "-", "abstract_serial_runner"], [112, 0, 0, "-", "dask_runner"], [113, 0, 0, "-", "exceptions"], [114, 0, 0, "-", "target_function_runner"], [115, 0, 0, "-", "target_function_script_runner"]], "smac.runner.AbstractRunner": [[109, 2, 1, "", "count_available_workers"], [109, 2, 1, "", "is_running"], [109, 2, 1, "", "iter_results"], [109, 3, 1, "", "meta"], [109, 2, 1, "", "run"], [109, 2, 1, "", "run_wrapper"], [109, 2, 1, "", "submit_trial"], [109, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[109, 2, 1, "", "__del__"], [109, 2, 1, "", "close"], [109, 2, 1, "", "count_available_workers"], [109, 2, 1, "", "is_running"], [109, 2, 1, "", "iter_results"], [109, 2, 1, "", "run"], [109, 2, 1, "", "submit_trial"], [109, 2, 1, "", "wait"]], "smac.runner.TargetFunctionRunner": [[109, 2, 1, "", "__call__"], [109, 3, 1, "", "meta"], [109, 2, 1, "", "run"]], "smac.runner.abstract_runner": [[110, 1, 1, "", "AbstractRunner"]], "smac.runner.abstract_runner.AbstractRunner": [[110, 2, 1, "", "count_available_workers"], [110, 2, 1, "", "is_running"], [110, 2, 1, "", "iter_results"], [110, 3, 1, "", "meta"], [110, 2, 1, "", "run"], [110, 2, 1, "", "run_wrapper"], [110, 2, 1, "", "submit_trial"], [110, 2, 1, "", "wait"]], "smac.runner.abstract_serial_runner": [[111, 1, 1, "", "AbstractSerialRunner"]], "smac.runner.abstract_serial_runner.AbstractSerialRunner": [[111, 2, 1, "", "count_available_workers"], [111, 2, 1, "", "is_running"], [111, 2, 1, "", "iter_results"], [111, 2, 1, "", "submit_trial"], [111, 2, 1, "", "wait"]], "smac.runner.dask_runner": [[112, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[112, 2, 1, "", "__del__"], [112, 2, 1, "", "close"], [112, 2, 1, "", "count_available_workers"], [112, 2, 1, "", "is_running"], [112, 2, 1, "", "iter_results"], [112, 2, 1, "", "run"], [112, 2, 1, "", "submit_trial"], [112, 2, 1, "", "wait"]], "smac.runner.exceptions": [[113, 5, 1, "", "FirstRunCrashedException"], [113, 5, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.target_function_runner": [[114, 1, 1, "", "TargetFunctionRunner"]], "smac.runner.target_function_runner.TargetFunctionRunner": [[114, 2, 1, "", "__call__"], [114, 3, 1, "", "meta"], [114, 2, 1, "", "run"]], "smac.runner.target_function_script_runner": [[115, 1, 1, "", "TargetFunctionScriptRunner"]], "smac.runner.target_function_script_runner.TargetFunctionScriptRunner": [[115, 2, 1, "", "__call__"], [115, 3, 1, "", "meta"], [115, 2, 1, "", "run"]], "smac.scenario": [[116, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[116, 2, 1, "", "__post_init__"], [116, 2, 1, "", "count_instance_features"], [116, 2, 1, "", "count_objectives"], [116, 2, 1, "", "load"], [116, 2, 1, "", "make_serializable"], [116, 3, 1, "", "meta"], [116, 2, 1, "", "save"]], "smac.utils": [[118, 0, 0, "-", "configspace"], [119, 0, 0, "-", "data_structures"], [120, 0, 0, "-", "logging"], [121, 0, 0, "-", "multi_objective"], [122, 0, 0, "-", "pareto_front"], [123, 0, 0, "-", "subspaces"]], "smac.utils.configspace": [[118, 6, 1, "", "convert_configurations_to_array"], [118, 6, 1, "", "get_conditional_hyperparameters"], [118, 6, 1, "", "get_config_hash"], [118, 6, 1, "", "get_types"], [118, 6, 1, "", "print_config_changes"]], "smac.utils.data_structures": [[119, 6, 1, "", "batch"], [119, 6, 1, "", "recursively_compare_dicts"]], "smac.utils.logging": [[120, 6, 1, "", "get_logger"], [120, 6, 1, "", "setup_logging"]], "smac.utils.multi_objective": [[121, 6, 1, "", "normalize_costs"]], "smac.utils.pareto_front": [[122, 6, 1, "", "calculate_pareto_front"], [122, 6, 1, "", "sort_by_crowding_distance"]], "smac.utils.subspaces": [[124, 0, 0, "-", "boing_subspace"], [125, 0, 0, "-", "turbo_subspace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "requir": 0, "anaconda": 0, "conda": 0, "forg": 0, "packag": 1, "overview": [1, 146], "featur": 1, "comparison": 1, "get": 2, "start": [2, 16], "configur": [2, 11], "space": 2, "target": [2, 16, 142], "function": [2, 11, 16, 22, 23, 24, 25, 26, 27, 28, 29, 118, 119, 120, 121, 122, 126, 138, 142], "scenario": [2, 116], "facad": [2, 38, 39, 40, 41, 42, 43, 44, 45], "minim": 3, "exampl": [3, 145], "api": 4, "refer": [4, 5], "glossari": 6, "f": 7, "A": 7, "q": 7, "licens": 8, "continu": [9, 130], "reproduc": 10, "compon": 11, "surrog": 11, "model": [11, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "acquisit": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "maxim": [11, 30, 31, 32, 33, 34, 35, 36], "initi": 11, "design": 11, "random": 11, "intensifi": [11, 53, 54, 55, 56, 57], "selector": 11, "multi": [11, 12, 13, 134, 136, 140, 145], "object": [11, 13, 138, 140, 145], "algorithm": 11, "runhistori": [11, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "encod": [11, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "callback": [11, 37, 129], "fidel": [12, 136, 145], "optim": [12, 13, 14, 16, 130], "across": 14, "instanc": [14, 136, 145], "ask": [15, 128], "tell": [15, 128], "interfac": [15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 143, 145], "command": [16, 143, 145], "line": [16, 143, 145], "call": [16, 142], "return": 16, "stop": 17, "criteria": 17, "termin": 17, "cost": 17, "threshold": 17, "automat": 17, "log": [18, 120], "level": 18, "custom": [18, 129], "file": 18, "parallel": 19, "advanc": 20, "usag": 20, "navig": 20, "smac": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "modul": [21, 22, 30, 38, 46, 53, 58, 61, 63, 67, 74, 81, 85, 89, 94, 96, 109, 117, 123], "abstract_acquisition_funct": 23, "class": [23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 95, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 114, 115, 116], "confidence_bound": 24, "expected_improv": 25, "integrated_acquisition_funct": 26, "prior_acqusition_funct": 27, "probability_improv": 28, "thompson": 29, "abstract_acqusition_maxim": 31, "differential_evolut": 32, "helper": 33, "local_and_random_search": 34, "local_search": 35, "random_search": 36, "abstract_facad": 39, "algorithm_configuration_facad": 40, "blackbox_facad": 41, "hyperband_facad": 42, "hyperparameter_optimization_facad": 43, "multi_fidelity_facad": 44, "random_facad": 45, "initial_design": [46, 47, 48, 49, 50, 51, 52], "abstract_initial_design": 47, "default_design": 48, "factorial_design": 49, "latin_hypercube_design": 50, "random_design": [51, 89, 90, 91, 92, 93], "sobol_design": 52, "abstract_intensifi": 54, "hyperband": 55, "successive_halv": 57, "main": [58, 59, 60], "config_selector": 59, "smbo": 60, "abstract_model": 62, "gaussian_process": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "abstract_gaussian_process": 64, "gpytorch_gaussian_process": 66, "kernel": [67, 68, 69, 70, 71, 72], "base_kernel": 68, "hamming_kernel": 69, "matern_kernel": 70, "rbf_kernel": 71, "white_kernel": 72, "mcmc_gaussian_process": 73, "prior": [74, 75, 76, 77, 78, 79, 131], "abstract_prior": 75, "gamma_prior": 76, "horseshoe_prior": 77, "log_normal_prior": 78, "tophat_prior": 79, "multi_objective_model": 80, "random_forest": [81, 82, 83], "abstract_random_forest": 82, "random_model": 84, "multi_object": [85, 86, 87, 88, 121], "abstract_multi_objective_algorithm": 86, "aggregation_strategi": 87, "parego": [88, 139], "abstract_random_design": 90, "annealing_design": 91, "modulus_design": 92, "probability_design": 93, "dataclass": 95, "abstract_encod": 97, "boing_encod": 98, "eips_encod": 99, "inverse_scaled_encod": 101, "log_encod": 102, "log_scaled_encod": 103, "scaled_encod": 104, "sqrt_scaled_encod": 105, "enumer": 106, "error": 107, "except": [107, 113], "runner": [109, 110, 111, 112, 113, 114, 115], "abstract_runn": 110, "abstract_serial_runn": 111, "dask_runn": 112, "target_function_runn": 114, "target_function_script_runn": 115, "util": [117, 118, 119, 120, 121, 122, 123, 124, 125], "configspac": 118, "data_structur": 119, "pareto_front": 122, "subspac": [123, 124, 125], "boing_subspac": 124, "turbo_subspac": 125, "quadrat": 126, "support": 127, "vector": 127, "machin": 127, "cross": 127, "valid": 127, "an": 130, "user": 131, "over": 131, "optimum": 131, "basic": [132, 145], "comput": [133, 137, 141, 144], "time": [133, 137, 141, 144], "layer": 134, "perceptron": 134, "us": 134, "multipl": [134, 135], "epoch": 134, "stochast": 135, "gradient": 135, "descent": 135, "On": 135, "dataset": 135, "2d": 138, "schaffer": 138, "weight": 138, "from": 142, "script": 142, "figur": 146, "home": 147, "contact": 147}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Installation": [[0, "installation"]], "Requirements": [[0, "requirements"]], "Anaconda": [[0, "anaconda"]], "Conda-forge": [[0, "conda-forge"]], "Package Overview": [[1, "package-overview"]], "Features": [[1, "features"]], "Comparison": [[1, "comparison"]], "Getting Started": [[2, "getting-started"]], "Configuration Space": [[2, "configuration-space"]], "Target Function": [[2, "target-function"]], "Scenario": [[2, "scenario"]], "Facade": [[2, "facade"]], "Minimal Example": [[3, "minimal-example"]], "API References": [[4, "api-references"]], "References": [[5, "references"]], "Glossary": [[6, "glossary"]], "F.A.Q.": [[7, "f-a-q"]], "License": [[8, "license"]], "Continue": [[9, "continue"]], "Reproducibility": [[10, "reproducibility"]], "Components": [[11, "components"]], "Surrogate Model": [[11, "surrogate-model"]], "Acquisition Function": [[11, "acquisition-function"]], "Acquisition Maximizer": [[11, "acquisition-maximizer"]], "Initial Design": [[11, "initial-design"]], "Random Design": [[11, "random-design"]], "Intensifier": [[11, "intensifier"]], "Configuration Selector": [[11, "configuration-selector"]], "Multi-Objective Algorithm": [[11, "multi-objective-algorithm"]], "RunHistory": [[11, "runhistory"]], "RunHistory Encoder": [[11, "runhistory-encoder"]], "Callback": [[11, "callback"]], "Multi-Fidelity Optimization": [[12, "multi-fidelity-optimization"]], "Multi-Objective Optimization": [[13, "multi-objective-optimization"]], "Optimization across Instances": [[14, "optimization-across-instances"]], "Ask-and-Tell Interface": [[15, "ask-and-tell-interface"]], "Command-Line Interface": [[16, "command-line-interface"], [143, "command-line-interface"], [145, "command-line-interface"]], "Call of the Target Function": [[16, "call-of-the-target-function"]], "Return of the Target Function": [[16, "return-of-the-target-function"]], "Start the Optimization": [[16, "start-the-optimization"]], "Stopping Criteria": [[17, "stopping-criteria"]], "Termination Cost Threshold": [[17, "termination-cost-threshold"]], "Automatically Stopping": [[17, "automatically-stopping"]], "Logging": [[18, "logging"]], "Level": [[18, "level"]], "Custom File": [[18, "custom-file"]], "Parallelism": [[19, "parallelism"]], "Advanced Usage": [[20, "advanced-usage"]], "Navigation": [[20, "navigation"]], "smac.acquisition": [[21, "module-smac.acquisition"]], "Interfaces": [[21, "interfaces"], [22, "interfaces"], [23, "interfaces"], [24, "interfaces"], [25, "interfaces"], [26, "interfaces"], [27, "interfaces"], [28, "interfaces"], [29, "interfaces"], [30, "interfaces"], [31, "interfaces"], [32, "interfaces"], [33, "interfaces"], [34, "interfaces"], [35, "interfaces"], [36, "interfaces"], [37, "interfaces"], [38, "interfaces"], [39, "interfaces"], [40, "interfaces"], [41, "interfaces"], [42, "interfaces"], [43, "interfaces"], [44, "interfaces"], [45, "interfaces"], [46, "interfaces"], [47, "interfaces"], [48, "interfaces"], [49, "interfaces"], [50, "interfaces"], [51, "interfaces"], [52, "interfaces"], [53, "interfaces"], [54, "interfaces"], [55, "interfaces"], [56, "interfaces"], [57, "interfaces"], [58, "interfaces"], [59, "interfaces"], [60, "interfaces"], [61, "interfaces"], [62, "interfaces"], [63, "interfaces"], [64, "interfaces"], [65, "interfaces"], [66, "interfaces"], [67, "interfaces"], [68, "interfaces"], [69, "interfaces"], [70, "interfaces"], [71, "interfaces"], [72, "interfaces"], [73, "interfaces"], [74, "interfaces"], [75, "interfaces"], [76, "interfaces"], [77, "interfaces"], [78, "interfaces"], [79, "interfaces"], [80, "interfaces"], [81, "interfaces"], [82, "interfaces"], [83, "interfaces"], [84, "interfaces"], [85, "interfaces"], [86, "interfaces"], [87, "interfaces"], [88, "interfaces"], [89, "interfaces"], [90, "interfaces"], [91, "interfaces"], [92, "interfaces"], [93, "interfaces"], [94, "interfaces"], [95, "interfaces"], [96, "interfaces"], [97, "interfaces"], [98, "interfaces"], [99, "interfaces"], [100, "interfaces"], [101, "interfaces"], [102, "interfaces"], [103, "interfaces"], [104, "interfaces"], [105, "interfaces"], [106, "interfaces"], [107, "interfaces"], [108, "interfaces"], [109, "interfaces"], [110, "interfaces"], [111, "interfaces"], [112, "interfaces"], [113, "interfaces"], [114, "interfaces"], [115, "interfaces"], [116, "interfaces"], [117, "interfaces"], [118, "interfaces"], [119, "interfaces"], [120, "interfaces"], [121, "interfaces"], [122, "interfaces"], [123, "interfaces"], [124, "interfaces"], [125, "interfaces"]], "Modules": [[21, "modules"], [22, "modules"], [30, "modules"], [38, "modules"], [46, "modules"], [53, "modules"], [58, "modules"], [61, "modules"], [63, "modules"], [67, "modules"], [74, "modules"], [81, "modules"], [85, "modules"], [89, "modules"], [94, "modules"], [96, "modules"], [109, "modules"], [117, "modules"], [123, "modules"]], "smac.acquisition.function": [[22, "module-smac.acquisition.function"]], "smac.acquisition.function.abstract_acquisition_function": [[23, "module-smac.acquisition.function.abstract_acquisition_function"]], "Classes": [[23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [59, "classes"], [60, "classes"], [62, "classes"], [64, "classes"], [65, "classes"], [68, "classes"], [69, "classes"], [70, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [95, "classes"], [97, "classes"], [99, "classes"], [100, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [108, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [114, "classes"], [115, "classes"], [116, "classes"]], "smac.acquisition.function.confidence_bound": [[24, "module-smac.acquisition.function.confidence_bound"]], "smac.acquisition.function.expected_improvement": [[25, "module-smac.acquisition.function.expected_improvement"]], "smac.acquisition.function.integrated_acquisition_function": [[26, "module-smac.acquisition.function.integrated_acquisition_function"]], "smac.acquisition.function.prior_acqusition_function": [[27, "module-smac.acquisition.function.prior_acqusition_function"]], "smac.acquisition.function.probability_improvement": [[28, "module-smac.acquisition.function.probability_improvement"]], "smac.acquisition.function.thompson": [[29, "module-smac.acquisition.function.thompson"]], "smac.acquisition.maximizer": [[30, "module-smac.acquisition.maximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[31, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "smac.acquisition.maximizer.differential_evolution": [[32, "module-smac.acquisition.maximizer.differential_evolution"]], "smac.acquisition.maximizer.helpers": [[33, "module-smac.acquisition.maximizer.helpers"]], "smac.acquisition.maximizer.local_and_random_search": [[34, "module-smac.acquisition.maximizer.local_and_random_search"]], "smac.acquisition.maximizer.local_search": [[35, "module-smac.acquisition.maximizer.local_search"]], "smac.acquisition.maximizer.random_search": [[36, "module-smac.acquisition.maximizer.random_search"]], "smac.callback": [[37, "module-smac.callback"]], "smac.facade": [[38, "module-smac.facade"]], "smac.facade.abstract_facade": [[39, "module-smac.facade.abstract_facade"]], "smac.facade.algorithm_configuration_facade": [[40, "module-smac.facade.algorithm_configuration_facade"]], "smac.facade.blackbox_facade": [[41, "module-smac.facade.blackbox_facade"]], "smac.facade.hyperband_facade": [[42, "module-smac.facade.hyperband_facade"]], "smac.facade.hyperparameter_optimization_facade": [[43, "module-smac.facade.hyperparameter_optimization_facade"]], "smac.facade.multi_fidelity_facade": [[44, "module-smac.facade.multi_fidelity_facade"]], "smac.facade.random_facade": [[45, "module-smac.facade.random_facade"]], "smac.initial_design": [[46, "module-smac.initial_design"]], "smac.initial_design.abstract_initial_design": [[47, "module-smac.initial_design.abstract_initial_design"]], "smac.initial_design.default_design": [[48, "module-smac.initial_design.default_design"]], "smac.initial_design.factorial_design": [[49, "module-smac.initial_design.factorial_design"]], "smac.initial_design.latin_hypercube_design": [[50, "module-smac.initial_design.latin_hypercube_design"]], "smac.initial_design.random_design": [[51, "module-smac.initial_design.random_design"]], "smac.initial_design.sobol_design": [[52, "module-smac.initial_design.sobol_design"]], "smac.intensifier": [[53, "module-smac.intensifier"]], "smac.intensifier.abstract_intensifier": [[54, "module-smac.intensifier.abstract_intensifier"]], "smac.intensifier.hyperband": [[55, "module-smac.intensifier.hyperband"]], "smac.intensifier.intensifier": [[56, "module-smac.intensifier.intensifier"]], "smac.intensifier.successive_halving": [[57, "module-smac.intensifier.successive_halving"]], "smac.main": [[58, "module-smac.main"]], "smac.main.config_selector": [[59, "module-smac.main.config_selector"]], "smac.main.smbo": [[60, "module-smac.main.smbo"]], "smac.model": [[61, "module-smac.model"]], "smac.model.abstract_model": [[62, "module-smac.model.abstract_model"]], "smac.model.gaussian_process": [[63, "module-smac.model.gaussian_process"]], "smac.model.gaussian_process.abstract_gaussian_process": [[64, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "smac.model.gaussian_process.gaussian_process": [[65, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[66, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "smac.model.gaussian_process.kernels": [[67, "module-smac.model.gaussian_process.kernels"]], "smac.model.gaussian_process.kernels.base_kernels": [[68, "module-smac.model.gaussian_process.kernels.base_kernels"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[69, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[70, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[71, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[72, "module-smac.model.gaussian_process.kernels.white_kernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[73, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "smac.model.gaussian_process.priors": [[74, "module-smac.model.gaussian_process.priors"]], "smac.model.gaussian_process.priors.abstract_prior": [[75, "module-smac.model.gaussian_process.priors.abstract_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[76, "module-smac.model.gaussian_process.priors.gamma_prior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[77, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[78, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[79, "module-smac.model.gaussian_process.priors.tophat_prior"]], "smac.model.multi_objective_model": [[80, "module-smac.model.multi_objective_model"]], "smac.model.random_forest": [[81, "module-smac.model.random_forest"]], "smac.model.random_forest.abstract_random_forest": [[82, "module-smac.model.random_forest.abstract_random_forest"]], "smac.model.random_forest.random_forest": [[83, "module-smac.model.random_forest.random_forest"]], "smac.model.random_model": [[84, "module-smac.model.random_model"]], "smac.multi_objective": [[85, "module-smac.multi_objective"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[86, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "smac.multi_objective.aggregation_strategy": [[87, "module-smac.multi_objective.aggregation_strategy"]], "smac.multi_objective.parego": [[88, "module-smac.multi_objective.parego"]], "smac.random_design": [[89, "module-smac.random_design"]], "smac.random_design.abstract_random_design": [[90, "module-smac.random_design.abstract_random_design"]], "smac.random_design.annealing_design": [[91, "module-smac.random_design.annealing_design"]], "smac.random_design.modulus_design": [[92, "module-smac.random_design.modulus_design"]], "smac.random_design.probability_design": [[93, "module-smac.random_design.probability_design"]], "smac.runhistory": [[94, "module-smac.runhistory"]], "smac.runhistory.dataclasses": [[95, "module-smac.runhistory.dataclasses"]], "smac.runhistory.encoder": [[96, "module-smac.runhistory.encoder"]], "smac.runhistory.encoder.abstract_encoder": [[97, "module-smac.runhistory.encoder.abstract_encoder"]], "smac.runhistory.encoder.boing_encoder": [[98, "module-smac.runhistory.encoder.boing_encoder"]], "smac.runhistory.encoder.eips_encoder": [[99, "module-smac.runhistory.encoder.eips_encoder"]], "smac.runhistory.encoder.encoder": [[100, "module-smac.runhistory.encoder.encoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[101, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "smac.runhistory.encoder.log_encoder": [[102, "module-smac.runhistory.encoder.log_encoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[103, "module-smac.runhistory.encoder.log_scaled_encoder"]], "smac.runhistory.encoder.scaled_encoder": [[104, "module-smac.runhistory.encoder.scaled_encoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[105, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "smac.runhistory.enumerations": [[106, "module-smac.runhistory.enumerations"]], "smac.runhistory.errors": [[107, "module-smac.runhistory.errors"]], "Exceptions": [[107, "exceptions"], [113, "exceptions"]], "smac.runhistory.runhistory": [[108, "module-smac.runhistory.runhistory"]], "smac.runner": [[109, "module-smac.runner"]], "smac.runner.abstract_runner": [[110, "module-smac.runner.abstract_runner"]], "smac.runner.abstract_serial_runner": [[111, "module-smac.runner.abstract_serial_runner"]], "smac.runner.dask_runner": [[112, "module-smac.runner.dask_runner"]], "smac.runner.exceptions": [[113, "module-smac.runner.exceptions"]], "smac.runner.target_function_runner": [[114, "module-smac.runner.target_function_runner"]], "smac.runner.target_function_script_runner": [[115, "module-smac.runner.target_function_script_runner"]], "smac.scenario": [[116, "module-smac.scenario"]], "smac.utils": [[117, "module-smac.utils"]], "smac.utils.configspace": [[118, "module-smac.utils.configspace"]], "Functions": [[118, "functions"], [119, "functions"], [120, "functions"], [121, "functions"], [122, "functions"]], "smac.utils.data_structures": [[119, "module-smac.utils.data_structures"]], "smac.utils.logging": [[120, "module-smac.utils.logging"]], "smac.utils.multi_objective": [[121, "module-smac.utils.multi_objective"]], "smac.utils.pareto_front": [[122, "module-smac.utils.pareto_front"]], "smac.utils.subspaces": [[123, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[124, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[125, "module-smac.utils.subspaces.turbo_subspace"]], "Quadratic Function": [[126, "quadratic-function"]], "Support Vector Machine with Cross-Validation": [[127, "support-vector-machine-with-cross-validation"]], "Ask-and-Tell": [[128, "ask-and-tell"]], "Custom Callback": [[129, "custom-callback"]], "Continue an Optimization": [[130, "continue-an-optimization"]], "User Priors over the Optimum": [[131, "user-priors-over-the-optimum"]], "Basics": [[132, "basics"], [145, "basics"]], "Computation times": [[133, "computation-times"], [137, "computation-times"], [141, "computation-times"], [144, "computation-times"]], "Multi-Layer Perceptron Using Multiple Epochs": [[134, "multi-layer-perceptron-using-multiple-epochs"]], "Stochastic Gradient Descent On Multiple Datasets": [[135, "stochastic-gradient-descent-on-multiple-datasets"]], "Multi-Fidelity and Multi-Instances": [[136, "multi-fidelity-and-multi-instances"], [145, "multi-fidelity-and-multi-instances"]], "2D Schaffer Function with Objective Weights": [[138, "d-schaffer-function-with-objective-weights"]], "ParEGO": [[139, "parego"]], "Multi-Objective": [[140, "multi-objective"], [145, "multi-objective"]], "Call Target Function From Script": [[142, "call-target-function-from-script"]], "Examples": [[145, "examples"]], "Overview Figure": [[146, "overview-figure"]], "Home": [[147, "home"]], "Contact": [[147, "contact"]]}, "indexentries": {"bb": [[6, "term-BB"]], "bo": [[6, "term-BO"]], "bohb": [[6, "term-BOHB"]], "bayesian optimization": [[6, "term-Bayesian-Optimization"]], "black-box": [[6, "term-Black-Box"]], "budget": [[6, "term-Budget"]], "cli": [[6, "term-CLI"]], "cv": [[6, "term-CV"]], "gp": [[6, "term-GP"]], "gp-mcmc": [[6, "term-GP-MCMC"]], "hb": [[6, "term-HB"]], "hp": [[6, "term-HP"]], "hyperband": [[6, "term-Hyperband"]], "incumbent": [[6, "term-Incumbent"]], "instances": [[6, "term-Instances"]], "intensification": [[6, "term-Intensification"]], "mf": [[6, "term-MF"]], "multi-fidelity": [[6, "term-Multi-Fidelity"]], "multi-objective": [[6, "term-Multi-Objective"]], "objective": [[6, "term-Objective"]], "rf": [[6, "term-RF"]], "roar": [[6, "term-ROAR"]], "random online adaptive racing": [[6, "term-Random-Online-Adaptive-Racing"]], "smac": [[6, "term-SMAC"]], "smbo": [[6, "term-SMBO"]], "target function": [[6, "term-Target-Function"]], "trial": [[6, "term-Trial"]], "module": [[21, "module-smac.acquisition"], [22, "module-smac.acquisition.function"], [23, "module-smac.acquisition.function.abstract_acquisition_function"], [24, "module-smac.acquisition.function.confidence_bound"], [25, "module-smac.acquisition.function.expected_improvement"], [26, "module-smac.acquisition.function.integrated_acquisition_function"], [27, "module-smac.acquisition.function.prior_acqusition_function"], [28, "module-smac.acquisition.function.probability_improvement"], [29, "module-smac.acquisition.function.thompson"], [30, "module-smac.acquisition.maximizer"], [31, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"], [32, "module-smac.acquisition.maximizer.differential_evolution"], [33, "module-smac.acquisition.maximizer.helpers"], [34, "module-smac.acquisition.maximizer.local_and_random_search"], [35, "module-smac.acquisition.maximizer.local_search"], [36, "module-smac.acquisition.maximizer.random_search"], [37, "module-smac.callback"], [38, "module-smac.facade"], [39, "module-smac.facade.abstract_facade"], [40, "module-smac.facade.algorithm_configuration_facade"], [41, "module-smac.facade.blackbox_facade"], [42, "module-smac.facade.hyperband_facade"], [43, "module-smac.facade.hyperparameter_optimization_facade"], [44, "module-smac.facade.multi_fidelity_facade"], [45, "module-smac.facade.random_facade"], [46, "module-smac.initial_design"], [47, "module-smac.initial_design.abstract_initial_design"], [48, "module-smac.initial_design.default_design"], [49, "module-smac.initial_design.factorial_design"], [50, "module-smac.initial_design.latin_hypercube_design"], [51, "module-smac.initial_design.random_design"], [52, "module-smac.initial_design.sobol_design"], [53, "module-smac.intensifier"], [54, "module-smac.intensifier.abstract_intensifier"], [55, "module-smac.intensifier.hyperband"], [56, "module-smac.intensifier.intensifier"], [57, "module-smac.intensifier.successive_halving"], [58, "module-smac.main"], [59, "module-smac.main.config_selector"], [60, "module-smac.main.smbo"], [61, "module-smac.model"], [62, "module-smac.model.abstract_model"], [63, "module-smac.model.gaussian_process"], [64, "module-smac.model.gaussian_process.abstract_gaussian_process"], [65, "module-smac.model.gaussian_process.gaussian_process"], [66, "module-smac.model.gaussian_process.gpytorch_gaussian_process"], [67, "module-smac.model.gaussian_process.kernels"], [68, "module-smac.model.gaussian_process.kernels.base_kernels"], [69, "module-smac.model.gaussian_process.kernels.hamming_kernel"], [70, "module-smac.model.gaussian_process.kernels.matern_kernel"], [71, "module-smac.model.gaussian_process.kernels.rbf_kernel"], [72, "module-smac.model.gaussian_process.kernels.white_kernel"], [73, "module-smac.model.gaussian_process.mcmc_gaussian_process"], [74, "module-smac.model.gaussian_process.priors"], [75, "module-smac.model.gaussian_process.priors.abstract_prior"], [76, "module-smac.model.gaussian_process.priors.gamma_prior"], [77, "module-smac.model.gaussian_process.priors.horseshoe_prior"], [78, "module-smac.model.gaussian_process.priors.log_normal_prior"], [79, "module-smac.model.gaussian_process.priors.tophat_prior"], [80, "module-smac.model.multi_objective_model"], [81, "module-smac.model.random_forest"], [82, "module-smac.model.random_forest.abstract_random_forest"], [83, "module-smac.model.random_forest.random_forest"], [84, "module-smac.model.random_model"], [85, "module-smac.multi_objective"], [86, "module-smac.multi_objective.abstract_multi_objective_algorithm"], [87, "module-smac.multi_objective.aggregation_strategy"], [88, "module-smac.multi_objective.parego"], [89, "module-smac.random_design"], [90, "module-smac.random_design.abstract_random_design"], [91, "module-smac.random_design.annealing_design"], [92, "module-smac.random_design.modulus_design"], [93, "module-smac.random_design.probability_design"], [94, "module-smac.runhistory"], [95, "module-smac.runhistory.dataclasses"], [96, "module-smac.runhistory.encoder"], [97, "module-smac.runhistory.encoder.abstract_encoder"], [98, "module-smac.runhistory.encoder.boing_encoder"], [99, "module-smac.runhistory.encoder.eips_encoder"], [100, "module-smac.runhistory.encoder.encoder"], [101, "module-smac.runhistory.encoder.inverse_scaled_encoder"], [102, "module-smac.runhistory.encoder.log_encoder"], [103, "module-smac.runhistory.encoder.log_scaled_encoder"], [104, "module-smac.runhistory.encoder.scaled_encoder"], [105, "module-smac.runhistory.encoder.sqrt_scaled_encoder"], [106, "module-smac.runhistory.enumerations"], [107, "module-smac.runhistory.errors"], [108, "module-smac.runhistory.runhistory"], [109, "module-smac.runner"], [110, "module-smac.runner.abstract_runner"], [111, "module-smac.runner.abstract_serial_runner"], [112, "module-smac.runner.dask_runner"], [113, "module-smac.runner.exceptions"], [114, "module-smac.runner.target_function_runner"], [115, "module-smac.runner.target_function_script_runner"], [116, "module-smac.scenario"], [117, "module-smac.utils"], [118, "module-smac.utils.configspace"], [119, "module-smac.utils.data_structures"], [120, "module-smac.utils.logging"], [121, "module-smac.utils.multi_objective"], [122, "module-smac.utils.pareto_front"], [123, "module-smac.utils.subspaces"], [124, "module-smac.utils.subspaces.boing_subspace"], [125, "module-smac.utils.subspaces.turbo_subspace"]], "smac.acquisition": [[21, "module-smac.acquisition"]], "abstractacquisitionfunction (class in smac.acquisition.function)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction"]], "ei (class in smac.acquisition.function)": [[22, "smac.acquisition.function.EI"]], "eips (class in smac.acquisition.function)": [[22, "smac.acquisition.function.EIPS"]], "integratedacquisitionfunction (class in smac.acquisition.function)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction"]], "lcb (class in smac.acquisition.function)": [[22, "smac.acquisition.function.LCB"]], "pi (class in smac.acquisition.function)": [[22, "smac.acquisition.function.PI"]], "prioracquisitionfunction (class in smac.acquisition.function)": [[22, "smac.acquisition.function.PriorAcquisitionFunction"]], "ts (class in smac.acquisition.function)": [[22, "smac.acquisition.function.TS"]], "__call__() (smac.acquisition.function.abstractacquisitionfunction method)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.__call__"]], "_acquisition_function (smac.acquisition.function.integratedacquisitionfunction attribute)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction._acquisition_function"]], "_beta (smac.acquisition.function.lcb attribute)": [[22, "smac.acquisition.function.LCB._beta"]], "_eta (smac.acquisition.function.ei attribute)": [[22, "smac.acquisition.function.EI._eta"]], "_eta (smac.acquisition.function.integratedacquisitionfunction attribute)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction._eta"]], "_functions (smac.acquisition.function.integratedacquisitionfunction attribute)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction._functions"]], "_log (smac.acquisition.function.ei attribute)": [[22, "smac.acquisition.function.EI._log"]], "_num_data (smac.acquisition.function.lcb attribute)": [[22, "smac.acquisition.function.LCB._num_data"]], "_xi (smac.acquisition.function.ei attribute)": [[22, "smac.acquisition.function.EI._xi"]], "meta (smac.acquisition.function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.meta"]], "meta (smac.acquisition.function.ei property)": [[22, "smac.acquisition.function.EI.meta"]], "meta (smac.acquisition.function.integratedacquisitionfunction property)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction.meta"]], "meta (smac.acquisition.function.lcb property)": [[22, "smac.acquisition.function.LCB.meta"]], "meta (smac.acquisition.function.pi property)": [[22, "smac.acquisition.function.PI.meta"]], "meta (smac.acquisition.function.prioracquisitionfunction property)": [[22, "smac.acquisition.function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.model"]], "model (smac.acquisition.function.prioracquisitionfunction property)": [[22, "smac.acquisition.function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.name"]], "name (smac.acquisition.function.ei property)": [[22, "smac.acquisition.function.EI.name"]], "name (smac.acquisition.function.eips property)": [[22, "smac.acquisition.function.EIPS.name"]], "name (smac.acquisition.function.integratedacquisitionfunction property)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction.name"]], "name (smac.acquisition.function.lcb property)": [[22, "smac.acquisition.function.LCB.name"]], "name (smac.acquisition.function.pi property)": [[22, "smac.acquisition.function.PI.name"]], "name (smac.acquisition.function.prioracquisitionfunction property)": [[22, "smac.acquisition.function.PriorAcquisitionFunction.name"]], "name (smac.acquisition.function.ts property)": [[22, "smac.acquisition.function.TS.name"]], "smac.acquisition.function": [[22, "module-smac.acquisition.function"]], "update() (smac.acquisition.function.abstractacquisitionfunction method)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.update"]], "abstractacquisitionfunction (class in smac.acquisition.function.abstract_acquisition_function)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction"]], "__call__() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.model"]], "name (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.name"]], "smac.acquisition.function.abstract_acquisition_function": [[23, "module-smac.acquisition.function.abstract_acquisition_function"]], "update() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.update"]], "lcb (class in smac.acquisition.function.confidence_bound)": [[24, "smac.acquisition.function.confidence_bound.LCB"]], "_beta (smac.acquisition.function.confidence_bound.lcb attribute)": [[24, "smac.acquisition.function.confidence_bound.LCB._beta"]], "_num_data (smac.acquisition.function.confidence_bound.lcb attribute)": [[24, "smac.acquisition.function.confidence_bound.LCB._num_data"]], "meta (smac.acquisition.function.confidence_bound.lcb property)": [[24, "smac.acquisition.function.confidence_bound.LCB.meta"]], "name (smac.acquisition.function.confidence_bound.lcb property)": [[24, "smac.acquisition.function.confidence_bound.LCB.name"]], "smac.acquisition.function.confidence_bound": [[24, "module-smac.acquisition.function.confidence_bound"]], "ei (class in smac.acquisition.function.expected_improvement)": [[25, "smac.acquisition.function.expected_improvement.EI"]], "eips (class in smac.acquisition.function.expected_improvement)": [[25, "smac.acquisition.function.expected_improvement.EIPS"]], "_eta (smac.acquisition.function.expected_improvement.ei attribute)": [[25, "smac.acquisition.function.expected_improvement.EI._eta"]], "_log (smac.acquisition.function.expected_improvement.ei attribute)": [[25, "smac.acquisition.function.expected_improvement.EI._log"]], "_xi (smac.acquisition.function.expected_improvement.ei attribute)": [[25, "smac.acquisition.function.expected_improvement.EI._xi"]], "meta (smac.acquisition.function.expected_improvement.ei property)": [[25, "smac.acquisition.function.expected_improvement.EI.meta"]], "name (smac.acquisition.function.expected_improvement.ei property)": [[25, "smac.acquisition.function.expected_improvement.EI.name"]], "name (smac.acquisition.function.expected_improvement.eips property)": [[25, "smac.acquisition.function.expected_improvement.EIPS.name"]], "smac.acquisition.function.expected_improvement": [[25, "module-smac.acquisition.function.expected_improvement"]], "integratedacquisitionfunction (class in smac.acquisition.function.integrated_acquisition_function)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction"]], "_acquisition_function (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._acquisition_function"]], "_eta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._eta"]], "_functions (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._functions"]], "meta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.meta"]], "name (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.name"]], "smac.acquisition.function.integrated_acquisition_function": [[26, "module-smac.acquisition.function.integrated_acquisition_function"]], "prioracquisitionfunction (class in smac.acquisition.function.prior_acqusition_function)": [[27, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction"]], "meta (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[27, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[27, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[27, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.name"]], "smac.acquisition.function.prior_acqusition_function": [[27, "module-smac.acquisition.function.prior_acqusition_function"]], "pi (class in smac.acquisition.function.probability_improvement)": [[28, "smac.acquisition.function.probability_improvement.PI"]], "meta (smac.acquisition.function.probability_improvement.pi property)": [[28, "smac.acquisition.function.probability_improvement.PI.meta"]], "name (smac.acquisition.function.probability_improvement.pi property)": [[28, "smac.acquisition.function.probability_improvement.PI.name"]], "smac.acquisition.function.probability_improvement": [[28, "module-smac.acquisition.function.probability_improvement"]], "ts (class in smac.acquisition.function.thompson)": [[29, "smac.acquisition.function.thompson.TS"]], "name (smac.acquisition.function.thompson.ts property)": [[29, "smac.acquisition.function.thompson.TS.name"]], "smac.acquisition.function.thompson": [[29, "module-smac.acquisition.function.thompson"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer"]], "differentialevolution (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.DifferentialEvolution"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.LocalAndSortedRandomSearch"]], "localsearch (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.LocalSearch"]], "randomsearch (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.RandomSearch"]], "acquisition_function (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[30, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "acquisition_function (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[30, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstractacquisitionmaximizer method)": [[30, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[30, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.meta"]], "meta (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[30, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.meta"]], "meta (smac.acquisition.maximizer.localsearch property)": [[30, "smac.acquisition.maximizer.LocalSearch.meta"]], "smac.acquisition.maximizer": [[30, "module-smac.acquisition.maximizer"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer.abstract_acqusition_maximizer)": [[31, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer"]], "acquisition_function (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[31, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer method)": [[31, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[31, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[31, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "differentialevolution (class in smac.acquisition.maximizer.differential_evolution)": [[32, "smac.acquisition.maximizer.differential_evolution.DifferentialEvolution"]], "smac.acquisition.maximizer.differential_evolution": [[32, "module-smac.acquisition.maximizer.differential_evolution"]], "challengerlist (class in smac.acquisition.maximizer.helpers)": [[33, "smac.acquisition.maximizer.helpers.ChallengerList"]], "smac.acquisition.maximizer.helpers": [[33, "module-smac.acquisition.maximizer.helpers"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[34, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[34, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch"]], "acquisition_function (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[34, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.acquisition_function"]], "meta (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[34, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.meta"]], "smac.acquisition.maximizer.local_and_random_search": [[34, "module-smac.acquisition.maximizer.local_and_random_search"]], "localsearch (class in smac.acquisition.maximizer.local_search)": [[35, "smac.acquisition.maximizer.local_search.LocalSearch"]], "meta (smac.acquisition.maximizer.local_search.localsearch property)": [[35, "smac.acquisition.maximizer.local_search.LocalSearch.meta"]], "smac.acquisition.maximizer.local_search": [[35, "module-smac.acquisition.maximizer.local_search"]], "randomsearch (class in smac.acquisition.maximizer.random_search)": [[36, "smac.acquisition.maximizer.random_search.RandomSearch"]], "smac.acquisition.maximizer.random_search": [[36, "module-smac.acquisition.maximizer.random_search"]], "callback (class in smac.callback)": [[37, "smac.callback.Callback"]], "on_ask_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_start"]], "on_tell_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_tell_start"]], "smac.callback": [[37, "module-smac.callback"]], "abstractfacade (class in smac.facade)": [[38, "smac.facade.AbstractFacade"]], "algorithmconfigurationfacade (class in smac.facade)": [[38, "smac.facade.AlgorithmConfigurationFacade"]], "blackboxfacade (class in smac.facade)": [[38, "smac.facade.BlackBoxFacade"]], "hyperbandfacade (class in smac.facade)": [[38, "smac.facade.HyperbandFacade"]], "hyperparameteroptimizationfacade (class in smac.facade)": [[38, "smac.facade.HyperparameterOptimizationFacade"]], "multifidelityfacade (class in smac.facade)": [[38, "smac.facade.MultiFidelityFacade"]], "randomfacade (class in smac.facade)": [[38, "smac.facade.RandomFacade"]], "ask() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_acquisition_maximizer"]], "get_config_selector() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_config_selector"]], "get_initial_design() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_initial_design"]], "get_initial_design() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_initial_design() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_initial_design"]], "get_initial_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_initial_design() (smac.facade.multifidelityfacade static method)": [[38, "smac.facade.MultiFidelityFacade.get_initial_design"]], "get_initial_design() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_intensifier"]], "get_intensifier() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_intensifier() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperbandfacade static method)": [[38, "smac.facade.HyperbandFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_intensifier() (smac.facade.multifidelityfacade static method)": [[38, "smac.facade.MultiFidelityFacade.get_intensifier"]], "get_intensifier() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_intensifier"]], "get_kernel() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_model"]], "get_model() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_model"]], "get_model() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_model"]], "get_model() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_model"]], "get_model() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_random_design"]], "get_random_design() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_random_design"]], "get_random_design() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_random_design"]], "get_random_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_random_design"]], "get_random_design() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_runhistory_encoder"]], "intensifier (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.intensifier"]], "meta (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.optimize"]], "optimizer (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.optimizer"]], "runhistory (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.scenario"]], "smac.facade": [[38, "module-smac.facade"]], "tell() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.tell"]], "validate() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.validate"]], "abstractfacade (class in smac.facade.abstract_facade)": [[39, "smac.facade.abstract_facade.AbstractFacade"]], "ask() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_maximizer"]], "get_config_selector() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_config_selector"]], "get_initial_design() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_intensifier"]], "get_model() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_runhistory_encoder"]], "intensifier (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.intensifier"]], "meta (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.optimize"]], "optimizer (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.optimizer"]], "runhistory (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.scenario"]], "smac.facade.abstract_facade": [[39, "module-smac.facade.abstract_facade"]], "tell() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.tell"]], "validate() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.validate"]], "algorithmconfigurationfacade (class in smac.facade.algorithm_configuration_facade)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade"]], "get_acquisition_function() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_intensifier() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_model() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "smac.facade.algorithm_configuration_facade": [[40, "module-smac.facade.algorithm_configuration_facade"]], "blackboxfacade (class in smac.facade.blackbox_facade)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade"]], "get_acquisition_function() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_initial_design"]], "get_intensifier() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_intensifier"]], "get_kernel() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[41, "module-smac.facade.blackbox_facade"]], "hyperbandfacade (class in smac.facade.hyperband_facade)": [[42, "smac.facade.hyperband_facade.HyperbandFacade"]], "get_intensifier() (smac.facade.hyperband_facade.hyperbandfacade static method)": [[42, "smac.facade.hyperband_facade.HyperbandFacade.get_intensifier"]], "smac.facade.hyperband_facade": [[42, "module-smac.facade.hyperband_facade"]], "hyperparameteroptimizationfacade (class in smac.facade.hyperparameter_optimization_facade)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade"]], "get_acquisition_function() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_intensifier() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_model() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "smac.facade.hyperparameter_optimization_facade": [[43, "module-smac.facade.hyperparameter_optimization_facade"]], "multifidelityfacade (class in smac.facade.multi_fidelity_facade)": [[44, "smac.facade.multi_fidelity_facade.MultiFidelityFacade"]], "get_initial_design() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[44, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_initial_design"]], "get_intensifier() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[44, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_intensifier"]], "smac.facade.multi_fidelity_facade": [[44, "module-smac.facade.multi_fidelity_facade"]], "randomfacade (class in smac.facade.random_facade)": [[45, "smac.facade.random_facade.RandomFacade"]], "get_acquisition_function() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_intensifier"]], "get_model() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_runhistory_encoder"]], "smac.facade.random_facade": [[45, "module-smac.facade.random_facade"]], "abstractinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.AbstractInitialDesign"]], "defaultinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.DefaultInitialDesign"]], "factorialinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.FactorialInitialDesign"]], "latinhypercubeinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.LatinHypercubeInitialDesign"]], "randominitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.RandomInitialDesign"]], "sobolinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.SobolInitialDesign"]], "meta (smac.initial_design.abstractinitialdesign property)": [[46, "smac.initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstractinitialdesign method)": [[46, "smac.initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design": [[46, "module-smac.initial_design"]], "abstractinitialdesign (class in smac.initial_design.abstract_initial_design)": [[47, "smac.initial_design.abstract_initial_design.AbstractInitialDesign"]], "meta (smac.initial_design.abstract_initial_design.abstractinitialdesign property)": [[47, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstract_initial_design.abstractinitialdesign method)": [[47, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design.abstract_initial_design": [[47, "module-smac.initial_design.abstract_initial_design"]], "defaultinitialdesign (class in smac.initial_design.default_design)": [[48, "smac.initial_design.default_design.DefaultInitialDesign"]], "smac.initial_design.default_design": [[48, "module-smac.initial_design.default_design"]], "factorialinitialdesign (class in smac.initial_design.factorial_design)": [[49, "smac.initial_design.factorial_design.FactorialInitialDesign"]], "smac.initial_design.factorial_design": [[49, "module-smac.initial_design.factorial_design"]], "latinhypercubeinitialdesign (class in smac.initial_design.latin_hypercube_design)": [[50, "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[50, "module-smac.initial_design.latin_hypercube_design"]], "randominitialdesign (class in smac.initial_design.random_design)": [[51, "smac.initial_design.random_design.RandomInitialDesign"]], "smac.initial_design.random_design": [[51, "module-smac.initial_design.random_design"]], "sobolinitialdesign (class in smac.initial_design.sobol_design)": [[52, "smac.initial_design.sobol_design.SobolInitialDesign"]], "smac.initial_design.sobol_design": [[52, "module-smac.initial_design.sobol_design"]], "abstractintensifier (class in smac.intensifier)": [[53, "smac.intensifier.AbstractIntensifier"]], "hyperband (class in smac.intensifier)": [[53, "smac.intensifier.Hyperband"]], "intensifier (class in smac.intensifier)": [[53, "smac.intensifier.Intensifier"]], "successivehalving (class in smac.intensifier)": [[53, "smac.intensifier.SuccessiveHalving"]], "__iter__() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.__iter__"]], "__iter__() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.__iter__"]], "__post_init__() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.__post_init__"]], "__post_init__() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.__post_init__"]], "config_generator (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.config_generator"]], "config_selector (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.config_selector"]], "get_callback() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_callback"]], "get_incumbent() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_incumbent"]], "get_incumbent_instance_seed_budget_key_differences() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_key_differences"]], "get_incumbent_instance_seed_budget_keys() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_keys"]], "get_incumbents() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_incumbents"]], "get_instance_seed_budget_keys() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_instance_seed_budget_keys"]], "get_instance_seed_budget_keys() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.get_instance_seed_budget_keys"]], "get_instance_seed_keys_of_interest() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_instance_seed_keys_of_interest"]], "get_rejected_configs() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_rejected_configs"]], "get_state() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_state"]], "get_state() (smac.intensifier.hyperband method)": [[53, "smac.intensifier.Hyperband.get_state"]], "get_state() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.get_state"]], "get_state() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.get_state"]], "get_trials_of_interest() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_trials_of_interest"]], "get_trials_of_interest() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.get_trials_of_interest"]], "incumbents_changed (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.incumbents_changed"]], "load() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.load"]], "meta (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.meta"]], "meta (smac.intensifier.successivehalving property)": [[53, "smac.intensifier.SuccessiveHalving.meta"]], "reset() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.reset"]], "reset() (smac.intensifier.hyperband method)": [[53, "smac.intensifier.Hyperband.reset"]], "reset() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.reset"]], "reset() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.reset"]], "runhistory (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.runhistory"]], "save() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.save"]], "set_state() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.set_state"]], "set_state() (smac.intensifier.hyperband method)": [[53, "smac.intensifier.Hyperband.set_state"]], "set_state() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.set_state"]], "set_state() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.set_state"]], "smac.intensifier": [[53, "module-smac.intensifier"]], "trajectory (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.trajectory"]], "update_incumbents() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.update_incumbents"]], "used_walltime (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.used_walltime"]], "uses_budgets (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.uses_budgets"]], "uses_budgets (smac.intensifier.intensifier property)": [[53, "smac.intensifier.Intensifier.uses_budgets"]], "uses_budgets (smac.intensifier.successivehalving property)": [[53, "smac.intensifier.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.uses_instances"]], "uses_instances (smac.intensifier.intensifier property)": [[53, "smac.intensifier.Intensifier.uses_instances"]], "uses_instances (smac.intensifier.successivehalving property)": [[53, "smac.intensifier.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.intensifier property)": [[53, "smac.intensifier.Intensifier.uses_seeds"]], "uses_seeds (smac.intensifier.successivehalving property)": [[53, "smac.intensifier.SuccessiveHalving.uses_seeds"]], "abstractintensifier (class in smac.intensifier.abstract_intensifier)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier"]], "__iter__() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.__iter__"]], "__post_init__() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.__post_init__"]], "config_generator (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.config_generator"]], "config_selector (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.config_selector"]], "get_callback() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_callback"]], "get_incumbent() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent"]], "get_incumbent_instance_seed_budget_key_differences() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_key_differences"]], "get_incumbent_instance_seed_budget_keys() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_keys"]], "get_incumbents() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbents"]], "get_instance_seed_budget_keys() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_instance_seed_budget_keys"]], "get_instance_seed_keys_of_interest() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_instance_seed_keys_of_interest"]], "get_rejected_configs() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_rejected_configs"]], "get_state() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_state"]], "get_trials_of_interest() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_trials_of_interest"]], "incumbents_changed (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.incumbents_changed"]], "load() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.load"]], "meta (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.meta"]], "reset() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.reset"]], "runhistory (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.runhistory"]], "save() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.save"]], "set_state() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.set_state"]], "smac.intensifier.abstract_intensifier": [[54, "module-smac.intensifier.abstract_intensifier"]], "trajectory (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.trajectory"]], "update_incumbents() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.update_incumbents"]], "used_walltime (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.used_walltime"]], "uses_budgets (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_budgets"]], "uses_instances (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_instances"]], "uses_seeds (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_seeds"]], "hyperband (class in smac.intensifier.hyperband)": [[55, "smac.intensifier.hyperband.Hyperband"]], "get_state() (smac.intensifier.hyperband.hyperband method)": [[55, "smac.intensifier.hyperband.Hyperband.get_state"]], "reset() (smac.intensifier.hyperband.hyperband method)": [[55, "smac.intensifier.hyperband.Hyperband.reset"]], "set_state() (smac.intensifier.hyperband.hyperband method)": [[55, "smac.intensifier.hyperband.Hyperband.set_state"]], "smac.intensifier.hyperband": [[55, "module-smac.intensifier.hyperband"]], "intensifier (class in smac.intensifier.intensifier)": [[56, "smac.intensifier.intensifier.Intensifier"]], "__iter__() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.__iter__"]], "get_state() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.get_state"]], "reset() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.reset"]], "set_state() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.set_state"]], "smac.intensifier.intensifier": [[56, "module-smac.intensifier.intensifier"]], "uses_budgets (smac.intensifier.intensifier.intensifier property)": [[56, "smac.intensifier.intensifier.Intensifier.uses_budgets"]], "uses_instances (smac.intensifier.intensifier.intensifier property)": [[56, "smac.intensifier.intensifier.Intensifier.uses_instances"]], "uses_seeds (smac.intensifier.intensifier.intensifier property)": [[56, "smac.intensifier.intensifier.Intensifier.uses_seeds"]], "successivehalving (class in smac.intensifier.successive_halving)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving"]], "__post_init__() (smac.intensifier.successive_halving.successivehalving method)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.__post_init__"]], "get_instance_seed_budget_keys() (smac.intensifier.successive_halving.successivehalving method)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.get_instance_seed_budget_keys"]], "get_state() (smac.intensifier.successive_halving.successivehalving method)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.get_state"]], "get_trials_of_interest() (smac.intensifier.successive_halving.successivehalving method)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.get_trials_of_interest"]], "meta (smac.intensifier.successive_halving.successivehalving property)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.meta"]], "reset() (smac.intensifier.successive_halving.successivehalving method)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.reset"]], "set_state() (smac.intensifier.successive_halving.successivehalving method)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.set_state"]], "smac.intensifier.successive_halving": [[57, "module-smac.intensifier.successive_halving"]], "uses_budgets (smac.intensifier.successive_halving.successivehalving property)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving.successivehalving property)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.successive_halving.successivehalving property)": [[57, "smac.intensifier.successive_halving.SuccessiveHalving.uses_seeds"]], "smac.main": [[58, "module-smac.main"]], "configselector (class in smac.main.config_selector)": [[59, "smac.main.config_selector.ConfigSelector"]], "__iter__() (smac.main.config_selector.configselector method)": [[59, "smac.main.config_selector.ConfigSelector.__iter__"]], "meta (smac.main.config_selector.configselector property)": [[59, "smac.main.config_selector.ConfigSelector.meta"]], "smac.main.config_selector": [[59, "module-smac.main.config_selector"]], "smbo (class in smac.main.smbo)": [[60, "smac.main.smbo.SMBO"]], "ask() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.ask"]], "budget_exhausted (smac.main.smbo.smbo property)": [[60, "smac.main.smbo.SMBO.budget_exhausted"]], "exists() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.exists"]], "intensifier (smac.main.smbo.smbo property)": [[60, "smac.main.smbo.SMBO.intensifier"]], "load() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.load"]], "optimize() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.optimize"]], "print_stats() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.print_stats"]], "remaining_cputime (smac.main.smbo.smbo property)": [[60, "smac.main.smbo.SMBO.remaining_cputime"]], "remaining_trials (smac.main.smbo.smbo property)": [[60, "smac.main.smbo.SMBO.remaining_trials"]], "remaining_walltime (smac.main.smbo.smbo property)": [[60, "smac.main.smbo.SMBO.remaining_walltime"]], "reset() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.reset"]], "runhistory (smac.main.smbo.smbo property)": [[60, "smac.main.smbo.SMBO.runhistory"]], "save() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.save"]], "smac.main.smbo": [[60, "module-smac.main.smbo"]], "tell() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.tell"]], "update_acquisition_function() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.update_acquisition_function"]], "update_model() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.update_model"]], "used_target_function_walltime (smac.main.smbo.smbo property)": [[60, "smac.main.smbo.SMBO.used_target_function_walltime"]], "used_walltime (smac.main.smbo.smbo property)": [[60, "smac.main.smbo.SMBO.used_walltime"]], "validate() (smac.main.smbo.smbo method)": [[60, "smac.main.smbo.SMBO.validate"]], "abstractmodel (class in smac.model)": [[61, "smac.model.AbstractModel"]], "multiobjectivemodel (class in smac.model)": [[61, "smac.model.MultiObjectiveModel"]], "randommodel (class in smac.model)": [[61, "smac.model.RandomModel"]], "meta (smac.model.abstractmodel property)": [[61, "smac.model.AbstractModel.meta"]], "models (smac.model.multiobjectivemodel property)": [[61, "smac.model.MultiObjectiveModel.models"]], "predict() (smac.model.abstractmodel method)": [[61, "smac.model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstractmodel method)": [[61, "smac.model.AbstractModel.predict_marginalized"]], "predict_marginalized() (smac.model.multiobjectivemodel method)": [[61, "smac.model.MultiObjectiveModel.predict_marginalized"]], "smac.model": [[61, "module-smac.model"]], "train() (smac.model.abstractmodel method)": [[61, "smac.model.AbstractModel.train"]], "abstractmodel (class in smac.model.abstract_model)": [[62, "smac.model.abstract_model.AbstractModel"]], "meta (smac.model.abstract_model.abstractmodel property)": [[62, "smac.model.abstract_model.AbstractModel.meta"]], "predict() (smac.model.abstract_model.abstractmodel method)": [[62, "smac.model.abstract_model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstract_model.abstractmodel method)": [[62, "smac.model.abstract_model.AbstractModel.predict_marginalized"]], "smac.model.abstract_model": [[62, "module-smac.model.abstract_model"]], "train() (smac.model.abstract_model.abstractmodel method)": [[62, "smac.model.abstract_model.AbstractModel.train"]], "abstractgaussianprocess (class in smac.model.gaussian_process)": [[63, "smac.model.gaussian_process.AbstractGaussianProcess"]], "gaussianprocess (class in smac.model.gaussian_process)": [[63, "smac.model.gaussian_process.GaussianProcess"]], "mcmcgaussianprocess (class in smac.model.gaussian_process)": [[63, "smac.model.gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.abstractgaussianprocess property)": [[63, "smac.model.gaussian_process.AbstractGaussianProcess.meta"]], "meta (smac.model.gaussian_process.gaussianprocess property)": [[63, "smac.model.gaussian_process.GaussianProcess.meta"]], "meta (smac.model.gaussian_process.mcmcgaussianprocess property)": [[63, "smac.model.gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmcgaussianprocess property)": [[63, "smac.model.gaussian_process.MCMCGaussianProcess.models"]], "sample_functions() (smac.model.gaussian_process.gaussianprocess method)": [[63, "smac.model.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process": [[63, "module-smac.model.gaussian_process"]], "abstractgaussianprocess (class in smac.model.gaussian_process.abstract_gaussian_process)": [[64, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess"]], "meta (smac.model.gaussian_process.abstract_gaussian_process.abstractgaussianprocess property)": [[64, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess.meta"]], "smac.model.gaussian_process.abstract_gaussian_process": [[64, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "gaussianprocess (class in smac.model.gaussian_process.gaussian_process)": [[65, "smac.model.gaussian_process.gaussian_process.GaussianProcess"]], "meta (smac.model.gaussian_process.gaussian_process.gaussianprocess property)": [[65, "smac.model.gaussian_process.gaussian_process.GaussianProcess.meta"]], "sample_functions() (smac.model.gaussian_process.gaussian_process.gaussianprocess method)": [[65, "smac.model.gaussian_process.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[65, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[66, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "abstractkernel (class in smac.model.gaussian_process.kernels)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels)": [[67, "smac.model.gaussian_process.kernels.ConstantKernel"]], "hammingkernel (class in smac.model.gaussian_process.kernels)": [[67, "smac.model.gaussian_process.kernels.HammingKernel"]], "maternkernel (class in smac.model.gaussian_process.kernels)": [[67, "smac.model.gaussian_process.kernels.MaternKernel"]], "productkernel (class in smac.model.gaussian_process.kernels)": [[67, "smac.model.gaussian_process.kernels.ProductKernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels)": [[67, "smac.model.gaussian_process.kernels.RBFKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels)": [[67, "smac.model.gaussian_process.kernels.SumKernel"]], "whitekernel (class in smac.model.gaussian_process.kernels)": [[67, "smac.model.gaussian_process.kernels.WhiteKernel"]], "__call__() (smac.model.gaussian_process.kernels.abstractkernel method)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.constantkernel method)": [[67, "smac.model.gaussian_process.kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.productkernel method)": [[67, "smac.model.gaussian_process.kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.sumkernel method)": [[67, "smac.model.gaussian_process.kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.abstractkernel method)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel.has_conditions"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hammingkernel property)": [[67, "smac.model.gaussian_process.kernels.HammingKernel.hyperparameter_length_scale"]], "hyperparameters (smac.model.gaussian_process.kernels.abstractkernel property)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.abstractkernel property)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel.meta"]], "meta (smac.model.gaussian_process.kernels.hammingkernel property)": [[67, "smac.model.gaussian_process.kernels.HammingKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.abstractkernel property)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[67, "smac.model.gaussian_process.kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels": [[67, "module-smac.model.gaussian_process.kernels"]], "abstractkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[68, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel"]], "productkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[68, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[68, "smac.model.gaussian_process.kernels.base_kernels.SumKernel"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.constantkernel method)": [[68, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.productkernel method)": [[68, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.sumkernel method)": [[68, "smac.model.gaussian_process.kernels.base_kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.has_conditions"]], "hyperparameters (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[68, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels.base_kernels": [[68, "module-smac.model.gaussian_process.kernels.base_kernels"]], "hammingkernel (class in smac.model.gaussian_process.kernels.hamming_kernel)": [[69, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[69, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.hyperparameter_length_scale"]], "meta (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[69, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[69, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "maternkernel (class in smac.model.gaussian_process.kernels.matern_kernel)": [[70, "smac.model.gaussian_process.kernels.matern_kernel.MaternKernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[70, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels.rbf_kernel)": [[71, "smac.model.gaussian_process.kernels.rbf_kernel.RBFKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[71, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "whitekernel (class in smac.model.gaussian_process.kernels.white_kernel)": [[72, "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[72, "module-smac.model.gaussian_process.kernels.white_kernel"]], "mcmcgaussianprocess (class in smac.model.gaussian_process.mcmc_gaussian_process)": [[73, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[73, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[73, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.models"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[73, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "gammaprior (class in smac.model.gaussian_process.priors)": [[74, "smac.model.gaussian_process.priors.GammaPrior"]], "horseshoeprior (class in smac.model.gaussian_process.priors)": [[74, "smac.model.gaussian_process.priors.HorseshoePrior"]], "lognormalprior (class in smac.model.gaussian_process.priors)": [[74, "smac.model.gaussian_process.priors.LogNormalPrior"]], "softtophatprior (class in smac.model.gaussian_process.priors)": [[74, "smac.model.gaussian_process.priors.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors)": [[74, "smac.model.gaussian_process.priors.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.softtophatprior method)": [[74, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophatprior method)": [[74, "smac.model.gaussian_process.priors.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.softtophatprior method)": [[74, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.gammaprior property)": [[74, "smac.model.gaussian_process.priors.GammaPrior.meta"]], "meta (smac.model.gaussian_process.priors.horseshoeprior property)": [[74, "smac.model.gaussian_process.priors.HorseshoePrior.meta"]], "meta (smac.model.gaussian_process.priors.lognormalprior property)": [[74, "smac.model.gaussian_process.priors.LogNormalPrior.meta"]], "meta (smac.model.gaussian_process.priors.softtophatprior property)": [[74, "smac.model.gaussian_process.priors.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophatprior property)": [[74, "smac.model.gaussian_process.priors.TophatPrior.meta"]], "smac.model.gaussian_process.priors": [[74, "module-smac.model.gaussian_process.priors"]], "abstractprior (class in smac.model.gaussian_process.priors.abstract_prior)": [[75, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior"]], "get_gradient() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[75, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[75, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.abstract_prior.abstractprior property)": [[75, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.meta"]], "sample_from_prior() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[75, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.sample_from_prior"]], "smac.model.gaussian_process.priors.abstract_prior": [[75, "module-smac.model.gaussian_process.priors.abstract_prior"]], "gammaprior (class in smac.model.gaussian_process.priors.gamma_prior)": [[76, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior"]], "meta (smac.model.gaussian_process.priors.gamma_prior.gammaprior property)": [[76, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior.meta"]], "smac.model.gaussian_process.priors.gamma_prior": [[76, "module-smac.model.gaussian_process.priors.gamma_prior"]], "horseshoeprior (class in smac.model.gaussian_process.priors.horseshoe_prior)": [[77, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior"]], "meta (smac.model.gaussian_process.priors.horseshoe_prior.horseshoeprior property)": [[77, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior.meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[77, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "lognormalprior (class in smac.model.gaussian_process.priors.log_normal_prior)": [[78, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior"]], "meta (smac.model.gaussian_process.priors.log_normal_prior.lognormalprior property)": [[78, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior.meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[78, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "softtophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[79, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[79, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[79, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.tophatprior method)": [[79, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[79, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.tophat_prior.softtophatprior property)": [[79, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophat_prior.tophatprior property)": [[79, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[79, "module-smac.model.gaussian_process.priors.tophat_prior"]], "multiobjectivemodel (class in smac.model.multi_objective_model)": [[80, "smac.model.multi_objective_model.MultiObjectiveModel"]], "models (smac.model.multi_objective_model.multiobjectivemodel property)": [[80, "smac.model.multi_objective_model.MultiObjectiveModel.models"]], "predict_marginalized() (smac.model.multi_objective_model.multiobjectivemodel method)": [[80, "smac.model.multi_objective_model.MultiObjectiveModel.predict_marginalized"]], "smac.model.multi_objective_model": [[80, "module-smac.model.multi_objective_model"]], "abstractrandomforest (class in smac.model.random_forest)": [[81, "smac.model.random_forest.AbstractRandomForest"]], "randomforest (class in smac.model.random_forest)": [[81, "smac.model.random_forest.RandomForest"]], "meta (smac.model.random_forest.randomforest property)": [[81, "smac.model.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.randomforest method)": [[81, "smac.model.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest": [[81, "module-smac.model.random_forest"]], "abstractrandomforest (class in smac.model.random_forest.abstract_random_forest)": [[82, "smac.model.random_forest.abstract_random_forest.AbstractRandomForest"]], "smac.model.random_forest.abstract_random_forest": [[82, "module-smac.model.random_forest.abstract_random_forest"]], "randomforest (class in smac.model.random_forest.random_forest)": [[83, "smac.model.random_forest.random_forest.RandomForest"]], "meta (smac.model.random_forest.random_forest.randomforest property)": [[83, "smac.model.random_forest.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.random_forest.randomforest method)": [[83, "smac.model.random_forest.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest.random_forest": [[83, "module-smac.model.random_forest.random_forest"]], "randommodel (class in smac.model.random_model)": [[84, "smac.model.random_model.RandomModel"]], "smac.model.random_model": [[84, "module-smac.model.random_model"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective)": [[85, "smac.multi_objective.AbstractMultiObjectiveAlgorithm"]], "meanaggregationstrategy (class in smac.multi_objective)": [[85, "smac.multi_objective.MeanAggregationStrategy"]], "parego (class in smac.multi_objective)": [[85, "smac.multi_objective.ParEGO"]], "__call__() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[85, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.__call__"]], "__call__() (smac.multi_objective.meanaggregationstrategy method)": [[85, "smac.multi_objective.MeanAggregationStrategy.__call__"]], "__call__() (smac.multi_objective.parego method)": [[85, "smac.multi_objective.ParEGO.__call__"]], "meta (smac.multi_objective.abstractmultiobjectivealgorithm property)": [[85, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.meta"]], "meta (smac.multi_objective.meanaggregationstrategy property)": [[85, "smac.multi_objective.MeanAggregationStrategy.meta"]], "meta (smac.multi_objective.parego property)": [[85, "smac.multi_objective.ParEGO.meta"]], "smac.multi_objective": [[85, "module-smac.multi_objective"]], "update_on_iteration_start() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[85, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "update_on_iteration_start() (smac.multi_objective.parego method)": [[85, "smac.multi_objective.ParEGO.update_on_iteration_start"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective.abstract_multi_objective_algorithm)": [[86, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm"]], "__call__() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[86, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.__call__"]], "meta (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm property)": [[86, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[86, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "update_on_iteration_start() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[86, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "meanaggregationstrategy (class in smac.multi_objective.aggregation_strategy)": [[87, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy"]], "__call__() (smac.multi_objective.aggregation_strategy.meanaggregationstrategy method)": [[87, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.__call__"]], "meta (smac.multi_objective.aggregation_strategy.meanaggregationstrategy property)": [[87, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.meta"]], "smac.multi_objective.aggregation_strategy": [[87, "module-smac.multi_objective.aggregation_strategy"]], "parego (class in smac.multi_objective.parego)": [[88, "smac.multi_objective.parego.ParEGO"]], "__call__() (smac.multi_objective.parego.parego method)": [[88, "smac.multi_objective.parego.ParEGO.__call__"]], "meta (smac.multi_objective.parego.parego property)": [[88, "smac.multi_objective.parego.ParEGO.meta"]], "smac.multi_objective.parego": [[88, "module-smac.multi_objective.parego"]], "update_on_iteration_start() (smac.multi_objective.parego.parego method)": [[88, "smac.multi_objective.parego.ParEGO.update_on_iteration_start"]], "abstractrandomdesign (class in smac.random_design)": [[89, "smac.random_design.AbstractRandomDesign"]], "cosineannealingrandomdesign (class in smac.random_design)": [[89, "smac.random_design.CosineAnnealingRandomDesign"]], "dynamicmodulusrandomdesign (class in smac.random_design)": [[89, "smac.random_design.DynamicModulusRandomDesign"]], "dynamicprobabilityrandomdesign (class in smac.random_design)": [[89, "smac.random_design.DynamicProbabilityRandomDesign"]], "modulusrandomdesign (class in smac.random_design)": [[89, "smac.random_design.ModulusRandomDesign"]], "probabilityrandomdesign (class in smac.random_design)": [[89, "smac.random_design.ProbabilityRandomDesign"]], "check() (smac.random_design.abstractrandomdesign method)": [[89, "smac.random_design.AbstractRandomDesign.check"]], "check() (smac.random_design.cosineannealingrandomdesign method)": [[89, "smac.random_design.CosineAnnealingRandomDesign.check"]], "check() (smac.random_design.dynamicmodulusrandomdesign method)": [[89, "smac.random_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.dynamicprobabilityrandomdesign method)": [[89, "smac.random_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.modulusrandomdesign method)": [[89, "smac.random_design.ModulusRandomDesign.check"]], "check() (smac.random_design.probabilityrandomdesign method)": [[89, "smac.random_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.abstractrandomdesign property)": [[89, "smac.random_design.AbstractRandomDesign.meta"]], "meta (smac.random_design.cosineannealingrandomdesign property)": [[89, "smac.random_design.CosineAnnealingRandomDesign.meta"]], "meta (smac.random_design.dynamicmodulusrandomdesign property)": [[89, "smac.random_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.dynamicprobabilityrandomdesign property)": [[89, "smac.random_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.modulusrandomdesign property)": [[89, "smac.random_design.ModulusRandomDesign.meta"]], "meta (smac.random_design.probabilityrandomdesign property)": [[89, "smac.random_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.abstractrandomdesign method)": [[89, "smac.random_design.AbstractRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.cosineannealingrandomdesign method)": [[89, "smac.random_design.CosineAnnealingRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicmodulusrandomdesign method)": [[89, "smac.random_design.DynamicModulusRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicprobabilityrandomdesign method)": [[89, "smac.random_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design": [[89, "module-smac.random_design"]], "abstractrandomdesign (class in smac.random_design.abstract_random_design)": [[90, "smac.random_design.abstract_random_design.AbstractRandomDesign"]], "check() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[90, "smac.random_design.abstract_random_design.AbstractRandomDesign.check"]], "meta (smac.random_design.abstract_random_design.abstractrandomdesign property)": [[90, "smac.random_design.abstract_random_design.AbstractRandomDesign.meta"]], "next_iteration() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[90, "smac.random_design.abstract_random_design.AbstractRandomDesign.next_iteration"]], "smac.random_design.abstract_random_design": [[90, "module-smac.random_design.abstract_random_design"]], "cosineannealingrandomdesign (class in smac.random_design.annealing_design)": [[91, "smac.random_design.annealing_design.CosineAnnealingRandomDesign"]], "check() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[91, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.check"]], "meta (smac.random_design.annealing_design.cosineannealingrandomdesign property)": [[91, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.meta"]], "next_iteration() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[91, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.next_iteration"]], "smac.random_design.annealing_design": [[91, "module-smac.random_design.annealing_design"]], "dynamicmodulusrandomdesign (class in smac.random_design.modulus_design)": [[92, "smac.random_design.modulus_design.DynamicModulusRandomDesign"]], "modulusrandomdesign (class in smac.random_design.modulus_design)": [[92, "smac.random_design.modulus_design.ModulusRandomDesign"]], "check() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[92, "smac.random_design.modulus_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.modulus_design.modulusrandomdesign method)": [[92, "smac.random_design.modulus_design.ModulusRandomDesign.check"]], "meta (smac.random_design.modulus_design.dynamicmodulusrandomdesign property)": [[92, "smac.random_design.modulus_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.modulus_design.modulusrandomdesign property)": [[92, "smac.random_design.modulus_design.ModulusRandomDesign.meta"]], "next_iteration() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[92, "smac.random_design.modulus_design.DynamicModulusRandomDesign.next_iteration"]], "smac.random_design.modulus_design": [[92, "module-smac.random_design.modulus_design"]], "dynamicprobabilityrandomdesign (class in smac.random_design.probability_design)": [[93, "smac.random_design.probability_design.DynamicProbabilityRandomDesign"]], "probabilityrandomdesign (class in smac.random_design.probability_design)": [[93, "smac.random_design.probability_design.ProbabilityRandomDesign"]], "check() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[93, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.probability_design.probabilityrandomdesign method)": [[93, "smac.random_design.probability_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.probability_design.dynamicprobabilityrandomdesign property)": [[93, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.probability_design.probabilityrandomdesign property)": [[93, "smac.random_design.probability_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[93, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design.probability_design": [[93, "module-smac.random_design.probability_design"]], "instanceseedbudgetkey (class in smac.runhistory)": [[94, "smac.runhistory.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory)": [[94, "smac.runhistory.InstanceSeedKey"]], "runhistory (class in smac.runhistory)": [[94, "smac.runhistory.RunHistory"]], "statustype (class in smac.runhistory)": [[94, "smac.runhistory.StatusType"]], "trialinfo (class in smac.runhistory)": [[94, "smac.runhistory.TrialInfo"]], "trialkey (class in smac.runhistory)": [[94, "smac.runhistory.TrialKey"]], "trialvalue (class in smac.runhistory)": [[94, "smac.runhistory.TrialValue"]], "__contains__() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.add"]], "add_running_trial() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.add_running_trial"]], "add_trial() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.add_trial"]], "average_cost() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory property)": [[94, "smac.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.empty"]], "finished (smac.runhistory.runhistory property)": [[94, "smac.runhistory.RunHistory.finished"]], "get_config() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_config"]], "get_config_id() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_config_id"]], "get_configs() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_cost"]], "get_instance_seed_budget_key() (smac.runhistory.trialinfo method)": [[94, "smac.runhistory.TrialInfo.get_instance_seed_budget_key"]], "get_instance_seed_budget_keys() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_instance_seed_budget_keys"]], "get_instance_seed_key() (smac.runhistory.instanceseedbudgetkey method)": [[94, "smac.runhistory.InstanceSeedBudgetKey.get_instance_seed_key"]], "get_instance_seed_key() (smac.runhistory.trialinfo method)": [[94, "smac.runhistory.TrialInfo.get_instance_seed_key"]], "get_min_cost() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_min_cost"]], "get_running_configs() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_running_configs"]], "get_running_trials() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_running_trials"]], "get_trials() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory property)": [[94, "smac.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.incremental_update_cost"]], "load() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.load"]], "min_cost() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory property)": [[94, "smac.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory property)": [[94, "smac.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.reset"]], "running (smac.runhistory.runhistory property)": [[94, "smac.runhistory.RunHistory.running"]], "save() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.save"]], "smac.runhistory": [[94, "module-smac.runhistory"]], "submitted (smac.runhistory.runhistory property)": [[94, "smac.runhistory.RunHistory.submitted"]], "sum_cost() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory method)": [[94, "smac.runhistory.RunHistory.update_from_json"]], "instanceseedbudgetkey (class in smac.runhistory.dataclasses)": [[95, "smac.runhistory.dataclasses.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory.dataclasses)": [[95, "smac.runhistory.dataclasses.InstanceSeedKey"]], "trajectoryitem (class in smac.runhistory.dataclasses)": [[95, "smac.runhistory.dataclasses.TrajectoryItem"]], "trialinfo (class in smac.runhistory.dataclasses)": [[95, "smac.runhistory.dataclasses.TrialInfo"]], "trialkey (class in smac.runhistory.dataclasses)": [[95, "smac.runhistory.dataclasses.TrialKey"]], "trialvalue (class in smac.runhistory.dataclasses)": [[95, "smac.runhistory.dataclasses.TrialValue"]], "get_instance_seed_budget_key() (smac.runhistory.dataclasses.trialinfo method)": [[95, "smac.runhistory.dataclasses.TrialInfo.get_instance_seed_budget_key"]], "get_instance_seed_key() (smac.runhistory.dataclasses.instanceseedbudgetkey method)": [[95, "smac.runhistory.dataclasses.InstanceSeedBudgetKey.get_instance_seed_key"]], "get_instance_seed_key() (smac.runhistory.dataclasses.trialinfo method)": [[95, "smac.runhistory.dataclasses.TrialInfo.get_instance_seed_key"]], "smac.runhistory.dataclasses": [[95, "module-smac.runhistory.dataclasses"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder)": [[96, "smac.runhistory.encoder.AbstractRunHistoryEncoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder)": [[96, "smac.runhistory.encoder.RunHistoryEIPSEncoder"]], "runhistoryencoder (class in smac.runhistory.encoder)": [[96, "smac.runhistory.encoder.RunHistoryEncoder"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder)": [[96, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder"]], "runhistorylogencoder (class in smac.runhistory.encoder)": [[96, "smac.runhistory.encoder.RunHistoryLogEncoder"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder)": [[96, "smac.runhistory.encoder.RunHistoryLogScaledEncoder"]], "runhistoryscaledencoder (class in smac.runhistory.encoder)": [[96, "smac.runhistory.encoder.RunHistoryScaledEncoder"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder)": [[96, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder"]], "get_configurations() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[96, "smac.runhistory.encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[96, "smac.runhistory.encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[96, "smac.runhistory.encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "runhistory (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[96, "smac.runhistory.encoder.AbstractRunHistoryEncoder.runhistory"]], "smac.runhistory.encoder": [[96, "module-smac.runhistory.encoder"]], "transform() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[96, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[96, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryeipsencoder method)": [[96, "smac.runhistory.encoder.RunHistoryEIPSEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryencoder method)": [[96, "smac.runhistory.encoder.RunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryinversescaledencoder method)": [[96, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogencoder method)": [[96, "smac.runhistory.encoder.RunHistoryLogEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogscaledencoder method)": [[96, "smac.runhistory.encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryscaledencoder method)": [[96, "smac.runhistory.encoder.RunHistoryScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorysqrtscaledencoder method)": [[96, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder.abstract_encoder)": [[97, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder"]], "get_configurations() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[97, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[97, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[97, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "runhistory (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[97, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.runhistory"]], "smac.runhistory.encoder.abstract_encoder": [[97, "module-smac.runhistory.encoder.abstract_encoder"]], "transform() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[97, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[97, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[98, "module-smac.runhistory.encoder.boing_encoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder.eips_encoder)": [[99, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder": [[99, "module-smac.runhistory.encoder.eips_encoder"]], "transform_response_values() (smac.runhistory.encoder.eips_encoder.runhistoryeipsencoder method)": [[99, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder.transform_response_values"]], "runhistoryencoder (class in smac.runhistory.encoder.encoder)": [[100, "smac.runhistory.encoder.encoder.RunHistoryEncoder"]], "smac.runhistory.encoder.encoder": [[100, "module-smac.runhistory.encoder.encoder"]], "transform_response_values() (smac.runhistory.encoder.encoder.runhistoryencoder method)": [[100, "smac.runhistory.encoder.encoder.RunHistoryEncoder.transform_response_values"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder.inverse_scaled_encoder)": [[101, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[101, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.inverse_scaled_encoder.runhistoryinversescaledencoder method)": [[101, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "runhistorylogencoder (class in smac.runhistory.encoder.log_encoder)": [[102, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder": [[102, "module-smac.runhistory.encoder.log_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_encoder.runhistorylogencoder method)": [[102, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder.transform_response_values"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder.log_scaled_encoder)": [[103, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[103, "module-smac.runhistory.encoder.log_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_scaled_encoder.runhistorylogscaledencoder method)": [[103, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "runhistoryscaledencoder (class in smac.runhistory.encoder.scaled_encoder)": [[104, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder": [[104, "module-smac.runhistory.encoder.scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.scaled_encoder.runhistoryscaledencoder method)": [[104, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder.transform_response_values"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder.sqrt_scaled_encoder)": [[105, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[105, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.sqrt_scaled_encoder.runhistorysqrtscaledencoder method)": [[105, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "statustype (class in smac.runhistory.enumerations)": [[106, "smac.runhistory.enumerations.StatusType"]], "smac.runhistory.enumerations": [[106, "module-smac.runhistory.enumerations"]], "notevaluatederror": [[107, "smac.runhistory.errors.NotEvaluatedError"]], "smac.runhistory.errors": [[107, "module-smac.runhistory.errors"]], "runhistory (class in smac.runhistory.runhistory)": [[108, "smac.runhistory.runhistory.RunHistory"]], "__contains__() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.add"]], "add_running_trial() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.add_running_trial"]], "add_trial() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.add_trial"]], "average_cost() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory.runhistory property)": [[108, "smac.runhistory.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.empty"]], "finished (smac.runhistory.runhistory.runhistory property)": [[108, "smac.runhistory.runhistory.RunHistory.finished"]], "get_config() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_config"]], "get_config_id() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_config_id"]], "get_configs() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_cost"]], "get_instance_seed_budget_keys() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_instance_seed_budget_keys"]], "get_min_cost() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_min_cost"]], "get_running_configs() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_running_configs"]], "get_running_trials() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_running_trials"]], "get_trials() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory.runhistory property)": [[108, "smac.runhistory.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.incremental_update_cost"]], "load() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.load"]], "min_cost() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory.runhistory property)": [[108, "smac.runhistory.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory.runhistory property)": [[108, "smac.runhistory.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.reset"]], "running (smac.runhistory.runhistory.runhistory property)": [[108, "smac.runhistory.runhistory.RunHistory.running"]], "save() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.save"]], "smac.runhistory.runhistory": [[108, "module-smac.runhistory.runhistory"]], "submitted (smac.runhistory.runhistory.runhistory property)": [[108, "smac.runhistory.runhistory.RunHistory.submitted"]], "sum_cost() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory.runhistory method)": [[108, "smac.runhistory.runhistory.RunHistory.update_from_json"]], "abstractrunner (class in smac.runner)": [[109, "smac.runner.AbstractRunner"]], "daskparallelrunner (class in smac.runner)": [[109, "smac.runner.DaskParallelRunner"]], "firstruncrashedexception": [[109, "smac.runner.FirstRunCrashedException"], [113, "smac.runner.exceptions.FirstRunCrashedException"]], "targetalgorithmabortexception": [[109, "smac.runner.TargetAlgorithmAbortException"], [113, "smac.runner.exceptions.TargetAlgorithmAbortException"]], "targetfunctionrunner (class in smac.runner)": [[109, "smac.runner.TargetFunctionRunner"]], "__call__() (smac.runner.targetfunctionrunner method)": [[109, "smac.runner.TargetFunctionRunner.__call__"]], "__del__() (smac.runner.daskparallelrunner method)": [[109, "smac.runner.DaskParallelRunner.__del__"]], "close() (smac.runner.daskparallelrunner method)": [[109, "smac.runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.abstractrunner method)": [[109, "smac.runner.AbstractRunner.count_available_workers"]], "count_available_workers() (smac.runner.daskparallelrunner method)": [[109, "smac.runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.abstractrunner method)": [[109, "smac.runner.AbstractRunner.is_running"]], "is_running() (smac.runner.daskparallelrunner method)": [[109, "smac.runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.abstractrunner method)": [[109, "smac.runner.AbstractRunner.iter_results"]], "iter_results() (smac.runner.daskparallelrunner method)": [[109, "smac.runner.DaskParallelRunner.iter_results"]], "meta (smac.runner.abstractrunner property)": [[109, "smac.runner.AbstractRunner.meta"]], "meta (smac.runner.targetfunctionrunner property)": [[109, "smac.runner.TargetFunctionRunner.meta"]], "run() (smac.runner.abstractrunner method)": [[109, "smac.runner.AbstractRunner.run"]], "run() (smac.runner.daskparallelrunner method)": [[109, "smac.runner.DaskParallelRunner.run"]], "run() (smac.runner.targetfunctionrunner method)": [[109, "smac.runner.TargetFunctionRunner.run"]], "run_wrapper() (smac.runner.abstractrunner method)": [[109, "smac.runner.AbstractRunner.run_wrapper"]], "smac.runner": [[109, "module-smac.runner"]], "submit_trial() (smac.runner.abstractrunner method)": [[109, "smac.runner.AbstractRunner.submit_trial"]], "submit_trial() (smac.runner.daskparallelrunner method)": [[109, "smac.runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.abstractrunner method)": [[109, "smac.runner.AbstractRunner.wait"]], "wait() (smac.runner.daskparallelrunner method)": [[109, "smac.runner.DaskParallelRunner.wait"]], "abstractrunner (class in smac.runner.abstract_runner)": [[110, "smac.runner.abstract_runner.AbstractRunner"]], "count_available_workers() (smac.runner.abstract_runner.abstractrunner method)": [[110, "smac.runner.abstract_runner.AbstractRunner.count_available_workers"]], "is_running() (smac.runner.abstract_runner.abstractrunner method)": [[110, "smac.runner.abstract_runner.AbstractRunner.is_running"]], "iter_results() (smac.runner.abstract_runner.abstractrunner method)": [[110, "smac.runner.abstract_runner.AbstractRunner.iter_results"]], "meta (smac.runner.abstract_runner.abstractrunner property)": [[110, "smac.runner.abstract_runner.AbstractRunner.meta"]], "run() (smac.runner.abstract_runner.abstractrunner method)": [[110, "smac.runner.abstract_runner.AbstractRunner.run"]], "run_wrapper() (smac.runner.abstract_runner.abstractrunner method)": [[110, "smac.runner.abstract_runner.AbstractRunner.run_wrapper"]], "smac.runner.abstract_runner": [[110, "module-smac.runner.abstract_runner"]], "submit_trial() (smac.runner.abstract_runner.abstractrunner method)": [[110, "smac.runner.abstract_runner.AbstractRunner.submit_trial"]], "wait() (smac.runner.abstract_runner.abstractrunner method)": [[110, "smac.runner.abstract_runner.AbstractRunner.wait"]], "abstractserialrunner (class in smac.runner.abstract_serial_runner)": [[111, "smac.runner.abstract_serial_runner.AbstractSerialRunner"]], "count_available_workers() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[111, "smac.runner.abstract_serial_runner.AbstractSerialRunner.count_available_workers"]], "is_running() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[111, "smac.runner.abstract_serial_runner.AbstractSerialRunner.is_running"]], "iter_results() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[111, "smac.runner.abstract_serial_runner.AbstractSerialRunner.iter_results"]], "smac.runner.abstract_serial_runner": [[111, "module-smac.runner.abstract_serial_runner"]], "submit_trial() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[111, "smac.runner.abstract_serial_runner.AbstractSerialRunner.submit_trial"]], "wait() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[111, "smac.runner.abstract_serial_runner.AbstractSerialRunner.wait"]], "daskparallelrunner (class in smac.runner.dask_runner)": [[112, "smac.runner.dask_runner.DaskParallelRunner"]], "__del__() (smac.runner.dask_runner.daskparallelrunner method)": [[112, "smac.runner.dask_runner.DaskParallelRunner.__del__"]], "close() (smac.runner.dask_runner.daskparallelrunner method)": [[112, "smac.runner.dask_runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.dask_runner.daskparallelrunner method)": [[112, "smac.runner.dask_runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.dask_runner.daskparallelrunner method)": [[112, "smac.runner.dask_runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.dask_runner.daskparallelrunner method)": [[112, "smac.runner.dask_runner.DaskParallelRunner.iter_results"]], "run() (smac.runner.dask_runner.daskparallelrunner method)": [[112, "smac.runner.dask_runner.DaskParallelRunner.run"]], "smac.runner.dask_runner": [[112, "module-smac.runner.dask_runner"]], "submit_trial() (smac.runner.dask_runner.daskparallelrunner method)": [[112, "smac.runner.dask_runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.dask_runner.daskparallelrunner method)": [[112, "smac.runner.dask_runner.DaskParallelRunner.wait"]], "smac.runner.exceptions": [[113, "module-smac.runner.exceptions"]], "targetfunctionrunner (class in smac.runner.target_function_runner)": [[114, "smac.runner.target_function_runner.TargetFunctionRunner"]], "__call__() (smac.runner.target_function_runner.targetfunctionrunner method)": [[114, "smac.runner.target_function_runner.TargetFunctionRunner.__call__"]], "meta (smac.runner.target_function_runner.targetfunctionrunner property)": [[114, "smac.runner.target_function_runner.TargetFunctionRunner.meta"]], "run() (smac.runner.target_function_runner.targetfunctionrunner method)": [[114, "smac.runner.target_function_runner.TargetFunctionRunner.run"]], "smac.runner.target_function_runner": [[114, "module-smac.runner.target_function_runner"]], "targetfunctionscriptrunner (class in smac.runner.target_function_script_runner)": [[115, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner"]], "__call__() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[115, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.__call__"]], "meta (smac.runner.target_function_script_runner.targetfunctionscriptrunner property)": [[115, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.meta"]], "run() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[115, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.run"]], "smac.runner.target_function_script_runner": [[115, "module-smac.runner.target_function_script_runner"]], "scenario (class in smac.scenario)": [[116, "smac.scenario.Scenario"]], "__post_init__() (smac.scenario.scenario method)": [[116, "smac.scenario.Scenario.__post_init__"]], "count_instance_features() (smac.scenario.scenario method)": [[116, "smac.scenario.Scenario.count_instance_features"]], "count_objectives() (smac.scenario.scenario method)": [[116, "smac.scenario.Scenario.count_objectives"]], "load() (smac.scenario.scenario static method)": [[116, "smac.scenario.Scenario.load"]], "make_serializable() (smac.scenario.scenario static method)": [[116, "smac.scenario.Scenario.make_serializable"]], "meta (smac.scenario.scenario property)": [[116, "smac.scenario.Scenario.meta"]], "save() (smac.scenario.scenario method)": [[116, "smac.scenario.Scenario.save"]], "smac.scenario": [[116, "module-smac.scenario"]], "smac.utils": [[117, "module-smac.utils"]], "convert_configurations_to_array() (in module smac.utils.configspace)": [[118, "smac.utils.configspace.convert_configurations_to_array"]], "get_conditional_hyperparameters() (in module smac.utils.configspace)": [[118, "smac.utils.configspace.get_conditional_hyperparameters"]], "get_config_hash() (in module smac.utils.configspace)": [[118, "smac.utils.configspace.get_config_hash"]], "get_types() (in module smac.utils.configspace)": [[118, "smac.utils.configspace.get_types"]], "print_config_changes() (in module smac.utils.configspace)": [[118, "smac.utils.configspace.print_config_changes"]], "smac.utils.configspace": [[118, "module-smac.utils.configspace"]], "batch() (in module smac.utils.data_structures)": [[119, "smac.utils.data_structures.batch"]], "recursively_compare_dicts() (in module smac.utils.data_structures)": [[119, "smac.utils.data_structures.recursively_compare_dicts"]], "smac.utils.data_structures": [[119, "module-smac.utils.data_structures"]], "get_logger() (in module smac.utils.logging)": [[120, "smac.utils.logging.get_logger"]], "setup_logging() (in module smac.utils.logging)": [[120, "smac.utils.logging.setup_logging"]], "smac.utils.logging": [[120, "module-smac.utils.logging"]], "normalize_costs() (in module smac.utils.multi_objective)": [[121, "smac.utils.multi_objective.normalize_costs"]], "smac.utils.multi_objective": [[121, "module-smac.utils.multi_objective"]], "calculate_pareto_front() (in module smac.utils.pareto_front)": [[122, "smac.utils.pareto_front.calculate_pareto_front"]], "smac.utils.pareto_front": [[122, "module-smac.utils.pareto_front"]], "sort_by_crowding_distance() (in module smac.utils.pareto_front)": [[122, "smac.utils.pareto_front.sort_by_crowding_distance"]], "smac.utils.subspaces": [[123, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[124, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[125, "module-smac.utils.subspaces.turbo_subspace"]]}})