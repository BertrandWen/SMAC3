Search.setIndex({"docnames": ["advanced_usage/callbacks", "advanced_usage/index", "advanced_usage/resumption", "api", "api/smac.acquisition", "api/smac.acquisition.abstract_acqusition_optimizer", "api/smac.acquisition.differential_evolution", "api/smac.acquisition.functions", "api/smac.acquisition.functions.abstract_acquisition_function", "api/smac.acquisition.functions.confidence_bound", "api/smac.acquisition.functions.expected_improvement", "api/smac.acquisition.functions.integrated", "api/smac.acquisition.functions.prior", "api/smac.acquisition.functions.probability_improvement", "api/smac.acquisition.functions.thompson", "api/smac.acquisition.local_and_random_search", "api/smac.acquisition.local_search", "api/smac.acquisition.random_search", "api/smac.callback", "api/smac.configspace", "api/smac.configspace.util", "api/smac.constants", "api/smac.facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.facade", "api/smac.facade.hyperparameter_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.initial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensification", "api/smac.intensification.abstract_intensifier", "api/smac.intensification.hyperband", "api/smac.intensification.intensification", "api/smac.intensification.parallel_scheduling", "api/smac.intensification.simple_intensifier", "api/smac.intensification.stages", "api/smac.intensification.successive_halving", "api/smac.loop", "api/smac.loop.base_smbo", "api/smac.loop.boing", "api/smac.loop.smbo", "api/smac.loop.turbo", "api/smac.model", "api/smac.model.base_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.base_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.boing", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.utils", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.imputer", "api/smac.model.imputer.abstract_imputer", "api/smac.model.imputer.random_forest_imputer", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.base_random_forest", "api/smac.model.random_forest.multi_objective_random_forest", "api/smac.model.random_forest.random_forest_with_instances", "api/smac.model.random_model", "api/smac.model.utils", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.multi_objective.utils", "api/smac.random_design", "api/smac.random_design.cosine_annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.random_design.random_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inversed_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.runner", "api/smac.runner.serial_runner", "api/smac.runner.target_algorithm_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.stats", "api/smac.utils.subspaces", "conventions", "examples/basics/index", "examples/basics/sg_execution_times", "examples/basics/svm_cv", "examples/basics/synthetic_function", "examples/commandline/index", "examples/index", "examples/multi_fidelity/index", "examples/multi_fidelity/mlp_epochs", "examples/multi_fidelity/sg_execution_times", "examples/multi_fidelity/sgd_datasets", "examples/multi_objective/index", "examples/multi_objective/schaffer", "examples/multi_objective/sg_execution_times", "faq", "getting_started", "glossary", "index", "installation", "license", "minimal_example", "package_overview"], "filenames": ["advanced_usage/callbacks.rst", "advanced_usage/index.rst", "advanced_usage/resumption.rst", "api.rst", "api/smac.acquisition.rst", "api/smac.acquisition.abstract_acqusition_optimizer.rst", "api/smac.acquisition.differential_evolution.rst", "api/smac.acquisition.functions.rst", "api/smac.acquisition.functions.abstract_acquisition_function.rst", "api/smac.acquisition.functions.confidence_bound.rst", "api/smac.acquisition.functions.expected_improvement.rst", "api/smac.acquisition.functions.integrated.rst", "api/smac.acquisition.functions.prior.rst", "api/smac.acquisition.functions.probability_improvement.rst", "api/smac.acquisition.functions.thompson.rst", "api/smac.acquisition.local_and_random_search.rst", "api/smac.acquisition.local_search.rst", "api/smac.acquisition.random_search.rst", "api/smac.callback.rst", "api/smac.configspace.rst", "api/smac.configspace.util.rst", "api/smac.constants.rst", "api/smac.facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.facade.rst", "api/smac.facade.hyperparameter_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.initial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensification.rst", "api/smac.intensification.abstract_intensifier.rst", "api/smac.intensification.hyperband.rst", "api/smac.intensification.intensification.rst", "api/smac.intensification.parallel_scheduling.rst", "api/smac.intensification.simple_intensifier.rst", "api/smac.intensification.stages.rst", "api/smac.intensification.successive_halving.rst", "api/smac.loop.rst", "api/smac.loop.base_smbo.rst", "api/smac.loop.boing.rst", "api/smac.loop.smbo.rst", "api/smac.loop.turbo.rst", "api/smac.model.rst", "api/smac.model.base_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.base_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.boing.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.utils.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.imputer.rst", "api/smac.model.imputer.abstract_imputer.rst", "api/smac.model.imputer.random_forest_imputer.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.base_random_forest.rst", "api/smac.model.random_forest.multi_objective_random_forest.rst", "api/smac.model.random_forest.random_forest_with_instances.rst", "api/smac.model.random_model.rst", "api/smac.model.utils.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.multi_objective.utils.rst", "api/smac.random_design.rst", "api/smac.random_design.cosine_annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.random_design.random_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inversed_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.runner.rst", "api/smac.runner.serial_runner.rst", "api/smac.runner.target_algorithm_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.stats.rst", "api/smac.utils.subspaces.rst", "conventions.rst", "examples/basics/index.rst", "examples/basics/sg_execution_times.rst", "examples/basics/svm_cv.rst", "examples/basics/synthetic_function.rst", "examples/commandline/index.rst", "examples/index.rst", "examples/multi_fidelity/index.rst", "examples/multi_fidelity/mlp_epochs.rst", "examples/multi_fidelity/sg_execution_times.rst", "examples/multi_fidelity/sgd_datasets.rst", "examples/multi_objective/index.rst", "examples/multi_objective/schaffer.rst", "examples/multi_objective/sg_execution_times.rst", "faq.rst", "getting_started.rst", "glossary.rst", "index.rst", "installation.rst", "license.rst", "minimal_example.rst", "package_overview.rst"], "titles": ["Callbacks", "Advanced Usage", "Resumption", "API References", "smac.acquisition", "smac.acquisition.abstract_acqusition_optimizer", "smac.acquisition.differential_evolution", "smac.acquisition.functions", "smac.acquisition.functions.abstract_acquisition_function", "smac.acquisition.functions.confidence_bound", "smac.acquisition.functions.expected_improvement", "smac.acquisition.functions.integrated", "smac.acquisition.functions.prior", "smac.acquisition.functions.probability_improvement", "smac.acquisition.functions.thompson", "smac.acquisition.local_and_random_search", "smac.acquisition.local_search", "smac.acquisition.random_search", "smac.callback", "smac.configspace", "smac.configspace.util", "smac.constants", "smac.facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.facade", "smac.facade.hyperparameter_facade", "smac.facade.multi_fidelity_facade", "smac.initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.initial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensification", "smac.intensification.abstract_intensifier", "smac.intensification.hyperband", "smac.intensification.intensification", "smac.intensification.parallel_scheduling", "smac.intensification.simple_intensifier", "smac.intensification.stages", "smac.intensification.successive_halving", "smac.loop", "smac.loop.base_smbo", "smac.loop.boing", "smac.loop.smbo", "smac.loop.turbo", "smac.model", "smac.model.base_model", "smac.model.gaussian_process", "smac.model.gaussian_process.base_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.boing", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.utils", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.imputer", "smac.model.imputer.abstract_imputer", "smac.model.imputer.random_forest_imputer", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.base_random_forest", "smac.model.random_forest.multi_objective_random_forest", "smac.model.random_forest.random_forest_with_instances", "smac.model.random_model", "smac.model.utils", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.multi_objective.utils", "smac.random_design", "smac.random_design.cosine_annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.random_design.random_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inversed_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.runhistory", "smac.runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.runner", "smac.runner.serial_runner", "smac.runner.target_algorithm_runner", "smac.scenario", "smac.utils", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.stats", "smac.utils.subspaces", "&lt;no title&gt;", "Basics", "Computation times", "Support Vector Machine with Cross-Validation", "Synthetic Function", "Commandline", "Examples", "Multi-Fidelity and Multi-Instances", "Multi-Layer Perceptron Using Multiple Epochs", "Computation times", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Objective", "2D Schaffer Function", "Computation times", "F.A.Q.", "Getting Started", "Glossary", "Home", "Installation", "License", "Minimal Example", "Package Overview"], "terms": {"provid": [0, 5, 28, 31, 35, 42, 89, 101, 118, 119, 121, 123, 125, 127, 129, 130, 135, 136], "abil": 0, "easili": [0, 109], "execut": [0, 35, 36, 38, 39, 40, 43, 44, 46, 103, 104, 106, 108, 117, 123, 124, 125, 128, 129, 136], "code": [0, 2, 4, 15, 50, 51, 52, 62, 103, 104, 113, 118, 119, 121, 123, 125, 127, 129, 135], "befor": [0, 4, 7, 8, 15, 16, 35, 37, 38, 39, 42, 50, 62, 84, 86, 91, 93, 103, 104, 106, 107, 112, 123, 129], "insid": [0, 78, 133], "after": [0, 7, 8, 35, 37, 38, 39, 42, 43, 44, 46, 48, 49, 73, 76, 84, 86, 89, 102, 123], "bayesian": [0, 7, 11, 12, 35, 40, 43, 44, 46, 50, 51, 52, 62, 67, 84, 86, 114, 131, 132, 136], "optim": [0, 4, 7, 11, 12, 15, 19, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 50, 51, 52, 53, 62, 67, 79, 80, 81, 84, 86, 89, 101, 109, 114, 118, 119, 123, 125, 127, 129, 130, 131, 132, 135, 136], "loop": [0, 35, 38, 40, 103, 106], "To": [0, 2, 35, 37, 38, 39, 103, 104, 123, 129, 133], "add": [0, 19, 89, 102, 114, 118, 123, 125, 129, 133], "you": [0, 2, 50, 62, 109, 118, 129, 130, 132, 133, 134, 136], "have": [0, 4, 15, 19, 35, 39, 48, 49, 50, 51, 52, 53, 56, 62, 72, 73, 75, 76, 77, 89, 101, 102, 103, 104, 106, 125, 129, 133, 134], "inherit": 0, "from": [0, 2, 4, 5, 15, 19, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 62, 67, 69, 71, 72, 73, 75, 76, 77, 89, 102, 103, 104, 106, 109, 113, 114, 118, 119, 123, 125, 127, 129, 130, 131, 133, 135, 136], "smac": [0, 1, 2, 118, 119, 121, 123, 125, 127, 129, 130, 131, 132, 133, 135, 136], "overwrit": [0, 73, 76, 89, 102, 118, 119, 123, 125, 127], "abstract": [0, 4, 5, 7, 8, 35, 36, 44, 48, 49, 67, 69, 70, 72, 79, 81, 84, 88, 103, 104, 106], "method": [0, 4, 5, 7, 8, 11, 19, 35, 36, 37, 38, 42, 43, 44, 46, 67, 73, 76, 89, 102, 103, 104, 106, 107, 123, 125], "afterward": 0, "can": [0, 4, 5, 16, 19, 35, 36, 37, 38, 39, 42, 43, 44, 46, 48, 49, 50, 62, 72, 73, 75, 79, 80, 81, 89, 91, 93, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 118, 119, 123, 129, 131, 132, 133, 134, 136], "pass": [0, 28, 30, 32, 34, 35, 37, 39, 42, 44, 48, 49, 50, 51, 52, 53, 56, 62, 72, 73, 75, 76, 77, 83, 103, 104, 106, 107, 108, 109, 114, 118, 123, 125, 129], "ani": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 72, 73, 75, 76, 79, 80, 82, 84, 85, 86, 87, 88, 90, 103, 104, 106, 107, 108, 114, 129, 134, 136], "facad": [0, 89, 102, 109, 118, 119, 123, 125, 127, 129, 135, 136], "import": [0, 118, 119, 123, 125, 127, 129, 130, 135], "multifidelityfacad": [0, 123, 125, 130], "class": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 123, 125], "customcallback": 0, "def": [0, 118, 119, 123, 125, 127, 130, 135], "on_start": 0, "self": [0, 4, 5, 35, 38, 48, 49, 50, 62, 67, 72, 73, 75, 84, 85, 89, 102, 103, 104, 106, 107, 108, 114, 123, 125], "smbo": [0, 35, 38, 39, 43, 44, 84, 88, 89, 101, 103, 104, 106, 107, 131], "none": [0, 4, 5, 6, 7, 8, 11, 12, 15, 16, 17, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 118, 123, 125, 127], "abstractmethod": 0, "on_end": 0, "on_iteration_start": 0, "on_iteration_end": 0, "info": [0, 35, 36, 89, 102, 103, 106, 113, 118, 119, 123, 125, 127], "runinfo": [0, 35, 36, 38, 39, 40, 43, 44, 46, 89, 90, 101, 103, 104, 106, 107], "valu": [0, 7, 8, 10, 11, 19, 35, 37, 39, 41, 42, 48, 49, 50, 51, 52, 53, 56, 62, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 112, 114, 118, 119, 123, 130], "runvalu": [0, 35, 36, 38, 39, 40, 43, 44, 46, 89, 90, 102, 103, 104, 106, 107], "bool": [0, 19, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 50, 51, 52, 62, 73, 76, 78, 84, 85, 86, 87, 88, 89, 102, 103, 104, 106, 107, 109, 112, 113, 114], "we": [0, 4, 5, 35, 36, 38, 39, 40, 48, 49, 50, 51, 52, 53, 56, 62, 67, 72, 73, 75, 76, 77, 103, 104, 106, 113, 114, 118, 119, 121, 123, 125, 129, 130, 132, 133], "just": 0, "do": [0, 2, 35, 36, 38, 39, 42, 103, 104, 107], "simpl": [0, 89, 101, 118, 127, 131], "print": [0, 112, 113, 118, 119, 123, 125], "here": [0, 35, 42, 53, 114, 118, 119, 123, 125, 127, 129, 132], "thi": [1, 4, 5, 7, 8, 11, 15, 19, 28, 31, 35, 36, 37, 38, 39, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 62, 67, 69, 71, 73, 76, 84, 86, 89, 91, 93, 102, 103, 104, 105, 106, 107, 109, 114, 123, 125, 129, 130, 132, 134, 136], "chapter": [1, 131], "give": [1, 19, 35, 39, 89, 101, 109], "more": [1, 35, 36, 37, 38, 39, 78, 103, 104, 106, 130, 133, 135, 136], "detail": [1, 7, 11, 12, 35, 37, 38, 129, 130, 131, 133, 136], "singl": [1, 19, 35, 42, 73, 76, 79, 81, 82, 89, 102, 103, 104, 106, 107, 118, 131, 135], "compon": [1, 48, 49, 50, 51, 52, 62, 72, 73, 76, 77, 130], "automat": 2, "resum": 2, "where": [2, 4, 7, 8, 15, 19, 35, 38, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 78, 114, 125, 129, 130, 131], "left": [2, 7, 10, 43, 44, 46], "off": [2, 73, 76, 130], "wa": [2, 19, 35, 36, 38, 39, 40, 89, 101, 103, 104], "interrupt": 2, "so": [2, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 103, 104, 106, 107, 112, 113, 123], "read": [2, 35, 40, 89, 102, 131, 133], "file": [2, 89, 102, 103, 106, 107, 109, 113, 117, 124, 128, 129, 131, 134, 136], "derivid": 2, "scenario": [2, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 69, 71, 91, 93, 94, 95, 97, 98, 99, 103, 106, 107, 113, 118, 119, 123, 125, 127, 129, 135], "": [2, 4, 15, 16, 35, 36, 38, 48, 49, 50, 51, 52, 62, 67, 69, 71, 72, 73, 75, 76, 77, 103, 104, 106, 107, 109, 112, 119, 123, 125, 129, 131, 136], "name": [2, 19, 35, 36, 37, 38, 39, 40, 42, 48, 49, 72, 73, 75, 89, 102, 103, 106, 109], "output_directori": [2, 103, 104, 109, 130], "seed": [2, 4, 5, 6, 15, 16, 17, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 118, 123, 125, 127, 129, 131], "set": [2, 7, 11, 19, 35, 37, 38, 39, 42, 48, 49, 50, 51, 52, 53, 62, 69, 71, 72, 73, 76, 77, 83, 84, 85, 87, 89, 91, 93, 101, 102, 103, 104, 108, 109, 113, 123, 125, 129, 131, 133, 136], "intern": [2, 19, 35, 36, 37, 39, 42, 89, 101, 102, 103, 104, 106, 107, 109, 123, 136], "state": [2, 28, 31, 35, 36, 38, 43, 44, 46, 84, 85, 87, 114, 129], "If": [2, 4, 5, 35, 36, 39, 42, 48, 49, 53, 73, 76, 83, 84, 86, 89, 102, 103, 104, 109, 112, 114, 125, 129, 132, 133, 134], "chang": [2, 19, 35, 36, 38, 39, 40, 69, 71, 84, 86, 89, 102, 118, 119, 123, 125, 127], "specifi": [2, 4, 5, 15, 48, 49, 50, 51, 52, 53, 62, 72, 73, 75, 76, 77, 109, 112, 123, 125, 130], "ask": [2, 35, 36, 38, 39, 40, 43, 44, 46], "whether": [2, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 89, 101, 102, 103, 104, 106, 107, 109, 113], "still": [2, 89, 101, 103, 104, 106, 107, 129], "want": [2, 118, 123, 125, 129, 130, 132], "delet": [2, 103, 104], "old": [2, 89, 102], "run": [2, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 69, 70, 71, 89, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 118, 119, 123, 125, 127, 129, 130, 131], "complet": [2, 35, 39, 43, 44, 46, 103, 104, 106, 107], "gener": [2, 5, 19, 28, 34, 35, 36, 38, 39, 40, 43, 44, 46, 56, 67, 79, 80, 89, 101, 103, 104, 106, 107, 109, 114, 118, 129, 131, 132], "new": [2, 5, 19, 35, 36, 38, 39, 40, 43, 44, 46, 56, 69, 70, 71, 89, 102, 114, 118, 119, 127, 129, 131], "i": [2, 4, 5, 7, 11, 15, 19, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 62, 67, 69, 71, 72, 73, 75, 76, 77, 78, 83, 84, 85, 86, 87, 89, 91, 93, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 118, 119, 123, 125, 127, 129, 130, 131, 132, 133, 134, 136], "affect": 2, "abstractacquisitionoptim": [4, 5, 6, 15, 16, 17], "configspac": [4, 5, 6, 15, 16, 17, 28, 31, 48, 49, 50, 51, 52, 53, 62, 72, 73, 74, 75, 76, 77, 78, 89, 102, 109, 118, 119, 123, 125, 127, 130, 135], "acquisition_funct": [4, 5, 6, 7, 11, 12, 15, 16, 17, 44], "challeng": [4, 5, 6, 15, 16, 17, 35, 36, 37, 38, 39, 40, 42, 44, 84, 88, 103, 106, 114, 118, 119, 123, 125, 127], "5000": [4, 5, 6, 15, 16, 17, 125], "0": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 117, 118, 119, 123, 124, 125, 127, 128, 129], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 118, 119, 121, 123, 125, 127], "base": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 118, 125, 129, 130, 131, 132], "object": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 67, 69, 70, 73, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 102, 103, 104, 106, 107, 109, 113, 118, 119, 123, 125, 127, 131, 135, 136], "maxim": [4, 5, 7, 8, 16, 28, 31, 89, 102], "In": [4, 5, 19, 35, 38, 50, 51, 52, 62, 67, 89, 102, 103, 104, 106, 107, 109, 125, 130, 132], "order": [4, 5, 19, 35, 37, 39, 42, 109], "us": [4, 5, 7, 8, 11, 15, 19, 28, 31, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 62, 67, 69, 71, 72, 73, 76, 77, 84, 86, 89, 91, 96, 97, 98, 100, 101, 102, 103, 104, 106, 108, 109, 112, 113, 114, 118, 119, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 134, 136], "ha": [4, 5, 43, 44, 46, 48, 49, 114, 133, 136], "subclass": [4, 5], "_maxim": [4, 5], "must": [4, 5, 19, 28, 31, 48, 49, 67, 103, 104, 109, 133], "implement": [4, 5, 7, 8, 11, 15, 16, 19, 35, 37, 42, 44, 48, 49, 50, 51, 52, 62, 69, 70, 73, 76, 103, 104, 106, 107, 108, 123, 129], "paramet": [4, 5, 7, 8, 11, 12, 15, 16, 19, 20, 28, 31, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 62, 63, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 109, 112, 113, 114, 118, 119, 123, 125, 130, 131, 132], "configurationspac": [4, 5, 15, 16, 19, 28, 31, 48, 49, 72, 73, 75, 77, 114, 118, 119, 123, 125, 127, 131, 135, 136], "abstractacquisitionfunct": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 44, 114], "int": [4, 5, 15, 16, 19, 28, 31, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 56, 62, 67, 69, 71, 72, 73, 75, 76, 77, 78, 84, 85, 89, 102, 103, 104, 106, 107, 108, 109, 113, 114, 118, 123, 125], "default": [4, 5, 7, 8, 15, 19, 20, 28, 29, 35, 36, 37, 39, 42, 83, 89, 102, 103, 106, 107, 109, 112, 118, 119, 123, 125, 129, 130], "get_meta": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 73, 76, 79, 80, 82, 84, 85, 86, 87, 88, 103, 104, 106, 109], "return": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 118, 119, 123, 125, 127, 130, 131, 135], "meta": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 73, 76, 79, 80, 82, 84, 85, 86, 87, 88, 103, 104, 106, 109, 135], "data": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 73, 76, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 101, 102, 103, 104, 106, 107, 109, 114, 118, 123, 125, 127, 131, 135], "creat": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 69, 71, 73, 76, 79, 80, 82, 84, 85, 86, 87, 88, 103, 104, 106, 118, 123, 125, 129, 133], "type": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 118, 123, 125, 127], "dict": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 72, 73, 75, 76, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 102, 103, 104, 106, 107, 108, 109, 114, 125, 127], "str": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 28, 31, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 72, 73, 75, 76, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 102, 103, 104, 106, 107, 108, 109, 125, 127], "previous_config": [4, 5], "num_point": [4, 5], "random_design": [4, 5, 44], "function": [4, 5, 15, 19, 20, 35, 38, 40, 43, 44, 46, 50, 51, 52, 53, 56, 60, 62, 78, 83, 91, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 106, 107, 108, 111, 112, 114, 116, 117, 121, 125, 126, 128, 130, 135, 136], "list": [4, 5, 7, 8, 19, 20, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 88, 89, 90, 91, 93, 102, 103, 104, 106, 107, 108, 109, 112, 114, 125, 127, 129], "configur": [4, 5, 7, 8, 15, 17, 19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 48, 49, 63, 67, 68, 72, 73, 75, 76, 77, 84, 85, 86, 87, 88, 89, 91, 93, 101, 102, 103, 104, 106, 107, 108, 109, 113, 114, 118, 119, 123, 125, 127, 129, 131, 132, 135, 136], "previou": [4, 5, 15, 129], "evalu": [4, 5, 7, 8, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 89, 91, 93, 102, 103, 108, 118, 119, 123, 125, 127, 129, 131, 135, 136], "number": [4, 5, 7, 12, 15, 16, 19, 28, 31, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 56, 62, 67, 69, 71, 72, 73, 75, 76, 77, 78, 84, 86, 89, 101, 102, 103, 104, 106, 107, 109, 113, 114, 118, 123, 125, 131, 135, 136], "point": [4, 5, 15, 48, 49, 50, 51, 52, 53, 73, 76, 78, 127], "sampl": [4, 5, 15, 17, 19, 35, 36, 38, 40, 44, 48, 49, 50, 51, 52, 53, 62, 67, 109, 118, 119, 127, 130, 136], "randomconfigurationchoos": [4, 5], "option": [4, 5, 15, 16, 19, 28, 31, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 72, 77, 78, 83, 89, 102, 103, 104, 105, 114, 129], "part": [4, 5, 19], "challengerlist": [4, 5], "interleav": [4, 5, 15, 84, 85, 86, 87, 88], "random": [4, 5, 15, 16, 17, 19, 28, 31, 33, 35, 36, 37, 38, 39, 40, 42, 44, 48, 67, 69, 71, 73, 75, 76, 77, 84, 85, 86, 87, 88, 89, 102, 103, 106, 107, 109, 114, 118, 123, 130, 131, 132, 133, 135, 136], "scheme": [4, 5, 103, 106], "defin": [4, 5, 7, 12, 15, 19, 41, 50, 51, 52, 67, 89, 101, 102, 103, 106, 109, 118, 119, 123, 125, 130, 135], "next_iter": [4, 5, 84, 85, 86, 87, 88], "call": [4, 5, 7, 8, 11, 16, 35, 36, 38, 48, 49, 67, 77, 103, 104, 106, 107, 108, 112, 118, 119, 123, 129], "end": [4, 5, 19, 35, 38, 89, 102], "an": [4, 5, 7, 8, 11, 19, 20, 35, 36, 37, 38, 39, 40, 42, 48, 49, 50, 51, 52, 53, 56, 62, 72, 73, 75, 76, 77, 79, 81, 89, 102, 103, 104, 105, 106, 107, 118, 119, 123, 125, 129, 130, 131, 132, 133, 136], "iter": [4, 5, 7, 12, 15, 16, 19, 28, 31, 35, 36, 37, 38, 39, 42, 43, 44, 46, 69, 71, 84, 85, 86, 87, 88, 89, 102, 103, 106, 114, 118, 123, 125, 131], "consist": [4, 5, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 123, 125, 132], "differentialevolut": [4, 6], "get": [4, 6, 17, 19, 35, 39, 103, 104, 125, 133], "candid": [4, 6, 17, 43, 44, 46], "solut": [4, 6, 17, 43, 44, 46, 103, 106, 107, 129], "via": [4, 6, 17, 35, 36, 43, 44, 46, 48, 72, 73, 75, 103, 104, 106, 107, 133], "differentialevolutionsolv": [4, 6], "localandsortedpriorrandomsearch": [4, 15], "uniform_configspac": [4, 15], "max_step": [4, 15, 16], "n_steps_plateau_walk": [4, 15, 16], "10": [4, 7, 12, 15, 16, 28, 29, 30, 31, 32, 33, 34, 35, 38, 50, 51, 52, 53, 73, 76, 118, 119, 123, 127, 133, 135], "local_search_iter": [4, 15], "prior_sampling_fract": [4, 15], "5": [4, 15, 19, 35, 36, 37, 38, 39, 42, 54, 58, 91, 93, 94, 95, 97, 98, 99, 103, 104, 118, 119, 123, 125, 127, 132, 135], "perform": [4, 15, 16, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 73, 76, 89, 102, 103, 106, 109, 114, 125, 129, 130, 131, 132, 135, 136], "local": [4, 15, 16, 35, 39, 91, 93, 103, 104, 114], "search": [4, 7, 11, 15, 16, 19, 56, 119, 130], "best": [4, 7, 10, 15, 35, 36, 37, 38, 39, 40, 42, 44, 118, 119, 125, 130, 131], "accord": [4, 15, 84, 85, 87], "sort": [4, 15], "randomli": [4, 15], "ar": [4, 5, 7, 8, 15, 19, 28, 31, 35, 36, 37, 38, 42, 48, 50, 51, 52, 53, 62, 67, 72, 73, 75, 76, 78, 83, 89, 102, 103, 104, 106, 107, 108, 109, 112, 114, 119, 123, 125, 129, 130, 131], "main": [4, 15, 44, 103, 104, 132], "The": [4, 7, 8, 11, 15, 19, 35, 36, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 56, 62, 63, 67, 68, 72, 73, 75, 76, 77, 89, 91, 93, 102, 103, 104, 106, 107, 108, 109, 112, 114, 118, 119, 123, 125, 127, 129, 130, 132, 133, 135, 136], "retriev": [4, 15, 19, 48, 49, 118, 119, 123, 125, 127], "two": [4, 15, 19, 35, 42, 73, 76, 125, 129, 130, 132], "differ": [4, 7, 11, 15, 35, 36, 37, 38, 41, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 79, 80, 89, 101, 103, 106, 109, 123, 125, 129, 130, 131], "one": [4, 5, 15, 19, 35, 38, 42, 44, 48, 50, 62, 72, 89, 91, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 112, 125, 129, 136], "which": [4, 5, 7, 8, 11, 15, 19, 35, 37, 38, 39, 40, 43, 44, 46, 48, 53, 77, 78, 79, 81, 84, 85, 87, 89, 101, 103, 104, 106, 108, 109, 112, 114, 118, 119, 123, 125, 129, 130, 131, 132], "prior": [4, 7, 15, 19, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61], "e": [4, 7, 10, 11, 15, 19, 35, 37, 39, 42, 44, 69, 71, 103, 106, 107, 125, 133, 136], "g": [4, 7, 11, 15, 69, 71, 103, 106, 107, 125, 136], "normalfloathp": [4, 15], "user": [4, 7, 12, 15, 35, 37, 39, 42, 103, 104], "uniform": [4, 15, 19], "version": [4, 15, 129, 133], "same": [4, 15, 19, 35, 38, 53, 56, 69, 70, 71, 73, 76, 83, 89, 101, 102, 114, 129], "space": [4, 15, 19, 28, 31, 48, 49, 56, 63, 67, 68, 72, 73, 75, 77, 89, 102, 109, 114, 118, 119, 123, 125, 136], "remov": [4, 15, 19, 89, 102], "origin": [4, 15, 19, 35, 39, 67, 89, 102, 113, 114, 129, 132], "A": [4, 15, 19, 35, 36, 38, 39, 40, 48, 50, 51, 52, 53, 56, 62, 67, 72, 73, 75, 79, 80, 81, 91, 93, 103, 104, 106, 107, 114, 118, 127, 131, 132, 134], "all": [4, 15, 19, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 62, 67, 69, 70, 71, 72, 73, 75, 76, 89, 91, 93, 102, 103, 104, 105, 106, 107, 109, 113, 114, 118, 119, 121, 123, 125, 129], "weight": [4, 7, 12, 15, 19], "case": [4, 15, 19, 35, 38, 89, 102, 103, 104, 106, 107, 109, 121, 125, 136], "categor": [4, 15, 48, 49, 50, 51, 52, 53, 56, 62, 72, 73, 75, 76, 77, 78, 114, 118, 123, 125, 136], "hyperparamet": [4, 7, 11, 15, 19, 20, 35, 37, 42, 48, 50, 51, 52, 54, 56, 57, 60, 62, 63, 67, 68, 72, 73, 75, 76, 78, 114, 118, 119, 123, 130, 131, 132, 135, 136], "rng": [4, 15, 16, 28, 31, 35, 36, 37, 38, 39, 40, 42, 44, 67, 69, 71, 73, 76, 84, 85, 87, 114], "np": [4, 7, 8, 15, 16, 19, 20, 28, 31, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 56, 62, 63, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 84, 85, 87, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 109, 112, 114, 118, 123, 125, 127, 135], "randomst": [4, 15, 16, 28, 31, 35, 36, 37, 38, 39, 40, 42, 44, 67, 69, 71, 73, 76, 84, 85, 87, 114], "localsearch": [4, 15, 16], "maximum": [4, 15, 16, 35, 36, 37, 38, 39, 40, 42, 69, 71, 73, 76, 109], "step": [4, 15, 16, 50, 62, 103, 107, 112, 123, 125], "dure": [4, 15, 16, 35, 38, 73, 76, 89, 101, 113, 129], "plateau": [4, 15, 16], "walk": [4, 15, 16], "termin": [4, 15, 16, 103, 104], "float": [4, 15, 19, 28, 31, 35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 48, 49, 50, 51, 52, 62, 63, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 118, 119, 123, 125, 127, 130, 135], "ratio": [4, 15, 73, 76], "taken": [4, 15], "oppos": [4, 15], "localandsortedrandomsearch": [4, 15], "vectorization_min_obtain": [4, 16], "2": [4, 16, 35, 38, 48, 49, 50, 51, 52, 53, 62, 69, 71, 72, 73, 75, 76, 77, 84, 86, 91, 93, 94, 95, 97, 98, 99, 103, 104, 114, 118, 119, 123, 125, 127, 131, 135], "vectorization_max_obtain": [4, 16], "64": [4, 16, 133], "minim": [4, 16, 35, 36, 37, 38, 39, 42, 89, 102, 130], "neighbor": [4, 16, 19], "obtain": [4, 16, 43, 44, 46, 50, 51, 52, 67], "onc": [4, 16, 35, 37, 39, 42, 123, 133], "each": [4, 5, 7, 11, 16, 19, 35, 36, 37, 38, 39, 42, 48, 50, 51, 52, 53, 62, 72, 84, 87, 89, 102, 103, 104, 109, 130, 131], "vector": [4, 16, 19, 48, 49, 91, 93, 114, 116, 117, 121], "tune": [4, 16, 35, 38, 48, 49, 50, 62, 72, 73, 75, 77], "reduc": [4, 5, 16, 48, 49, 50, 51, 52, 62, 72, 73, 76, 77, 103, 104], "overhead": [4, 16], "randomsearch": [4, 17], "modul": [4, 7, 19, 22, 28, 35, 43, 48, 50, 53, 54, 63, 69, 73, 79, 84, 89, 91, 102, 103, 110, 114], "challenger_callback": 5, "configuration_spac": [5, 19], "modulus_design": 5, "nocooldownrandomdesign": [5, 84, 86], "helper": [5, 84, 88], "second": [5, 43, 44, 46, 48, 49, 50, 51, 52, 56, 62, 72, 73, 75, 76, 77, 103, 108, 109, 118, 119, 123, 125, 127], "time": [5, 28, 31, 35, 36, 38, 39, 40, 42, 43, 44, 46, 56, 69, 71, 84, 86, 87, 89, 90, 91, 93, 102, 103, 106, 107, 109, 112, 113, 118, 119, 123, 125, 127, 129, 130], "necessari": [5, 19, 20, 35, 36, 38, 103, 104, 106, 107], "doe": [5, 35, 38, 84, 86, 87, 103, 104, 129], "need": [5, 7, 11, 35, 38, 39, 42, 53, 56, 78, 103, 104, 106, 107, 108, 125, 130], "sever": [5, 121, 136], "hundr": 5, "never": 5, "look": [5, 19, 129], "callabl": [5, 103, 106], "callback": 5, "without": [5, 19, 35, 40, 103, 108, 134, 136], "closur": 5, "http": [5, 7, 11, 28, 34, 35, 42, 132, 133, 134], "www": 5, "programiz": 5, "com": [5, 132, 133], "python": [5, 50, 51, 52, 62, 67, 103, 108, 118, 119, 121, 123, 125, 127, 129, 132, 133, 136], "program": [5, 89, 101, 103, 104, 134], "fixedset": 5, "model": [7, 8, 11, 12, 19, 43, 44, 46, 103, 104, 109, 114, 118, 119, 125, 129, 130, 131, 132, 135, 136], "baseepm": [7, 8, 11, 44, 48, 49, 69, 71, 72, 73, 75, 114], "logger": [7, 8, 73, 76, 112], "__call__": [7, 8, 79, 81, 82, 103, 108], "comput": [7, 8, 10, 11, 19, 44, 53, 56, 63, 67, 68, 89, 102, 112], "given": [7, 8, 10, 19, 28, 31, 35, 36, 37, 38, 39, 40, 42, 48, 49, 53, 56, 78, 83, 84, 85, 87, 89, 102, 103, 104, 106, 108, 114, 118, 119, 125, 127, 131, 135], "x": [7, 8, 10, 11, 28, 31, 48, 49, 53, 56, 60, 72, 73, 76, 78, 91, 93, 114, 119, 127], "should": [7, 8, 19, 35, 36, 38, 43, 44, 46, 84, 85, 86, 87, 88, 89, 101, 102, 103, 107, 109, 119, 129, 134], "ndarrai": [7, 8, 19, 20, 48, 49, 50, 51, 52, 53, 56, 60, 62, 67, 69, 70, 71, 72, 73, 76, 77, 78, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 112, 114, 125], "n": [7, 8, 35, 38, 50, 51, 52, 53, 56, 62, 67, 69, 70, 71, 78, 103, 104, 114, 133], "1": [7, 8, 9, 10, 19, 35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 69, 70, 71, 73, 76, 83, 91, 93, 94, 95, 97, 98, 99, 103, 104, 106, 109, 118, 119, 123, 125, 127, 130, 135], "updat": [7, 8, 11, 12, 35, 36, 38, 39, 40, 53, 89, 102, 113, 114, 118, 119, 127, 133], "kwarg": [7, 8, 11, 12, 43, 46, 48, 53, 56, 72, 73, 75, 91, 96, 100, 103, 108], "attribut": [7, 8, 11, 12, 53, 112, 113], "requir": [7, 8, 12, 19, 35, 42, 48, 49, 50, 51, 52, 62, 72, 73, 76, 77, 109, 125, 129], "calcul": [7, 8, 12, 35, 39, 42, 89, 102, 125], "fit": [7, 8, 19, 48, 77, 114, 130, 134, 135], "As": [7, 8, 19, 35, 40, 103, 107], "exampl": [7, 8, 35, 36, 42, 89, 101, 103, 106, 109, 118, 119, 123, 125, 127, 129, 130, 131], "ei": [7, 8, 10, 11, 114, 136], "current": [7, 8, 11, 19, 35, 36, 38, 39, 40, 44, 50, 51, 52, 53, 69, 71, 84, 87, 89, 101, 102, 113, 131, 133], "fmin": [7, 8, 11], "onli": [7, 8, 35, 37, 38, 39, 42, 44, 48, 49, 53, 56, 72, 73, 75, 76, 89, 101, 102, 103, 104, 109, 112, 114, 118, 123, 125, 129, 131, 136], "acqusit": [7, 8, 130], "alreadi": [7, 8, 35, 38, 89, 102, 129], "present": [7, 8], "par": [7, 9, 10, 13, 14], "log": [7, 10, 35, 36, 38, 39, 40, 50, 51, 52, 63, 67, 68, 73, 76, 91, 94, 97, 98, 113, 118, 123, 125], "fals": [7, 10, 12, 19, 35, 36, 38, 39, 40, 50, 54, 55, 56, 57, 58, 59, 61, 62, 73, 76, 78, 89, 91, 93, 94, 95, 97, 98, 99, 102, 109, 114, 118, 129], "expect": [7, 10, 73, 76, 103, 106, 107, 129, 136], "improv": [7, 10, 130, 136], "mathbb": [7, 10], "max": [7, 10, 83, 123, 125, 135], "f": [7, 10, 50, 51, 52, 53, 62, 67, 118, 119, 123, 125, 132], "mathbf": [7, 10], "f_": [7, 10], "t": [7, 10, 14, 19, 28, 30, 32, 34, 129, 133, 136], "xi": [7, 10], "right": [7, 10, 19], "locat": [7, 10, 129], "eip": [7, 10], "integratedacquisitionfunct": [7, 11], "margin": [7, 11, 48, 49, 50, 51, 52, 72, 73, 76], "over": [7, 11, 12, 19, 35, 36, 38, 39, 48, 49, 50, 62, 72, 73, 76, 84, 86, 87, 89, 102, 103, 107], "integr": [7, 50, 62, 136], "see": [7, 11, 12, 28, 34, 89, 102, 129, 130, 131, 134, 136], "practic": [7, 11, 121], "machin": [7, 11, 116, 117, 121, 132, 133], "learn": [7, 11, 19, 123, 130, 132], "algorithm": [7, 11, 19, 28, 31, 35, 38, 42, 44, 89, 102, 103, 105, 106, 107, 108, 109, 113, 118, 119, 123, 125, 129, 131, 132, 136], "jasper": [7, 11], "snoek": [7, 11, 50, 62], "et": [7, 11, 12, 35, 37, 42, 50, 62, 129], "al": [7, 11, 12, 35, 37, 42, 50, 62, 129], "paper": [7, 11, 132], "nip": [7, 11, 50, 51, 52, 62, 67], "cc": [7, 11], "4522": [7, 11], "pdf": [7, 11, 35, 42], "further": [7, 11, 12, 28, 34, 84, 86, 89, 102, 103, 105, 106, 107, 109, 132], "entropi": [7, 11], "its": [7, 11, 19, 78, 114, 118, 119, 131], "approxim": [7, 11], "p": [7, 11], "x_min": [7, 11], "respect": [7, 11, 35, 39, 42, 56, 63, 67, 68], "addit": [7, 11, 12, 44, 56, 89, 91, 93, 102, 103, 106, 107, 108, 114], "contain": [7, 11, 19, 35, 36, 38, 39, 40, 43, 44, 46, 48, 49, 50, 51, 52, 56, 62, 72, 73, 76, 77, 78, 89, 91, 93, 102, 103, 104, 106, 107, 118], "lcb": [7, 9, 136], "pi": [7, 13, 136], "prioracquisitionfunct": [7, 12], "decay_beta": [7, 12], "prior_floor": [7, 12], "1e": [7, 12, 54, 55, 57, 58, 59, 61, 73, 76, 130], "12": [7, 12, 35, 38, 118], "discret": [7, 12], "discrete_bins_factor": [7, 12], "optimum": [7, 12], "pibo": [7, 12], "augment": [7, 12, 53], "belief": [7, 12], "carl": [7, 12], "hvarfner": [7, 12], "nolinkyet": [7, 12], "accompani": [7, 12], "track": [7, 12, 19, 35, 38], "keyword": [7, 12], "argument": [7, 12, 28, 31, 35, 39, 42, 44, 48, 56, 72, 109, 114, 125, 130], "allow_inactive_with_valu": 19, "config_id": [19, 89, 90, 102, 127], "map": [19, 35, 36, 37, 38, 39, 40, 42, 89, 102], "__eq__": 19, "other": [19, 35, 36, 38, 39, 40, 43, 44, 46, 48, 72, 73, 75, 89, 102, 136], "overrid": 19, "equal": [19, 35, 38, 48, 72, 73, 75], "behavior": 19, "__hash__": 19, "hash": [19, 109], "id": [19, 35, 36, 37, 38, 39, 40, 42, 89, 102], "__ne__": 19, "non": [19, 69, 70, 71, 123, 125, 129], "test": [19, 48, 49, 50, 51, 52, 53, 89, 102, 132, 133], "item": [19, 56, 89, 102, 112], "doesn": 19, "exist": [19, 89, 102], "desir": [19, 103, 107], "get_arrai": 19, "represent": [19, 89, 91, 93, 102], "continu": [19, 48, 49, 50, 51, 52, 53, 56, 62, 72, 73, 75, 76, 77, 78, 113, 114, 119, 123, 132, 136], "scale": [19, 35, 37, 42, 48, 49, 54, 56, 57, 63, 64, 65, 67, 91, 96, 98, 99, 100, 118], "between": [19, 48, 49, 73, 76, 91, 96, 98, 99, 100], "zero": [19, 50, 51, 52, 62, 91, 96, 98, 99, 100, 119], "numpi": [19, 91, 93, 112, 118, 123, 125, 127, 135], "get_dictionari": [19, 118], "dictionari": [19, 89, 102, 103, 108, 112, 113], "form": [19, 56], "is_valid_configur": 19, "check": [19, 35, 38, 43, 44, 46, 78, 84, 85, 86, 87, 88, 89, 102, 103, 104, 106, 109, 113, 114, 133], "valid": [19, 109, 112, 116, 117, 121, 123, 125, 129, 130, 131, 135], "rais": [19, 35, 37, 39, 42, 103, 106, 123, 129], "error": [19, 129], "kei": [19, 89, 102, 127], "cach": [19, 56, 89, 102], "speed": [19, 129, 136], "up": [19, 35, 39, 89, 102, 119, 123, 125, 129, 136], "process": [19, 35, 36, 38, 43, 44, 46, 48, 49, 50, 51, 52, 62, 89, 101, 103, 106, 109, 119, 129, 130, 131, 136], "__iter__": [19, 89, 102], "allow": [19, 28, 31, 35, 36, 37, 39, 42, 56, 89, 102, 109], "hopefulli": 19, "add_condit": [19, 118, 123], "condit": [19, 60, 118, 123, 125, 131], "ad": [19, 89, 102, 114, 123, 133], "legal": [19, 130], "parent": [19, 103, 104, 118, 123], "statement": 19, "cycl": 19, "arrai": [19, 44, 48, 50, 51, 52, 53, 63, 68, 69, 70, 71, 72, 73, 75, 112, 114], "keep": [19, 48, 49, 50, 51, 52, 53, 62, 72, 73, 76, 77, 103, 104, 106, 107], "edg": 19, "digraph": 19, "don": [19, 28, 30, 32, 34, 129], "except": [19, 35, 37, 38, 39, 42, 103, 104, 107, 112, 123], "final": [19, 118, 119, 123, 125, 127], "input": [19, 35, 40, 48, 49, 50, 51, 52, 53, 56, 62, 67, 72, 73, 75, 76, 77, 91, 93, 95, 112, 114, 119, 131, 135, 136], "thei": [19, 35, 42], "take": [19, 48, 49, 73, 76, 103, 104, 123, 129, 130], "collect": [19, 89, 102, 103, 104, 106, 107, 113], "add_configuration_spac": 19, "prefix": 19, "delimit": 19, "parent_hyperparamet": 19, "combin": [19, 35, 42, 79, 81, 82, 109, 123, 125, 131, 132], "content": 19, "renam": 19, "old_nam": 19, "forbidden": [19, 114], "claus": [19, 118, 119, 123, 125, 127, 134], "activ": [19, 28, 31, 35, 37, 39, 42, 103, 104, 106, 114, 123, 129, 133], "mean": [19, 48, 49, 50, 51, 52, 53, 56, 62, 63, 66, 72, 73, 75, 76, 79, 81, 89, 102, 109, 114, 118, 123, 125, 129], "when": [19, 35, 42, 43, 44, 46, 48, 49, 50, 51, 52, 56, 62, 72, 73, 76, 77, 103, 104, 109, 114, 123, 129, 130, 131], "add_forbidden_claus": 19, "add_hyperparamet": [19, 118, 119, 123, 125, 135], "check_configur": 19, "check_configuration_vector_represent": 19, "estimate_s": 19, "estim": [19, 48, 49, 72, 73, 75, 76, 118, 119, 123, 125, 127], "size": [19, 35, 38, 56, 109, 123, 130, 131, 135], "uniqu": 19, "inf": [19, 84, 86, 103, 106, 109], "uniformfloathyperparamet": 19, "otherwis": [19, 28, 30, 32, 34, 53, 89, 102, 103, 104, 109, 114], "product": [19, 54, 55], "correctli": 19, "guess": 19, "upper": [19, 69, 71], "bound": [19, 48, 49, 50, 51, 52, 53, 62, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 89, 102, 114, 136], "generate_grid": 19, "union": [19, 56, 78, 89, 102, 103, 106, 108], "generate_all_continuous_from_bound": 19, "lower": [19, 48, 49, 50, 51, 52, 62, 69, 71, 72, 73, 75, 76, 77, 136], "tupl": [19, 35, 36, 38, 39, 40, 42, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 78, 83, 89, 91, 93, 102, 103, 104, 106, 107, 108, 114, 125, 127], "element": [19, 103, 108, 112], "get_active_hyperparamet": 19, "get_all_conditional_hyperparamet": 19, "get_all_unconditional_hyperparamet": 19, "uncondit": 19, "get_child_conditions_of": 19, "children": 19, "referenc": 19, "request": [19, 35, 39, 43, 44, 46, 89, 101], "get_children_of": 19, "get_condit": 19, "get_default_configur": [19, 118, 119, 123, 125], "get_forbidden": 19, "get_hyperparamet": 19, "get_hyperparameter_by_idx": 19, "idx": 19, "get_hyperparameter_nam": 19, "store": [19, 35, 36, 38, 39, 40, 89, 102, 103, 104, 123], "get_hyperparameters_dict": 19, "ordereddict": [19, 89, 102], "get_idx_by_hyperparameter_nam": 19, "get_parent_conditions_of": 19, "either": [19, 28, 31, 50, 62, 89, 102, 103, 108, 129, 133], "get_parents_of": 19, "keysview": 19, "remove_hyperparameter_prior": 19, "produc": [19, 35, 36, 103, 104, 106, 107], "hyperpararmet": 19, "replac": [19, 113, 114, 123], "ones": 19, "categoricalhyperparamet": 19, "result": [19, 35, 36, 38, 39, 40, 43, 44, 46, 89, 102, 103, 104, 106, 107, 109, 112, 114, 130, 136], "sample_configur": 19, "els": [19, 35, 38, 118, 123], "static": [19, 109, 114], "substitute_hyperparameters_in_condit": 19, "new_configspac": 19, "structur": [19, 89, 102], "namesak": 19, "remain": 19, "unchang": 19, "includ": [19, 78, 89, 102, 103, 106, 114, 125, 131, 132], "match": [19, 48, 49], "those": 19, "adjust": [19, 84, 86], "conditioncompon": 19, "substitute_hyperparameters_in_forbidden": 19, "abstractforbiddencompon": [19, 114], "forbiddenvalueerror": 19, "valueerror": 19, "convert_configurations_to_arrai": [19, 20], "config": [19, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 43, 44, 46, 48, 49, 72, 73, 76, 89, 90, 102, 103, 104, 106, 107, 108, 109, 118, 119, 123, 125, 127, 130, 131, 133, 135], "imput": [19, 20, 91, 93], "inact": [19, 20], "appli": [19, 20, 48, 49, 53, 56, 67, 79, 80, 91, 93, 119], "epm": [19, 20, 35, 38, 40, 43, 44, 46, 48, 49, 73, 76, 77, 89, 101, 131], "get_one_exchange_neighbourhood": 19, "exchang": 19, "neighborhood": 19, "frank": [19, 132], "hutter": [19, 50, 51, 52, 62, 67, 129, 132], "holger": 19, "h": [19, 44, 132], "hoo": [19, 132], "kevin": 19, "leyton": [19, 132], "brown": [19, 132], "sequenti": [19, 129, 131, 132], "proceed": [19, 35, 42, 132], "confer": [19, 132], "intellig": [19, 132], "lion": [19, 132], "num_neighbor": 19, "fix": 19, "neighbourhood": 19, "stdev": 19, "standard": [19, 48, 49], "deviat": [19, 48, 49], "determin": [19, 35, 36, 39, 40, 42, 50, 56, 62, 89, 102, 103, 107, 112, 129, 136], "neigbour": 19, "uniformintegerhyperparamet": [19, 135], "It": [19, 35, 38, 42, 56, 79, 80, 89, 101, 103, 107, 118, 119, 131, 136], "being": [19, 35, 38, 39, 42, 103, 108, 131, 136], "situat": 19, "around": [19, 103, 106], "defaultinitialdesign": [28, 29], "n_config": [28, 29, 30, 31, 32, 33, 34, 113, 118, 119, 123, 125, 127], "n_configs_per_hyperparamet": [28, 29, 30, 31, 32, 33, 34, 118, 119, 125, 127], "max_config_ratio": [28, 29, 30, 31, 32, 33, 34], "25": [28, 29, 30, 31, 32, 33, 34, 123], "initialdesign": [28, 29, 30, 31, 32, 33, 34, 44], "initi": [28, 29, 30, 31, 33, 35, 38, 39, 42, 44, 48, 56, 72, 73, 75, 84, 85, 86, 103, 104, 109, 118, 119, 123, 125, 127, 130], "design": [28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 103, 104, 114, 118, 119, 123, 125, 127, 130], "factorialinitialdesign": [28, 30], "factori": [28, 30, 32, 34], "constructor": [28, 30, 32, 34, 48, 49], "overwritten": [28, 30, 32, 34, 89, 102], "strategi": [28, 31, 79, 80], "multipl": [28, 31, 35, 37, 42, 48, 72, 73, 75, 89, 102, 109, 121, 122, 124, 129, 130, 131, 136], "n_run": [28, 31], "target": [28, 31, 35, 38, 42, 44, 48, 49, 69, 70, 71, 72, 73, 75, 76, 89, 102, 103, 105, 106, 107, 108, 109, 113, 114, 118, 119, 123, 125, 129, 131], "disabl": [28, 31, 91, 93, 109], "how": [28, 31, 35, 36, 37, 39, 40, 42, 43, 44, 46, 89, 101, 102, 103, 104, 106, 109, 113, 121, 127, 129, 130, 131], "mani": [28, 31, 35, 42, 113, 130, 131, 136], "most": [28, 31, 89, 102, 123, 130], "d": [28, 31, 50, 51, 52, 53, 56, 78, 114], "budget": [28, 31, 35, 36, 37, 39, 42, 44, 89, 90, 91, 93, 102, 103, 104, 106, 107, 108, 109, 113, 118, 119, 123, 125, 130, 131, 136], "Not": [28, 31], "limit": [28, 31, 35, 38, 69, 71, 89, 102, 103, 106, 107, 108, 129, 130, 135], "both": [28, 31, 35, 38, 89, 91, 93, 101, 103, 107], "select_configur": [28, 31], "select": [28, 31, 35, 36, 37, 39, 40, 42, 89, 102, 103, 106, 131], "latinhypercubeinitialdesign": [28, 32], "latin": [28, 32], "hypercub": [28, 32], "randominitialdesign": [28, 33], "sobolinitialdesign": [28, 34], "sobol": [28, 34], "sequenc": [28, 34, 35, 38], "scrambl": [28, 34], "scipi": [28, 34], "github": [28, 34, 129, 132, 133], "io": [28, 34], "devdoc": [28, 34], "refer": [28, 34, 35, 37, 42, 121, 129, 131, 132], "stat": [28, 34, 35, 36, 37, 39, 40, 42, 43, 44, 46, 103, 104, 106, 107], "qmc": [28, 34], "html": [28, 34], "inform": [28, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 89, 101, 102, 103, 104, 106, 107, 108, 112, 118, 129], "abstractintensifi": [35, 36, 38, 39, 40], "min_config_cal": [35, 36, 38], "max_config_cal": [35, 36, 38], "2000": [35, 36, 38], "min_challeng": [35, 36, 37, 38, 39, 42], "intensify_percentag": [35, 36, 37, 38, 39, 42], "race": [35, 36, 37, 38, 39, 40, 42, 44, 123, 131, 132, 136], "output": [35, 36, 48, 49, 50, 51, 52, 56, 62, 109, 131, 136], "enough": [35, 36, 103, 106, 131], "instanc": [35, 36, 37, 38, 39, 40, 42, 44, 48, 49, 50, 51, 52, 53, 56, 62, 72, 73, 76, 77, 78, 89, 90, 91, 93, 101, 102, 103, 104, 106, 107, 108, 109, 125, 129, 130, 131, 136], "pair": [35, 36, 38, 89, 102, 103, 107], "well": [35, 36, 103, 106, 118, 119, 136], "associ": [35, 36, 109], "resourc": [35, 36, 103, 104, 108], "worker": [35, 36, 37, 38, 39, 40, 42, 103, 104, 106, 107, 109, 123, 125, 130], "intensifi": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 89, 101, 102, 103, 104, 106, 107, 113], "prepar": [35, 36], "next": [35, 36, 38, 39, 40, 42, 43, 44, 46, 84, 86, 87, 88, 103, 106, 118], "note": [35, 36, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77], "directli": [35, 36, 133], "instance_specif": [35, 36, 37, 38, 39, 40, 42, 103, 106, 107], "specif": [35, 36, 37, 38, 39, 40, 42, 73, 76, 103, 106, 107, 125, 129], "string": [35, 36, 37, 38, 39, 40, 42, 89, 102, 112], "algorithm_walltime_limit": [35, 36, 37, 38, 39, 40, 42, 69, 71], "runtim": [35, 36, 37, 38, 42, 89, 91, 94, 102, 103, 106, 107, 113, 135, 136], "ta": [35, 36, 37, 38, 39, 40, 42, 89, 102, 103, 104, 106, 113], "determinist": [35, 36, 37, 38, 39, 40, 42, 109, 123, 125, 129], "minimum": [35, 36, 37, 38, 39, 40, 42, 44, 73, 76, 89, 102, 109, 131], "per": [35, 36, 38, 73, 76, 89, 102, 113], "sum": [35, 36, 38, 54, 55, 89, 102], "intensifii": [35, 36, 38], "consid": [35, 36, 37, 38, 39, 42, 73, 76, 91, 93, 103, 107, 123, 125], "even": [35, 36, 37, 38, 39, 42, 134], "time_bound": [35, 36, 37, 38, 39, 40, 42], "exhaust": [35, 36, 37, 38, 39, 42, 113], "earlier": [35, 36, 37, 38, 39, 42], "much": [35, 36, 43, 44, 46, 103, 104], "percentag": [35, 36], "higher": [35, 36, 118], "get_next_run": [35, 36, 38, 39, 40], "incumb": [35, 36, 37, 38, 39, 40, 42, 43, 44, 46, 89, 102, 113, 114, 118, 119, 123, 125, 127, 131], "runhistori": [35, 36, 38, 39, 40, 43, 44, 46, 127], "repeat_config": [35, 36, 38, 39, 40], "true": [35, 36, 38, 39, 40, 43, 44, 46, 50, 51, 52, 53, 56, 62, 73, 76, 89, 102, 103, 106, 109, 112, 113, 114, 118, 119, 123, 125, 127], "num_work": [35, 36, 38, 39, 40, 103, 104, 106, 107], "choos": [35, 36, 43, 44, 46, 50, 62, 123], "across": [35, 36, 37, 39, 42, 89, 102, 125, 129, 130, 131, 136], "_next_challeng": [35, 36], "avail": [35, 36, 37, 38, 39, 40, 42, 48, 49, 73, 76, 89, 102, 103, 104, 106, 107], "issu": [35, 36, 129, 132], "skip": [35, 36, 38, 89, 91, 93, 101], "runinfoint": [35, 36, 38, 39, 40, 89, 101], "promis": [35, 36, 38, 39, 40, 130, 131], "chooser": [35, 36, 38, 39, 40, 44, 84, 86], "epm_configuration_choos": [35, 36, 38, 39, 40], "epmchoos": [35, 36, 38, 39, 40, 44, 79, 80], "ran": [35, 36, 38, 39, 40], "far": [35, 36, 37, 38, 39, 40, 42, 44], "again": [35, 36, 38, 39, 40], "run_info": [35, 36, 38, 39, 40, 43, 44, 46, 89, 101, 103, 104, 106, 107], "encapsul": [35, 36, 38, 39, 40, 103, 106], "intent": [35, 36, 38, 39, 40], "indic": [35, 36, 39, 40, 78, 84, 88, 89, 101, 103, 105, 114, 125], "consum": [35, 36, 39, 40, 43, 44, 46], "process_result": [35, 36, 38, 39, 40], "run_valu": [35, 36, 38, 39, 40, 43, 44, 46], "log_trajectori": [35, 36, 38, 39, 40], "stage": [35, 36, 38, 39, 40], "statu": [35, 36, 38, 39, 40, 43, 44, 46, 89, 90, 101, 102, 103, 106, 107], "also": [35, 36, 38, 39, 40, 43, 44, 46, 48, 49, 50, 62, 83, 89, 102, 103, 104, 106, 118, 123, 129, 136], "seen": [35, 36, 39, 40], "sec": [35, 36, 38, 39, 40], "methadata": [35, 36, 38, 39, 40], "exercis": [35, 36, 38, 39, 40, 103, 104, 106, 107], "trajectori": [35, 36, 38, 39, 40], "mayb": [35, 36, 38, 39, 40], "inc_perf": [35, 36, 38, 39, 40], "empir": [35, 36, 38, 39, 40, 44, 89, 102, 131], "hyperband": [35, 39, 42, 123, 125, 131, 136], "eta": [35, 37, 39, 42, 123, 125], "3": [35, 37, 38, 39, 42, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 84, 86, 91, 93, 94, 95, 97, 98, 99, 103, 104, 118, 119, 123, 125, 127, 130, 131, 132, 133, 134], "incumbent_select": [35, 37, 39, 42], "highest_executed_budget": [35, 37, 39, 42], "n_seed": [35, 37, 39, 42, 123, 125], "parallelschedul": [35, 37, 39, 42], "against": [35, 37, 38, 42, 44, 129, 131], "bohb": [35, 37, 42, 123, 129, 131], "robust": [35, 37, 42, 50, 51, 52, 62, 67, 136], "effici": [35, 37, 42, 89, 102, 132, 136], "falkner": [35, 37, 42, 50, 51, 52, 62, 67], "2018": [35, 37, 42], "extens": [35, 37, 131], "success": [35, 37, 39, 42, 89, 91, 93, 94, 95, 97, 98, 99, 102, 123, 125, 131, 136], "halv": [35, 37, 39, 42, 123, 125, 131, 136], "pleas": [35, 37, 129, 130, 132, 133, 134, 136], "successivehalv": [35, 37, 42], "document": [35, 37, 48, 72, 73, 75, 121, 130, 133], "about": [35, 37, 103, 106, 118, 129], "possibl": [35, 37, 69, 71, 109, 125, 136], "wai": [35, 37, 130], "handl": [35, 37, 89, 102, 103, 106, 107], "_hyperband": [35, 37], "privat": [35, 37], "actual": [35, 37, 42, 50, 62, 103, 106], "logic": [35, 37, 42], "parallel": [35, 37, 39, 103, 104, 106, 107, 109, 136], "idl": [35, 37, 39, 42], "min_budget": [35, 37, 39, 42, 109, 123, 125], "max_budget": [35, 37, 39, 42, 109, 123, 125], "factor": [35, 37, 39, 42, 84, 87], "instance_ord": [35, 37, 39, 42, 109, 125], "shuffle_onc": [35, 37, 39, 42, 109, 125], "shuffl": [35, 37, 39, 42, 109, 123, 125], "sh": [35, 37, 39, 42], "everi": [35, 37, 39, 42, 56, 84, 85, 86, 130], "larger": [35, 37, 39, 42], "than": [35, 37, 38, 39, 42, 48, 49, 50, 51, 52, 62, 67, 69, 71, 72, 73, 75, 76, 77, 78, 109, 118, 119, 123, 125, 127], "real": [35, 37, 39, 42, 103, 106, 107, 123], "highest_budget": [35, 37, 39, 42], "any_budget": [35, 37, 39, 42], "highest": [35, 37, 39, 42, 69, 71, 84, 86, 89, 102], "regardless": [35, 37, 39, 42], "race_against": [35, 38], "run_limit": [35, 38], "2147483647": [35, 38], "use_target_algorithm_time_bound": [35, 38], "procedur": [35, 38, 39, 103, 104], "\u03b8_new": [35, 38], "\u03b8_inc": [35, 38], "m": [35, 38, 56, 69, 70, 71], "r": [35, 38], "t_intensifi": [35, 38], "\u03c0": [35, 38], "c\u02c6": [35, 38], "\u03b8": [35, 38], "denot": [35, 38, 114], "cost": [35, 38, 79, 81, 82, 83, 89, 90, 91, 93, 102, 103, 106, 107, 109, 113, 118, 119, 123, 125, 127, 131, 135], "subset": [35, 38, 89, 102, 109, 114, 125, 130, 131], "length": [35, 38, 48, 50, 54, 56, 57, 62, 72, 78, 114], "run_incumb": [35, 38], "less": [35, 38, 69, 71, 114], "4": [35, 38, 48, 49, 119, 123, 125, 127, 133], "uniformli": [35, 38, 131], "6": [35, 38, 91, 93, 94, 95, 97, 98, 99, 125], "drawn": [35, 38, 50, 51, 52, 53, 67], "7": [35, 38, 48, 49, 132], "executerun": [35, 38], "8": [35, 38, 118, 123, 130, 132, 133], "run_challeng": [35, 38], "9": [35, 38, 119, 125, 132, 133], "while": [35, 38], "s_miss": [35, 38], "11": [35, 38], "s_torun": [35, 38], "min": [35, 38, 83, 125], "foreach": [35, 38], "13": [35, 38], "14": [35, 38, 125], "\u03c0_common": [35, 38], "previous": [35, 38, 131], "15": [35, 38, 125], "break": [35, 38], "16": [35, 38, 67], "17": [35, 38], "18": [35, 38], "spent": [35, 38], "exce": [35, 38], "19": [35, 38], "alwai": [35, 38, 119, 129, 130], "sometim": [35, 38], "prevent": [35, 38, 39, 42], "trust": [35, 38, 131], "report": [35, 38, 129], "instead": [35, 38, 44, 73, 76, 113], "measur": [35, 38, 89, 102, 135], "wallclock": [35, 38, 113], "get_next_challeng": [35, 38], "though": [35, 38], "line": [35, 38, 121, 131], "popul": [35, 38, 103, 104, 106, 107], "configs_to_run": [35, 38], "pool": [35, 38], "racer": [35, 38, 39], "within": [35, 38, 103, 104, 129, 136], "regist": [35, 38], "to_run": [35, 38], "brand": [35, 38], "trigger": [35, 38, 103, 105], "_next_iter": [35, 38], "mark": [35, 38], "transit": [35, 38], "flag": [35, 38, 129], "tell": [35, 38, 43, 44, 46], "newli": [35, 38, 114], "charg": [35, 38], "compli": [35, 38, 103, 104], "job": [35, 38, 43, 44, 46, 103, 104, 107], "nevertheless": [35, 38, 103, 104, 129], "could": [35, 38, 89, 102, 103, 105, 109, 112, 125, 129, 130], "happen": [35, 38, 129], "becaus": [35, 38, 89, 102, 103, 105, 106, 119], "try": [35, 38, 125, 129, 130], "circumv": [35, 38], "normal": [35, 38, 50, 51, 52, 62, 79, 81, 82, 83, 89, 102, 114], "No": [35, 38, 118, 119, 127], "particular": [35, 38, 134], "what": [35, 38, 48, 49, 89, 102, 103, 104, 106, 107, 129], "follow": [35, 38, 42, 56, 73, 76, 103, 104, 106, 108, 129, 130, 133, 135, 136], "cap": [35, 38, 89, 102, 103, 104, 106], "post": [35, 38], "confid": [35, 38, 136], "intensifierstag": [35, 38, 41], "process_incumbent_run": [35, 38], "first": [35, 38, 48, 49, 50, 51, 52, 56, 62, 72, 73, 75, 76, 77, 103, 105, 106, 108, 118, 119, 123, 125, 127, 129, 130], "process_first_config_run": [35, 38], "At": [35, 38], "done": [35, 38, 39, 103, 104, 106, 107], "move": [35, 38, 43, 44, 46, 89, 102], "1st": [35, 38], "num_initial_challeng": [35, 39, 42], "instance_seed_pair": [35, 39, 42], "common": [35, 39, 103, 104, 106], "schedul": [35, 39, 84, 85], "fashion": [35, 39, 103, 104, 107], "instanti": [35, 39, 42, 131], "basi": [35, 39, 42], "decid": [35, 39, 103, 106, 132], "pick": [35, 39], "wait": [35, 39, 103, 104, 106, 107], "send": [35, 39], "redirect": [35, 39], "histori": [35, 39, 89, 102], "reli": [35, 39], "choic": [35, 39, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 123], "That": [35, 39], "go": [35, 39], "simpleintensifi": [35, 40], "tradit": [35, 40], "bo": [35, 40, 91, 93, 114, 131, 136], "acquisit": [35, 40, 43, 44, 46, 50, 62, 114, 136], "descript": [35, 42, 129], "supplementari": [35, 42], "mlr": [35, 42], "press": [35, 42], "v80": [35, 42], "falkner18a": [35, 42], "supp": [35, 42], "oper": [35, 42, 112], "kind": [35, 42, 44], "criterion": [35, 42, 44], "top": [35, 42], "total": [35, 42, 73, 76, 103, 104, 107, 117, 118, 119, 123, 124, 125, 127, 128], "qualiti": [35, 42, 103, 106, 107, 131, 135, 136], "posit": [35, 42, 53, 103, 106, 107], "control": [35, 42], "anyth": [35, 42, 112], "eg": [35, 42], "epoch": [35, 42, 109, 121, 122, 124, 130, 131], "train": [35, 42, 43, 46, 48, 49, 53, 73, 76, 109, 123, 125, 130, 131, 135], "neural": [35, 42, 123, 130], "network": [35, 42, 123, 130], "found": [35, 42, 44, 84, 86, 129, 132], "spear_qcp": [35, 42], "smac4ac_sh_spear_qcp": [35, 42], "py": [35, 42, 117, 118, 119, 123, 124, 125, 127, 128], "smac4mf_sgd_inst": [35, 42], "smac4mf_mlp": [35, 42], "_successivehalv": [35, 42], "li": [35, 42], "enum": [41, 89, 101], "arg": [43, 46, 103, 108], "basesmbo": [43, 44, 46], "interfac": [43, 44, 46, 50, 51, 52, 67, 79, 80, 103, 104, 106, 107, 131], "suggest": [43, 44, 46, 103, 105], "depend": [43, 44, 46, 48, 49, 79, 80, 89, 102, 103, 105, 109, 118, 129, 133, 136], "surrog": [43, 44, 46, 48, 72, 109, 114, 118, 119, 130, 131, 136], "time_left": [43, 44, 46], "save": [43, 44, 46, 89, 101, 102, 109, 113, 130], "submit": [43, 44, 46, 103, 104, 106, 107, 113], "relev": [43, 44, 46, 113], "incorpor": [43, 44, 46, 109], "advanc": [43, 44, 46], "task": [43, 44, 46, 103, 104, 107, 109, 130], "addition": [43, 44, 46, 114], "side": [43, 44, 46], "effect": [43, 44, 46], "describ": [43, 44, 46], "regard": [43, 44, 46], "intensif": [43, 44, 46, 118, 119, 127, 131, 136], "runner": [44, 129], "initial_design": [44, 118, 119, 123, 125, 127], "runhistory_encod": 44, "acquisition_optim": 44, "statist": [44, 103, 106, 113], "abstractrunhistory_encod": 44, "convert": [44, 103, 107], "probabl": [44, 67, 68, 84, 85, 87, 136], "some": 44, "acquisitionfunctionmaxim": 44, "acquisitionfunct": 44, "infil": 44, "restore_incumb": 44, "start": [44, 48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 89, 102, 103, 104, 113, 123], "restor": [44, 129], "tae": [44, 103, 106, 129, 131], "baserunn": [44, 103, 104, 106], "executor": 44, "randomdesign": [44, 84, 85, 86, 87, 88], "choosernocooldown": 44, "modulu": [44, 84, 86], "chooserlinearcooldown": 44, "start_modulu": [44, 84, 86], "modulus_incr": [44, 84, 86], "end_modulu": [44, 84, 86], "predict_x_best": [44, 114], "x_best": 44, "observ": [44, 89, 102, 114, 131], "min_samples_model": 44, "build": [44, 89, 101, 118, 119, 123, 125, 133], "configuration_chooser_kwarg": 44, "config_spac": [44, 114], "initial_design_config": 44, "basemodel": [48, 49, 50, 51, 72, 73, 74, 77], "instance_featur": [48, 49, 50, 51, 52, 53, 62, 72, 73, 74, 75, 76, 77, 78, 109, 125], "pca_compon": [48, 49, 50, 51, 52, 53, 62, 72, 73, 74, 75, 76, 77], "api": [48, 49, 69, 70], "dimension": [48, 49, 50, 51, 52, 62, 72, 73, 76, 77, 119, 136], "y": [48, 49, 60, 69, 70, 71, 73, 76, 91, 93, 114], "dimens": [48, 49, 50, 51, 52, 53, 56, 62, 72, 73, 75, 76, 77, 78, 114, 118, 119], "predict": [48, 49, 69, 71, 72, 73, 75, 76, 114, 130, 131], "n_object": [48, 49, 72], "concret": [48, 49], "th": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 84, 86], "entri": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77], "correspond": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 83, 114], "let": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77], "sai": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77], "count": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 109], "uppper": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77], "dim": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77], "n_cat": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77], "nan": [48, 49, 50, 51, 52, 62, 72, 73, 75, 76, 77, 103, 106], "librari": [48, 49, 73, 76, 77], "k": [48, 49, 50, 51, 52, 62, 72, 73, 76, 77, 89, 102, 132], "featur": [48, 49, 50, 51, 52, 62, 69, 70, 71, 72, 73, 76, 77, 78, 89, 91, 93, 101, 109, 114, 125, 129], "pca": [48, 49, 50, 51, 52, 62, 72, 73, 76, 77], "n_feat": [48, 49, 50, 51, 52, 62, 72, 73, 76, 77], "pca_dim": [48, 49, 50, 51, 52, 62, 72, 73, 76, 77], "sklearn": [48, 49, 118, 123, 125, 135], "decomposit": [48, 49], "n_param": [48, 49, 91, 93, 94, 95, 97, 98, 99], "been": [48, 49, 89, 102, 129, 133], "scaler": [48, 49], "withing": [48, 49], "preprocess": [48, 49], "minmaxscal": [48, 49], "var_threshold": [48, 49, 69, 71], "vor": [48, 49], "varianc": [48, 49, 50, 51, 52, 53, 62, 69, 71, 72, 73, 76, 125], "cat": [48, 49], "const": [48, 49], "get_configspac": [48, 49], "cov_return_typ": [48, 49], "diagonal_cov": [48, 49], "shape": [48, 49, 69, 70, 71, 72, 73, 76], "n_sampl": [48, 49, 67, 72, 73, 76], "n_featur": [48, 49, 72, 73, 76], "along": [48, 49, 134], "gaussian": [48, 49, 50, 51, 52, 62, 119, 131, 136], "now": [48, 49, 118, 119, 133], "diagonal_std": [48, 49], "full_cov": [48, 49], "diagon": [48, 49], "covari": [48, 49, 53], "matrix": [48, 49, 53], "whole": [48, 49], "var": [48, 49, 72, 73, 76, 109, 125], "predict_marginalized_over_inst": [48, 49, 72, 73, 76], "marginalis": [48, 49, 72, 73, 76], "multiobjectivemodel": [48, 72, 73, 75], "target_nam": [48, 72, 73, 75, 125], "model_kwarg": [48, 72, 73, 75], "wrapper": [48, 72, 73, 75, 103, 104, 106, 107], "underli": [48, 72, 73, 75], "mandatori": [48, 72, 73, 75], "consult": [48, 72, 73, 75], "num_target": [48, 72, 73, 75], "construct_estim": [48, 72, 73, 75], "construct": [48, 56, 72, 73, 75, 103, 104, 114], "param": [48, 56, 72, 73, 75, 78], "randommodel": [48, 77], "basegaussianprocess": [50, 51, 52, 53, 62], "kernel": [50, 51, 52, 53, 62, 118], "gaussianprocess": [50, 51, 52], "normalize_i": [50, 51, 52, 53, 62], "n_opt_restart": [50, 51, 52, 53], "gp": [50, 51, 52, 53, 56, 62, 67, 131], "hyperparameter\u015d": [50, 51, 52], "likelihood": [50, 51, 52, 53, 56], "robo": [50, 51, 52, 62, 67], "klein": [50, 51, 52, 62, 67], "mansur": [50, 51, 52, 62, 67], "flexibl": [50, 51, 52, 62, 67, 89, 101, 136], "framework": [50, 51, 52, 62, 67, 130, 131, 136], "2017": [50, 51, 52, 62, 67], "workshop": [50, 51, 52, 62, 67], "georg": [50, 51, 52, 62], "make": [50, 51, 52, 62, 84, 86, 103, 104, 106, 107, 109, 123, 125, 129, 131], "sure": [50, 51, 52, 62, 84, 86, 103, 104, 105, 106, 129], "unit": [50, 51, 52, 62], "restart": [50, 51, 52, 84, 85], "sample_funct": [50, 51, 52, 53], "x_test": [50, 51, 52, 53], "n_func": [50, 51, 52, 53], "posterior": [50, 51, 52, 53, 56], "function_sampl": [50, 51, 52, 53], "mcmcgaussianprocess": [50, 62], "n_mcmc_walker": [50, 62], "20": [50, 62, 119, 135], "chain_length": [50, 62], "50": [50, 62, 118], "burnin_step": [50, 62], "mcmc_sampler": [50, 62], "emce": [50, 62], "average_sampl": [50, 62], "out": [50, 62, 103, 108, 112], "markow": [50, 62], "chain": [50, 62, 131], "mont": [50, 62, 131], "carlo": [50, 62, 131], "mcmc": [50, 62, 131], "propos": [50, 62], "walker": [50, 62], "last": [50, 62], "burnin": [50, 62], "sampler": [50, 62], "nut": [50, 62], "augmentedlocalgaussianprocess": 53, "x_in": 53, "y_in": 53, "x_out": [53, 56], "y_out": [53, 56], "base_covar_kernel": 53, "exactgp": 53, "forward": [53, 56], "optimize_kernel_hp": 53, "phase": 53, "degener": 53, "vanilla": 53, "zeromean": 53, "base_covar": 53, "partial": 53, "spars": 53, "multivariatenorm": 53, "set_augment_modul": 53, "x_induc": [53, 56], "later": 53, "infer": 53, "torch": [53, 56], "tensor": [53, 56], "n_induc": 53, "induc": 53, "exactgpmodel": 53, "train_x": 53, "train_i": 53, "exact": 53, "serv": [53, 56, 119], "backbon": 53, "gaussianprocessgpytorch": 53, "gpytorchgaussianprocess": 53, "globallyaugmentedlocalgaussianprocess": [53, 114], "bounds_cont": [53, 78], "bounds_cat": [53, 78], "num_inducing_point": 53, "update_attribut": 53, "variationalgaussianprocess": 53, "approximategp": 53, "variat": 53, "constant": [53, 84, 86, 123, 125], "constantkernel": [54, 55], "constant_valu": [54, 55], "constant_value_bound": [54, 55], "05": [54, 55, 57, 58, 59, 61, 79, 82], "100000": [54, 55, 57, 58, 59, 61], "operate_on": [54, 55, 57, 58, 59, 61], "has_condit": [54, 55, 57, 58, 59, 61], "magicmixinkernel": [54, 55, 57, 58, 59, 61], "hammingkernel": [54, 57], "length_scal": [54, 57, 58, 59], "length_scale_bound": [54, 57, 58, 59], "stationarykernelmixin": [54, 57], "normalizedkernelmixin": [54, 57], "properti": [54, 57, 123, 125], "hyperparameter_length_scal": [54, 57], "matern": [54, 56, 58], "nu": [54, 58], "productkernel": [54, 55, 56], "k1": [54, 55], "k2": [54, 55], "rbf": [54, 56, 59, 118], "sumkernel": [54, 55], "whitekernel": [54, 61], "noise_level": [54, 61], "noise_level_bound": [54, 61], "fitckernel": 56, "base_kernel": 56, "active_dim": 56, "x1": [56, 119], "x2": [56, 119], "diag": 56, "lazytensor": 56, "num_outputs_per_input": 56, "re": [56, 89, 102], "posterior_mean": 56, "fitc": 56, "dens": 56, "n_input": 56, "fitcmean": 56, "covar_modul": 56, "batch_shap": 56, "n_xin": 56, "mixedkernel": 56, "cont_kernel": 56, "cat_kernel": 56, "special": 56, "compos": 56, "work": [56, 103, 104, 114, 119, 129, 131], "Its": [56, 132], "cont_onli": 56, "omit": 56, "construct_gp_kernel": 56, "kernel_kwarg": 56, "cont_dim": [56, 78], "cat_dim": [56, 78], "init": 56, "problem": [56, 103, 106, 107, 119, 129, 131, 136], "sinc": [56, 118, 119, 123, 125, 127, 129], "subspac": [56, 78], "might": [56, 103, 104, 106, 107, 129, 130], "global": [56, 114, 136], "reconstruct": 56, "cont_kernel_kwarg": 56, "constraint": [56, 125], "cat_kernel_kwarg": 56, "scale_kernel": 56, "scale_kernel_kwarg": 56, "sklkernel": 56, "get_conditional_hyperparamet": 60, "gammaprior": [63, 64], "loc": [63, 64], "horseshoeprior": [63, 65], "lognormalprior": [63, 66], "sigma": [63, 66], "tophatprior": [63, 68], "lower_bound": [63, 68], "upper_bound": [63, 68], "gradient": [63, 67, 68, 121, 122, 124], "theta": [63, 67, 68], "adapt": [67, 123, 125, 131], "04": 67, "2019": 67, "whenev": 67, "lnprob": [67, 68], "scalar": [67, 136], "math": 67, "rather": [67, 78], "exponenti": 67, "_lnprob": 67, "sample_from_prior": 67, "_sample_from_prior": 67, "transform": [67, 73, 76, 79, 81, 82, 91, 93, 94, 95, 96, 97, 98, 99, 100, 112, 114, 125], "softtophatprior": 68, "expon": 68, "abstractimput": [69, 70, 71], "censored_x": [69, 70, 71], "censored_i": [69, 70, 71], "uncensored_x": [69, 70, 71], "uncensored_i": [69, 70, 71], "censor": [69, 70, 71, 91, 93], "imputed_i": [69, 70, 71], "randomforestimput": [69, 71], "threshold": [69, 71, 109], "change_threshold": [69, 71], "01": [69, 71, 117, 118, 124, 125, 128], "max_it": [69, 71, 123, 125], "imputor": [69, 71], "pyrfr": [69, 71, 129], "forest": [69, 71, 73, 75, 76, 118, 131, 132, 133, 135, 136], "regressor": [69, 71], "Will": [69, 71, 89, 101, 103, 104], "draw": [69, 71], "runn": [69, 71], "parx": [69, 71], "randomforestwithinst": [69, 71, 73, 76], "stop": [69, 71, 109, 123], "baserandomforest": [73, 74, 76], "multiobjectiverandomforest": [73, 75], "log_i": [73, 76], "num_tre": [73, 76], "do_bootstrap": [73, 76], "n_points_per_tre": [73, 76], "ratio_featur": [73, 76], "8333333333333334": [73, 76], "min_samples_split": [73, 76], "min_samples_leaf": [73, 76], "max_depth": [73, 76, 135], "1048576": [73, 76], "eps_pur": [73, 76], "08": [73, 76], "max_num_nod": [73, 76], "account": [73, 76, 123], "random_forest_run": [73, 76], "rf": [73, 76, 131], "tree": [73, 76], "turn": [73, 76], "bootstrap": [73, 76], "_train": [73, 76], "split": [73, 76, 123, 125], "leaf": [73, 76], "depth": [73, 76, 135], "maxmimum": [73, 76], "node": [73, 76, 103, 104], "rf_opt": [73, 76], "regress": [73, 76, 131], "binary_rss_forest": [73, 76], "hyper": [73, 76], "unlog_i": [73, 76], "base_epm": [73, 76], "abstractepm": [73, 76], "smac2": [73, 76, 129], "distribut": [73, 76, 103, 104, 134], "assumpt": [73, 76], "uncertainti": [73, 76], "check_subspace_point": 78, "expand_bound": 78, "place": 78, "d_cont": [78, 114], "d_cat": 78, "repres": [78, 89, 102, 103, 106, 107, 125, 132], "expand": [78, 109], "subregion": 78, "indices_in_ss": [78, 114], "get_typ": 78, "abstractmultiobjectivealgorithm": [79, 80, 81], "abc": [79, 80, 103, 106, 114], "multi": [79, 80, 81, 82, 89, 102, 109, 124, 125, 127, 130, 131, 136], "rh2epm": [79, 80], "aggregationstrategi": [79, 81, 82], "aggreg": [79, 81], "loss": [79, 81, 82, 103, 108, 125], "util": [79, 81], "meanaggregationstrategi": [79, 81, 127], "parego": 79, "rho": [79, 82], "normalize_cost": 83, "By": [83, 123, 136], "unnorm": 83, "normalized_cost": 83, "cosineannealingrandomdesign": [84, 85], "min_prob": [84, 85], "max_prob": [84, 85], "restart_iter": [84, 85], "decreas": [84, 85, 86, 87], "cosin": [84, 85], "anneal": [84, 85], "probil": [84, 85, 87], "lowest": [84, 85, 89, 102], "increas": [84, 85, 86, 123, 125], "counter": [84, 85], "linearcooldownrandomdesign": [84, 86], "fraction": [84, 86], "amount": [84, 86, 103, 104], "reach": [84, 86], "noth": [84, 86, 87], "probabilitycooldownrandomdesign": [84, 87], "prob": [84, 87], "cool_down_fac": [84, 87], "multipli": [84, 87], "probabilityrandomdesign": [84, 87], "begin": [84, 88], "dataorigin": [89, 101, 102], "definit": [89, 101], "gather": [89, 101], "disk": [89, 101, 102], "external_same_inst": [89, 101, 102], "extern": [89, 101, 102], "anoth": [89, 101, 131], "psmac": [89, 101, 102], "external_different_inst": [89, 101], "due": [89, 101], "instanceseedbudgetkei": [89, 90], "instanceseedkei": [89, 90], "overwrite_existing_run": [89, 102], "runkei": [89, 90, 102, 127], "importantli": [89, 102], "full": [89, 102, 118, 119, 123, 125, 127], "averag": [89, 102, 113, 123], "theoret": [89, 102], "neither": [89, 102], "nor": [89, 102], "guarante": [89, 102], "picklabl": [89, 102], "were": [89, 102, 121], "ids_config": [89, 102, 127], "num_runs_per_config": [89, 102], "__contains__": [89, 102], "semant": [89, 102], "__getitem__": [89, 102], "v": [89, 102, 103, 104, 125], "enabl": [89, 102, 133], "__len__": [89, 102], "len": [89, 102], "starttim": [89, 90, 102], "endtim": [89, 90, 102], "additional_info": [89, 90, 102, 103, 106, 107], "force_upd": [89, 102], "timeout": [89, 91, 93, 94, 95, 97, 98, 99, 102], "crash": [89, 91, 93, 94, 95, 97, 98, 99, 102, 103, 105, 106, 129], "abort": [89, 102, 103, 105], "memout": [89, 102], "cutoff": [89, 91, 93, 102], "timestamp": [89, 102], "field": [89, 102], "host_id": [89, 102], "forc": [89, 102], "average_cost": [89, 102], "instance_seed_budget_kei": [89, 102], "run_histori": [89, 102], "queri": [89, 102], "wrt": [89, 102], "warn": [89, 102, 123, 125], "compute_all_cost": [89, 102], "scratch": [89, 102], "cost_perf_config": [89, 102], "runs_per_config": [89, 102], "accordingli": [89, 102], "merge_foreign_data": [89, 102], "empti": [89, 102, 103, 104, 106, 107], "get_all_config": [89, 102], "get_all_configs_per_budget": [89, 102], "budget_subset": [89, 91, 93, 102], "get_cost": [89, 102], "docstr": [89, 102], "get_instance_costs_for_config": [89, 102], "cost_per_inst": [89, 102], "get_min_cost": [89, 102], "min_cost": [89, 102], "get_runs_for_config": [89, 102], "only_max_observed_budget": [89, 102], "ignor": [89, 102, 103, 104, 118, 119, 123, 125, 127], "instance_seed_budget_pair": [89, 102], "incremental_update_cost": [89, 102], "increment": [89, 102], "load_json": [89, 102], "fn": [89, 102], "c": [89, 102, 118, 123, 125, 127, 130, 132, 135], "load": [89, 102, 109, 113, 118], "json": [89, 102, 113], "fidel": [89, 102, 109, 118, 123, 125, 130, 131, 136], "save_json": [89, 102], "save_extern": [89, 102], "sum_cost": [89, 102], "individu": [89, 102], "external_ful": [89, 102], "_config_id_to_inst_seed_budget": [89, 102], "through": [89, 102], "update_cost": [89, 102], "cost_per_config": [89, 102], "update_from_json": [89, 102], "statustyp": [89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 103, 104, 106, 107, 108], "intenum": [89, 101], "runhistoryeipsencod": [91, 94], "success_st": [91, 93, 94, 95, 97, 98, 99], "memoryout": [91, 93, 94, 95, 97, 98, 99], "donotadv": [91, 93, 94, 95, 97, 98, 99], "impute_censored_data": [91, 93, 94, 95, 97, 98, 99], "impute_st": [91, 93, 94, 95, 97, 98, 99], "consider_for_higher_budgets_st": [91, 93, 94, 95, 97, 98, 99], "scale_percentag": [91, 93, 94, 95, 97, 98, 99], "abstractrunhistoryencod": [91, 94, 95], "todo": [91, 94, 95, 96, 97, 98, 99, 100], "transform_response_valu": [91, 93, 94, 95, 96, 97, 98, 99, 100], "respons": [91, 93, 94, 95, 96, 97, 98, 99, 100], "runhistoryencod": [91, 93, 95, 96, 97, 98, 99, 100], "runhistoryinversescaledencod": [91, 96], "linearli": [91, 96, 98, 99, 100], "them": [91, 96, 98, 99, 100, 103, 104, 123, 131], "invers": [91, 96], "runhistorylogencod": [91, 97], "runhistorylogscaledencod": [91, 93, 98], "runhistoryrawencod": [91, 93], "runhistroi": [91, 93], "raw": [91, 93, 114], "approach": [91, 93, 118], "transform_raw_valu": [91, 93], "transform_with_raw": [91, 93], "y_raw": [91, 93], "runhistoryrawscaledencod": [91, 93], "runhistoryscaledencod": [91, 99], "runhistorysqrtscaledencod": [91, 100], "squar": [91, 100, 127], "root": [91, 100, 129], "daskparallelrunn": [103, 104], "single_work": [103, 104], "n_worker": [103, 104, 109, 130], "patienc": [103, 104], "dask_client": [103, 104], "intend": [103, 104], "bridg": [103, 104], "pattern": [103, 104], "wrap": [103, 104, 129], "capabl": [103, 104, 136], "serial": [103, 104, 106, 107], "Then": [103, 104, 118], "dask": [103, 104, 109], "precis": [103, 104], "dictat": [103, 104, 106, 107], "tae_runn": [103, 104, 135], "launch": [103, 104, 106, 107], "submit_run": [103, 104, 106, 107], "receiv": [103, 104, 134], "pickl": [103, 104], "come": [103, 104], "Such": [103, 104], "get_finished_run": [103, 104, 106, 107], "futur": [103, 104], "manag": [103, 104, 109], "client": [103, 104], "fail": [103, 104, 105, 109], "directori": [103, 104, 109, 129], "server": [103, 104], "cluster": [103, 104], "attach": [103, 104], "run_obj": [103, 104, 106, 135], "par_factor": [103, 104, 106], "crash_cost": [103, 104, 106, 109], "abort_i_first_run_crash": [103, 104], "__del__": [103, 104], "finish": [103, 104, 106, 107, 123, 125], "until": [103, 104, 106, 107], "get_finish": [103, 104, 106, 107], "dynam": [103, 104], "alloc": [103, 104], "pending_run": [103, 104, 106, 107], "instantli": [103, 104, 106, 107], "On": [103, 104, 106, 107, 121, 122, 124], "pend": [103, 104, 106, 107], "embed": [103, 104, 106], "run_wrapp": [103, 104, 106], "like": [103, 104, 118, 130], "child": [103, 104, 106, 118, 123, 129], "decis": [103, 104, 106, 107], "firstruncrashedexcept": [103, 105, 106], "targetalgorithmabortexcept": [103, 105], "target_algorithm": [103, 106, 107, 108, 118, 127, 130], "interact": [103, 106], "complex": [103, 106, 136], "perspect": [103, 106], "among": [103, 106], "realli": [103, 106], "translat": [103, 106], "offer": [103, 106, 136], "mechan": [103, 106, 123, 131, 132], "For": [103, 106, 107, 109, 123, 129, 130, 132], "abl": [103, 106, 118], "abort_on_first_run_crash": [103, 106], "pai": [103, 106], "arbitrari": [103, 106, 107, 119, 132], "domain": [103, 106, 107, 119], "regret": [103, 106, 107], "etc": [103, 106, 107, 109], "took": [103, 106, 107], "exec": [103, 106], "simplifi": [103, 106], "isol": [103, 106], "eventu": [103, 106], "fifo": [103, 106], "submiss": [103, 106], "endeavor": [103, 106], "serialrunn": [103, 107, 108], "extend": [103, 107, 131], "properli": [103, 107], "fill": [103, 107, 114], "immedi": [103, 107], "usual": [103, 105], "assum": [103, 105, 118, 119, 123, 125, 127, 129], "targetalgorithmrunn": [103, 108], "signatur": [103, 108], "executetafuncdict": [103, 108], "inspect": [103, 108], "figur": [103, 108, 127, 136], "correct": [103, 108], "algorithm_kwarg": [103, 108], "pynish": [103, 108, 109, 129], "walltim": [103, 108], "memori": [103, 108, 109, 129], "posixpath": 109, "smac3_output": 109, "termination_cost_threshold": 109, "walltime_limit": [109, 123, 125, 130], "cputime_limit": 109, "trial_walltime_limit": 109, "trial_memory_limit": 109, "n_trial": [109, 118, 119, 123, 125, 127], "100": [109, 119, 123, 135, 136], "enviro": 109, "variabl": [109, 123, 130], "therefor": [109, 118, 123, 130, 131, 133], "context": 109, "frame": 109, "identifi": 109, "your": [109, 123, 125, 129, 131, 133, 135, 136], "path": [109, 130], "ensur": [109, 129], "trial": [109, 123, 131], "cross": [109, 116, 117, 121, 123, 125, 131], "cpu": 109, "contraint": 109, "enforc": [109, 129], "ohterwis": 109, "spawn": 109, "mb": [109, 117, 124, 128], "dataset": [109, 118, 121, 122, 123, 124, 129, 136], "reproduc": [109, 129], "greather": 109, "__post_init__": 109, "count_instance_featur": 109, "count_object": 109, "customformatt": 112, "fmt": 112, "datefmt": 112, "style": 112, "formatt": 112, "format": 112, "record": 112, "text": [112, 132], "operand": 112, "yield": 112, "coupl": 112, "preparatori": 112, "carri": 112, "messag": 112, "logrecord": 112, "getmessag": 112, "usestim": 112, "formattim": 112, "event": 112, "formatexcept": 112, "append": [112, 127], "format_arrai": 112, "format_v": 112, "hold": [112, 118], "serializ": 112, "get_remaing_walltim": 113, "subtract": 113, "get_remaining_cputim": 113, "get_remaining_tri": 113, "get_used_walltim": 113, "is_budget_exhaust": 113, "ta_budget": 113, "debug": [113, 129], "start_tim": 113, "timer": 113, "substract": 113, "update_average_configs_per_intensifi": 113, "trajectoryitem": 113, "walltime_us": 113, "target_algorithm_walltime_us": 113, "target_algorithm_run": 113, "trajentri": 113, "challengerlistloc": 114, "cs_local": 114, "cs_global": 114, "config_origin": 114, "incumbent_arrai": 114, "localsubspac": 114, "hps_type": 114, "bounds_ss_cont": 114, "bounds_ss_cat": 114, "model_loc": 114, "gaussian_process": 114, "gpytorch": 114, "model_local_kwarg": 114, "acq_func_loc": 114, "expected_improv": 114, "acq_func_local_kwarg": 114, "initial_data": 114, "activate_dim": 114, "equival": 114, "support": [114, 116, 117, 121, 123, 125, 130, 136], "miss": 114, "notic": 114, "entir": 114, "preserv": 114, "complementari": 114, "add_new_observ": 114, "fit_forbidden_to_ss": 114, "exactli": 114, "forbidden_ss": 114, "generate_challeng": 114, "optimizer_kwarg": 114, "_generate_challeng": 114, "normalize_input": 114, "x_normal": 114, "update_incumbent_arrai": 114, "new_incumb": 114, "update_model": 114, "acquir": 114, "synthet": [116, 117, 121], "00": [117, 123, 124, 125, 128], "02": 117, "169": 117, "examples_bas": 117, "synthetic_funct": [117, 119], "153": [117, 119], "svm_cv": [117, 118], "016": [117, 118], "click": [118, 119, 123, 125, 127], "download": [118, 119, 121, 123, 125, 127], "iri": 118, "benchmark": [118, 131], "mix": 118, "natur": 118, "03": [118, 123], "85": [118, 119, 125, 127], "base_smbo": [118, 119, 123, 125, 127], "144": [118, 119, 123, 125, 127], "155": [118, 119, 123, 125, 127], "242": [118, 119, 127], "441": [118, 119, 127], "601": [118, 119, 127], "0667": 118, "abstract_intensifi": [118, 119, 123, 125, 127], "345": [118, 119, 125, 127], "0133": 118, "better": [118, 119, 123, 125, 127, 130, 132, 135], "365": [118, 119, 123, 125, 127], "368": [118, 119, 123, 125, 127], "03992740880515713": 118, "2760639488343621": 118, "linear": 118, "shrink": 118, "324": [118, 119, 123, 125, 127], "325": [118, 119, 123, 125, 127], "013333333333333308": 118, "integ": [118, 123], "incondit": [118, 123], "svm": 118, "model_select": [118, 123, 125], "cross_val_scor": [118, 123, 125], "hyperparameterfacad": [118, 127, 130], "__copyright__": [118, 119, 123, 125, 127], "copyright": [118, 119, 123, 125, 127], "2021": [118, 119, 123, 125, 127, 129, 132], "automl": [118, 119, 123, 125, 127, 129, 132, 133], "org": [118, 119, 123, 125, 127, 132, 134], "freiburg": [118, 119, 123, 125, 127], "hannov": [118, 119, 123, 125, 127], "__license__": [118, 119, 123, 125, 127], "bsd": [118, 119, 123, 125, 127, 134], "wide": 118, "load_iri": 118, "score": [118, 123, 125, 135], "config_dict": 118, "gamma": 118, "gamma_valu": 118, "auto": 118, "pop": 118, "classifi": [118, 123, 125], "svc": 118, "random_st": [118, 123, 125], "cv": [118, 123, 125, 131], "__name__": [118, 119, 123, 125, 127, 135], "__main__": [118, 119, 123, 125, 127, 135], "rang": [118, 119, 123, 125, 130], "our": [118, 123, 125, 129, 132], "poli": 118, "sigmoid": 118, "001": [118, 123], "1000": [118, 119], "degre": 118, "coef": 118, "coef0": 118, "0001": [118, 123], "use_degre": 118, "use_coef": 118, "use_gamma": 118, "use_gamma_valu": 118, "default_valu": [118, 119, 123], "round": [118, 119, 123, 125], "find": [118, 119, 130, 131, 136], "incumbent_valu": [118, 119, 123], "script": [118, 119, 123, 125, 127], "minut": [118, 119, 123, 125, 127, 130], "jupyt": [118, 119, 121, 123, 125, 127], "notebook": [118, 119, 121, 123, 125, 127], "ipynb": [118, 119, 123, 125, 127], "2d": [119, 121, 126, 128], "rosenbrock": 119, "black": [119, 130, 131, 136], "box": [119, 130, 131, 136], "numer": 119, "larg": 119, "16916": 119, "1102": 119, "7878": 119, "4656": 119, "x0": 119, "9968221839517355": 119, "03135360777378082": 119, "30847043171525": 119, "21179260686039925": 119, "9344": 119, "1521441831066923": 119, "991027821936083": 119, "934388186264153": 119, "93": 119, "blackboxfacad": [119, 130], "rosenbrock_2d": 119, "toi": 119, "know": 119, "commun": 119, "often": [119, 129], "minimium": 119, "x_i": 119, "interv": 119, "chosen": [121, 123], "show": [121, 127, 129], "varieti": 121, "command": [121, 131, 133], "layer": [121, 122, 124, 125], "perceptron": [121, 122, 124, 125], "stochast": [121, 122, 124], "descent": [121, 122, 124], "schaffer": [121, 126, 128], "examples_python": 121, "zip": 121, "examples_jupyt": 121, "mlp": [123, 125], "advantag": [123, 129], "good": 123, "aggress": [123, 132, 136], "deep": 123, "digit": [123, 125], "accuraci": [123, 130, 135], "fold": 123, "closest": 123, "38": 123, "parallel_schedul": [123, 125], "150": [123, 125, 127], "howev": [123, 125, 129, 130], "system": [123, 125, 133], "successive_halv": [123, 125], "497": [123, 125], "437": [123, 125], "809": [123, 125], "1050": 123, "0495": 123, "0568": 123, "3333": 123, "batch_siz": 123, "learning_rate_init": 123, "006677306766018313": 123, "n_layer": 123, "n_neuron": 123, "123": 123, "56": 123, "solver": 123, "lbfg": 123, "adam": 123, "641": [123, 125], "33": 123, "0345": 123, "0406": 123, "0000": 123, "tanh": 123, "relu": 123, "117": 123, "learning_r": [123, 125, 130], "008282754423021153": 123, "52": 123, "sgd": [123, 125], "0189": 123, "91": 123, "006390670908394775": 123, "183": 123, "01892138656762621": 123, "basicconfig": 123, "level": 123, "equalscondit": 123, "load_digit": [123, 125], "convergencewarn": 123, "stratifiedkfold": [123, 125], "neural_network": 123, "mlpclassifi": 123, "illustr": 123, "256": 123, "logist": 123, "30": [123, 125], "300": 123, "200": 123, "invscal": [123, 125], "restrict": 123, "rate": [123, 130], "use_lr": 123, "use_lr_init": 123, "batch": 123, "use_batch_s": 123, "deactiv": 123, "accept": [123, 129, 130], "placehold": 123, "lr": 123, "lr_init": 123, "catch_warn": [123, 125], "filterwarn": [123, 125], "categori": 123, "hidden_layer_s": 123, "ceil": 123, "n_split": [123, 125], "error_scor": 123, "default_config": 123, "environ": [123, 130, 133], "40": [123, 125], "least": 123, "five": 123, "get_initial_design": 123, "48": [123, 124], "605": [123, 124], "mlp_epoch": [123, 124], "32": 124, "504": 124, "examples_multi_fidel": 124, "sgd_dataset": [124, 125], "43": [124, 125], "899": [124, 125], "altern": [125, 133, 135], "had": 125, "binari": 125, "longer": 125, "45": 125, "0056": 125, "0084": 125, "alpha": [125, 127], "5488135039273248": 125, "7151893663724195": 125, "eta0": 125, "0006273927602293597": 125, "00153165082437487": 125, "l1_ratio": 125, "317983179393976": 125, "41426299451466997": 125, "0028": 125, "6027633760716439": 125, "03077201812975574": 125, "06414749634878436": 125, "67": 125, "27": 125, "006249006102246613": 125, "__future__": [125, 127], "annot": [125, 127], "itertool": 125, "linear_model": 125, "sgdclassifi": 125, "digitsdataset": 125, "__init__": 125, "_data": 125, "get_inst": 125, "classa": 125, "classb": 125, "get_instance_featur": 125, "_": 125, "get_instance_data": 125, "logical_or": 125, "few": [125, 136], "00001": 125, "clf": 125, "penalti": 125, "elasticnet": 125, "early_stop": 125, "lot": 125, "beforehand": 125, "default_cost": 125, "incumbent_cost": 125, "shown": 127, "3059": 127, "3062": 127, "9324859157204628": 127, "8640956835343081": 127, "2866": 127, "8640174051851504": 127, "8639784171134841": 127, "8621703607018727": 127, "2865": 127, "8613802024158463": 127, "8607574654896779": 127, "86057300810144": 127, "8602103898606681": 127, "859905318504627": 127, "8598739916684282": 127, "8597295956781026": 127, "859520085979836": 127, "8593199836090943": 127, "8587705866744733": 127, "8574074961764109": 127, "8571993851749746": 127, "8569651981964457": 127, "856959899407526": 127, "8567608637383648": 127, "8562151402955451": 127, "2864": 127, "8557358664458059": 127, "2527": 127, "2558": 127, "0849066921609452": 127, "25271859054525136": 127, "matplotlib": 127, "pyplot": 127, "plt": 127, "multi_object": 127, "aggregation_strategi": 127, "f1": 127, "f2": 127, "sqrt": 127, "metric1": 127, "metric2": 127, "plot": 127, "all_x": 127, "scatter": 127, "blue": 127, "zorder": 127, "3000": 127, "vline": 127, "linestyl": 127, "dash": 127, "color": 127, "red": 127, "hline": 127, "plot_from_smac": 127, "rh": 127, "multi_objective_algorithm": 127, "724": [127, 128], "examples_multi_object": 128, "smac3": [129, 132, 133], "reimplement": 129, "tool": [129, 132, 136], "slightli": 129, "comparison": 129, "stabl": 129, "releas": 129, "v2": 129, "java": 129, "maintain": 129, "recommend": [129, 133], "applic": 129, "cannot": 129, "instal": 129, "cryptic": 129, "gcc": 129, "compil": 129, "link": 129, "anaconda": 129, "my": 129, "commandlin": [129, 136], "verbos": 129, "tri": [129, 130], "ye": 129, "hpbandster": [129, 136], "smac4hpo": 129, "close": 129, "discov": 129, "bug": 129, "behav": 129, "open": 129, "hasn": 129, "tracker": 129, "latest": 129, "u": 129, "setup": 129, "help": 129, "resolv": 129, "packag": [129, 132], "feel": 129, "free": [129, 131, 134], "screenshot": 129, "contribut": [129, 132], "discuss": 129, "idea": [129, 132], "care": 129, "question": 129, "feedback": 129, "prefer": 129, "ongo": 129, "guid": 129, "thu": 129, "realiz": 129, "signific": 129, "necessarili": 129, "wors": 129, "discard": [129, 136], "earli": [129, 136], "lead": 129, "why": 129, "colab": 129, "mac": [129, 133], "yet": [129, 133], "mai": 129, "overcom": 129, "limit_resourc": 129, "core": [130, 132], "four": 130, "explain": 130, "page": [130, 132], "tunabl": 130, "would": 130, "potenti": 130, "multilayerperceptron": 130, "smaller": 130, "120": 130, "eight": 130, "satisfi": 130, "hyperbandfacad": 130, "algorithmconfigurationfacad": 130, "region": 130, "hyperparamt": 130, "explor": [130, 131], "exploit": [130, 131], "trade": 130, "emphas": 130, "highli": 130, "modular": 130, "pipelin": 130, "weigh": 131, "hb": 131, "novel": 131, "bandit": 131, "roar": 131, "onlin": 131, "compar": 131, "bb": 131, "mf": 131, "therebi": 131, "prematur": 131, "markov": 131, "metric": [131, 135], "word": 131, "pc": 131, "written": [131, 132, 133], "character": 131, "These": 131, "unseen": 131, "untest": 131, "analyz": 131, "under": [131, 134], "govern": 131, "known": 131, "cli": [131, 136], "python3": [132, 133], "mention": 132, "cite": 132, "jmlr": 132, "inproceed": 132, "lindauer": 132, "arxiv21a": 132, "author": 132, "mariu": 132, "katharina": 132, "eggensperg": 132, "matthia": 132, "feurer": 132, "andr\u00e9": 132, "biedenkapp": 132, "difan": 132, "deng": 132, "carolin": 132, "benjamin": 132, "tim": 132, "ruhkopf": 132, "ren\u00e9": 132, "sass": 132, "titl": 132, "versatil": 132, "booktitl": 132, "arxiv": 132, "2109": 132, "09831": 132, "year": 132, "url": 132, "ab": 132, "develop": 132, "visit": 132, "guidelin": 132, "furthermor": 133, "swig": 133, "linux": 133, "apt": 133, "intel": 133, "haven": 133, "gxx_linux": 133, "gcc_linux": 133, "pypi": 133, "pip": 133, "Or": 133, "clone": 133, "git": 133, "cd": 133, "dev": 133, "channel": 133, "achiev": 133, "channel_prior": 133, "strict": 133, "instruct": 133, "offici": 133, "feedstock": 133, "softwar": 134, "redistribut": 134, "modifi": 134, "term": 134, "hope": 134, "warranti": 134, "impli": 134, "merchant": 134, "FOR": 134, "purpos": 134, "copi": 134, "opensourc": 134, "ensembl": 135, "randomforestclassifi": 135, "smac_bb_facad": 135, "smac4bb": 135, "x_train": 135, "y_train": 135, "randint": 135, "x_val": 135, "y_val": 135, "train_random_forest": 135, "deriv": 135, "runcount": 135, "best_found_config": 135, "pre": 136, "typic": 136, "solv": 136, "low": 136, "artifici": 136, "characterist": 136, "awar": 136, "agnost": 136, "hierarch": 136, "oject": 136, "judg": 136, "unsuit": 136, "massiv": 136, "consequ": 136, "languag": 136, "thompson": 136, "tabl": 136, "hypermapp": 136, "optuna": 136, "hyperopt": 136, "botorch": 136, "openbox": 136}, "objects": {"smac": [[4, 0, 0, "-", "acquisition"], [18, 0, 0, "-", "callback"], [19, 0, 0, "-", "configspace"], [21, 0, 0, "-", "constants"], [22, 0, 0, "-", "facade"], [28, 0, 0, "-", "initial_design"], [35, 0, 0, "-", "intensification"], [43, 0, 0, "-", "loop"], [48, 0, 0, "-", "model"], [79, 0, 0, "-", "multi_objective"], [84, 0, 0, "-", "random_design"], [89, 0, 0, "-", "runhistory"], [103, 0, 0, "-", "runner"], [109, 0, 0, "-", "scenario"], [110, 0, 0, "-", "utils"]], "smac.acquisition": [[4, 1, 1, "", "AbstractAcquisitionOptimizer"], [4, 1, 1, "", "DifferentialEvolution"], [4, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [4, 1, 1, "", "LocalAndSortedRandomSearch"], [4, 1, 1, "", "LocalSearch"], [4, 1, 1, "", "RandomSearch"], [5, 0, 0, "-", "abstract_acqusition_optimizer"], [6, 0, 0, "-", "differential_evolution"], [7, 0, 0, "-", "functions"], [15, 0, 0, "-", "local_and_random_search"], [16, 0, 0, "-", "local_search"], [17, 0, 0, "-", "random_search"]], "smac.acquisition.AbstractAcquisitionOptimizer": [[4, 2, 1, "", "get_meta"], [4, 2, 1, "", "maximize"]], "smac.acquisition.LocalAndSortedRandomSearch": [[4, 2, 1, "", "get_meta"]], "smac.acquisition.LocalSearch": [[4, 2, 1, "", "get_meta"]], "smac.acquisition.abstract_acqusition_optimizer": [[5, 1, 1, "", "AbstractAcquisitionOptimizer"], [5, 1, 1, "", "ChallengerList"], [5, 1, 1, "", "FixedSet"]], "smac.acquisition.abstract_acqusition_optimizer.AbstractAcquisitionOptimizer": [[5, 2, 1, "", "get_meta"], [5, 2, 1, "", "maximize"]], "smac.acquisition.differential_evolution": [[6, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.functions": [[7, 1, 1, "", "AbstractAcquisitionFunction"], [7, 1, 1, "", "EI"], [7, 1, 1, "", "EIPS"], [7, 1, 1, "", "IntegratedAcquisitionFunction"], [7, 1, 1, "", "LCB"], [7, 1, 1, "", "PI"], [7, 1, 1, "", "PriorAcquisitionFunction"], [7, 1, 1, "", "TS"], [8, 0, 0, "-", "abstract_acquisition_function"], [9, 0, 0, "-", "confidence_bound"], [10, 0, 0, "-", "expected_improvement"], [11, 0, 0, "-", "integrated"], [12, 0, 0, "-", "prior"], [13, 0, 0, "-", "probability_improvement"], [14, 0, 0, "-", "thompson"]], "smac.acquisition.functions.AbstractAcquisitionFunction": [[7, 2, 1, "", "__call__"], [7, 2, 1, "", "get_meta"], [7, 3, 1, "", "logger"], [7, 3, 1, "", "model"], [7, 2, 1, "", "update"]], "smac.acquisition.functions.EI": [[7, 2, 1, "", "get_meta"]], "smac.acquisition.functions.IntegratedAcquisitionFunction": [[7, 2, 1, "", "get_meta"], [7, 2, 1, "", "update"]], "smac.acquisition.functions.LCB": [[7, 2, 1, "", "get_meta"]], "smac.acquisition.functions.PI": [[7, 2, 1, "", "get_meta"]], "smac.acquisition.functions.PriorAcquisitionFunction": [[7, 2, 1, "", "get_meta"], [7, 2, 1, "", "update"]], "smac.acquisition.functions.TS": [[7, 2, 1, "", "get_meta"]], "smac.acquisition.functions.abstract_acquisition_function": [[8, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction": [[8, 2, 1, "", "__call__"], [8, 2, 1, "", "get_meta"], [8, 3, 1, "", "logger"], [8, 3, 1, "", "model"], [8, 2, 1, "", "update"]], "smac.acquisition.functions.confidence_bound": [[9, 1, 1, "", "LCB"]], "smac.acquisition.functions.confidence_bound.LCB": [[9, 2, 1, "", "get_meta"]], "smac.acquisition.functions.expected_improvement": [[10, 1, 1, "", "EI"], [10, 1, 1, "", "EIPS"]], "smac.acquisition.functions.expected_improvement.EI": [[10, 2, 1, "", "get_meta"]], "smac.acquisition.functions.integrated": [[11, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.functions.integrated.IntegratedAcquisitionFunction": [[11, 2, 1, "", "get_meta"], [11, 2, 1, "", "update"]], "smac.acquisition.functions.prior": [[12, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.functions.prior.PriorAcquisitionFunction": [[12, 2, 1, "", "get_meta"], [12, 2, 1, "", "update"]], "smac.acquisition.functions.probability_improvement": [[13, 1, 1, "", "PI"]], "smac.acquisition.functions.probability_improvement.PI": [[13, 2, 1, "", "get_meta"]], "smac.acquisition.functions.thompson": [[14, 1, 1, "", "TS"]], "smac.acquisition.functions.thompson.TS": [[14, 2, 1, "", "get_meta"]], "smac.acquisition.local_and_random_search": [[15, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [15, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.local_and_random_search.LocalAndSortedRandomSearch": [[15, 2, 1, "", "get_meta"]], "smac.acquisition.local_search": [[16, 1, 1, "", "LocalSearch"]], "smac.acquisition.local_search.LocalSearch": [[16, 2, 1, "", "get_meta"]], "smac.acquisition.random_search": [[17, 1, 1, "", "RandomSearch"]], "smac.configspace": [[19, 1, 1, "", "Configuration"], [19, 1, 1, "", "ConfigurationSpace"], [19, 4, 1, "", "ForbiddenValueError"], [19, 5, 1, "", "convert_configurations_to_array"], [19, 5, 1, "", "get_one_exchange_neighbourhood"], [20, 0, 0, "-", "util"]], "smac.configspace.Configuration": [[19, 2, 1, "", "__eq__"], [19, 2, 1, "", "__hash__"], [19, 2, 1, "", "__ne__"], [19, 2, 1, "", "get"], [19, 2, 1, "", "get_array"], [19, 2, 1, "", "get_dictionary"], [19, 2, 1, "", "is_valid_configuration"], [19, 2, 1, "", "keys"]], "smac.configspace.ConfigurationSpace": [[19, 2, 1, "", "__eq__"], [19, 2, 1, "", "__hash__"], [19, 2, 1, "", "__iter__"], [19, 2, 1, "", "__ne__"], [19, 2, 1, "", "add_condition"], [19, 2, 1, "", "add_conditions"], [19, 2, 1, "", "add_configuration_space"], [19, 2, 1, "", "add_forbidden_clause"], [19, 2, 1, "", "add_forbidden_clauses"], [19, 2, 1, "", "add_hyperparameter"], [19, 2, 1, "", "add_hyperparameters"], [19, 2, 1, "", "check_configuration"], [19, 2, 1, "", "check_configuration_vector_representation"], [19, 2, 1, "", "estimate_size"], [19, 2, 1, "", "generate_all_continuous_from_bounds"], [19, 2, 1, "", "get_active_hyperparameters"], [19, 2, 1, "", "get_all_conditional_hyperparameters"], [19, 2, 1, "", "get_all_unconditional_hyperparameters"], [19, 2, 1, "", "get_child_conditions_of"], [19, 2, 1, "", "get_children_of"], [19, 2, 1, "", "get_conditions"], [19, 2, 1, "", "get_default_configuration"], [19, 2, 1, "", "get_forbiddens"], [19, 2, 1, "", "get_hyperparameter"], [19, 2, 1, "", "get_hyperparameter_by_idx"], [19, 2, 1, "", "get_hyperparameter_names"], [19, 2, 1, "", "get_hyperparameters"], [19, 2, 1, "", "get_hyperparameters_dict"], [19, 2, 1, "", "get_idx_by_hyperparameter_name"], [19, 2, 1, "", "get_parent_conditions_of"], [19, 2, 1, "", "get_parents_of"], [19, 2, 1, "", "keys"], [19, 2, 1, "", "remove_hyperparameter_priors"], [19, 2, 1, "", "sample_configuration"], [19, 2, 1, "", "seed"], [19, 2, 1, "", "substitute_hyperparameters_in_conditions"], [19, 2, 1, "", "substitute_hyperparameters_in_forbiddens"]], "smac.configspace.util": [[20, 5, 1, "", "convert_configurations_to_array"]], "smac.facade": [[23, 0, 0, "-", "algorithm_configuration_facade"], [24, 0, 0, "-", "blackbox_facade"], [25, 0, 0, "-", "facade"], [26, 0, 0, "-", "hyperparameter_facade"], [27, 0, 0, "-", "multi_fidelity_facade"]], "smac.initial_design": [[28, 1, 1, "", "DefaultInitialDesign"], [28, 1, 1, "", "FactorialInitialDesign"], [28, 1, 1, "", "InitialDesign"], [28, 1, 1, "", "LatinHypercubeInitialDesign"], [28, 1, 1, "", "RandomInitialDesign"], [28, 1, 1, "", "SobolInitialDesign"], [29, 0, 0, "-", "default_design"], [30, 0, 0, "-", "factorial_design"], [31, 0, 0, "-", "initial_design"], [32, 0, 0, "-", "latin_hypercube_design"], [33, 0, 0, "-", "random_design"], [34, 0, 0, "-", "sobol_design"]], "smac.initial_design.FactorialInitialDesign": [[28, 3, 1, "", "configs"]], "smac.initial_design.InitialDesign": [[28, 3, 1, "", "configs"], [28, 3, 1, "", "configspace"], [28, 2, 1, "", "get_meta"], [28, 2, 1, "", "select_configurations"]], "smac.initial_design.LatinHypercubeInitialDesign": [[28, 3, 1, "", "configs"]], "smac.initial_design.SobolInitialDesign": [[28, 3, 1, "", "configs"], [28, 2, 1, "", "get_meta"]], "smac.initial_design.default_design": [[29, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[30, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.factorial_design.FactorialInitialDesign": [[30, 3, 1, "", "configs"]], "smac.initial_design.initial_design": [[31, 1, 1, "", "InitialDesign"]], "smac.initial_design.initial_design.InitialDesign": [[31, 3, 1, "", "configs"], [31, 3, 1, "", "configspace"], [31, 2, 1, "", "get_meta"], [31, 2, 1, "", "select_configurations"]], "smac.initial_design.latin_hypercube_design": [[32, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign": [[32, 3, 1, "", "configs"]], "smac.initial_design.random_design": [[33, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[34, 1, 1, "", "SobolInitialDesign"]], "smac.initial_design.sobol_design.SobolInitialDesign": [[34, 3, 1, "", "configs"], [34, 2, 1, "", "get_meta"]], "smac.intensification": [[35, 1, 1, "", "AbstractIntensifier"], [35, 1, 1, "", "Hyperband"], [35, 1, 1, "", "Intensifier"], [35, 1, 1, "", "ParallelScheduler"], [35, 1, 1, "", "SimpleIntensifier"], [35, 1, 1, "", "SuccessiveHalving"], [36, 0, 0, "-", "abstract_intensifier"], [37, 0, 0, "-", "hyperband"], [38, 0, 0, "-", "intensification"], [39, 0, 0, "-", "parallel_scheduling"], [40, 0, 0, "-", "simple_intensifier"], [41, 0, 0, "-", "stages"], [42, 0, 0, "-", "successive_halving"]], "smac.intensification.AbstractIntensifier": [[35, 2, 1, "", "get_meta"], [35, 2, 1, "", "get_next_run"], [35, 2, 1, "", "process_results"]], "smac.intensification.Hyperband": [[35, 2, 1, "", "get_meta"]], "smac.intensification.Intensifier": [[35, 2, 1, "", "get_meta"], [35, 2, 1, "", "get_next_challenger"], [35, 2, 1, "", "get_next_run"], [35, 2, 1, "", "process_results"]], "smac.intensification.ParallelScheduler": [[35, 2, 1, "", "get_meta"], [35, 2, 1, "", "get_next_run"], [35, 2, 1, "", "process_results"]], "smac.intensification.SimpleIntensifier": [[35, 2, 1, "", "get_meta"], [35, 2, 1, "", "get_next_run"], [35, 2, 1, "", "process_results"]], "smac.intensification.SuccessiveHalving": [[35, 2, 1, "", "get_meta"]], "smac.intensification.abstract_intensifier": [[36, 1, 1, "", "AbstractIntensifier"]], "smac.intensification.abstract_intensifier.AbstractIntensifier": [[36, 2, 1, "", "get_meta"], [36, 2, 1, "", "get_next_run"], [36, 2, 1, "", "process_results"]], "smac.intensification.hyperband": [[37, 1, 1, "", "Hyperband"]], "smac.intensification.hyperband.Hyperband": [[37, 2, 1, "", "get_meta"]], "smac.intensification.intensification": [[38, 1, 1, "", "Intensifier"]], "smac.intensification.intensification.Intensifier": [[38, 2, 1, "", "get_meta"], [38, 2, 1, "", "get_next_challenger"], [38, 2, 1, "", "get_next_run"], [38, 2, 1, "", "process_results"]], "smac.intensification.parallel_scheduling": [[39, 1, 1, "", "ParallelScheduler"]], "smac.intensification.parallel_scheduling.ParallelScheduler": [[39, 2, 1, "", "get_meta"], [39, 2, 1, "", "get_next_run"], [39, 2, 1, "", "process_results"]], "smac.intensification.simple_intensifier": [[40, 1, 1, "", "SimpleIntensifier"]], "smac.intensification.simple_intensifier.SimpleIntensifier": [[40, 2, 1, "", "get_meta"], [40, 2, 1, "", "get_next_run"], [40, 2, 1, "", "process_results"]], "smac.intensification.stages": [[41, 1, 1, "", "IntensifierStage"]], "smac.intensification.successive_halving": [[42, 1, 1, "", "SuccessiveHalving"]], "smac.intensification.successive_halving.SuccessiveHalving": [[42, 2, 1, "", "get_meta"]], "smac.loop": [[43, 1, 1, "", "SMBO"], [44, 0, 0, "-", "base_smbo"], [45, 0, 0, "-", "boing"], [46, 0, 0, "-", "smbo"], [47, 0, 0, "-", "turbo"]], "smac.loop.SMBO": [[43, 2, 1, "", "ask"], [43, 2, 1, "", "tell"]], "smac.loop.base_smbo": [[44, 1, 1, "", "BaseSMBO"]], "smac.loop.base_smbo.BaseSMBO": [[44, 2, 1, "", "ask"], [44, 3, 1, "", "config"], [44, 3, 1, "", "config_space"], [44, 3, 1, "", "incumbent"], [44, 3, 1, "", "initial_design"], [44, 3, 1, "", "initial_design_configs"], [44, 3, 1, "", "intensifier"], [44, 3, 1, "", "rng"], [44, 2, 1, "", "run"], [44, 3, 1, "", "runhistory"], [44, 3, 1, "", "runner"], [44, 2, 1, "", "save"], [44, 3, 1, "", "stats"], [44, 2, 1, "", "tell"]], "smac.loop.smbo": [[46, 1, 1, "", "SMBO"]], "smac.loop.smbo.SMBO": [[46, 2, 1, "", "ask"], [46, 2, 1, "", "tell"]], "smac.model": [[48, 1, 1, "", "BaseModel"], [48, 1, 1, "", "MultiObjectiveModel"], [48, 1, 1, "", "RandomModel"], [49, 0, 0, "-", "base_model"], [50, 0, 0, "-", "gaussian_process"], [69, 0, 0, "-", "imputer"], [72, 0, 0, "-", "multi_objective_model"], [73, 0, 0, "-", "random_forest"], [77, 0, 0, "-", "random_model"], [78, 0, 0, "-", "utils"]], "smac.model.BaseModel": [[48, 2, 1, "", "get_configspace"], [48, 2, 1, "", "get_meta"], [48, 3, 1, "", "instance_features"], [48, 3, 1, "", "n_feats"], [48, 3, 1, "", "n_params"], [48, 3, 1, "", "pca"], [48, 3, 1, "", "pca_components"], [48, 2, 1, "", "predict"], [48, 2, 1, "", "predict_marginalized_over_instances"], [48, 3, 1, "", "scaler"], [48, 2, 1, "", "train"], [48, 3, 1, "", "types"], [48, 3, 1, "", "var_threshold"]], "smac.model.MultiObjectiveModel": [[48, 2, 1, "", "construct_estimators"], [48, 3, 1, "", "estimators"], [48, 3, 1, "", "num_targets"], [48, 2, 1, "", "predict_marginalized_over_instances"], [48, 3, 1, "", "target_names"]], "smac.model.base_model": [[49, 1, 1, "", "BaseModel"]], "smac.model.base_model.BaseModel": [[49, 2, 1, "", "get_configspace"], [49, 2, 1, "", "get_meta"], [49, 3, 1, "", "instance_features"], [49, 3, 1, "", "n_feats"], [49, 3, 1, "", "n_params"], [49, 3, 1, "", "pca"], [49, 3, 1, "", "pca_components"], [49, 2, 1, "", "predict"], [49, 2, 1, "", "predict_marginalized_over_instances"], [49, 3, 1, "", "scaler"], [49, 2, 1, "", "train"], [49, 3, 1, "", "types"], [49, 3, 1, "", "var_threshold"]], "smac.model.gaussian_process": [[50, 1, 1, "", "BaseGaussianProcess"], [50, 1, 1, "", "GaussianProcess"], [50, 1, 1, "", "MCMCGaussianProcess"], [51, 0, 0, "-", "base_gaussian_process"], [52, 0, 0, "-", "gaussian_process"], [53, 0, 0, "-", "gpytorch"], [54, 0, 0, "-", "kernels"], [62, 0, 0, "-", "mcmc_gaussian_process"], [63, 0, 0, "-", "priors"]], "smac.model.gaussian_process.GaussianProcess": [[50, 2, 1, "", "get_meta"], [50, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.base_gaussian_process": [[51, 1, 1, "", "BaseGaussianProcess"], [51, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.base_gaussian_process.GaussianProcess": [[51, 2, 1, "", "get_meta"], [51, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[52, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[52, 2, 1, "", "get_meta"], [52, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.gpytorch": [[53, 1, 1, "", "AugmentedLocalGaussianProcess"], [53, 1, 1, "", "ExactGPModel"], [53, 1, 1, "", "GPyTorchGaussianProcess"], [53, 1, 1, "", "GloballyAugmentedLocalGaussianProcess"], [53, 1, 1, "", "VariationalGaussianProcess"]], "smac.model.gaussian_process.gpytorch.AugmentedLocalGaussianProcess": [[53, 2, 1, "", "forward"], [53, 2, 1, "", "set_augment_module"]], "smac.model.gaussian_process.gpytorch.ExactGPModel": [[53, 2, 1, "", "forward"]], "smac.model.gaussian_process.gpytorch.GPyTorchGaussianProcess": [[53, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.gpytorch.GloballyAugmentedLocalGaussianProcess": [[53, 2, 1, "", "update_attribute"]], "smac.model.gaussian_process.gpytorch.VariationalGaussianProcess": [[53, 2, 1, "", "forward"]], "smac.model.gaussian_process.kernels": [[54, 1, 1, "", "ConstantKernel"], [54, 1, 1, "", "HammingKernel"], [54, 1, 1, "", "Matern"], [54, 1, 1, "", "ProductKernel"], [54, 1, 1, "", "RBF"], [54, 1, 1, "", "SumKernel"], [54, 1, 1, "", "WhiteKernel"], [55, 0, 0, "-", "base_kernels"], [56, 0, 0, "-", "boing"], [57, 0, 0, "-", "hamming_kernel"], [58, 0, 0, "-", "matern_kernel"], [59, 0, 0, "-", "rbf_kernel"], [60, 0, 0, "-", "utils"], [61, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[54, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.HammingKernel": [[54, 2, 1, "", "get_meta"], [54, 6, 1, "", "hyperparameter_length_scale"]], "smac.model.gaussian_process.kernels.Matern": [[54, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[54, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.RBF": [[54, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.SumKernel": [[54, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.WhiteKernel": [[54, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.base_kernels": [[55, 1, 1, "", "ConstantKernel"], [55, 1, 1, "", "ProductKernel"], [55, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[55, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[55, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[55, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.boing": [[56, 1, 1, "", "FITCKernel"], [56, 1, 1, "", "FITCMean"], [56, 1, 1, "", "MixedKernel"], [56, 5, 1, "", "construct_gp_kernel"]], "smac.model.gaussian_process.kernels.boing.FITCKernel": [[56, 2, 1, "", "forward"], [56, 2, 1, "", "num_outputs_per_input"], [56, 2, 1, "", "posterior_mean"]], "smac.model.gaussian_process.kernels.boing.FITCMean": [[56, 2, 1, "", "forward"]], "smac.model.gaussian_process.kernels.boing.MixedKernel": [[56, 2, 1, "", "forward"], [56, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[57, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[57, 2, 1, "", "get_meta"], [57, 6, 1, "", "hyperparameter_length_scale"]], "smac.model.gaussian_process.kernels.matern_kernel": [[58, 1, 1, "", "Matern"]], "smac.model.gaussian_process.kernels.matern_kernel.Matern": [[58, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[59, 1, 1, "", "RBF"]], "smac.model.gaussian_process.kernels.rbf_kernel.RBF": [[59, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.utils": [[60, 5, 1, "", "get_conditional_hyperparameters"]], "smac.model.gaussian_process.kernels.white_kernel": [[61, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel": [[61, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[62, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.priors": [[63, 1, 1, "", "GammaPrior"], [63, 1, 1, "", "HorseshoePrior"], [63, 1, 1, "", "LogNormalPrior"], [63, 1, 1, "", "TophatPrior"], [64, 0, 0, "-", "gamma_prior"], [65, 0, 0, "-", "horseshoe_prior"], [66, 0, 0, "-", "log_normal_prior"], [67, 0, 0, "-", "prior"], [68, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.TophatPrior": [[63, 2, 1, "", "gradient"]], "smac.model.gaussian_process.priors.gamma_prior": [[64, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[65, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[66, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.prior": [[67, 1, 1, "", "Prior"]], "smac.model.gaussian_process.priors.prior.Prior": [[67, 2, 1, "", "gradient"], [67, 2, 1, "", "lnprob"], [67, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[68, 1, 1, "", "SoftTopHatPrior"], [68, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[68, 2, 1, "", "gradient"], [68, 2, 1, "", "lnprob"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[68, 2, 1, "", "gradient"]], "smac.model.imputer": [[69, 1, 1, "", "AbstractImputer"], [69, 1, 1, "", "RandomForestImputer"], [70, 0, 0, "-", "abstract_imputer"], [71, 0, 0, "-", "random_forest_imputer"]], "smac.model.imputer.AbstractImputer": [[69, 2, 1, "", "impute"]], "smac.model.imputer.RandomForestImputer": [[69, 3, 1, "", "algorithm_walltime_limit"], [69, 3, 1, "", "change_threshold"], [69, 2, 1, "", "impute"], [69, 3, 1, "", "max_iter"], [69, 3, 1, "", "model"], [69, 3, 1, "", "seed"], [69, 3, 1, "", "threshold"], [69, 3, 1, "", "var_threshold"]], "smac.model.imputer.abstract_imputer": [[70, 1, 1, "", "AbstractImputer"]], "smac.model.imputer.abstract_imputer.AbstractImputer": [[70, 2, 1, "", "impute"]], "smac.model.imputer.random_forest_imputer": [[71, 1, 1, "", "RandomForestImputer"]], "smac.model.imputer.random_forest_imputer.RandomForestImputer": [[71, 3, 1, "", "algorithm_walltime_limit"], [71, 3, 1, "", "change_threshold"], [71, 2, 1, "", "impute"], [71, 3, 1, "", "max_iter"], [71, 3, 1, "", "model"], [71, 3, 1, "", "seed"], [71, 3, 1, "", "threshold"], [71, 3, 1, "", "var_threshold"]], "smac.model.multi_objective_model": [[72, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[72, 2, 1, "", "construct_estimators"], [72, 3, 1, "", "estimators"], [72, 3, 1, "", "num_targets"], [72, 2, 1, "", "predict_marginalized_over_instances"], [72, 3, 1, "", "target_names"]], "smac.model.random_forest": [[73, 1, 1, "", "BaseRandomForest"], [73, 1, 1, "", "MultiObjectiveRandomForest"], [73, 1, 1, "", "RandomForestWithInstances"], [74, 0, 0, "-", "base_random_forest"], [75, 0, 0, "-", "multi_objective_random_forest"], [76, 0, 0, "-", "random_forest_with_instances"]], "smac.model.random_forest.MultiObjectiveRandomForest": [[73, 2, 1, "", "construct_estimators"]], "smac.model.random_forest.RandomForestWithInstances": [[73, 3, 1, "", "bounds"], [73, 2, 1, "", "get_meta"], [73, 3, 1, "", "hypers"], [73, 3, 1, "", "logger"], [73, 3, 1, "", "n_points_per_tree"], [73, 2, 1, "", "predict_marginalized_over_instances"], [73, 3, 1, "", "rf"], [73, 3, 1, "", "rf_opts"], [73, 3, 1, "", "rng"], [73, 3, 1, "", "seed"], [73, 3, 1, "", "types"], [73, 3, 1, "", "unlog_y"]], "smac.model.random_forest.base_random_forest": [[74, 1, 1, "", "BaseRandomForest"]], "smac.model.random_forest.multi_objective_random_forest": [[75, 1, 1, "", "MultiObjectiveRandomForest"]], "smac.model.random_forest.multi_objective_random_forest.MultiObjectiveRandomForest": [[75, 2, 1, "", "construct_estimators"]], "smac.model.random_forest.random_forest_with_instances": [[76, 1, 1, "", "RandomForestWithInstances"]], "smac.model.random_forest.random_forest_with_instances.RandomForestWithInstances": [[76, 3, 1, "", "bounds"], [76, 2, 1, "", "get_meta"], [76, 3, 1, "", "hypers"], [76, 3, 1, "", "logger"], [76, 3, 1, "", "n_points_per_tree"], [76, 2, 1, "", "predict_marginalized_over_instances"], [76, 3, 1, "", "rf"], [76, 3, 1, "", "rf_opts"], [76, 3, 1, "", "rng"], [76, 3, 1, "", "seed"], [76, 3, 1, "", "types"], [76, 3, 1, "", "unlog_y"]], "smac.model.random_model": [[77, 1, 1, "", "RandomModel"]], "smac.model.utils": [[78, 5, 1, "", "check_subspace_points"], [78, 5, 1, "", "get_types"]], "smac.multi_objective": [[79, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [79, 1, 1, "", "AggregationStrategy"], [79, 1, 1, "", "MeanAggregationStrategy"], [79, 1, 1, "", "ParEGO"], [80, 0, 0, "-", "abstract_multi_objective_algorithm"], [81, 0, 0, "-", "aggregation_strategy"], [82, 0, 0, "-", "parego"], [83, 0, 0, "-", "utils"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[79, 2, 1, "", "get_meta"]], "smac.multi_objective.AggregationStrategy": [[79, 2, 1, "", "__call__"]], "smac.multi_objective.MeanAggregationStrategy": [[79, 2, 1, "", "__call__"]], "smac.multi_objective.ParEGO": [[79, 2, 1, "", "__call__"], [79, 2, 1, "", "get_meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[80, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[80, 2, 1, "", "get_meta"]], "smac.multi_objective.aggregation_strategy": [[81, 1, 1, "", "AggregationStrategy"], [81, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.AggregationStrategy": [[81, 2, 1, "", "__call__"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[81, 2, 1, "", "__call__"]], "smac.multi_objective.parego": [[82, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[82, 2, 1, "", "__call__"], [82, 2, 1, "", "get_meta"]], "smac.multi_objective.utils": [[83, 5, 1, "", "normalize_costs"]], "smac.random_design": [[84, 1, 1, "", "CosineAnnealingRandomDesign"], [84, 1, 1, "", "LinearCoolDownRandomDesign"], [84, 1, 1, "", "NoCoolDownRandomDesign"], [84, 1, 1, "", "ProbabilityCoolDownRandomDesign"], [84, 1, 1, "", "ProbabilityRandomDesign"], [84, 1, 1, "", "RandomDesign"], [85, 0, 0, "-", "cosine_annealing_design"], [86, 0, 0, "-", "modulus_design"], [87, 0, 0, "-", "probability_design"], [88, 0, 0, "-", "random_design"]], "smac.random_design.CosineAnnealingRandomDesign": [[84, 2, 1, "", "check"], [84, 2, 1, "", "get_meta"], [84, 2, 1, "", "next_iteration"]], "smac.random_design.LinearCoolDownRandomDesign": [[84, 2, 1, "", "check"], [84, 2, 1, "", "get_meta"], [84, 2, 1, "", "next_iteration"]], "smac.random_design.NoCoolDownRandomDesign": [[84, 2, 1, "", "check"], [84, 2, 1, "", "get_meta"], [84, 2, 1, "", "next_iteration"]], "smac.random_design.ProbabilityCoolDownRandomDesign": [[84, 2, 1, "", "check"], [84, 2, 1, "", "get_meta"], [84, 2, 1, "", "next_iteration"]], "smac.random_design.ProbabilityRandomDesign": [[84, 2, 1, "", "check"], [84, 2, 1, "", "next_iteration"]], "smac.random_design.RandomDesign": [[84, 2, 1, "", "check"], [84, 2, 1, "", "get_meta"], [84, 2, 1, "", "next_iteration"]], "smac.random_design.cosine_annealing_design": [[85, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.cosine_annealing_design.CosineAnnealingRandomDesign": [[85, 2, 1, "", "check"], [85, 2, 1, "", "get_meta"], [85, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[86, 1, 1, "", "LinearCoolDownRandomDesign"], [86, 1, 1, "", "NoCoolDownRandomDesign"]], "smac.random_design.modulus_design.LinearCoolDownRandomDesign": [[86, 2, 1, "", "check"], [86, 2, 1, "", "get_meta"], [86, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.NoCoolDownRandomDesign": [[86, 2, 1, "", "check"], [86, 2, 1, "", "get_meta"], [86, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design": [[87, 1, 1, "", "ProbabilityCoolDownRandomDesign"], [87, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.ProbabilityCoolDownRandomDesign": [[87, 2, 1, "", "check"], [87, 2, 1, "", "get_meta"], [87, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[87, 2, 1, "", "check"], [87, 2, 1, "", "next_iteration"]], "smac.random_design.random_design": [[88, 1, 1, "", "RandomDesign"]], "smac.random_design.random_design.RandomDesign": [[88, 2, 1, "", "check"], [88, 2, 1, "", "get_meta"], [88, 2, 1, "", "next_iteration"]], "smac.runhistory": [[89, 1, 1, "", "DataOrigin"], [89, 1, 1, "", "InstanceSeedBudgetKey"], [89, 1, 1, "", "InstanceSeedKey"], [89, 1, 1, "", "RunHistory"], [89, 1, 1, "", "RunInfo"], [89, 1, 1, "", "RunInfoIntent"], [89, 1, 1, "", "RunKey"], [89, 1, 1, "", "RunValue"], [89, 1, 1, "", "StatusType"], [90, 0, 0, "-", "dataclasses"], [91, 0, 0, "-", "encoder"], [101, 0, 0, "-", "enumerations"], [102, 0, 0, "-", "runhistory"]], "smac.runhistory.RunHistory": [[89, 2, 1, "", "__contains__"], [89, 2, 1, "", "__getitem__"], [89, 2, 1, "", "__iter__"], [89, 2, 1, "", "__len__"], [89, 2, 1, "", "add"], [89, 2, 1, "", "average_cost"], [89, 2, 1, "", "compute_all_costs"], [89, 3, 1, "", "config_ids"], [89, 3, 1, "", "data"], [89, 2, 1, "", "empty"], [89, 2, 1, "", "get_all_configs"], [89, 2, 1, "", "get_all_configs_per_budget"], [89, 2, 1, "", "get_cost"], [89, 2, 1, "", "get_instance_costs_for_config"], [89, 2, 1, "", "get_min_cost"], [89, 2, 1, "", "get_runs_for_config"], [89, 3, 1, "", "ids_config"], [89, 2, 1, "", "incremental_update_cost"], [89, 2, 1, "", "load_json"], [89, 2, 1, "", "min_cost"], [89, 3, 1, "", "num_runs_per_config"], [89, 2, 1, "", "save_json"], [89, 2, 1, "", "sum_cost"], [89, 2, 1, "", "update"], [89, 2, 1, "", "update_cost"], [89, 2, 1, "", "update_from_json"]], "smac.runhistory.dataclasses": [[90, 1, 1, "", "InstanceSeedBudgetKey"], [90, 1, 1, "", "InstanceSeedKey"], [90, 1, 1, "", "RunInfo"], [90, 1, 1, "", "RunKey"], [90, 1, 1, "", "RunValue"]], "smac.runhistory.encoder": [[91, 1, 1, "", "RunHistoryEIPSEncoder"], [91, 1, 1, "", "RunHistoryEncoder"], [91, 1, 1, "", "RunHistoryInverseScaledEncoder"], [91, 1, 1, "", "RunHistoryLogEncoder"], [91, 1, 1, "", "RunHistoryLogScaledEncoder"], [91, 1, 1, "", "RunHistoryRawEncoder"], [91, 1, 1, "", "RunHistoryRawScaledEncoder"], [91, 1, 1, "", "RunHistoryScaledEncoder"], [91, 1, 1, "", "RunHistorySqrtScaledEncoder"], [92, 0, 0, "-", "abstract_encoder"], [93, 0, 0, "-", "boing_encoder"], [94, 0, 0, "-", "eips_encoder"], [95, 0, 0, "-", "encoder"], [96, 0, 0, "-", "inversed_scaled_encoder"], [97, 0, 0, "-", "log_encoder"], [98, 0, 0, "-", "log_scaled_encoder"], [99, 0, 0, "-", "scaled_encoder"], [100, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[91, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[91, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[91, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[91, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[91, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryRawEncoder": [[91, 2, 1, "", "transform_raw_values"], [91, 2, 1, "", "transform_response_values"], [91, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.RunHistoryRawScaledEncoder": [[91, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[91, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[91, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[93, 1, 1, "", "RunHistoryRawEncoder"], [93, 1, 1, "", "RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder": [[93, 2, 1, "", "transform_raw_values"], [93, 2, 1, "", "transform_response_values"], [93, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder": [[93, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.eips_encoder": [[94, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[95, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[95, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inversed_scaled_encoder": [[96, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inversed_scaled_encoder.RunHistoryInverseScaledEncoder": [[96, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[97, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[98, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[98, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[99, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[100, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[101, 1, 1, "", "DataOrigin"], [101, 1, 1, "", "RunInfoIntent"], [101, 1, 1, "", "StatusType"]], "smac.runhistory.runhistory": [[102, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[102, 2, 1, "", "__contains__"], [102, 2, 1, "", "__getitem__"], [102, 2, 1, "", "__iter__"], [102, 2, 1, "", "__len__"], [102, 2, 1, "", "add"], [102, 2, 1, "", "average_cost"], [102, 2, 1, "", "compute_all_costs"], [102, 3, 1, "", "config_ids"], [102, 3, 1, "", "data"], [102, 2, 1, "", "empty"], [102, 2, 1, "", "get_all_configs"], [102, 2, 1, "", "get_all_configs_per_budget"], [102, 2, 1, "", "get_cost"], [102, 2, 1, "", "get_instance_costs_for_config"], [102, 2, 1, "", "get_min_cost"], [102, 2, 1, "", "get_runs_for_config"], [102, 3, 1, "", "ids_config"], [102, 2, 1, "", "incremental_update_cost"], [102, 2, 1, "", "load_json"], [102, 2, 1, "", "min_cost"], [102, 3, 1, "", "num_runs_per_config"], [102, 2, 1, "", "save_json"], [102, 2, 1, "", "sum_cost"], [102, 2, 1, "", "update"], [102, 2, 1, "", "update_cost"], [102, 2, 1, "", "update_from_json"]], "smac.runner": [[103, 1, 1, "", "DaskParallelRunner"], [103, 4, 1, "", "FirstRunCrashedException"], [103, 1, 1, "", "Runner"], [103, 1, 1, "", "SerialRunner"], [103, 4, 1, "", "TargetAlgorithmAbortException"], [103, 1, 1, "", "TargetAlgorithmRunner"], [104, 0, 0, "-", "dask_runner"], [105, 0, 0, "-", "exceptions"], [106, 0, 0, "-", "runner"], [107, 0, 0, "-", "serial_runner"], [108, 0, 0, "-", "target_algorithm_runner"]], "smac.runner.DaskParallelRunner": [[103, 2, 1, "", "__del__"], [103, 3, 1, "", "abort_i_first_run_crash"], [103, 3, 1, "", "client"], [103, 3, 1, "", "crash_cost"], [103, 3, 1, "", "futures"], [103, 2, 1, "", "get_finished_runs"], [103, 2, 1, "", "get_meta"], [103, 3, 1, "", "n_workers"], [103, 2, 1, "", "num_workers"], [103, 3, 1, "", "par_factor"], [103, 2, 1, "", "pending_runs"], [103, 3, 1, "", "results"], [103, 2, 1, "", "run"], [103, 3, 1, "", "run_obj"], [103, 3, 1, "", "stats"], [103, 2, 1, "", "submit_run"], [103, 3, 1, "", "ta"], [103, 2, 1, "", "wait"]], "smac.runner.Runner": [[103, 3, 1, "", "abort_on_first_run_crash"], [103, 3, 1, "", "crash_cost"], [103, 2, 1, "", "get_finished_runs"], [103, 2, 1, "", "get_meta"], [103, 2, 1, "", "num_workers"], [103, 3, 1, "", "par_factor"], [103, 2, 1, "", "pending_runs"], [103, 3, 1, "", "results"], [103, 2, 1, "", "run"], [103, 2, 1, "", "run_wrapper"], [103, 3, 1, "", "stats"], [103, 2, 1, "", "submit_run"], [103, 3, 1, "", "ta"], [103, 2, 1, "", "wait"]], "smac.runner.SerialRunner": [[103, 2, 1, "", "get_finished_runs"], [103, 2, 1, "", "num_workers"], [103, 2, 1, "", "pending_runs"], [103, 2, 1, "", "run"], [103, 2, 1, "", "submit_run"], [103, 2, 1, "", "wait"]], "smac.runner.TargetAlgorithmRunner": [[103, 2, 1, "", "__call__"], [103, 2, 1, "", "run"]], "smac.runner.dask_runner": [[104, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[104, 2, 1, "", "__del__"], [104, 3, 1, "", "abort_i_first_run_crash"], [104, 3, 1, "", "client"], [104, 3, 1, "", "crash_cost"], [104, 3, 1, "", "futures"], [104, 2, 1, "", "get_finished_runs"], [104, 2, 1, "", "get_meta"], [104, 3, 1, "", "n_workers"], [104, 2, 1, "", "num_workers"], [104, 3, 1, "", "par_factor"], [104, 2, 1, "", "pending_runs"], [104, 3, 1, "", "results"], [104, 2, 1, "", "run"], [104, 3, 1, "", "run_obj"], [104, 3, 1, "", "stats"], [104, 2, 1, "", "submit_run"], [104, 3, 1, "", "ta"], [104, 2, 1, "", "wait"]], "smac.runner.exceptions": [[105, 4, 1, "", "FirstRunCrashedException"], [105, 4, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.runner": [[106, 1, 1, "", "Runner"]], "smac.runner.runner.Runner": [[106, 3, 1, "", "abort_on_first_run_crash"], [106, 3, 1, "", "crash_cost"], [106, 2, 1, "", "get_finished_runs"], [106, 2, 1, "", "get_meta"], [106, 2, 1, "", "num_workers"], [106, 3, 1, "", "par_factor"], [106, 2, 1, "", "pending_runs"], [106, 3, 1, "", "results"], [106, 2, 1, "", "run"], [106, 2, 1, "", "run_wrapper"], [106, 3, 1, "", "stats"], [106, 2, 1, "", "submit_run"], [106, 3, 1, "", "ta"], [106, 2, 1, "", "wait"]], "smac.runner.serial_runner": [[107, 1, 1, "", "SerialRunner"]], "smac.runner.serial_runner.SerialRunner": [[107, 2, 1, "", "get_finished_runs"], [107, 2, 1, "", "num_workers"], [107, 2, 1, "", "pending_runs"], [107, 2, 1, "", "run"], [107, 2, 1, "", "submit_run"], [107, 2, 1, "", "wait"]], "smac.runner.target_algorithm_runner": [[108, 1, 1, "", "TargetAlgorithmRunner"]], "smac.runner.target_algorithm_runner.TargetAlgorithmRunner": [[108, 2, 1, "", "__call__"], [108, 2, 1, "", "run"]], "smac.scenario": [[109, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[109, 2, 1, "", "__post_init__"], [109, 2, 1, "", "count_instance_features"], [109, 2, 1, "", "count_objectives"], [109, 2, 1, "", "get_meta"], [109, 2, 1, "", "load"], [109, 2, 1, "", "save"]], "smac.utils": [[111, 0, 0, "-", "data_structures"], [112, 0, 0, "-", "logging"], [113, 0, 0, "-", "stats"], [114, 0, 0, "-", "subspaces"]], "smac.utils.logging": [[112, 1, 1, "", "CustomFormatter"], [112, 5, 1, "", "format_array"]], "smac.utils.logging.CustomFormatter": [[112, 2, 1, "", "format"]], "smac.utils.stats": [[113, 1, 1, "", "Stats"], [113, 1, 1, "", "TrajectoryItem"]], "smac.utils.stats.Stats": [[113, 2, 1, "", "get_remaing_walltime"], [113, 2, 1, "", "get_remaining_cputime"], [113, 2, 1, "", "get_remaining_trials"], [113, 2, 1, "", "get_used_walltime"], [113, 2, 1, "", "is_budget_exhausted"], [113, 2, 1, "", "load"], [113, 2, 1, "", "print"], [113, 2, 1, "", "save"], [113, 2, 1, "", "start_timing"], [113, 2, 1, "", "update_average_configs_per_intensify"]], "smac.utils.subspaces": [[114, 1, 1, "", "ChallengerListLocal"], [114, 1, 1, "", "LocalSubspace"]], "smac.utils.subspaces.LocalSubspace": [[114, 2, 1, "", "add_new_observations"], [114, 2, 1, "", "fit_forbidden_to_ss"], [114, 2, 1, "", "generate_challengers"], [114, 2, 1, "", "normalize_input"], [114, 2, 1, "", "update_incumbent_array"], [114, 2, 1, "", "update_model"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"callback": [0, 18], "exampl": [0, 121, 135], "advanc": 1, "usag": 1, "resumpt": 2, "api": 3, "refer": 3, "smac": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "acquisit": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "abstract_acqusition_optim": 5, "differential_evolut": 6, "function": [7, 8, 9, 10, 11, 12, 13, 14, 119, 127], "abstract_acquisition_funct": 8, "confidence_bound": 9, "expected_improv": 10, "integr": 11, "prior": [12, 63, 64, 65, 66, 67, 68], "probability_improv": 13, "thompson": 14, "local_and_random_search": 15, "local_search": 16, "random_search": 17, "configspac": [19, 20], "util": [20, 60, 78, 83, 110, 111, 112, 113, 114], "constant": 21, "facad": [22, 23, 24, 25, 26, 27, 130], "algorithm_configuration_facad": 23, "blackbox_facad": 24, "hyperparameter_facad": 26, "multi_fidelity_facad": 27, "initial_design": [28, 29, 30, 31, 32, 33, 34], "default_design": 29, "factorial_design": 30, "latin_hypercube_design": 32, "random_design": [33, 84, 85, 86, 87, 88], "sobol_design": 34, "intensif": [35, 36, 37, 38, 39, 40, 41, 42], "abstract_intensifi": 36, "hyperband": 37, "parallel_schedul": 39, "simple_intensifi": 40, "stage": 41, "successive_halv": 42, "loop": [43, 44, 45, 46, 47], "base_smbo": 44, "bo": [45, 56], "smbo": 46, "turbo": 47, "model": [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "base_model": 49, "gaussian_process": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "base_gaussian_process": 51, "gpytorch": 53, "kernel": [54, 55, 56, 57, 58, 59, 60, 61], "base_kernel": 55, "hamming_kernel": 57, "matern_kernel": 58, "rbf_kernel": 59, "white_kernel": 61, "mcmc_gaussian_process": 62, "gamma_prior": 64, "horseshoe_prior": 65, "log_normal_prior": 66, "tophat_prior": 68, "imput": [69, 70, 71], "abstract_imput": 70, "random_forest_imput": 71, "multi_objective_model": 72, "random_forest": [73, 74, 75, 76], "base_random_forest": 74, "multi_objective_random_forest": 75, "random_forest_with_inst": 76, "random_model": 77, "multi_object": [79, 80, 81, 82, 83], "abstract_multi_objective_algorithm": 80, "aggregation_strategi": 81, "parego": 82, "cosine_annealing_design": 85, "modulus_design": 86, "probability_design": 87, "runhistori": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "dataclass": 90, "encod": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "abstract_encod": 92, "boing_encod": 93, "eips_encod": 94, "inversed_scaled_encod": 96, "log_encod": 97, "log_scaled_encod": 98, "scaled_encod": 99, "sqrt_scaled_encod": 100, "enumer": 101, "runner": [103, 104, 105, 106, 107, 108], "dask_runn": 104, "except": 105, "serial_runn": 107, "target_algorithm_runn": 108, "scenario": [109, 130], "data_structur": 111, "log": 112, "stat": 113, "subspac": 114, "basic": [116, 121], "comput": [117, 124, 128], "time": [117, 124, 128], "support": 118, "vector": 118, "machin": 118, "cross": 118, "valid": 118, "synthet": 119, "commandlin": [120, 121], "multi": [121, 122, 123, 126], "fidel": [121, 122], "instanc": [121, 122], "object": [121, 126], "layer": 123, "perceptron": 123, "us": 123, "multipl": [123, 125], "epoch": 123, "stochast": 125, "gradient": 125, "descent": 125, "On": 125, "dataset": 125, "2d": 127, "schaffer": 127, "f": 129, "A": 129, "q": 129, "get": 130, "start": 130, "configur": 130, "space": 130, "target": 130, "algorithm": 130, "glossari": 131, "home": 132, "contact": 132, "instal": 133, "requir": 133, "anaconda": 133, "conda": 133, "forg": 133, "licens": 134, "minim": 135, "packag": 136, "overview": 136, "featur": 136, "compon": 136, "comparison": 136}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})