Search.setIndex({"docnames": ["1_installation", "2_package_overview", "3_getting_started", "4_minimal_example", "5_api", "6_references", "7_glossary", "8_faq", "9_license", "advanced_usage/1_components", "advanced_usage/2_multi_fidelity", "advanced_usage/3_multi_objective", "advanced_usage/4_instances", "advanced_usage/5_ask_and_tell", "advanced_usage/6_parallelism", "advanced_usage/7_stopping_criteria", "advanced_usage/8_continue", "advanced_usage/9_reproducability", "advanced_usage/index", "api/smac.acquisition", "api/smac.acquisition.function", "api/smac.acquisition.function.abstract_acquisition_function", "api/smac.acquisition.function.confidence_bound", "api/smac.acquisition.function.expected_improvement", "api/smac.acquisition.function.integrated_acquisition_function", "api/smac.acquisition.function.prior_acqusition_function", "api/smac.acquisition.function.probability_improvement", "api/smac.acquisition.function.thompson", "api/smac.acquisition.maximizer", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer", "api/smac.acquisition.maximizer.differential_evolution", "api/smac.acquisition.maximizer.helpers", "api/smac.acquisition.maximizer.local_and_random_search", "api/smac.acquisition.maximizer.local_search", "api/smac.acquisition.maximizer.random_search", "api/smac.callback", "api/smac.facade", "api/smac.facade.abstract_facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.boing_facade", "api/smac.facade.hyperband_facade", "api/smac.facade.hyperparameter_optimization_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.facade.random_facade", "api/smac.initial_design", "api/smac.initial_design.abstract_initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensifier", "api/smac.intensifier.abstract_intensifier", "api/smac.intensifier.abstract_parallel_intensifier", "api/smac.intensifier.hyperband", "api/smac.intensifier.hyperband_worker", "api/smac.intensifier.intensifier", "api/smac.intensifier.stages", "api/smac.intensifier.successive_halving", "api/smac.intensifier.successive_halving_worker", "api/smac.main", "api/smac.main.base_smbo", "api/smac.main.boing", "api/smac.main.smbo", "api/smac.main.turbo", "api/smac.model", "api/smac.model.abstract_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.abstract_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch_gaussian_process", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.abstract_prior", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.abstract_random_forest", "api/smac.model.random_forest.random_forest", "api/smac.model.random_model", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.random_design", "api/smac.random_design.abstract_random_design", "api/smac.random_design.annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inverse_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.abstract_runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.target_function_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.configspace", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.multi_objective", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "examples/1_basics/1_synthetic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_ask_and_tell", "examples/1_basics/4_callback", "examples/1_basics/5_priors", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/2_parego", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/index", "index"], "filenames": ["1_installation.rst", "2_package_overview.rst", "3_getting_started.rst", "4_minimal_example.rst", "5_api.rst", "6_references.rst", "7_glossary.rst", "8_faq.rst", "9_license.rst", "advanced_usage/1_components.rst", "advanced_usage/2_multi_fidelity.rst", "advanced_usage/3_multi_objective.rst", "advanced_usage/4_instances.rst", "advanced_usage/5_ask_and_tell.rst", "advanced_usage/6_parallelism.rst", "advanced_usage/7_stopping_criteria.rst", "advanced_usage/8_continue.rst", "advanced_usage/9_reproducability.rst", "advanced_usage/index.rst", "api/smac.acquisition.rst", "api/smac.acquisition.function.rst", "api/smac.acquisition.function.abstract_acquisition_function.rst", "api/smac.acquisition.function.confidence_bound.rst", "api/smac.acquisition.function.expected_improvement.rst", "api/smac.acquisition.function.integrated_acquisition_function.rst", "api/smac.acquisition.function.prior_acqusition_function.rst", "api/smac.acquisition.function.probability_improvement.rst", "api/smac.acquisition.function.thompson.rst", "api/smac.acquisition.maximizer.rst", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer.rst", "api/smac.acquisition.maximizer.differential_evolution.rst", "api/smac.acquisition.maximizer.helpers.rst", "api/smac.acquisition.maximizer.local_and_random_search.rst", "api/smac.acquisition.maximizer.local_search.rst", "api/smac.acquisition.maximizer.random_search.rst", "api/smac.callback.rst", "api/smac.facade.rst", "api/smac.facade.abstract_facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.boing_facade.rst", "api/smac.facade.hyperband_facade.rst", "api/smac.facade.hyperparameter_optimization_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.facade.random_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.abstract_initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensifier.rst", "api/smac.intensifier.abstract_intensifier.rst", "api/smac.intensifier.abstract_parallel_intensifier.rst", "api/smac.intensifier.hyperband.rst", "api/smac.intensifier.hyperband_worker.rst", "api/smac.intensifier.intensifier.rst", "api/smac.intensifier.stages.rst", "api/smac.intensifier.successive_halving.rst", "api/smac.intensifier.successive_halving_worker.rst", "api/smac.main.rst", "api/smac.main.base_smbo.rst", "api/smac.main.boing.rst", "api/smac.main.smbo.rst", "api/smac.main.turbo.rst", "api/smac.model.rst", "api/smac.model.abstract_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.abstract_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch_gaussian_process.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.abstract_prior.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.abstract_random_forest.rst", "api/smac.model.random_forest.random_forest.rst", "api/smac.model.random_model.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.random_design.rst", "api/smac.random_design.abstract_random_design.rst", "api/smac.random_design.annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inverse_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.abstract_runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.target_function_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.configspace.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.multi_objective.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "examples/1_basics/1_synthetic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_ask_and_tell.rst", "examples/1_basics/4_callback.rst", "examples/1_basics/5_priors.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/2_parego.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/index.rst", "index.rst"], "titles": ["Installation", "Package Overview", "Getting Started", "Minimal Example", "API References", "References", "Glossary", "F.A.Q.", "License", "Components", "Multi-Fidelity Optimization", "Multi-Objective Optimization", "Optimization across Instances", "Ask-and-Tell Interface", "Parallelism", "Stopping Criteria", "Continue a Run", "Reproducability", "Advanced Usage", "smac.acquisition", "smac.acquisition.function", "smac.acquisition.function.abstract_acquisition_function", "smac.acquisition.function.confidence_bound", "smac.acquisition.function.expected_improvement", "smac.acquisition.function.integrated_acquisition_function", "smac.acquisition.function.prior_acqusition_function", "smac.acquisition.function.probability_improvement", "smac.acquisition.function.thompson", "smac.acquisition.maximizer", "smac.acquisition.maximizer.abstract_acqusition_maximizer", "smac.acquisition.maximizer.differential_evolution", "smac.acquisition.maximizer.helpers", "smac.acquisition.maximizer.local_and_random_search", "smac.acquisition.maximizer.local_search", "smac.acquisition.maximizer.random_search", "smac.callback", "smac.facade", "smac.facade.abstract_facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.boing_facade", "smac.facade.hyperband_facade", "smac.facade.hyperparameter_optimization_facade", "smac.facade.multi_fidelity_facade", "smac.facade.random_facade", "smac.initial_design", "smac.initial_design.abstract_initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensifier", "smac.intensifier.abstract_intensifier", "smac.intensifier.abstract_parallel_intensifier", "smac.intensifier.hyperband", "smac.intensifier.hyperband_worker", "smac.intensifier.intensifier", "smac.intensifier.stages", "smac.intensifier.successive_halving", "smac.intensifier.successive_halving_worker", "smac.main", "smac.main.base_smbo", "smac.main.boing", "smac.main.smbo", "smac.main.turbo", "smac.model", "smac.model.abstract_model", "smac.model.gaussian_process", "smac.model.gaussian_process.abstract_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch_gaussian_process", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.abstract_prior", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.abstract_random_forest", "smac.model.random_forest.random_forest", "smac.model.random_model", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.random_design", "smac.random_design.abstract_random_design", "smac.random_design.annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inverse_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.runhistory", "smac.runner", "smac.runner.abstract_runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.target_function_runner", "smac.scenario", "smac.utils", "smac.utils.configspace", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.multi_objective", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "Synthetic Function", "Support Vector Machine with Cross-Validation", "Ask-and-Tell", "Custom Callback", "User Priors over the Optimum", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function", "ParEGO with Objective Weights", "Multi-Objective", "Computation times", "Examples", "Home"], "terms": {"smac": [0, 1, 2, 3, 6, 7, 9, 11, 13, 14, 15, 16, 18, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 143], "i": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 25, 28, 29, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 82, 85, 86, 88, 94, 95, 96, 97, 98, 99, 100, 101, 103, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "written": [0, 143], "python3": [0, 14, 143], "therefor": [0, 2, 6, 9, 12, 13, 36, 44, 72, 73, 118, 134, 139], "an": [0, 1, 2, 6, 7, 9, 10, 11, 12, 13, 14, 20, 21, 28, 29, 31, 35, 36, 37, 38, 39, 42, 43, 44, 52, 53, 54, 55, 56, 57, 59, 60, 68, 78, 99, 112, 113, 114, 115, 116, 117, 118, 122, 127, 128, 131, 134, 135, 139, 143], "environ": [0, 2, 3, 118, 127, 130, 131, 134, 139], "python": [0, 1, 7, 18, 31, 68, 70, 78, 80, 113, 117, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142, 143], "3": [0, 6, 8, 9, 11, 36, 38, 39, 41, 42, 43, 44, 52, 55, 57, 59, 86, 88, 94, 97, 101, 102, 103, 104, 105, 107, 108, 109, 113, 115, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "8": [0, 2, 9, 52, 57, 86, 88, 128, 131, 134, 139, 143], "furthermor": [0, 130], "random": [0, 2, 6, 14, 18, 20, 25, 28, 29, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 50, 52, 57, 61, 62, 66, 67, 86, 87, 88, 89, 94, 95, 96, 97, 98, 118, 128, 131, 134, 139, 143], "forest": [0, 2, 6, 9, 20, 25, 36, 38, 42, 66, 67, 86, 87, 88, 128, 131, 143], "us": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 25, 27, 28, 29, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 82, 84, 85, 86, 88, 94, 96, 97, 99, 100, 101, 102, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 142, 143], "swig": 0, "build": [0, 99, 111, 128, 131, 134, 135], "depend": [0, 1, 2, 7, 9, 17, 18, 36, 37, 39, 61, 62, 64, 66, 67, 90, 91, 113, 116, 118, 128], "either": [0, 2, 7, 36, 37, 68, 78, 99, 112, 113, 117], "your": [0, 1, 6, 7, 11, 12, 18, 118, 134, 135], "system": [0, 134, 135], "directli": [0, 9, 10, 11, 113, 117], "The": [0, 1, 2, 3, 6, 7, 9, 10, 11, 13, 14, 17, 20, 21, 24, 28, 29, 32, 36, 37, 38, 39, 41, 42, 43, 44, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 81, 84, 85, 86, 88, 94, 97, 99, 101, 102, 103, 112, 113, 114, 115, 117, 118, 120, 127, 129, 134, 135, 138, 139, 143], "command": [0, 1, 6, 14], "linux": 0, "machin": [0, 3, 20, 24, 132, 133, 142, 143], "follow": [0, 1, 2, 3, 7, 9, 11, 12, 14, 36, 43, 44, 52, 57, 59, 86, 88, 113, 114, 115], "apt": 0, "get": [0, 9, 28, 30, 34, 52, 54, 72, 73, 113, 115, 122, 127, 128, 129, 131, 134, 135, 139], "test": [0, 66, 67, 68, 70, 99, 112, 143], "mac": [0, 7], "9": [0, 14, 52, 57, 130, 135, 143], "10": [0, 2, 6, 20, 25, 28, 32, 33, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 52, 57, 68, 70, 86, 88, 127, 128, 129, 130, 131, 134, 138, 139, 143], "we": [0, 2, 6, 7, 9, 11, 12, 14, 18, 20, 27, 28, 29, 36, 44, 52, 54, 57, 68, 78, 80, 113, 114, 127, 128, 129, 130, 131, 134, 135, 139, 142, 143], "recommend": [0, 7, 9, 14, 18], "creat": [0, 7, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 45, 46, 52, 53, 54, 55, 57, 59, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 113, 114, 115, 128, 131, 134, 135, 139], "activ": [0, 7, 14, 52, 55, 59, 72, 73, 113, 115, 131, 134, 139], "n": [0, 20, 21, 27, 52, 57, 61, 62, 64, 68, 70, 78, 80, 113, 115], "If": [0, 2, 7, 8, 9, 12, 14, 16, 18, 20, 25, 28, 29, 36, 37, 42, 44, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 68, 72, 73, 78, 85, 86, 88, 94, 97, 99, 101, 102, 112, 113, 115, 118, 122, 123, 128, 135, 143], "you": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 36, 42, 44, 68, 78, 113, 115, 118, 128, 131, 143], "haven": 0, "t": [0, 2, 7, 14, 20, 22, 23, 26, 27, 72, 73], "yet": [0, 7, 13, 36, 43], "can": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 20, 27, 28, 29, 33, 36, 37, 43, 52, 53, 54, 55, 57, 59, 61, 62, 68, 78, 99, 101, 103, 111, 112, 113, 114, 115, 117, 118, 122, 127, 128, 129, 131, 134, 139, 143], "insid": [0, 9, 130], "gxx_linux": 0, "64": [0, 28, 33], "gcc_linux": 0, "now": [0, 11, 36, 43, 127, 128, 129, 130, 135], "via": [0, 9, 11, 14, 28, 30, 34, 52, 53, 113, 114, 115], "pypi": 0, "pip": 0, "Or": 0, "altern": [0, 11, 128, 135], "clone": 0, "from": [0, 1, 2, 3, 7, 9, 13, 14, 16, 28, 30, 32, 36, 37, 43, 44, 45, 46, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 68, 70, 72, 73, 80, 99, 100, 112, 113, 114, 115, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139], "github": [0, 7, 45, 51, 143], "git": 0, "http": [0, 5, 8, 14, 20, 22, 24, 31, 45, 51, 52, 59, 90, 93, 143], "com": [0, 31, 143], "automl": [0, 7, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "smac3": [0, 7, 14, 143], "cd": 0, "e": [0, 1, 6, 9, 11, 14, 20, 23, 28, 32, 36, 37, 52, 55, 59, 61, 62, 79, 81, 113, 114, 135], "dev": 0, "channel": 0, "achiev": [0, 2], "ad": [0, 35, 72, 73, 99, 112, 120, 134], "config": [0, 2, 3, 6, 9, 36, 37, 38, 39, 42, 45, 46, 52, 53, 54, 57, 61, 62, 64, 99, 100, 112, 113, 114, 115, 117, 118, 120, 127, 128, 129, 130, 131, 134, 135, 138, 139], "add": [0, 7, 9, 12, 36, 37, 38, 39, 42, 43, 44, 45, 46, 56, 60, 61, 62, 64, 99, 112, 128, 131, 134, 135, 139], "set": [0, 1, 7, 9, 14, 16, 36, 37, 39, 42, 43, 44, 45, 46, 52, 55, 56, 57, 59, 60, 61, 62, 94, 96, 98, 99, 101, 103, 111, 112, 113, 117, 118, 122, 123, 131, 134, 135, 139], "channel_prior": 0, "strict": 0, "must": [0, 2, 28, 29, 31, 66, 67, 72, 73, 79, 80, 81, 84, 85, 99, 112, 113, 114, 118, 134], "have": [0, 6, 7, 8, 9, 10, 13, 14, 28, 32, 36, 37, 43, 44, 52, 53, 54, 61, 62, 99, 111, 112, 113, 114, 115, 117, 131, 135, 139], "4": [0, 1, 9, 36, 38, 52, 57, 127, 129, 130, 131, 134, 135, 138, 139], "To": [0, 7, 9, 11, 12, 14, 16, 52, 54, 55, 57, 113, 115, 131, 134], "updat": [0, 20, 21, 35, 36, 37, 43, 44, 52, 53, 54, 56, 57, 60, 61, 62, 64, 90, 91, 93, 99, 112, 127, 128, 129, 131, 138, 139], "check": [0, 9, 13, 52, 57, 94, 95, 96, 97, 98, 99, 112, 113, 114, 118], "current": [0, 6, 20, 21, 36, 37, 44, 52, 53, 54, 56, 57, 60, 61, 62, 68, 70, 94, 98, 99, 101, 102, 111, 112, 130], "version": [0, 2, 7, 9, 28, 32], "pleas": [0, 1, 2, 7, 8, 9, 10, 13, 14, 20, 27, 36, 44, 52, 55, 143], "instruct": 0, "offici": 0, "document": [0, 2, 5, 14, 52, 55], "onc": [0, 28, 33, 36, 44, 52, 55, 59, 131, 134, 139], "ha": [0, 1, 14, 28, 29, 45, 46, 72, 73], "been": [0, 1, 7, 36, 37, 52, 53, 61, 62, 99, 112, 113, 114, 115, 117], "enabl": [0, 36, 38, 42, 86, 88, 99, 112], "read": [0, 14, 16, 18, 99, 112], "feedstock": 0, "more": [0, 2, 6, 9, 13, 18, 36, 38, 39, 42, 52, 53, 54, 55, 57, 113, 114, 115, 139], "detail": [0, 2, 6, 7, 9, 14, 20, 24, 25, 52, 55, 57, 134], "support": [1, 2, 3, 9, 13, 14, 15, 36, 41, 43, 72, 73, 132, 133, 134, 135, 142], "determin": [1, 7, 10, 17, 36, 37, 52, 53, 54, 56, 59, 60, 68, 72, 73, 78, 113, 117], "well": [1, 20, 25, 52, 53, 90, 91, 92, 93, 113, 114, 127, 128, 129, 131], "perform": [1, 2, 6, 7, 9, 10, 28, 32, 33, 36, 37, 38, 42, 43, 44, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 86, 88, 99, 112, 113, 114, 118, 135, 143], "hyperparamet": [1, 2, 3, 5, 6, 9, 20, 24, 25, 28, 32, 36, 37, 39, 42, 43, 45, 46, 52, 55, 59, 61, 62, 66, 67, 68, 70, 72, 73, 74, 78, 79, 80, 84, 85, 86, 88, 120, 127, 128, 129, 130, 131, 134, 139, 143], "configur": [1, 3, 6, 7, 9, 11, 13, 14, 17, 20, 21, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 57, 60, 61, 62, 64, 79, 80, 84, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 111, 112, 113, 114, 115, 117, 118, 120, 122, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "algorithm": [1, 2, 5, 6, 7, 10, 11, 14, 18, 20, 24, 36, 37, 38, 39, 41, 42, 44, 101, 102, 113, 114, 117, 135, 143], "By": [1, 123, 134], "being": [1, 6, 13, 52, 54, 59, 72, 73, 113, 117], "robust": [1, 52, 55, 59, 68, 70, 78, 80], "flexibl": [1, 68, 70, 78, 80, 99, 111], "framework": [1, 2, 6, 68, 70, 78, 80], "bayesian": [1, 6, 9, 20, 24, 25, 36, 37, 61, 62, 64, 68, 70, 78, 80, 94, 97, 130, 143], "optim": [1, 2, 3, 5, 6, 7, 9, 13, 15, 17, 18, 20, 22, 24, 25, 27, 28, 32, 35, 36, 37, 43, 44, 52, 55, 59, 61, 62, 64, 68, 70, 78, 80, 90, 91, 94, 97, 99, 111, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "improv": [1, 2, 9, 20, 23, 26, 36, 38, 39, 42], "within": [1, 7, 52, 57, 113, 115], "few": [1, 6, 36, 44, 135], "function": [1, 6, 7, 10, 11, 12, 14, 18, 28, 29, 31, 32, 35, 36, 37, 38, 39, 42, 43, 44, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 68, 70, 72, 73, 78, 99, 101, 102, 103, 104, 112, 113, 114, 115, 116, 117, 118, 129, 131, 132, 133, 134, 135, 140, 141, 142], "evalu": [1, 2, 6, 7, 9, 10, 13, 14, 20, 21, 28, 29, 36, 37, 38, 39, 42, 45, 46, 47, 50, 52, 53, 54, 56, 57, 59, 60, 61, 62, 72, 73, 94, 95, 96, 97, 98, 99, 101, 103, 112, 113, 117, 127, 128, 129, 130, 134, 135, 138, 139], "It": [1, 6, 9, 36, 43, 52, 57, 59, 86, 88, 99, 111, 113, 115, 127, 128, 129], "offer": [1, 2, 11, 113, 114], "sever": [1, 14, 31, 35, 142], "entri": [1, 2], "point": [1, 2, 9, 20, 22, 28, 29, 32, 36, 38, 42, 66, 67, 68, 70, 85, 86, 88, 138, 139], "pre": [1, 12, 13], "typic": 1, "case": [1, 2, 10, 11, 20, 25, 28, 32, 36, 37, 44, 52, 57, 61, 62, 99, 112, 113, 114, 115, 117, 118, 135, 142], "solv": 1, "low": [1, 2, 9, 36, 44], "dimension": [1, 9, 36, 38, 66, 67, 68, 69, 70, 78, 86, 88, 127, 129], "continu": [1, 18, 36, 37, 39, 43, 99, 112, 127, 128, 129, 131, 134, 143], "artifici": 1, "global": [1, 6], "problem": [1, 5, 6, 7, 36, 37, 113, 114, 115, 117, 127, 129], "across": [1, 6, 7, 18, 52, 55, 59, 99, 112, 135], "multipl": [1, 6, 7, 10, 11, 18, 20, 25, 36, 37, 45, 46, 52, 55, 59, 66, 85, 99, 112, 118, 131, 136, 137, 139, 142], "instanc": [1, 2, 6, 7, 9, 10, 18, 36, 37, 38, 39, 41, 42, 43, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 78, 85, 86, 88, 99, 100, 101, 102, 103, 111, 112, 113, 114, 115, 117, 118, 120, 135], "characterist": 1, "capabl": [1, 113, 115], "sampl": [1, 9, 12, 20, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 42, 43, 44, 45, 46, 52, 53, 57, 59, 61, 62, 66, 67, 68, 70, 78, 80, 85, 86, 88, 118, 127, 128, 129, 131, 138, 139], "effici": [1, 52, 55, 59, 99, 112, 143], "black": [1, 2, 6, 127], "box": [1, 2, 6, 127], "onli": [1, 6, 7, 9, 11, 13, 15, 17, 20, 21, 27, 36, 37, 45, 47, 52, 55, 57, 59, 61, 62, 66, 67, 72, 73, 85, 99, 101, 102, 111, 112, 113, 115, 117, 118, 122, 129, 131, 134, 135, 138, 139], "awar": [1, 13], "input": [1, 6, 9, 20, 22, 56, 60, 66, 67, 68, 70, 80, 85, 86, 88, 101, 103, 105, 122, 127, 129], "output": [1, 6, 14, 52, 53, 66, 67, 68, 70, 78, 118], "agnost": 1, "intern": [1, 10, 12, 16, 36, 37, 45, 46, 52, 53, 55, 59, 60, 61, 62, 66, 67, 68, 72, 73, 78, 79, 80, 84, 85, 90, 91, 93, 99, 111, 112, 113, 114, 115, 117, 118, 134], "categor": [1, 2, 28, 32, 36, 39, 128, 131, 134, 135, 139], "hierarch": 1, "condit": [1, 72, 73, 120, 128, 134, 135, 139], "integr": [1, 9, 20, 24, 68, 78, 130, 131], "configurationspac": [1, 2, 3, 28, 29, 31, 32, 33, 66, 67, 68, 69, 70, 78, 99, 112, 127, 128, 129, 130, 131, 134, 135, 138, 139], "up": [1, 7, 9, 52, 54, 99, 112, 122, 127, 134, 135], "100": [1, 3, 6, 118, 127, 129, 130], "ani": [1, 6, 7, 8, 9, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 36, 37, 45, 46, 52, 53, 55, 57, 59, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 113, 114, 115, 117, 118, 127, 131, 139], "object": [1, 2, 3, 6, 12, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 42, 44, 45, 46, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 113, 114, 115, 117, 118, 120, 123, 127, 128, 129, 130, 131, 134, 135, 138, 141], "g": [1, 5, 6, 9, 11, 28, 32, 36, 37, 61, 62, 113, 114, 135], "accuraci": [1, 2, 131, 134, 139], "runtim": [1, 9, 20, 23, 52, 59, 101, 104, 113, 114, 115, 117, 139], "cross": [1, 6, 118, 131, 132, 133, 134, 135, 139, 142], "valid": [1, 2, 6, 7, 36, 37, 61, 62, 66, 67, 118, 127, 129, 131, 132, 133, 134, 135, 138, 139, 142], "possibl": [1, 2, 9, 20, 25, 36, 37, 52, 55, 72, 73, 118, 135], "multi": [1, 2, 6, 12, 18, 36, 37, 38, 39, 42, 43, 44, 61, 62, 90, 91, 92, 93, 99, 101, 102, 112, 113, 117, 118, 131, 135, 137, 138, 139], "arbitrari": [1, 2, 113, 114, 115, 117, 127, 129, 143], "number": [1, 6, 9, 10, 12, 13, 14, 20, 22, 25, 28, 29, 32, 33, 36, 38, 39, 41, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 78, 80, 86, 88, 94, 95, 96, 97, 98, 99, 111, 112, 113, 114, 115, 117, 118, 128, 129, 131, 134, 135], "scalar": [1, 9, 11, 36, 37, 80], "oject": 1, "both": [1, 2, 10, 11, 52, 57, 99, 101, 103, 111, 113, 117, 139], "parego": [1, 5, 11, 90, 140, 141, 142], "know06": [1, 5, 11], "mean": [1, 3, 7, 9, 11, 12, 36, 38, 39, 41, 42, 43, 44, 66, 67, 68, 70, 78, 79, 81, 83, 85, 86, 88, 90, 92, 99, 112, 118, 128, 131, 134, 135, 139], "aggreg": [1, 11, 36, 38, 39, 42, 43, 44, 90, 92], "strategi": [1, 6, 11, 36, 37, 38, 39, 42, 43, 44, 45, 46, 90, 91], "ar": [1, 2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 23, 28, 31, 32, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 52, 53, 55, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 72, 73, 78, 80, 86, 88, 99, 101, 102, 112, 113, 114, 115, 117, 118, 120, 122, 123, 127, 129, 131, 134, 135, 139], "fidel": [1, 2, 6, 12, 15, 18, 36, 37, 43, 61, 62, 99, 112, 118, 134, 135], "judg": [1, 9, 11, 36, 37, 61, 62, 99, 112, 118], "budget": [1, 2, 6, 9, 10, 12, 13, 15, 36, 37, 38, 39, 41, 42, 43, 44, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 99, 100, 101, 102, 103, 112, 113, 114, 115, 117, 118, 127, 128, 129, 131, 134, 135, 138, 139], "discard": [1, 7], "unsuit": 1, "earli": [1, 7, 36, 44], "thi": [1, 2, 7, 8, 9, 11, 12, 13, 14, 18, 20, 21, 28, 29, 32, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 70, 72, 73, 74, 78, 79, 80, 84, 86, 88, 94, 97, 99, 101, 103, 112, 113, 114, 115, 116, 117, 118, 120, 129, 130, 131, 134, 135, 139, 143], "result": [1, 2, 9, 13, 36, 37, 52, 53, 54, 56, 57, 60, 61, 62, 64, 113, 114, 115, 117, 118, 122, 127], "massiv": 1, "speed": [1, 7], "find": [1, 2, 3, 6, 9, 14, 127, 128, 129, 130, 139], "one": [1, 6, 7, 28, 31, 32, 36, 44, 52, 59, 68, 78, 99, 101, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 122, 129, 131, 135, 138, 139], "dataset": [1, 3, 6, 7, 12, 118, 128, 131, 134, 136, 137, 139, 142], "mani": [1, 2, 6, 14, 36, 37, 44, 52, 53, 59, 61, 62, 66, 85], "line": [1, 5, 6, 14, 52, 57], "interfac": [1, 2, 6, 11, 14, 18, 129], "execut": [1, 7, 9, 36, 37, 43, 52, 53, 54, 56, 57, 60, 61, 62, 64, 113, 114, 115, 117, 133, 134, 135, 137, 141], "file": [1, 7, 8, 14, 16, 36, 37, 99, 112, 118, 133, 137, 141], "also": [1, 2, 6, 7, 9, 10, 14, 36, 37, 52, 53, 54, 56, 57, 60, 61, 62, 64, 68, 78, 99, 112, 113, 114, 115, 123, 128, 131, 134, 139], "commandlin": [1, 7, 18], "consequ": 1, "other": [1, 9, 14, 17, 20, 27, 36, 37, 52, 57, 99, 112], "languag": 1, "temporar": 1, "disabl": [1, 36, 39, 42, 43, 45, 46, 101, 103, 118, 130], "v2": [1, 7, 13], "0": [1, 2, 3, 7, 9, 11, 12, 13, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 60, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 112, 118, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141], "fall": 1, "back": 1, "v1": 1, "need": [1, 2, 9, 11, 12, 13, 18, 31, 36, 37, 52, 53, 54, 56, 57, 59, 60, 61, 62, 72, 73, 99, 112, 113, 114, 115, 117, 135], "tabl": [1, 2], "provid": [1, 2, 7, 9, 11, 13, 14, 31, 52, 59, 66, 85, 99, 111, 113, 115, 127, 128, 129, 131, 134, 135, 138, 139, 142], "": [1, 6, 7, 10, 14, 16, 28, 32, 33, 36, 37, 52, 53, 54, 56, 57, 60, 61, 62, 68, 70, 78, 80, 99, 112, 113, 114, 115, 117, 118, 127, 128, 129, 130, 131, 134, 135, 139], "tool": [1, 7, 143], "complex": [1, 9, 18, 113, 114], "space": [1, 9, 14, 20, 22, 23, 25, 28, 32, 36, 39, 42, 43, 44, 45, 46, 79, 80, 84, 99, 112, 118, 127, 128, 131, 134, 135], "parallel": [1, 18, 52, 54, 55, 113, 114, 115, 117, 118], "hypermapp": 1, "optuna": 1, "hyperopt": 1, "botorch": 1, "openbox": 1, "hpbandster": [1, 7], "In": [2, 6, 9, 10, 11, 12, 13, 18, 28, 29, 36, 37, 52, 57, 61, 62, 68, 70, 78, 79, 80, 84, 99, 112, 113, 114, 115, 117, 118, 130, 135, 139, 143], "core": [2, 14, 143], "four": [2, 66, 67], "compon": [2, 18, 36, 37, 38, 43, 66, 67, 68, 69, 70, 78, 86, 88], "run": [2, 6, 7, 9, 10, 11, 13, 14, 17, 18, 35, 36, 37, 41, 43, 44, 52, 53, 54, 55, 57, 59, 61, 62, 64, 99, 111, 112, 113, 114, 115, 116, 117, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139], "process": [2, 6, 7, 9, 35, 36, 37, 39, 52, 53, 57, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 78, 80, 99, 111, 113, 114, 117, 118, 127, 130, 135], "all": [2, 6, 7, 9, 11, 14, 17, 18, 20, 25, 28, 32, 36, 37, 38, 39, 42, 43, 52, 53, 54, 55, 57, 59, 61, 62, 66, 67, 68, 69, 72, 73, 80, 85, 86, 87, 88, 99, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 122, 127, 128, 129, 131, 134, 135, 142], "which": [2, 6, 7, 9, 11, 13, 17, 20, 21, 24, 28, 31, 32, 36, 37, 38, 39, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 78, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 100, 111, 113, 114, 115, 117, 118, 128, 129, 131, 134, 135, 143], "explain": [2, 9], "page": [2, 18, 143], "defin": [2, 12, 13, 20, 25, 28, 29, 32, 36, 37, 58, 61, 62, 64, 80, 99, 111, 113, 114, 118, 127, 128, 129, 131, 134, 135, 139], "search": [2, 9, 20, 25, 28, 32, 33, 36, 38, 39, 42, 43, 44, 127, 129], "tunabl": 2, "paramet": [2, 9, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 127, 128, 129, 131, 134, 135, 143], "legal": 2, "rang": [2, 128, 129, 131, 134, 135], "default": [2, 7, 9, 10, 11, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 93, 94, 97, 98, 99, 100, 101, 102, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 127, 128, 129, 130, 131, 134, 135, 138, 139], "valu": [2, 9, 10, 11, 20, 21, 22, 23, 25, 26, 27, 35, 36, 37, 43, 44, 52, 55, 58, 59, 61, 62, 64, 66, 67, 68, 70, 72, 73, 78, 80, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 122, 123, 127, 128, 129, 130, 131, 134, 139], "configspac": [2, 3, 28, 29, 30, 31, 32, 33, 34, 36, 37, 61, 62, 66, 67, 68, 69, 70, 78, 86, 88, 89, 99, 112, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139], "import": [2, 3, 7, 9, 127, 128, 129, 130, 131, 134, 135, 138, 139], "c": [2, 3, 90, 93, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "myfloat": 2, "1": [2, 3, 5, 9, 10, 14, 20, 21, 22, 23, 26, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 79, 81, 85, 86, 88, 101, 102, 103, 104, 105, 107, 108, 109, 113, 115, 118, 120, 123, 127, 128, 129, 130, 131, 134, 135, 138, 139], "5": [2, 3, 9, 28, 32, 36, 38, 39, 42, 43, 44, 52, 57, 72, 75, 86, 88, 101, 102, 103, 104, 105, 107, 108, 109, 113, 115, 127, 128, 129, 130, 131, 134, 135, 139, 143], "uniform": [2, 28, 32, 131], "float": [2, 3, 20, 22, 23, 25, 26, 27, 28, 32, 36, 37, 38, 39, 41, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 112, 113, 114, 115, 117, 118, 120, 122, 123, 127, 128, 129, 130, 131, 134, 135, 138, 139], "myint": 2, "2": [2, 6, 9, 20, 22, 28, 31, 33, 36, 38, 42, 43, 52, 57, 86, 88, 94, 97, 113, 115, 127, 128, 129, 130, 131, 134, 135, 138, 139], "integ": [2, 94, 97, 122, 128, 131, 134, 139], "speci": 2, "mous": 2, "cat": 2, "dog": 2, "see": [2, 6, 7, 8, 9, 10, 14, 20, 24, 25, 45, 51, 99, 112], "take": [2, 7, 9, 36, 37, 66, 67, 86, 88, 113, 115, 134], "return": [2, 3, 6, 9, 11, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 127, 128, 129, 130, 131, 134, 135, 138, 139], "For": [2, 6, 7, 9, 12, 36, 37, 39, 42, 43, 45, 46, 61, 62, 72, 73, 113, 114, 117, 118, 134, 143], "exampl": [2, 6, 7, 9, 10, 11, 12, 13, 20, 21, 36, 37, 39, 42, 43, 45, 46, 52, 53, 61, 62, 99, 111, 113, 114, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139], "could": [2, 7, 14, 52, 57, 113, 116, 118, 122, 135], "neural": [2, 52, 59, 134], "network": [2, 52, 59, 131, 134], "predict": [2, 9, 66, 67, 85, 86, 88], "base": [2, 5, 6, 7, 9, 11, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 128, 135, 143], "learn": [2, 5, 20, 24, 131, 134, 143], "rate": [2, 131, 134], "everi": [2, 52, 55, 59, 94, 96, 97], "would": [2, 9], "most": [2, 36, 37, 39, 42, 43, 45, 46, 61, 62, 99, 112, 131, 134], "like": [2, 36, 37, 44, 61, 62, 131], "differ": [2, 6, 7, 9, 12, 13, 14, 28, 32, 35, 36, 37, 52, 55, 57, 58, 61, 62, 86, 88, 90, 91, 99, 111, 113, 114, 118, 121, 131, 134, 135, 139], "howev": [2, 6, 7, 9, 11, 13, 17, 18, 36, 37, 61, 62, 134, 135], "tri": [2, 7], "best": [2, 3, 6, 9, 20, 22, 23, 26, 27, 28, 32, 36, 37, 43, 44, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 127, 128, 129, 130, 135, 139], "try": [2, 7, 36, 42, 52, 57, 135], "potenti": 2, "def": [2, 3, 9, 127, 128, 129, 130, 131, 134, 135, 138, 139], "train": [2, 3, 6, 9, 12, 35, 36, 37, 42, 43, 52, 59, 61, 62, 66, 67, 68, 69, 70, 78, 86, 88, 101, 102, 118, 127, 128, 129, 130, 131, 134, 135, 139], "self": [2, 9, 28, 29, 52, 57, 66, 67, 68, 72, 73, 78, 79, 80, 84, 94, 96, 99, 112, 113, 114, 115, 117, 127, 128, 129, 130, 131, 134, 135, 139], "seed": [2, 3, 6, 7, 9, 14, 16, 28, 29, 30, 32, 33, 34, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139], "int": [2, 3, 14, 28, 29, 32, 33, 36, 37, 38, 39, 41, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 113, 114, 115, 117, 118, 120, 122, 127, 128, 129, 130, 131, 134, 135, 138, 139], "model": [2, 6, 7, 12, 18, 20, 21, 24, 25, 35, 36, 37, 38, 39, 41, 42, 43, 44, 61, 62, 64, 101, 102, 113, 115, 118, 127, 128, 129, 130, 131, 135, 143], "multilayerperceptron": 2, "learning_r": [2, 134, 135, 139], "fit": [2, 8, 20, 21, 66, 89], "alwai": [2, 7, 9, 11, 15, 52, 57, 127, 129], "minim": [2, 15, 28, 33, 36, 38, 39, 41, 42, 43, 52, 53, 55, 57, 59, 94, 96], "smaller": [2, 86, 88, 120], "better": [2, 9, 11, 14, 36, 44, 127, 128, 129, 131, 134, 135, 138, 139, 143], "gener": [2, 6, 7, 9, 10, 14, 16, 31, 36, 37, 45, 51, 52, 53, 54, 56, 57, 60, 90, 91, 99, 111, 113, 114, 115, 117, 118, 128, 143], "argument": [2, 9, 10, 11, 14, 20, 21, 36, 37, 39, 42, 43, 45, 46, 52, 54, 55, 59, 61, 62, 72, 73, 113, 114, 118, 135, 139], "intensifi": [2, 10, 11, 13, 15, 17, 18, 35, 36, 37, 38, 39, 41, 42, 43, 44, 61, 62, 64, 99, 100, 111, 113, 114, 115, 117, 118, 127, 128, 129, 131, 134, 135, 138, 139], "first": [2, 7, 13, 36, 37, 52, 56, 57, 59, 60, 61, 62, 72, 73, 113, 116, 117, 121, 127, 128, 129, 131, 134, 135, 138, 139], "name": [2, 11, 12, 16, 20, 21, 22, 23, 24, 25, 26, 27, 36, 37, 72, 73, 99, 112, 118, 122, 127], "here": [2, 7, 9, 20, 27, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "specifi": [2, 3, 14, 16, 28, 29, 32, 36, 37, 52, 55, 59, 61, 62, 66, 67, 68, 70, 72, 73, 79, 83, 118, 120, 127, 130, 134, 135], "requir": [2, 7, 10, 14, 20, 21, 25, 27, 52, 59, 86, 88, 113, 114, 118, 135], "addition": [2, 9, 12, 101, 102], "successivehalv": [2, 52, 55, 59, 60], "hyperband": [2, 5, 6, 10, 13, 36, 41, 43, 52, 56, 59, 134, 135], "did": 2, "pass": [2, 7, 9, 10, 11, 14, 36, 37, 52, 59, 86, 88, 101, 102, 113, 114, 115, 117, 118, 122, 123, 127, 131, 134, 135, 139], "But": [2, 13, 135], "don": [2, 7], "worri": 2, "tell": [2, 9, 18, 36, 37, 61, 62, 64, 132, 133, 142], "someth": 2, "miss": 2, "never": [2, 31], "variabl": [2, 118, 131, 134, 139], "want": [2, 6, 7, 9, 11, 12, 13, 14, 16, 18, 20, 27, 36, 44, 128, 131, 134, 135, 139, 143], "limit": [2, 7, 13, 113, 114, 115, 117], "time": [2, 7, 9, 13, 14, 17, 31, 36, 38, 39, 42, 44, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 94, 97, 98, 99, 100, 101, 103, 112, 113, 114, 115, 117, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139], "where": [2, 6, 7, 16, 20, 21, 25, 28, 32, 36, 44, 52, 57, 135, 139], "save": [2, 36, 37, 61, 62, 64, 99, 111, 112, 118, 139], "output_directori": [2, 16, 118], "path": [2, 36, 37, 118, 122], "your_output_directori": 2, "walltime_limit": [2, 118, 134, 135, 139], "120": 2, "two": [2, 7, 9, 14, 28, 32, 52, 59, 86, 88, 135, 143], "minut": [2, 127, 128, 129, 130, 131, 134, 135, 138, 139], "n_trial": [2, 3, 20, 25, 36, 39, 42, 43, 45, 46, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139], "500": 2, "max": [2, 10, 20, 23, 123, 128, 134, 135, 139], "trial": [2, 6, 9, 13, 35, 36, 37, 38, 39, 42, 52, 53, 54, 56, 57, 60, 61, 62, 64, 99, 100, 101, 102, 112, 113, 114, 115, 117, 118, 127, 128, 129, 130, 131, 134, 135, 138, 139], "n_worker": [2, 52, 53, 54, 56, 57, 60, 113, 115, 118, 134, 139], "eight": 2, "worker": [2, 52, 53, 54, 55, 56, 57, 59, 60, 99, 100, 113, 114, 115, 117, 118, 134, 135], "A": [2, 5, 6, 8, 14, 20, 25, 28, 32, 52, 53, 57, 68, 70, 78, 80, 90, 91, 92, 93, 101, 103, 113, 114, 115, 117, 138, 143], "construct": [2, 113, 115], "pipelin": [2, 36, 37], "variou": [2, 36, 37], "satisfi": [2, 9], "crucial": [2, 134], "peak": 2, "idea": [2, 7, 14, 143], "behind": 2, "simpl": [2, 6, 9, 99, 111, 128, 138], "easi": 2, "understand": 2, "without": [2, 8, 18, 31], "dive": 2, "deep": [2, 72, 73, 134], "materi": 2, "expert": 2, "invit": 2, "chang": [2, 9, 16, 36, 43, 52, 53, 54, 56, 57, 60, 72, 73, 99, 112, 127, 128, 129, 131, 134, 135, 138, 139], "thei": [2, 9, 52, 59], "even": [2, 6, 8, 12, 36, 38, 39, 41, 42, 43, 52, 53, 55, 57, 59], "horizont": 2, "scrollabl": 2, "show": [2, 7, 9, 11, 36, 37, 61, 62, 129, 138, 139, 142], "what": [2, 7, 66, 67, 99, 112, 113, 114, 115], "reveal": 2, "medium": 2, "high": [2, 9], "initi": [2, 13, 18, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 55, 57, 59, 61, 62, 94, 96, 97, 113, 115, 118, 127, 128, 129, 131, 134, 135, 138, 139], "design": [2, 6, 13, 18, 28, 29, 31, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 113, 115, 127, 128, 129, 131, 134, 135, 138, 139], "sobol": [2, 9, 36, 39, 42, 45, 51], "surrog": [2, 12, 18, 20, 21, 25, 35, 36, 37, 38, 39, 42, 43, 44, 61, 62, 64, 66, 67, 85, 101, 102, 118, 127, 128], "gaussian": [2, 6, 9, 36, 39, 66, 67, 68, 69, 70, 72, 73, 78, 80, 127], "Not": 2, "acquisit": [2, 18, 35, 36, 37, 38, 39, 42, 43, 44, 61, 62, 64, 68, 78, 101, 104, 131], "expect": [2, 7, 9, 20, 23, 36, 37, 38, 39, 42, 86, 88, 113, 114], "log": [2, 9, 20, 22, 23, 36, 37, 42, 52, 53, 54, 56, 57, 60, 61, 62, 68, 70, 79, 80, 83, 84, 86, 88, 101, 104, 107, 108, 128, 130, 131, 134, 135, 139], "maximi": [2, 18, 36, 37, 61, 62], "local": [2, 9, 28, 32, 33, 36, 38, 39, 42, 52, 54, 101, 103, 113, 115], "sort": [2, 9, 28, 32, 36, 38, 39, 42], "runhistori": [2, 11, 14, 18, 35, 36, 37, 38, 39, 42, 43, 44, 52, 53, 54, 56, 57, 60, 61, 62, 64, 129, 130, 138, 139], "encod": [2, 18, 36, 37, 38, 39, 42, 44, 61, 62], "probabl": [2, 9, 20, 26, 36, 38, 39, 42, 79, 80, 84, 94, 96, 98], "20": [2, 36, 38, 42, 68, 78, 86, 88, 127, 129, 130], "50": [2, 9, 36, 39, 42, 43, 45, 46, 68, 78, 128, 130], "closest": [2, 134], "implement": [2, 7, 20, 21, 28, 29, 32, 33, 45, 46, 52, 55, 59, 61, 62, 64, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 81, 83, 86, 88, 90, 93, 113, 114, 115, 134], "bohb": [2, 6, 7, 52, 55, 59, 134], "emphas": 2, "highli": 2, "modular": 2, "accept": [2, 7, 36, 44, 134], "note": [2, 14], "contrast": 2, "previou": [2, 7, 9, 28, 29, 32, 36, 37, 61, 62, 99, 112, 127, 131], "instanti": [2, 6, 11, 36, 37, 39, 52, 54, 59], "instead": [2, 6, 11, 12, 13, 72, 73], "kwarg": [2, 20, 21, 45, 51, 61, 64, 72, 73, 86, 87, 101, 106, 110, 113, 117], "direct": 2, "modul": [2, 122], "blackboxfacad": [2, 36, 39, 127], "bbfacad": 2, "hyperparameteroptimizationfacad": [2, 3, 17, 36, 42, 43, 128, 129, 130, 131, 138, 139], "hpofacad": [2, 9, 130, 139], "multifidelityfacad": [2, 9, 36, 43, 134, 135], "mffacad": 2, "algorithmconfigurationfacad": [2, 36, 38], "acfacad": 2, "randomfacad": [2, 36, 41, 44], "rfacad": 2, "hyperbandfacad": [2, 36, 41, 44], "hbfacad": 2, "target_funct": [2, 36, 37, 38, 39, 41, 42, 43, 44, 113, 114, 138], "code": [3, 7, 9, 16, 28, 32, 68, 70, 78, 79, 84, 113, 115, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "vector": [3, 28, 33, 101, 102, 103, 132, 133, 142], "iri": [3, 128], "numpi": [3, 72, 73, 101, 103, 122, 128, 131, 134, 135, 138, 139], "np": [3, 20, 21, 23, 60, 66, 67, 68, 70, 72, 73, 80, 85, 86, 88, 94, 97, 101, 102, 104, 118, 120, 122, 128, 131, 134, 135, 138, 139], "scenario": [3, 7, 10, 11, 12, 14, 16, 20, 25, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 61, 62, 90, 91, 92, 93, 101, 102, 103, 104, 105, 107, 108, 109, 113, 114, 127, 128, 129, 130, 131, 134, 135, 138, 139], "sklearn": [3, 72, 73, 128, 131, 134, 135, 139], "svm": [3, 128], "svc": [3, 128], "model_select": [3, 128, 131, 134, 135, 139], "cross_val_scor": [3, 128, 131, 134, 135, 139], "load_iri": [3, 128], "classifi": [3, 128, 131, 134, 135, 139], "random_st": [3, 128, 131, 134, 135, 139], "score": [3, 128, 131, 134, 135, 139], "data": [3, 6, 9, 10, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 36, 37, 38, 42, 43, 45, 46, 52, 53, 54, 57, 59, 61, 62, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 111, 112, 113, 114, 118, 127, 128, 131, 134, 135, 139], "target": [3, 6, 7, 10, 11, 12, 14, 36, 37, 43, 52, 53, 55, 57, 59, 60, 61, 62, 66, 67, 86, 88, 99, 112, 113, 114, 115, 116, 117, 118, 127, 128, 131, 134, 135, 139], "cv": [3, 6, 128, 131, 134, 135, 139], "1000": [3, 36, 39, 127, 128], "determinist": [3, 7, 36, 43, 52, 55, 59, 118, 129, 134, 135, 138], "true": [3, 14, 36, 37, 38, 42, 52, 53, 54, 56, 57, 60, 61, 62, 64, 68, 70, 72, 73, 78, 86, 88, 99, 112, 118, 122, 127, 128, 129, 130, 131, 134, 135, 138, 139], "200": [3, 11, 130, 134, 139], "incumb": [3, 6, 9, 20, 26, 36, 37, 43, 44, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 99, 100, 112, 127, 128, 129, 130, 131, 134, 135, 138, 139], "lisha": 5, "li": [5, 52, 59], "kevin": 5, "jamieson": 5, "giulia": 5, "desalvo": 5, "afshin": 5, "rostamizadeh": 5, "ameet": 5, "talwalkar": 5, "novel": [5, 6], "bandit": [5, 6], "approach": [5, 36, 44, 101, 103], "j": 5, "mach": 5, "re": [5, 99, 112], "18": [5, 52, 57, 131, 133], "185": 5, "52": [5, 134], "2017": [5, 68, 70, 78, 80], "jmlr": [5, 143], "org": [5, 8, 20, 22, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "paper": [5, 20, 24, 143], "v18": 5, "16": [5, 52, 57, 131], "558": 5, "html": [5, 45, 51], "hssl22": [5, 20, 25], "pibo": [5, 20, 25], "hvarfner": [5, 20, 25], "et": [5, 7, 20, 24, 25, 52, 55, 59, 68, 78], "al": [5, 7, 20, 24, 25, 52, 55, 59, 68, 78], "2022": 5, "arxiv": [5, 20, 22, 143], "pdf": [5, 20, 22, 24, 52, 59, 90, 93], "2204": 5, "11051": 5, "knowl": 5, "hybrid": 5, "landscap": 5, "approxim": [5, 9], "expens": [5, 6], "multiobject": 5, "ieeexplor": 5, "ieee": 5, "1583627": 5, "sequenti": [6, 7, 143], "bo": [6, 36, 37, 101, 103], "hb": [6, 60], "roar": [6, 36, 41, 44], "onlin": [6, 36, 41, 44], "adapt": [6, 80, 134, 135, 139], "race": [6, 36, 41, 44, 52, 53, 54, 55, 56, 57, 59, 60, 134, 143], "bb": 6, "mf": 6, "rf": [6, 20, 25], "gp": [6, 20, 22, 68, 78], "mcmc": [6, 36, 39, 68, 78], "markov": 6, "chain": [6, 68, 78], "mont": [6, 68, 78], "carlo": [6, 68, 78], "cli": 6, "hp": [6, 9, 131], "doe": [6, 7, 13, 17, 20, 27, 31, 36, 43, 52, 57, 94, 97, 113, 115, 139], "assum": [6, 7, 113, 116, 127, 128, 129, 131, 134, 135, 138, 139], "form": [6, 36, 43, 79, 81], "usual": [6, 113, 116], "emploi": 6, "weight": [6, 9, 11, 20, 25, 28, 32, 90, 91, 92, 93, 99, 112, 118, 131, 140, 141, 142], "explor": [6, 9, 20, 22, 23, 26, 36, 37, 38, 39, 42], "exploit": [6, 9, 20, 22, 23, 26, 36, 37, 38, 39, 42, 43], "minimum": [6, 36, 38, 39, 42, 52, 53, 54, 57, 86, 88, 99, 112, 118, 127], "its": [6, 9, 12, 14, 52, 53, 68, 72, 73, 78, 127, 128], "extens": [6, 52, 55], "success": [6, 10, 13, 36, 41, 43, 52, 55, 59, 60, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 134, 135], "halv": [6, 10, 13, 36, 41, 43, 52, 55, 59, 60, 134, 135], "work": [6, 7, 10, 12, 13, 14, 18, 36, 43, 113, 115, 127, 139], "free": [6, 7, 8, 36, 41], "smbo": [6, 9, 35, 36, 37, 38, 39, 42, 43, 52, 54, 57, 61, 90, 91, 93, 94, 95, 96, 97, 98, 99, 111, 113, 114, 115, 117, 130], "select": [6, 9, 36, 37, 44, 45, 46, 48, 52, 55, 56, 57, 59, 60, 99, 112, 113, 114, 139], "uniformli": [6, 36, 44, 52, 57], "iter": [6, 9, 17, 28, 29, 31, 32, 33, 35, 36, 37, 39, 41, 42, 43, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 90, 91, 93, 94, 95, 96, 97, 98, 99, 112, 113, 114, 115, 117, 134, 135], "compar": [6, 9, 36, 41, 44, 121], "them": [6, 101, 106, 108, 109, 110, 113, 115, 134, 139], "against": [6, 7, 36, 43, 52, 55, 57, 59], "intensif": [6, 17, 35, 36, 43, 52, 53, 57, 61, 62, 64, 134], "mechan": [6, 113, 114, 134, 143], "extend": 6, "chapter": [6, 18], "refer": [6, 7, 9, 10, 20, 22, 45, 51, 52, 55, 59, 143], "observ": [6, 9, 36, 43, 99, 112, 120], "cost": [6, 9, 11, 12, 18, 36, 37, 42, 52, 53, 54, 56, 57, 60, 61, 62, 90, 91, 92, 93, 99, 100, 101, 102, 103, 112, 113, 114, 115, 117, 118, 123, 127, 128, 129, 130, 131, 134, 135, 138, 139], "given": [6, 9, 20, 21, 22, 23, 26, 27, 52, 53, 55, 59, 66, 67, 94, 96, 98, 99, 101, 102, 112, 113, 114, 117, 123, 135], "singl": [6, 9, 11, 36, 38, 42, 44, 66, 85, 86, 88, 90, 91, 92, 93, 99, 112, 113, 114, 115, 117], "combin": [6, 36, 37, 43, 52, 59, 61, 62, 90, 91, 92, 93, 99, 112, 113, 114, 115, 118, 128, 134, 135, 143], "metric": 6, "qualiti": [6, 52, 59], "than": [6, 9, 11, 36, 37, 44, 52, 57, 61, 62, 79, 80, 81, 86, 88, 118, 127, 128, 129, 131, 134, 135, 138, 139], "goal": 6, "solut": [6, 7, 28, 30, 34, 36, 37, 61, 62, 64], "least": [6, 36, 43, 134], "good": [6, 134], "compromis": 6, "anoth": [6, 9, 11, 99, 111, 128], "word": [6, 9], "epoch": [6, 10, 52, 59, 118, 136, 137, 142], "size": [6, 52, 57, 118, 131, 134], "subset": [6, 10, 12, 52, 57, 99, 112, 118, 135], "context": [6, 118], "let": [6, 9, 127, 128, 129, 130, 131, 134, 139], "sai": 6, "therebi": [6, 10], "prematur": [6, 10], "often": [6, 7, 11, 12, 36, 44, 127, 129], "transform": [6, 9, 36, 37, 61, 62, 80, 86, 88, 90, 91, 92, 93, 101, 102, 103, 104, 106, 107, 108, 109, 110, 122, 135], "augment": [6, 12, 20, 25], "each": [6, 9, 10, 12, 13, 14, 20, 25, 28, 31, 33, 36, 37, 41, 43, 52, 53, 54, 55, 57, 59, 61, 62, 68, 70, 78, 90, 91, 93, 94, 98, 99, 112, 113, 115, 118, 139], "call": [6, 7, 9, 12, 14, 18, 20, 21, 28, 29, 33, 35, 36, 37, 38, 39, 42, 44, 45, 46, 52, 53, 54, 57, 59, 60, 61, 62, 66, 67, 72, 73, 74, 79, 80, 84, 89, 113, 114, 115, 117, 121, 129, 131], "so": [6, 9, 11, 14, 16, 17, 20, 22, 26, 27, 36, 37, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 113, 114, 115, 117, 122, 130, 131, 134], "found": [6, 7, 13, 20, 25, 36, 37, 61, 62, 94, 97, 127, 143], "superior": 6, "govern": 6, "how": [6, 7, 9, 10, 11, 17, 18, 36, 37, 38, 39, 42, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 99, 111, 112, 113, 114, 115, 118, 121, 129, 134, 138, 139, 142], "when": [6, 7, 9, 10, 11, 13, 36, 37, 38, 44, 52, 59, 60, 61, 62, 66, 67, 68, 69, 70, 72, 73, 78, 86, 88, 113, 115, 118, 122, 134], "trust": 6, "enough": [6, 36, 44, 52, 53, 113, 114], "make": [6, 7, 9, 11, 20, 27, 52, 53, 54, 56, 57, 59, 60, 68, 78, 94, 97, 113, 114, 115, 117, 118, 131, 134, 135, 139], "new": [6, 7, 9, 14, 16, 31, 35, 36, 44, 52, 53, 54, 56, 57, 60, 99, 112, 127, 128, 129, 131, 138, 139], "known": [6, 36, 43, 127], "should": [7, 8, 9, 13, 17, 20, 21, 24, 31, 36, 37, 38, 39, 42, 52, 53, 57, 61, 62, 64, 66, 72, 73, 85, 94, 95, 96, 97, 98, 99, 111, 118, 127, 129], "smac2": [7, 86, 88], "reimplement": 7, "origin": [7, 11, 28, 32, 52, 54, 79, 80, 84, 99, 112, 143], "hutter": [7, 68, 70, 78, 80, 143], "2021": [7, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "slightli": 7, "comparison": [7, 9, 11], "stabl": 7, "releas": 7, "java": 7, "sinc": [7, 9, 13, 17, 18, 36, 44, 134, 139], "maintain": 7, "applic": [7, 10], "cannot": 7, "root": [7, 101, 110, 121], "directori": [7, 14, 118], "instal": 7, "pyrfr": 7, "rais": [7, 101, 102, 131, 134, 139], "cryptic": 7, "error": 7, "ensur": [7, 17, 20, 25, 118], "gcc": 7, "compil": 7, "same": [7, 9, 14, 28, 32, 52, 57, 99, 111, 112, 118, 123], "link": 7, "dure": [7, 9, 28, 32, 33, 36, 37, 44, 52, 57, 61, 62, 86, 88, 99, 111], "happen": [7, 9, 11, 52, 57], "anaconda": 7, "my": [7, 36, 39, 42, 43, 45, 46], "sure": [7, 9, 11, 68, 78, 94, 97, 113, 114, 115, 116], "option": [7, 11, 12, 14, 20, 21, 25, 28, 29, 32, 35, 36, 37, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 66, 67, 72, 73, 99, 101, 102, 112, 113, 116, 123, 130], "wrap": [7, 113, 115], "verbos": [7, 14], "debug": [7, 14, 36, 37, 56, 60], "restor": 7, "state": [7, 16, 52, 53, 57, 90, 91, 93, 94, 97, 99, 101, 102, 112, 128], "ye": 7, "look": [7, 10, 13, 31, 36, 37, 44, 61, 62], "facad": [7, 9, 10, 11, 12, 61, 62, 118, 127, 128, 131, 134, 138, 139], "smac4hpo": 7, "close": [7, 113, 115], "discov": 7, "bug": 7, "behav": [7, 20, 25], "report": [7, 13], "open": [7, 14], "issu": [7, 9, 36, 42, 52, 53, 143], "our": [7, 10, 11, 13, 128, 131, 134, 135, 139, 143], "list": [7, 11, 20, 21, 28, 29, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 72, 73, 78, 85, 86, 88, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 135, 138], "befor": [7, 9, 13, 20, 21, 28, 32, 33, 35, 36, 37, 42, 52, 55, 57, 59, 61, 62, 68, 78, 94, 97, 101, 103, 113, 114, 115, 117, 134, 139], "hasn": 7, "alreadi": [7, 9, 13, 20, 21, 52, 57, 99, 112, 139], "tracker": 7, "latest": 7, "u": [7, 139], "inform": [7, 9, 14, 36, 37, 43, 45, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 99, 100, 111, 112, 113, 114, 115, 117, 128], "descript": [7, 14, 52, 59], "reproduc": [7, 18, 118], "about": [7, 9, 36, 43, 52, 55, 61, 62, 64, 72, 73, 99, 100, 113, 114, 128, 131], "setup": [7, 36, 37, 44, 61, 62], "help": 7, "resolv": 7, "packag": [7, 143], "feel": 7, "screenshot": 7, "contribut": [7, 143], "discuss": [7, 18], "care": [7, 9, 36, 37], "question": 7, "feedback": 7, "prefer": 7, "locat": [7, 20, 23], "featur": [7, 9, 12, 36, 38, 42, 43, 66, 67, 68, 69, 70, 78, 85, 86, 88, 99, 101, 102, 103, 111, 118, 120, 135], "ongo": 7, "guid": [7, 9], "flag": 7, "fals": [7, 20, 23, 25, 35, 36, 37, 38, 39, 41, 42, 43, 44, 52, 53, 54, 56, 57, 60, 61, 62, 68, 72, 73, 74, 75, 76, 77, 78, 86, 88, 99, 112, 113, 115, 118, 128, 129, 130], "non": [7, 20, 25, 36, 43, 52, 55, 59, 72, 73, 134, 135], "thu": [7, 12, 131], "nevertheless": [7, 52, 57, 113, 115], "still": [7, 9, 11, 16, 99, 111, 113, 114, 115, 117, 129], "realiz": [7, 13], "tfe": 7, "signific": 7, "advantag": [7, 134], "necessarili": 7, "wors": 7, "might": [7, 9, 13, 72, 73, 90, 91, 92, 93, 99, 112, 113, 114, 115, 117], "lead": [7, 9], "why": [7, 10], "colab": 7, "crash": [7, 101, 102, 103, 104, 105, 107, 108, 109, 113, 116], "child": [7, 45, 46, 113, 114, 128, 134, 139], "pynish": [7, 113, 117, 118], "enforc": [7, 118], "memori": [7, 113, 117, 118], "runner": [7, 61, 62], "mai": 7, "specif": [7, 13, 20, 21, 36, 37, 72, 73, 86, 88, 101, 104, 135], "overcom": 7, "limit_resourc": 7, "program": [8, 31, 99, 111], "softwar": [8, 14], "redistribut": 8, "modifi": 8, "under": 8, "term": 8, "claus": [8, 127, 128, 129, 130, 131, 134, 135, 138, 139], "bsd": [8, 127, 128, 129, 130, 131, 134, 135, 138, 139], "distribut": [8, 9, 14, 79, 81, 83, 86, 88, 113, 115], "hope": 8, "warranti": 8, "impli": [8, 134], "merchant": 8, "FOR": 8, "particular": [8, 52, 57], "purpos": [8, 12], "receiv": [8, 9, 13, 113, 115], "copi": 8, "along": [8, 66, 67], "opensourc": 8, "basic": [9, 11, 129], "mention": [9, 143], "start": [9, 14, 17, 35, 36, 37, 61, 62, 68, 78, 90, 91, 93, 113, 115, 130, 134, 135, 139], "pictur": 9, "These": [9, 131], "influenc": 9, "drastic": 9, "wa": [9, 15, 16, 20, 21, 52, 57, 99, 100, 111, 112, 113, 115], "empir": [9, 20, 25, 52, 53, 54, 56, 57, 60, 99, 112], "epm": [9, 52, 57, 99, 111], "mostli": [9, 118], "associ": [9, 52, 53, 118], "incorpor": [9, 13, 36, 37, 44, 66, 67, 68, 69, 70, 78, 86, 88, 99, 112, 118, 131], "higher": [9, 36, 38, 39, 42, 52, 57, 128], "collect": [9, 14, 36, 43, 61, 62, 72, 73, 74, 113, 114, 115], "involv": 9, "highest": [9, 15, 36, 37, 43, 52, 55, 59, 61, 62, 99, 112], "_min_sampl": 9, "main": [9, 28, 32, 36, 44, 113, 115, 130, 143], "imagin": 9, "75": 9, "505": 9, "7": [9, 52, 57, 66, 67, 68, 69, 70, 78, 86, 88, 89, 127], "becaus": [9, 13, 17, 52, 57, 72, 73, 99, 112, 113, 114, 116, 127, 135], "end": [9, 28, 29, 35, 52, 57], "me": 9, "request": [9, 52, 54, 99, 111], "get_next_configur": [9, 36, 37, 52, 53, 54, 56, 57, 60, 61, 62, 64], "over": [9, 20, 22, 24, 25, 26, 27, 36, 38, 39, 42, 43, 52, 53, 54, 57, 61, 62, 64, 66, 67, 68, 78, 85, 86, 88, 94, 97, 98, 99, 112, 113, 117, 132, 133, 142], "considered_st": [9, 101, 102, 103, 104, 105, 107, 108, 109], "timeout": [9, 101, 103], "consid": [9, 36, 38, 39, 41, 42, 43, 44, 52, 53, 55, 57, 59, 86, 88, 101, 102, 103, 113, 117, 134, 135, 139], "step": [9, 28, 32, 33, 36, 43, 68, 78, 113, 117, 134, 135, 139], "normalize_cost": [9, 123], "objective_bound": [9, 99, 112], "objective_weight": [9, 99, 112, 118, 139], "user": [9, 11, 13, 20, 25, 28, 32, 36, 37, 52, 55, 59, 61, 62, 113, 115, 132, 133, 142], "next": [9, 13, 17, 35, 36, 37, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 94, 95, 96, 97, 98, 113, 114, 128, 129], "inact": [9, 36, 37, 61, 62, 120], "after": [9, 20, 21, 35, 36, 41, 43, 44, 52, 55, 57, 59, 94, 97, 129, 130, 134, 139], "mathemat": 9, "techniqu": 9, "varianc": [9, 66, 67, 68, 70, 78, 85, 86, 88, 135], "section": 9, "otherwis": [9, 113, 115, 117, 118], "bunch": 9, "lower": [9, 20, 22, 79, 84, 99, 112, 131, 139], "confid": [9, 20, 22, 36, 44, 52, 57], "bound": [9, 20, 22, 79, 84, 99, 112, 120, 123, 139], "thompson": [9, 20], "prior": [9, 20, 25, 28, 32, 72, 73, 74, 75, 76, 77, 132, 133, 142], "literatur": 9, "calcul": [9, 20, 21, 52, 55, 59, 99, 112, 127, 128, 129, 131, 134, 139], "respons": [9, 101, 102, 104, 106, 107, 108, 109, 110], "wrapper": [9, 66, 85, 113, 114, 115, 117], "upon": [9, 113, 115], "differenti": 9, "evolut": 9, "while": [9, 52, 56, 57, 60], "neighbour": 9, "pai": 9, "attent": 9, "challeng": [9, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 94, 95, 113, 114, 127, 128, 129, 131, 134, 135, 138, 139], "experi": [9, 36, 42], "ram": [9, 36, 42], "long": [9, 17], "comput": [9, 14, 17, 20, 21, 22, 23, 24, 26, 79, 80, 84, 99, 112], "challengerlist": [9, 28, 29, 31], "latin": [9, 45, 49], "hypercub": [9, 45, 49], "factori": [9, 45, 48, 99, 100], "corner": [9, 45, 48], "sequenc": [9, 45, 51, 52, 57], "quasi": 9, "disrep": 9, "statist": [9, 61, 62], "method": [9, 11, 13, 20, 21, 28, 29, 35, 36, 37, 43, 52, 53, 55, 57, 59, 61, 62, 64, 66, 67, 72, 73, 74, 79, 80, 84, 86, 88, 113, 114, 115, 117, 131, 134, 135, 139], "multidimension": 9, "whether": [9, 11, 16, 17, 20, 23, 25, 36, 37, 52, 53, 54, 56, 57, 60, 61, 62, 64, 72, 73, 94, 95, 96, 97, 98, 99, 111, 112, 113, 114, 115, 117, 118], "chanc": 9, "although": 9, "includ": [9, 66, 67, 85, 131, 135, 143], "trade": [9, 36, 37], "off": [9, 16, 36, 37], "stuck": [9, 13], "optimum": [9, 20, 25, 101, 102, 132, 133, 142], "guarante": [9, 17, 18, 99, 112], "addit": [9, 20, 21, 36, 38, 39, 42, 43, 44, 45, 46, 99, 101, 103, 112, 113, 114, 115, 117, 127, 128, 129, 131, 134, 135, 138, 139], "anneal": [9, 94, 96], "modulu": [9, 31, 94, 97], "far": [9, 11, 17, 20, 22, 26, 27, 36, 37, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 130], "decid": [9, 36, 37, 52, 54, 61, 62, 113, 114, 143], "worth": 9, "spend": 9, "pair": [9, 52, 53, 57, 99, 112, 139], "max_config_cal": [9, 36, 38, 39, 42, 44, 52, 53, 57, 129, 131], "lot": [9, 18, 135], "reproduci": 9, "unless": 9, "intensify_percentag": [9, 36, 38, 39, 42, 44, 52, 57], "throughout": 9, "uses_se": [9, 52, 53, 54, 56, 57, 60], "uses_budget": [9, 52, 53, 56, 57, 59, 60], "uses_inst": [9, 52, 53, 56, 57, 59, 60], "callabl": [9, 31, 36, 37, 52, 53, 54, 56, 57, 60, 113, 114], "saniti": 9, "know": [9, 72, 73, 129], "exact": [9, 36, 37, 61, 62], "get_target_function_se": [9, 36, 37, 52, 53, 57, 59, 60], "get_target_function_budget": [9, 36, 37, 52, 53, 57, 59, 60], "get_target_function_inst": [9, 36, 37, 52, 53, 57, 59, 60], "normal": [9, 11, 20, 26, 52, 57, 68, 70, 78, 79, 83, 90, 91, 92, 93, 99, 112, 123, 131], "done": [9, 11, 36, 37, 52, 53, 54, 57, 61, 62, 113, 114, 115, 117], "average_cost": [9, 11, 99, 112, 139], "averag": [9, 11, 36, 37, 61, 62, 99, 112, 118, 134, 139], "hold": [9, 18, 36, 37, 61, 62, 122, 128], "un": 9, "min": [9, 52, 57, 123, 134, 135, 139], "sum": [9, 36, 38, 39, 42, 52, 53, 54, 57, 72, 73, 99, 112], "trial_info": [9, 52, 53, 54, 56, 57, 60, 113, 114, 115, 117], "trial_valu": [9, 52, 53, 54, 56, 57, 60], "item": [9, 14, 100, 122], "info": [9, 35, 36, 37, 52, 53, 61, 62, 64, 113, 114, 127, 128, 129, 130, 131, 134, 135, 138, 139], "statu": [9, 52, 53, 54, 56, 57, 60, 99, 100, 111, 112, 113, 114, 115, 117], "starttim": [9, 99, 100, 112], "endtim": [9, 99, 100, 112], "additional_info": [9, 99, 100, 112, 113, 114, 115, 117], "get_config": [9, 99, 112, 139], "format": [9, 121, 122], "afterward": 9, "abil": 9, "easili": [9, 118], "loop": [9, 36, 37, 43, 44, 52, 57, 61, 62, 113, 114, 130], "inherit": [9, 72, 73], "overwrit": [9, 36, 37, 38, 39, 41, 42, 43, 44, 60, 61, 62, 99, 112, 127, 128, 129, 130, 131, 134, 135, 138, 139], "class": [9, 11, 20, 28, 36, 45, 52, 61, 66, 68, 72, 79, 86, 90, 94, 99, 101, 113, 127, 128, 129, 130, 131, 134, 135, 139], "customcallback": [9, 130], "on_start": [9, 35, 130], "none": [9, 20, 21, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 128, 129, 130, 134, 135, 138, 139], "on_end": [9, 35], "on_iteration_start": [9, 35], "on_iteration_end": [9, 35], "runinfo": [9, 99, 111, 113, 114, 115], "runvalu": 9, "bool": [9, 20, 23, 25, 35, 36, 37, 38, 42, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 68, 70, 72, 73, 78, 86, 88, 94, 95, 96, 97, 98, 99, 112, 113, 114, 115, 117, 118, 122, 130, 139], "just": [9, 11, 36, 44, 130], "do": [9, 11, 12, 16, 20, 27, 36, 44, 52, 54, 56, 57, 60, 113, 115, 131], "print": [9, 122, 127, 128, 129, 130, 131, 134, 135, 138, 139], "min_budget": [10, 52, 59, 118, 134, 135], "max_budget": [10, 52, 59, 118, 134, 135], "real": [10, 36, 37, 52, 55, 59, 61, 62, 113, 114, 115, 117], "stage": [10, 13, 35, 52, 53, 54, 56, 57, 60, 130], "That": [10, 36, 41, 42, 43, 52, 54], "reason": [10, 72, 73], "simpli": [10, 11, 36, 44], "wherea": 10, "world": 10, "exactli": 11, "right": [11, 20, 23, 72, 73], "histori": [11, 13, 36, 37, 52, 54, 61, 62, 118], "keep": [11, 36, 38, 66, 67, 68, 69, 70, 78, 86, 88, 113, 114, 115, 117, 139], "recip": 11, "dictionari": [11, 99, 112, 121], "contain": [11, 36, 37, 52, 53, 57, 61, 62, 64, 72, 73, 99, 101, 103, 112, 113, 114, 115, 117], "kei": [11, 99, 100, 112], "myobj1": 11, "myobj2": 11, "multi_object": [11, 101, 102, 139], "custom": [11, 18, 132, 133, 142], "multi_objective_algorithm": [11, 36, 37, 38, 39, 41, 42, 43, 44, 101, 102, 139], "plot": [11, 138, 139], "five": [12, 36, 39, 42, 43, 45, 46, 134, 139], "identifi": [12, 56, 60, 118], "id": [12, 99, 112], "d0": 12, "d1": [12, 121], "d2": [12, 121], "d3": 12, "d4": 12, "instance_featur": [12, 66, 67, 68, 69, 70, 78, 86, 88, 89, 118, 120, 135], "those": 12, "expand": [12, 118], "x": [12, 20, 21, 22, 23, 26, 27, 66, 67, 68, 69, 70, 72, 73, 78, 79, 81, 85, 86, 88, 101, 102, 103, 120, 127, 129, 138, 139], "matrix": [12, 66, 67], "plai": 12, "role": 12, "underli": 12, "121": 12, "6": [12, 36, 38, 42, 52, 57, 86, 88, 101, 102, 103, 104, 105, 107, 108, 109], "140": 12, "65": [12, 131], "99": [12, 129, 139], "45": [12, 135], "102": 12, "59": 12, "132": 12, "48": 12, "type": [12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 128, 131, 134, 135, 138, 139], "give": [13, 18, 52, 54, 99, 111, 118], "opportun": 13, "come": [13, 99, 100, 113, 115], "some": [13, 18, 72, 73, 101, 102, 130], "part": [13, 28, 29], "callback": [13, 18, 31, 36, 37, 38, 39, 41, 42, 43, 44, 132, 133, 142], "ignor": [13, 36, 37, 61, 62, 72, 73, 131, 134, 135, 139], "skip": [13, 52, 53, 57, 61, 62, 64, 99, 101, 103, 111], "handl": [13, 52, 55, 99, 112, 113, 114, 115, 117], "fact": 13, "complet": [13, 16, 36, 37, 52, 54, 61, 62, 113, 114, 115, 117, 128], "sometim": [13, 52, 57], "detect": 13, "complic": 13, "mode": 14, "resourc": [14, 52, 53, 113, 115, 117], "cpu": [14, 118], "variant": 14, "psmac": [14, 99, 111], "share": 14, "between": [14, 20, 22, 23, 26, 36, 38, 39, 42, 66, 67, 86, 88, 101, 106, 108, 109, 110], "individu": [14, 99, 112], "togeth": [14, 20, 27, 36, 44], "commun": [14, 127, 129], "write": 14, "disk": [14, 99, 111, 112], "dash": [14, 138], "progress": 14, "ramag": 14, "2015": [14, 90, 93], "advanc": 14, "meta": [14, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 36, 37, 45, 46, 52, 53, 57, 59, 61, 62, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 113, 114, 118, 127], "librari": [14, 18], "autom": 14, "univers": 14, "british": 14, "columbia": 14, "retriev": [14, 28, 32, 135], "ubc": 14, "ca": 14, "ubcthes": 14, "24": 14, "0167184": 14, "shared_model": 14, "input_psmac_dir": 14, "output_path": 14, "On": [14, 72, 73, 113, 114, 115, 117, 136, 137, 142], "exemplari": 14, "verifi": 14, "correct": 14, "level": [14, 36, 37, 43, 121, 122], "grep": 14, "wai": [14, 36, 43, 52, 55, 130], "load": [14, 99, 112, 118, 128], "constructor": 14, "abov": 14, "reach": [15, 36, 43, 94, 97], "rememb": 15, "abort": [15, 113, 116], "automat": [16, 113, 115], "resum": 16, "left": [16, 20, 23, 61, 62, 64, 72, 73], "interrupt": 16, "derivid": 16, "ask": [16, 18, 35, 36, 37, 61, 62, 64, 132, 133, 142], "delet": [16, 113, 115], "old": [16, 36, 37, 61, 62], "affect": [16, 36, 39, 42, 43, 45, 46], "intensifier_percentag": 17, "took": [17, 113, 114, 115, 117], "time_bound": [17, 36, 38, 39, 41, 42, 43, 52, 53, 54, 55, 56, 57, 59, 60], "procedur": [17, 52, 54, 57, 113, 115], "base_smbo": [17, 127, 128, 129, 131, 134, 135, 138, 139], "further": [17, 20, 24, 25, 45, 51, 94, 97, 113, 114, 115, 116, 117, 118, 143], "process_result": [17, 52, 53, 54, 56, 57, 60], "strongli": 18, "hint": 18, "react": 18, "certain": 18, "thing": 18, "stop": [18, 35, 118, 130, 134, 139], "criteria": 18, "termin": [18, 28, 32, 33, 36, 43, 113, 115], "threshold": [18, 118], "abstractacquisitionfunct": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 36, 37, 44, 61, 62], "sourc": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "abstract": [20, 21, 28, 29, 36, 37, 52, 53, 61, 62, 66, 67, 68, 69, 80, 86, 87, 90, 91, 94, 95, 101, 102, 113, 114, 115], "__call__": [20, 21, 72, 73, 90, 91, 92, 93, 113, 117], "ndarrai": [20, 21, 60, 66, 67, 68, 70, 72, 73, 80, 85, 86, 88, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 122, 135], "properti": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 36, 37, 45, 46, 52, 53, 54, 56, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 112, 113, 114, 118, 127, 128, 129, 130, 131, 134, 135, 139], "dict": [20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 36, 37, 45, 46, 52, 53, 57, 59, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 113, 114, 115, 117, 118, 121, 135, 138, 139], "str": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 36, 37, 39, 45, 46, 52, 53, 55, 57, 59, 60, 61, 62, 66, 67, 68, 69, 70, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 113, 114, 115, 117, 118, 121, 135, 138, 139], "abstract_model": [20, 21, 25, 66, 85], "abstractmodel": [20, 21, 25, 36, 37, 61, 62, 66, 67, 68, 69, 85, 86, 87, 89], "full": [20, 21, 22, 23, 24, 25, 26, 27, 66, 67, 99, 112, 127, 128, 129, 130, 131, 134, 135, 138, 139], "attribut": [20, 21], "maxim": [20, 21, 22, 27, 36, 37, 38, 39, 42, 44, 52, 59, 61, 62, 99, 112], "As": [20, 21, 113, 117, 131], "ei": [20, 21, 23, 36, 38, 39, 42, 43], "fmin": [20, 21], "acqusit": [20, 21], "present": [20, 21, 36, 43], "_updat": [20, 21], "xi": [20, 23, 26, 27, 36, 38, 39, 42], "mathbb": [20, 23], "f": [20, 23, 26, 68, 70, 78, 79, 80, 81, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "mathbf": [20, 22, 23, 26, 27], "f_": [20, 23, 26], "control": [20, 22, 23, 26, 36, 38, 39, 42, 52, 56, 59, 60], "balanc": [20, 22, 23, 26, 36, 38, 39, 42], "eip": [20, 23, 101, 104], "computess": [20, 23], "frac": [20, 23, 26], "r": [20, 23, 52, 57, 139], "integratedacquisitionfunct": [20, 24], "acquisition_funct": [20, 22, 24, 25, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 61, 62, 131], "margin": [20, 24, 66, 67, 68, 70, 85, 86, 88], "practic": [20, 24, 142], "jasper": [20, 24], "snoek": [20, 24, 68, 78], "nip": [20, 24, 68, 70, 78, 80], "cc": [20, 24], "4522": [20, 24], "lcb": [20, 22], "beta": [20, 22, 131], "mu": [20, 22, 26, 27, 131], "sqrt": [20, 22, 138], "beta_t": [20, 22], "sigma": [20, 22, 26, 27, 79, 83, 131], "d": [20, 22], "text": [20, 22, 143], "dimens": [20, 22, 66, 67, 127, 128, 129], "tradeoff": [20, 22], "ucb": [20, 22], "0912": [20, 22], "3995": [20, 22], "pi": [20, 26], "p": [20, 26, 79, 81], "geq": [20, 26], "phi": [20, 26], "cdf": [20, 26], "standard": [20, 26, 66, 67, 79, 83, 131], "prioracquisitionfunct": [20, 25, 131], "decay_beta": [20, 25, 131], "prior_floor": [20, 25], "1e": [20, 25, 36, 42, 72, 73, 74, 75, 76, 77, 86, 88, 131], "12": [20, 25, 52, 57], "discret": [20, 25, 131], "discrete_bins_factor": [20, 25], "belief": [20, 25, 131], "carl": [20, 25], "decai": [20, 25], "factor": [20, 25, 36, 41, 43, 52, 55, 59, 94, 98], "solid": [20, 25, 131], "lowest": [20, 25, 36, 37, 99, 112], "neg": [20, 25], "bin": [20, 25], "densiti": [20, 25], "contin": [20, 25], "trigger": [20, 25, 52, 57, 113, 116, 130], "avoid": [20, 25], "patholog": [20, 25], "remov": [20, 25, 28, 32, 139], "piecewis": [20, 25], "constant": [20, 25, 94, 97, 134, 135, 139], "allow": [20, 25, 52, 55, 118], "randomsearch": [20, 27, 28, 34, 36, 44], "localandsortedrandomsearch": [20, 27, 28, 32, 36, 38, 39, 42, 43], "math": [20, 27, 80], "mathcal": [20, 27], "consist": [20, 27, 28, 29, 131, 134, 135, 139, 143], "abstractacquisitionmaxim": [28, 29, 30, 32, 33, 34, 36, 37, 61, 62], "5000": [28, 29, 30, 32, 33, 34, 135], "order": [28, 29, 52, 54, 55, 59, 101, 102, 118], "subclass": [28, 29, 36, 37, 72, 73], "_maxim": [28, 29], "abstract_acquisition_funct": [28, 29, 32], "previous_config": [28, 29], "n_point": [28, 29], "random_design": [28, 29, 31, 36, 37, 38, 39, 41, 42, 43, 44, 61, 62], "_challeng": [28, 29], "abstractrandomdesign": [28, 29, 31, 36, 37, 44, 94, 95, 96, 97, 98], "interleav": [28, 29, 31, 32, 36, 37, 38, 39, 42, 94, 95, 96, 97, 98], "scheme": [28, 29, 113, 114], "next_iter": [28, 29, 94, 95, 96, 97, 98], "differentialevolut": [28, 30], "candid": [28, 30, 34, 36, 37, 43, 52, 59, 61, 62, 64], "differentialevolutionsolv": [28, 30], "scipi": [28, 30, 45, 51], "localandsortedpriorrandomsearch": [28, 32], "uniform_configspac": [28, 32], "max_step": [28, 32, 33], "n_steps_plateau_walk": [28, 32, 33], "local_search_iter": [28, 32, 36, 39, 42], "prior_sampling_fract": [28, 32], "accord": [28, 32, 94, 96, 98], "randomli": [28, 32, 36, 37, 44, 61, 62], "normalfloathp": [28, 32], "localsearch": [28, 32, 33], "maximum": [28, 32, 33, 36, 38, 39, 42, 52, 53, 54, 56, 57, 60, 86, 88, 94, 96, 97, 118], "plateau": [28, 32, 33], "walk": [28, 32, 33], "ratio": [28, 32, 36, 38, 42, 86, 88], "taken": [28, 32, 101, 102], "oppos": [28, 32], "defaut": [28, 32, 36, 39, 42], "vectorization_min_obtain": [28, 33], "vectorization_max_obtain": [28, 33], "neighbor": [28, 33], "obtain": [28, 33, 68, 70, 80], "tune": [28, 33, 52, 57, 68, 78, 131], "reduc": [28, 31, 33, 36, 38, 42, 66, 67, 68, 69, 70, 78, 86, 88, 113, 115, 129], "overhead": [28, 33], "challenger_callback": 31, "modulus_design": 31, "modulusrandomdesign": [31, 94, 97], "second": [31, 61, 62, 64, 113, 115, 117, 118, 121, 127, 128, 129, 130, 131, 134, 135, 138, 139], "necessari": [31, 36, 43, 52, 53, 54, 56, 57, 60], "hundr": 31, "closur": 31, "www": [31, 90, 93], "programiz": 31, "on_ask_end": 35, "intent": [35, 52, 57, 61, 62, 64], "on_ask_start": 35, "finish": [35, 36, 37, 61, 62, 113, 114, 115, 117, 129, 130, 134, 135], "on_next_configurations_end": 35, "essenti": 35, "on_next_configurations_start": 35, "on_tell_end": [35, 130], "stat": [35, 36, 37, 45, 51, 61, 62, 64, 113, 114, 129, 130], "gracefulli": 35, "on_tell_start": 35, "abstractfacad": [36, 37, 38, 39, 42, 44, 138, 139], "acquisition_maxim": [36, 37, 38, 39, 41, 42, 43, 44, 61, 62], "initial_design": [36, 37, 38, 39, 41, 42, 43, 44, 61, 62, 128, 131, 134, 139], "runhistory_encod": [36, 37, 38, 39, 41, 42, 43, 44, 61, 62], "logging_level": [36, 37, 38, 39, 41, 42, 43, 44, 130], "top": [36, 37, 52, 56, 59, 60], "backend": [36, 37], "organ": [36, 37], "separ": [36, 37], "manner": [36, 37], "suit": [36, 37], "With": [36, 37], "except": [36, 37, 52, 57, 113, 115, 117, 131], "explicitli": [36, 37, 113, 115], "get_": [36, 37], "environment": [36, 37, 61, 62], "abstractrunn": [36, 37, 61, 62, 113, 114, 115, 117], "promis": [36, 37, 44, 52, 53, 54, 56, 57, 60, 61, 62], "initialdesign": [36, 37, 61, 62], "randomdesign": [36, 37, 61, 62], "drawn": [36, 37, 38, 39, 42, 52, 57, 61, 62, 68, 70, 80, 94, 98], "abstractintensifi": [36, 37, 52, 53, 54, 57, 60, 61, 62], "abstractmultiobjectivealgorithm": [36, 37, 90, 91, 92, 93, 101, 102], "interpret": [36, 37], "runhistoryencod": [36, 37, 38, 39, 44, 61, 62, 101, 103, 105, 106, 107, 108, 109, 110], "indic": [36, 37, 52, 53, 54, 56, 57, 60, 94, 95, 97, 99, 100, 111, 113, 116, 135, 139], "yaml": [36, 37], "noth": [36, 37], "yml": [36, 37], "inconsist": [36, 37, 61, 62, 127], "behaviour": [36, 37, 61, 62], "intend": [36, 37, 113, 115], "trialinfo": [36, 37, 52, 53, 54, 56, 57, 60, 61, 62, 64, 99, 100, 113, 114, 115, 117, 130], "static": [36, 37, 38, 39, 41, 42, 43, 44, 118], "get_acquisition_funct": [36, 37, 38, 39, 42, 44, 131], "get_acquisition_maxim": [36, 37, 38, 39, 42, 44], "get_initial_design": [36, 37, 38, 39, 42, 43, 44, 128, 131, 134, 139], "warm": [36, 37], "abstractinitialdesign": [36, 37, 45, 46, 47, 48, 49, 50, 51], "get_intensifi": [36, 37, 38, 39, 41, 42, 43, 44, 129, 131], "get_model": [36, 37, 38, 39, 42, 44], "get_multi_objective_algorithm": [36, 37, 38, 39, 42, 44], "choos": [36, 37, 39, 52, 53, 56, 60, 61, 62, 64, 68, 78, 134], "suggest": [36, 37, 61, 62, 64, 113, 116], "get_random_design": [36, 37, 38, 39, 42, 44], "get_runhistory_encod": [36, 37, 38, 39, 42, 44], "prepar": [36, 37, 52, 53, 101, 102], "abstractrunhistoryencod": [36, 37, 101, 102, 104, 105], "configuration_spac": [36, 37, 61, 62, 99, 112], "hash": [36, 37, 118], "fill": [36, 37, 61, 62, 113, 117], "relev": [36, 37, 61, 62, 64], "trajectori": [36, 37, 52, 53, 54, 56, 57, 60, 61, 62, 100], "describ": [36, 37, 61, 62, 64], "trialvalu": [36, 37, 52, 53, 54, 56, 57, 60, 61, 62, 64, 99, 100, 112, 113, 114, 115, 117, 129, 130], "regard": [36, 37, 61, 62, 64], "additional_config": [36, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 131], "defaultinitialdesign": [36, 38, 44, 45, 47], "min_config_cal": [36, 38, 39, 42, 44, 52, 53, 57], "2000": [36, 38, 52, 53, 57], "min_challeng": [36, 38, 39, 41, 42, 43, 44, 52, 53, 54, 55, 57, 59], "race_against": [36, 38, 39, 42, 44, 52, 57], "per": [36, 38, 39, 42, 43, 45, 46, 52, 53, 54, 57, 86, 88, 99, 112, 131], "exhaust": [36, 38, 39, 41, 42, 43, 52, 53, 55, 57, 59, 127, 128, 129, 131, 134, 135, 138, 139], "earlier": [36, 38, 39, 41, 42, 43, 52, 53, 55, 57, 59], "much": [36, 38, 39, 42, 52, 57, 61, 62, 64, 99, 112, 113, 115, 134], "percentag": [36, 38, 39, 42, 52, 57], "access": [36, 38, 39, 42, 52, 57, 72, 73], "n_tree": [36, 38, 42, 86, 88], "ratio_featur": [36, 38, 42, 86, 88], "8333333333333334": [36, 38, 86, 88], "min_samples_split": [36, 38, 42, 86, 88], "min_samples_leaf": [36, 38, 42, 86, 88], "max_depth": [36, 38, 42, 86, 88], "bootstrap": [36, 38, 42, 86, 88], "pca_compon": [36, 38, 66, 67, 68, 69, 70, 78, 86, 88, 89], "tree": [36, 38, 42, 86, 88], "split": [36, 38, 42, 86, 88, 131, 134, 135, 139], "leaf": [36, 38, 42, 86, 88], "depth": [36, 38, 42, 86, 88], "pca": [36, 38, 66, 67, 68, 69, 70, 78, 86, 88], "randomforest": [36, 38, 42, 43, 86, 88], "meanaggregationstrategi": [36, 38, 39, 42, 44, 90, 92], "probabilityrandomdesign": [36, 38, 39, 42, 94, 98], "n_config": [36, 39, 42, 43, 45, 46, 47, 48, 49, 50, 128, 134, 139], "n_configs_per_hyperparamt": [36, 39, 42, 43], "max_ratio": [36, 39, 42, 43, 45, 46, 47, 48, 49, 50, 129], "n_configs_per_hyperparamet": [36, 39, 42, 43, 45, 46, 47, 48, 49, 50], "cover": [36, 39, 42, 43, 45, 46], "sobolinitialdesign": [36, 39, 42, 45, 51, 128], "get_kernel": [36, 39], "kernel": [36, 39, 68, 69, 70, 78, 128], "composit": [36, 39], "hammingkernel": [36, 39, 72, 74], "matern": [36, 39, 72, 75], "nois": [36, 39], "white": [36, 39, 72, 77], "model_typ": [36, 39], "chosen": [36, 39, 134, 142], "vanilla": [36, 39], "gaussianprocess": [36, 39, 68, 70, 78], "mcmcgaussianprocess": [36, 39, 68, 78], "08447232371720552": [36, 39], "_": [36, 41, 129, 135], "aggress": [36, 41, 44, 134, 143], "eta": [36, 41, 43, 52, 55, 59, 134, 135], "10000": [36, 42], "1048576": [36, 42, 86, 88], "scale": [36, 42, 52, 55, 59, 72, 74, 79, 80, 81, 82, 84, 101, 102, 106, 108, 109, 110, 128], "runhistorylogscaledencod": [36, 42, 101, 103, 108], "randominitialdesign": [36, 43, 45, 50], "fashion": [36, 43, 52, 54, 113, 115, 117], "_collect_data": [36, 43], "notabl": [36, 43], "through": [36, 43, 99, 112], "_min_samples_model": [36, 43], "exist": [36, 43, 99, 112, 128], "until": [36, 43, 113, 114, 115, 117], "surviv": [36, 43], "inquir": [36, 43], "unseen": [36, 43], "criterion": [36, 43, 52, 59], "intersect": [36, 43], "common": [36, 43, 52, 54, 113, 114, 115, 131], "abstract_intensifi": [36, 43, 127, 128, 129, 131, 134, 135, 138, 139], "_compare_config": [36, 43], "avail": [36, 43, 52, 53, 54, 55, 56, 57, 59, 60, 99, 112, 113, 114, 115, 117], "datapoint": [36, 43], "disambigu": [36, 43], "index": [36, 43], "replac": [36, 43, 44, 113, 117, 134], "n_seed": [36, 43, 52, 55, 59, 118, 134, 135], "\u03b8": [36, 44, 52, 57], "unpromis": [36, 44], "reject": [36, 44], "veri": [36, 44], "dummi": [36, 44], "neither": [36, 44, 99, 112], "nor": [36, 44, 99, 112], "increas": [36, 44, 94, 97, 134, 135], "randommodel": [36, 44, 66, 89], "select_configur": [45, 46], "_select_configur": [45, 46], "factorialinitialdesign": [45, 48], "middl": [45, 48], "latinhypercubeinitialdesign": [45, 49], "arg": [45, 51, 61, 64, 86, 87, 101, 106, 110, 113, 117], "scrambl": [45, 51], "io": [45, 51], "devdoc": [45, 51], "qmc": [45, 51], "produc": [52, 53, 113, 114, 115, 117], "get_next_tri": [52, 53, 54, 56, 57, 60], "repeat_config": [52, 53, 54, 56, 57, 60], "runinfoint": [52, 53], "again": [52, 53, 54, 56, 57, 60], "tupl": [52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 72, 73, 85, 86, 88, 99, 101, 102, 103, 112, 113, 114, 115, 117, 120, 123, 135, 138], "trialinfoint": [52, 53, 54, 56, 57, 60, 61, 62, 64, 99, 111], "consum": [52, 53, 54, 56, 57, 60, 113, 114], "encapsul": [52, 53, 54, 56, 57, 60, 113, 114], "iteration_don": [52, 53], "num_trial": [52, 53, 100], "log_trajectori": [52, 53, 54, 56, 57, 60], "seen": [52, 53, 54, 56, 57, 60], "sec": [52, 53, 54, 56, 57, 60], "mayb": [52, 53, 54, 56, 57, 60], "incumbent_cost": [52, 53, 54, 56, 57, 60, 127, 128, 129, 131, 134, 135, 138, 139], "repeat": [52, 53], "abstractparallelintensifi": [52, 54, 59], "racer": [52, 54, 57], "schedul": [52, 54, 94, 96], "basi": [52, 54, 59], "prevent": [52, 54, 57, 59, 72, 73], "idl": [52, 54, 55, 59], "pick": [52, 54, 56, 60], "wait": [52, 54, 61, 62, 64, 113, 114, 115, 117], "send": [52, 54], "redirect": [52, 54], "respect": [52, 54, 59, 72, 73, 79, 80, 84], "reli": [52, 54], "choic": [52, 54, 134], "go": [52, 54, 131, 139], "instance_seed_pair": [52, 55, 59], "instance_ord": [52, 55, 59, 118], "shuffle_onc": [52, 55, 59, 118], "incumbent_select": [52, 55, 59, 135], "highest_executed_budget": [52, 55, 59], "n_initial_challeng": [52, 55, 59], "falkner": [52, 55, 59, 68, 70, 78, 80], "2018": [52, 55, 59], "hyperbandwork": [52, 55, 56], "actual": [52, 55, 59, 68, 78, 113, 114], "logic": [52, 55, 59], "shuffl": [52, 55, 59, 118, 131, 134, 135, 139], "highest_budget": [52, 55, 59], "any_budget": [52, 55, 59], "regardless": [52, 55, 59], "\u03b8_new": [52, 57], "\u03b8_inc": [52, 57], "m": [52, 57], "t_intensifi": [52, 57], "\u03c0": [52, 57], "c_hat": [52, 57], "denot": [52, 57], "length": [52, 57, 68, 72, 74, 78, 99, 112, 118], "run_incumb": [52, 57], "less": [52, 57], "equal": [52, 57, 99, 112], "executerun": [52, 57], "run_challeng": [52, 57], "s_miss": [52, 57], "11": [52, 57, 139], "s_torun": [52, 57], "foreach": [52, 57], "13": [52, 57], "14": [52, 57, 128, 133], "\u03c0_common": [52, 57], "previous": [52, 56, 57, 60], "ran": [52, 57], "15": [52, 57, 135], "break": [52, 57], "els": [52, 57, 128, 134, 139], "17": [52, 57], "spent": [52, 57], "exce": [52, 57], "19": [52, 57], "get_next_challeng": [52, 57], "exercis": [52, 57, 113, 114, 115, 117], "though": [52, 57], "popul": [52, 57, 113, 114, 115, 117], "_configs_to_run": [52, 57], "pool": [52, 57], "regist": [52, 57], "_to_run": [52, 57], "brand": [52, 57], "_next_iter": [52, 57], "mark": [52, 57], "transit": [52, 57], "new_challeng": [52, 57], "charg": [52, 57], "compli": [52, 57, 113, 115], "job": [52, 57, 113, 115], "circumv": [52, 57], "No": [52, 57, 127, 128, 129, 131, 138, 139], "cap": [52, 57], "post": [52, 57, 139], "intensifierstag": [52, 57, 58], "process_incumbent_run": [52, 57], "process_first_config_run": [52, 57], "At": [52, 57], "move": [52, 57, 94, 96, 99, 112], "supplementari": [52, 59], "proceed": [52, 59, 143], "mlr": [52, 59], "press": [52, 59], "v80": [52, 59], "falkner18a": [52, 59], "supp": [52, 59], "oper": [52, 59, 72, 73], "kind": [52, 59], "total": [52, 59, 86, 88, 113, 115, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141], "posit": [52, 59, 90, 93, 113, 114, 115, 117], "anyth": [52, 59, 72, 73, 122], "eg": [52, 59], "successivehalvingwork": [52, 56, 59, 60], "rather": [52, 59, 80], "calculate_budget": [52, 59], "max_iter": [52, 59], "stand": [56, 60], "alon": [56, 60], "numer": [56, 60, 127], "tag": [56, 60], "logger": [56, 60, 122], "messag": [56, 60], "properli": [56, 60, 113, 117], "later": [56, 60], "enum": [58, 99, 111], "successive_halv": [60, 134, 135], "_all_budget": 60, "_n_configs_in_stag": 60, "_min_budget": 60, "_max_budget": 60, "sh": 60, "sub": [60, 101, 102], "rout": 60, "basesmbo": [61, 62, 64, 130], "store": [61, 62, 99, 112, 134], "time_left": [61, 62, 64], "update_acquisition_funct": [61, 62], "assosi": [61, 62], "update_model": [61, 62], "y": [66, 67, 72, 73, 86, 88, 101, 102, 103, 120], "concret": [66, 67], "covariance_typ": [66, 67], "diagon": [66, 67], "_predict": [66, 67], "appli": [66, 67, 80, 101, 103, 127], "std": [66, 67], "deviat": [66, 67, 79, 83, 131], "covari": [66, 67], "whole": [66, 67], "var": [66, 67, 85, 86, 88, 118, 135], "predict_margin": [66, 67, 85, 86, 88], "_train": [66, 67], "correspond": [66, 67, 79, 81, 123], "multiobjectivemodel": [66, 85], "abstractgaussianprocess": [68, 69, 70, 78], "n_restart": [68, 70], "normalize_i": [68, 70, 78], "likelihood": [68, 70], "robo": [68, 70, 78, 80], "klein": [68, 70, 78, 80], "mansur": [68, 70, 78, 80], "workshop": [68, 70, 78, 80], "restart": [68, 70, 94, 96], "zero": [68, 70, 78, 101, 106, 108, 109, 110, 127, 129], "unit": [68, 70, 78, 131], "sample_funct": [68, 70], "x_test": [68, 70], "n_func": [68, 70], "posterior": [68, 70], "function_sampl": [68, 70], "arrai": [68, 70, 72, 73, 122, 139], "n_mcmc_walker": [68, 78], "chain_length": [68, 78], "burning_step": [68, 78], "mcmc_sampler": [68, 78], "emce": [68, 78], "average_sampl": [68, 78], "out": [68, 78], "markow": [68, 78], "propos": [68, 78], "walker": [68, 78], "last": [68, 78, 128], "burnin": [68, 78], "sampler": [68, 78], "nut": [68, 78], "abstractkernel": [72, 73, 74, 75, 76, 77], "operate_on": [72, 73, 74, 75, 76, 77], "has_condit": [72, 73, 74, 75, 76, 77], "mixin": [72, 73], "overrid": [72, 73, 127, 128], "place": [72, 73, 131], "hierarchi": [72, 73], "instantiat": [72, 73], "mypi": [72, 73], "won": [72, 73], "relat": [72, 73], "superclass": [72, 73], "statement": [72, 73], "member": [72, 73], "declar": [72, 73], "_call": [72, 73], "super": [72, 73], "get_param": [72, 73, 74], "etc": [72, 73, 118], "abstractprior": [72, 73, 79, 80, 81, 82, 83, 84], "primarili": [72, 73], "eval_gradi": [72, 73], "estim": [72, 73, 86, 88, 101, 102, 127, 128, 129, 131, 134, 135, 138, 139], "subobject": [72, 73], "param": [72, 73], "map": [72, 73, 99, 112], "n_dim": [72, 73], "fix": [72, 73], "constantkernel": [72, 73], "constant_valu": [72, 73], "constant_value_bound": [72, 73], "05": [72, 73, 74, 75, 76, 77, 90, 93, 135], "100000": [72, 73, 74, 75, 76, 77], "k": [72, 73, 99, 112, 143], "gradient": [72, 73, 79, 80, 84, 136, 137, 142], "shape": [72, 73, 79, 81, 139], "n_samples_x": [72, 73], "n_featur": [72, 73], "n_samples_i": [72, 73], "boolean": [72, 73], "k_gradient": [72, 73], "opt": [72, 73], "length_scal": [72, 74, 75, 76], "length_scale_bound": [72, 74, 75, 76], "stationarykernelmixin": [72, 74], "normalizedkernelmixin": [72, 74], "ham": [72, 74], "hyperparameter_length_scal": [72, 74], "maternkernel": [72, 75], "nu": [72, 75], "productkernel": [72, 73], "k1": [72, 73], "k2": [72, 73], "product": [72, 73], "rbfkernel": [72, 76], "rbf": [72, 76, 128], "sumkernel": [72, 73], "whitekernel": [72, 77], "noise_level": [72, 77], "noise_level_bound": [72, 77], "gammaprior": [79, 81], "loc": [79, 81], "gamma": [79, 81, 128], "greater": [79, 81, 118], "canon": [79, 81], "greather": [79, 81, 118], "horseshoeprior": [79, 82], "horsesho": [79, 82], "spearmint": [79, 82, 84], "lognormalprior": [79, 83], "softtophatprior": [79, 84], "lower_bound": [79, 84], "upper_bound": [79, 84], "expon": [79, 84], "soft": [79, 84], "tophat": [79, 84], "upper": [79, 84, 99, 112, 131], "get_gradi": [79, 80, 84], "theta": [79, 80, 84], "hi": [79, 80, 84], "_get_gradi": [79, 80, 84], "get_log_prob": [79, 80, 84], "exponenti": [79, 80, 84], "_get_log_prob": [79, 80, 84], "tophatprior": [79, 84], "whenev": 80, "lnprob": 80, "sample_from_prior": 80, "n_sampl": 80, "_sample_from_prior": 80, "abstractrandomforest": [86, 87, 88], "n_points_per_tre": [86, 88], "eps_pur": [86, 88], "08": [86, 88], "max_nod": [86, 88], "log_i": [86, 88], "account": [86, 88, 101, 102, 134], "node": [86, 88, 113, 115], "assumpt": [86, 88], "uncertainti": [86, 88], "abc": [90, 91, 113, 114], "loss": [90, 91, 92, 93, 113, 117, 135], "update_on_iteration_start": [90, 91, 93], "rho": [90, 93], "bham": [90, 93], "ac": [90, 93], "uk": [90, 93], "jdk": [90, 93], "ukci": [90, 93], "small": [90, 93], "helper": [94, 95], "th": [94, 95, 96, 97, 98], "begin": [94, 95, 97], "cosineannealingrandomdesign": [94, 96], "min_prob": [94, 96], "max_prob": [94, 96], "restart_iter": [94, 96], "decreas": [94, 96, 97, 98], "cosin": [94, 96], "final": [94, 96, 127, 128, 129, 131, 134, 135, 138, 139], "_probabl": [94, 96], "dynamicmodulusrandomdesign": [94, 97], "start_modulu": [94, 97], "modulus_incr": [94, 97], "end_modulu": [94, 97], "inf": [94, 97, 118], "fraction": [94, 97], "amount": [94, 97, 113, 115], "ever": [94, 97], "adjust": [94, 97], "dynamicprobabilityrandomdesign": [94, 98], "multipli": [94, 98], "dataorigin": [99, 111, 112], "definit": [99, 111], "gather": [99, 111], "external_same_inst": [99, 111, 112], "extern": [99, 111, 112], "external_different_inst": [99, 111], "due": [99, 111, 135], "Will": [99, 111, 113, 115], "instanceseedbudgetkei": [99, 100, 112], "instanceseedkei": [99, 100], "overwrite_existing_tri": [99, 112], "trialkei": [99, 100, 112], "importantli": [99, 112], "theoret": [99, 112], "picklabl": [99, 112], "__contains__": [99, 112], "semant": [99, 112], "__eq__": [99, 112], "__getitem__": [99, 112], "v": [99, 112, 113, 115, 135], "__iter__": [99, 112], "__len__": [99, 112], "len": [99, 112], "statustyp": [99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117], "force_upd": [99, 112], "instance_seed_budget_kei": [99, 112], "queri": [99, 112], "wrt": [99, 112], "warn": [99, 112, 131, 134, 135, 139], "config_id": [99, 100, 112, 138], "empti": [99, 112, 113, 114, 115, 117], "get_configs_per_budget": [99, 112], "budget_subset": [99, 101, 102, 103, 112], "get_cost": [99, 112, 130], "docstr": [99, 112], "cach": [99, 112], "get_incumb": [99, 112], "get_min_cost": [99, 112], "min_cost": [99, 112], "get_trial": [99, 112], "only_max_observed_budget": [99, 112], "ids_config": [99, 112, 138], "incremental_update_cost": [99, 112], "increment": [99, 112], "load_json": [99, 112], "filenam": [99, 112], "json": [99, 112], "represent": [99, 101, 102, 103, 112], "reset": [99, 112], "save_json": [99, 112], "save_extern": [99, 112], "sum_cost": [99, 112], "external_ful": [99, 112], "structur": [99, 112], "_config_id_to_inst_seed_budget": [99, 112], "update_cost": [99, 112], "_cost_per_config": [99, 112], "_num_trials_per_config": [99, 112], "scratch": [99, 112], "accordingli": [99, 112, 131], "update_from_json": [99, 112], "intenum": [99, 111], "run_info": [99, 111], "trajectoryitem": 100, "walltime_us": 100, "memoryout": [101, 102, 103, 104, 105, 107, 108, 109], "donotadv": [101, 102, 103, 104, 105, 107, 108, 109], "lower_budget_st": [101, 102, 103, 104, 105, 107, 108, 109], "scale_percentag": [101, 102, 103, 104, 105, 107, 108, 109], "noqa": [101, 102], "e501": [101, 102], "percentil": [101, 102], "distanc": [101, 102], "typeerror": [101, 102], "get_configur": [101, 102], "append": [101, 102, 138], "configs_arrai": [101, 102], "abstract_multi_objective_algorithm": [101, 102], "objecct": [101, 102], "defaul": [101, 102], "transform_response_valu": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "transformed_valu": [101, 102], "runhistoryeipsencod": [101, 104], "runhistoryinversescaledencod": [101, 106], "linearli": [101, 106, 108, 109, 110], "invers": [101, 106], "runhistorylogencod": [101, 107], "runhistoryrawencod": [101, 103], "runhistroi": [101, 103], "raw": [101, 103], "transform_raw_valu": [101, 103], "transform_with_raw": [101, 103], "imput": [101, 103, 120], "censor": [101, 103], "cutoff": [101, 103], "y_raw": [101, 103], "runhistoryrawscaledencod": [101, 103], "runhistoryscaledencod": [101, 109], "runhistorysqrtscaledencod": [101, 110], "squar": [101, 110, 138], "required_argu": [113, 114], "interact": [113, 114], "perspect": [113, 114], "launch": [113, 114, 115, 117], "submit": [113, 114, 115, 117], "submit_run": [113, 114, 115], "run_wrapp": [113, 114, 115], "among": [113, 114], "realli": [113, 114], "translat": [113, 114], "iter_result": [113, 114, 115, 117], "decis": [113, 114, 115, 117], "abl": [113, 114, 128], "count_available_work": [113, 114, 115, 117], "is_run": [113, 114, 115, 117], "serial": [113, 114, 115, 117], "instantli": [113, 114, 115, 117], "pend": [113, 114, 115, 117], "_results_queu": [113, 114, 115, 117], "get_finish": [113, 114, 115, 117], "aka": [113, 114, 115], "repres": [113, 114, 115, 117, 122, 135, 143], "around": [113, 114], "simplifi": [113, 114], "isol": [113, 114], "submit_tri": [113, 114, 115, 117], "embed": [113, 114, 115], "eventu": [113, 114], "fifo": [113, 114], "dictat": [113, 114, 115], "submiss": [113, 114], "endeavor": [113, 114], "daskparallelrunn": [113, 115], "single_work": [113, 115], "patienc": [113, 115], "dask_client": [113, 115], "bridg": [113, 115], "pattern": [113, 115], "baserunn": [113, 115], "neext": [113, 115], "dask": [113, 115, 118], "precis": [113, 115], "task": [113, 115, 117, 118, 131], "pickl": [113, 115], "Such": [113, 115], "futur": [113, 115], "manag": [113, 115, 118], "client": [113, 115], "fail": [113, 115, 116, 118], "cluster": [113, 115], "attach": [113, 115], "manual": [113, 115, 131], "__del__": [113, 115], "forc": [113, 115], "dynam": [113, 115], "alloc": [113, 115, 134], "firstruncrashedexcept": [113, 116], "targetalgorithmabortexcept": [113, 116], "targetfunctionrunn": [113, 117], "element": [113, 117, 122], "algorithm_kwarg": [113, 117], "walltim": [113, 117], "immedi": [113, 117], "posixpath": 118, "smac3_output": 118, "crash_cost": 118, "termination_cost_threshold": 118, "cputime_limit": 118, "trial_walltime_limit": 118, "trial_memory_limit": 118, "frame": 118, "constraint": [118, 135], "spawn": 118, "mb": [118, 133, 137, 141], "__post_init__": 118, "count_instance_featur": 118, "count": 118, "count_object": 118, "make_serializ": 118, "serializ": [118, 122], "convert_configurations_to_arrai": 120, "get_conditional_hyperparamet": 120, "get_typ": 120, "recursively_compare_dict": 121, "diff": 121, "recurs": 121, "string": [121, 122], "format_arrai": 122, "format_v": 122, "get_logg": 122, "logger_nam": 122, "setup_log": 122, "own": 122, "unnorm": 123, "normalized_cost": 123, "click": [127, 128, 129, 130, 131, 134, 135, 138, 139], "download": [127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "2d": [127, 140, 141, 142], "rosenbrock": [127, 129], "larg": 127, "abstract_initial_design": [127, 128, 129, 131, 134, 135, 138, 139], "py": [127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141], "133": [127, 128, 129, 131, 134, 135, 138, 139], "275": [127, 128, 129, 131, 138, 139], "446": [127, 128, 129, 131, 138, 139], "567": [127, 128, 129, 131, 138, 139], "1102": [127, 129, 130], "7878": [127, 129], "340": [127, 128, 129, 131, 135, 138, 139], "4656": 127, "364": [127, 128, 129, 131, 134, 135, 138, 139], "367": [127, 128, 129, 131, 134, 135, 138, 139], "x0": [127, 129, 130], "9968221839517355": [127, 129, 130], "03135360777378082": [127, 130], "x1": [127, 129, 130], "30847043171525": [127, 129, 130], "21179260686039925": [127, 130], "4314": 127, "6502527847737536": 127, "154531223148483": 127, "0818": 127, "47602048278586295": 127, "13155812805683098": 127, "8351": 127, "7031544591929872": 127, "842364243857716": 127, "260": [127, 128, 129, 131, 134, 135, 138, 139], "abstract_facad": [127, 128, 129, 131, 134, 135, 138, 139], "314": [127, 128, 129, 131, 134, 135, 138, 139], "315": [127, 128, 129, 131, 134, 135, 138, 139], "8351420167215506": 127, "16916": [127, 129], "__copyright__": [127, 128, 129, 130, 131, 134, 135, 138, 139], "copyright": [127, 128, 129, 130, 131, 134, 135, 138, 139], "freiburg": [127, 128, 129, 130, 131, 134, 135, 138, 139], "hannov": [127, 128, 129, 130, 131, 134, 135, 138, 139], "__license__": [127, 128, 129, 130, 131, 134, 135, 138, 139], "rosenbrock2d": [127, 129, 130], "add_hyperparamet": [127, 128, 129, 130, 131, 134, 135, 139], "toi": [127, 129], "serv": [127, 129], "x_i": [127, 129], "domain": [127, 129], "interv": [127, 129], "x2": [127, 129, 130], "__name__": [127, 128, 129, 130, 131, 134, 135, 138, 139], "__main__": [127, 128, 129, 130, 131, 134, 135, 138, 139], "synthetic_funct": 127, "300": [127, 134, 139], "default_cost": [127, 128, 129, 131, 134, 135, 138, 139], "get_default_configur": [127, 128, 129, 131, 134, 135, 138, 139], "script": [127, 128, 129, 130, 131, 134, 135, 138, 139], "130": [127, 133], "1_synthetic_funct": [127, 133], "jupyt": [127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "notebook": [127, 128, 129, 130, 131, 134, 135, 138, 139, 142], "ipynb": [127, 128, 129, 130, 131, 134, 135, 138, 139], "mix": 128, "0667": 128, "0133": 128, "03992740880515713": 128, "2760639488343621": 128, "linear": 128, "shrink": 128, "013333333333333308": 128, "03333333333333344": 128, "incondit": [128, 134, 139], "wide": [128, 131], "benchmark": 128, "poli": 128, "sigmoid": 128, "001": [128, 134, 139], "degre": 128, "coef": 128, "coef0": 128, "auto": 128, "gamma_valu": 128, "0001": [128, 134, 139], "Then": 128, "use_degre": 128, "parent": [128, 134, 139], "use_coef": 128, "use_gamma": 128, "use_gamma_valu": 128, "add_condit": [128, 134, 139], "config_dict": 128, "get_dictionari": [128, 130], "pop": 128, "alter": 128, "676": [128, 133], "2_svm_cv": [128, 133], "81": 129, "700": 129, "6438": 129, "0801787059894652": 129, "6511913893559456": 129, "47": 129, "8624": 129, "6583473885830928": 129, "111401430503671": 129, "9601": 129, "5234560660524123": 129, "106623106617114": 129, "1317": 129, "0139112945122775": 129, "0004718388428309": 129, "9908": 129, "9892633340334083": 129, "9969769489049165": 129, "9930450352207787": 129, "9994799142372051": 129, "9881": 129, "9987380639014205": 129, "987": 129, "9967287661480402": 129, "9927965529154807": 129, "9752": 129, "9807044715008999": 129, "9576": 129, "9876944770105229": 129, "9836920787318091": 129, "9575743532947247": 129, "dataclass": 129, "minimium": 129, "assert": [129, 130], "28": [129, 133], "011": [129, 133], "3_ask_and_tel": [129, 133], "easieast": 130, "7877872130716": 130, "465623793958126": 130, "30": [130, 134, 135, 139], "40": [130, 131, 134, 135, 139], "017589003822375382": 130, "12514870997642102": 130, "5391044252142363": 130, "26968073660621883": 130, "07252901158035918": 130, "6120931206056588": 130, "__future__": [130, 135, 138, 139], "annot": [130, 135, 138, 139], "__init__": [130, 135], "trials_count": 130, "999999": 130, "111": [130, 133], "4_callback": [130, 133], "layer": [131, 135, 136, 137, 142], "perceptron": [131, 135, 136, 137, 142], "mlp": [131, 134, 135, 139], "deriv": 131, "knowledg": 131, "similar": 131, "intuit": 131, "gain": 131, "categoricalhyperparamet": 131, "optimizt": 131, "stick": 131, "prior_acqusition_funct": 131, "107": 131, "8987": 131, "039": 131, "logist": [131, 134, 139], "relu": [131, 134, 139], "batch_siz": [131, 134, 139], "324": 131, "128": 131, "learning_rate_init": [131, 134, 139], "1134996369914405": 131, "0010000000000000002": 131, "n_layer": [131, 134, 139], "n_neuron": [131, 134, 139], "157": 131, "108": 131, "sgd": [131, 134, 135, 139], "adam": [131, 134, 139], "0306": 131, "66": 131, "0010972380878858119": 131, "0262": 131, "0011090117979356453": 131, "026155988857938794": 131, "05787991333952347": 131, "046196224079232406": 131, "betaintegerhyperparamet": 131, "normalfloathyperparamet": 131, "uniformintegerhyperparamet": 131, "load_digit": [131, 134, 135, 139], "convergencewarn": 131, "stratifiedkfold": [131, 134, 135, 139], "neural_network": [131, 134, 139], "mlpclassifi": [131, 134, 139], "digit": [131, 134, 135, 139], "illustr": [131, 134], "educ": 131, "beforehand": 131, "believ": 131, "rel": 131, "And": [131, 139], "skew": 131, "toward": 131, "wider": 131, "256": [131, 134, 139], "alpha": [131, 135, 138], "60": 131, "tanh": [131, 134, 139], "default_valu": 131, "moreov": 131, "opinion": 131, "batch": [131, 134], "leav": 131, "512": 131, "center": 131, "catch_warn": [131, 134, 135, 139], "filterwarn": [131, 134, 135, 139], "categori": 131, "hidden_layer_s": [131, 134, 139], "solver": [131, 134, 139], "max_it": [131, 134, 135, 139], "fold": [131, 134, 139], "n_split": [131, 134, 135, 139], "error_scor": [131, 134, 139], "default_config": 131, "conduct": 131, "proven": 131, "255": [131, 133], "5_prior": [131, 133], "synthet": [132, 133, 142], "02": 133, "182": 133, "examples_1_bas": 133, "01": [133, 137, 141], "00": [133, 134, 135, 137, 141], "09": 133, "04": 133, "123": [134, 135], "197": [134, 135], "25": [134, 141], "abstract_parallel_intensifi": [134, 135], "93": [134, 135], "hyperband_work": [134, 135], "165": [134, 135, 139], "successive_halving_work": [134, 135], "396": [134, 135], "613": 134, "0495": 134, "0568": 134, "3333": 134, "155": 134, "006677306766018313": 134, "56": 134, "lbfg": [134, 139], "245": [134, 135], "33": 134, "0345": 134, "0384": 134, "0000": 134, "117": 134, "008282754423021153": 134, "0228": 134, "67": [134, 135], "0070322204321926806": 134, "022819560507582937": 134, "4307319715258433": 134, "025598885793871817": 134, "equalscondit": [134, 139], "invscal": [134, 135, 139], "restrict": 134, "use_lr": [134, 139], "use_lr_init": [134, 139], "use_batch_s": [134, 139], "deactiv": 134, "virtu": 134, "placehold": 134, "lr": [134, 139], "lr_init": [134, 139], "ceil": [134, 139], "44": [134, 137], "239": [134, 137], "1_mlp_epoch": [134, 137], "wlog": 135, "had": 135, "binari": 135, "longer": 135, "217": 135, "0137": 135, "0164": 135, "5488135039273248": 135, "11827442586893322": 135, "eta0": 135, "0006273927602293597": 135, "614170248896958e": 135, "l1_ratio": 135, "317983179393976": 135, "24875314351995803": 135, "27": 135, "008231389269086701": 135, "13423167867113728": 135, "007983889335257179": 135, "itertool": 135, "linear_model": 135, "sgdclassifi": 135, "digitsdataset": 135, "_data": 135, "get_inst": 135, "classa": 135, "classb": 135, "target_nam": 135, "get_instance_featur": 135, "get_instance_data": 135, "logical_or": 135, "00001": 135, "clf": 135, "penalti": 135, "elasticnet": 135, "early_stop": 135, "42": [135, 137, 138, 139, 141], "343": [135, 137], "2_sgd_dataset": [135, 137], "stochast": [136, 137, 142], "descent": [136, 137, 142], "26": 137, "581": 137, "examples_2_multi_fidel": 137, "shown": [138, 139], "3057": 138, "3062": 138, "9324859157204628": 138, "9092802626668277": 138, "2867": 138, "2882": 138, "8689864358066153": 138, "8688957626410652": 138, "8685997370567731": 138, "8683467340272628": 138, "8682645877241124": 138, "8682095321986103": 138, "8668562378148943": 138, "8666595212876587": 138, "2866": 138, "8665961008201921": 138, "8665608513427423": 138, "8657774471445769": 138, "2863": 138, "8139511881236792": 138, "8248979822935989": 138, "2862": 138, "8266648813312201": 138, "8285248722057701": 138, "8301628064929449": 138, "8302913574977087": 138, "8304251996275172": 138, "2777": 138, "2783": 138, "8783438711598479": 138, "8762014589762686": 138, "8760315818930731": 138, "8755995177612172": 138, "2757": 138, "8874813197728479": 138, "8872463259339494": 138, "8871063044191763": 138, "884289252250646": 138, "8846014029519238": 138, "8853108730819028": 138, "8856249347721605": 138, "8856418469295093": 138, "2575": 138, "259": 138, "0086452515654813": 138, "2573": 138, "9934231748307121": 138, "9913245595524192": 138, "2572": 138, "9785099183033301": 138, "2571": 138, "9699546253744713": 138, "9708443248508019": 138, "9707750773060477": 138, "2571462968893417": 138, "94240425": 138, "05930394": 138, "matplotlib": [138, 139], "pyplot": [138, 139], "plt": [138, 139], "f1": 138, "f2": 138, "metric1": 138, "metric2": 138, "all_x": 138, "figur": 138, "scatter": [138, 139], "blue": 138, "zorder": 138, "3000": 138, "vline": 138, "linestyl": [138, 139], "color": 138, "red": [138, 139], "hline": 138, "plot_from_smac": 138, "rh": 138, "trial_kei": 138, "150": 138, "637": [138, 141], "1_schaffer": [138, 141], "highlight": 139, "ones": 139, "pareto": 139, "front": 139, "three": 139, "abstract_runn": 139, "106": 139, "2462": 139, "7498": 139, "77": 139, "000534923804864797": 139, "146": 139, "2473": 139, "1834": 139, "2584": 139, "175": 139, "004156370184967407": 139, "90": 139, "0469": 139, "0538": 139, "002800459687107501": 139, "04907902647740611": 139, "62956618": 139, "24064207": 139, "04489374": 139, "69583535": 139, "start_tim": 139, "plot_pareto": 139, "luckili": 139, "vstack": 139, "mask": 139, "pareto_mask": 139, "dtype": 139, "enumer": 139, "axi": 139, "cost1": 139, "cost2": 139, "argsort": 139, "x_upper": 139, "y_upper": 139, "x_front": 139, "y_front": 139, "marker": 139, "titl": [139, 143], "xlabel": 139, "ylabel": 139, "focu": 139, "979": [139, 141], "2_parego": [139, 141], "schaffer": [140, 141, 142], "616": 141, "examples_3_multi_object": 141, "were": 142, "varieti": 142, "examples_python": 142, "zip": 142, "examples_jupyt": 142, "Its": 143, "cite": 143, "inproceed": 143, "lindauer": 143, "arxiv21a": 143, "author": 143, "mariu": 143, "katharina": 143, "eggensperg": 143, "matthia": 143, "feurer": 143, "andr\u00e9": 143, "biedenkapp": 143, "difan": 143, "deng": 143, "carolin": 143, "benjamin": 143, "tim": 143, "ruhkopf": 143, "ren\u00e9": 143, "sass": 143, "frank": 143, "versatil": 143, "booktitl": 143, "2109": 143, "09831": 143, "year": 143, "url": 143, "ab": 143, "hoo": 143, "h": 143, "leyton": 143, "brown": 143, "confer": 143, "intellig": 143, "lion": 143, "develop": 143, "visit": 143, "guidelin": 143}, "objects": {"smac": [[19, 0, 0, "-", "acquisition"], [35, 0, 0, "-", "callback"], [36, 0, 0, "-", "facade"], [45, 0, 0, "-", "initial_design"], [52, 0, 0, "-", "intensifier"], [61, 0, 0, "-", "main"], [66, 0, 0, "-", "model"], [90, 0, 0, "-", "multi_objective"], [94, 0, 0, "-", "random_design"], [99, 0, 0, "-", "runhistory"], [113, 0, 0, "-", "runner"], [118, 0, 0, "-", "scenario"], [119, 0, 0, "-", "utils"]], "smac.acquisition": [[20, 0, 0, "-", "function"], [28, 0, 0, "-", "maximizer"]], "smac.acquisition.function": [[20, 1, 1, "", "AbstractAcquisitionFunction"], [20, 1, 1, "", "EI"], [20, 1, 1, "", "EIPS"], [20, 1, 1, "", "IntegratedAcquisitionFunction"], [20, 1, 1, "", "LCB"], [20, 1, 1, "", "PI"], [20, 1, 1, "", "PriorAcquisitionFunction"], [20, 1, 1, "", "TS"], [21, 0, 0, "-", "abstract_acquisition_function"], [22, 0, 0, "-", "confidence_bound"], [23, 0, 0, "-", "expected_improvement"], [24, 0, 0, "-", "integrated_acquisition_function"], [25, 0, 0, "-", "prior_acqusition_function"], [26, 0, 0, "-", "probability_improvement"], [27, 0, 0, "-", "thompson"]], "smac.acquisition.function.AbstractAcquisitionFunction": [[20, 2, 1, "", "__call__"], [20, 3, 1, "", "meta"], [20, 3, 1, "", "model"], [20, 3, 1, "", "name"], [20, 2, 1, "", "update"]], "smac.acquisition.function.EI": [[20, 3, 1, "", "meta"], [20, 3, 1, "", "name"]], "smac.acquisition.function.EIPS": [[20, 3, 1, "", "name"]], "smac.acquisition.function.IntegratedAcquisitionFunction": [[20, 3, 1, "", "meta"], [20, 3, 1, "", "name"]], "smac.acquisition.function.LCB": [[20, 3, 1, "", "meta"], [20, 3, 1, "", "name"]], "smac.acquisition.function.PI": [[20, 3, 1, "", "meta"], [20, 3, 1, "", "name"]], "smac.acquisition.function.PriorAcquisitionFunction": [[20, 3, 1, "", "meta"], [20, 3, 1, "", "model"], [20, 3, 1, "", "name"]], "smac.acquisition.function.TS": [[20, 3, 1, "", "name"]], "smac.acquisition.function.abstract_acquisition_function": [[21, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction": [[21, 2, 1, "", "__call__"], [21, 3, 1, "", "meta"], [21, 3, 1, "", "model"], [21, 3, 1, "", "name"], [21, 2, 1, "", "update"]], "smac.acquisition.function.confidence_bound": [[22, 1, 1, "", "LCB"]], "smac.acquisition.function.confidence_bound.LCB": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement": [[23, 1, 1, "", "EI"], [23, 1, 1, "", "EIPS"]], "smac.acquisition.function.expected_improvement.EI": [[23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement.EIPS": [[23, 3, 1, "", "name"]], "smac.acquisition.function.integrated_acquisition_function": [[24, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction": [[24, 3, 1, "", "meta"], [24, 3, 1, "", "name"]], "smac.acquisition.function.prior_acqusition_function": [[25, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction": [[25, 3, 1, "", "meta"], [25, 3, 1, "", "model"], [25, 3, 1, "", "name"]], "smac.acquisition.function.probability_improvement": [[26, 1, 1, "", "PI"]], "smac.acquisition.function.probability_improvement.PI": [[26, 3, 1, "", "meta"], [26, 3, 1, "", "name"]], "smac.acquisition.function.thompson": [[27, 1, 1, "", "TS"]], "smac.acquisition.function.thompson.TS": [[27, 3, 1, "", "name"]], "smac.acquisition.maximizer": [[28, 1, 1, "", "AbstractAcquisitionMaximizer"], [28, 1, 1, "", "DifferentialEvolution"], [28, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [28, 1, 1, "", "LocalAndSortedRandomSearch"], [28, 1, 1, "", "LocalSearch"], [28, 1, 1, "", "RandomSearch"], [29, 0, 0, "-", "abstract_acqusition_maximizer"], [30, 0, 0, "-", "differential_evolution"], [31, 0, 0, "-", "helpers"], [32, 0, 0, "-", "local_and_random_search"], [33, 0, 0, "-", "local_search"], [34, 0, 0, "-", "random_search"]], "smac.acquisition.maximizer.AbstractAcquisitionMaximizer": [[28, 3, 1, "", "acquisition_function"], [28, 2, 1, "", "maximize"], [28, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalAndSortedRandomSearch": [[28, 3, 1, "", "acquisition_function"], [28, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalSearch": [[28, 3, 1, "", "meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[29, 1, 1, "", "AbstractAcquisitionMaximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer": [[29, 3, 1, "", "acquisition_function"], [29, 2, 1, "", "maximize"], [29, 3, 1, "", "meta"]], "smac.acquisition.maximizer.differential_evolution": [[30, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.maximizer.helpers": [[31, 1, 1, "", "ChallengerList"]], "smac.acquisition.maximizer.local_and_random_search": [[32, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [32, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch": [[32, 3, 1, "", "acquisition_function"], [32, 3, 1, "", "meta"]], "smac.acquisition.maximizer.local_search": [[33, 1, 1, "", "LocalSearch"]], "smac.acquisition.maximizer.local_search.LocalSearch": [[33, 3, 1, "", "meta"]], "smac.acquisition.maximizer.random_search": [[34, 1, 1, "", "RandomSearch"]], "smac.callback": [[35, 1, 1, "", "Callback"]], "smac.callback.Callback": [[35, 2, 1, "", "on_ask_end"], [35, 2, 1, "", "on_ask_start"], [35, 2, 1, "", "on_end"], [35, 2, 1, "", "on_iteration_end"], [35, 2, 1, "", "on_iteration_start"], [35, 2, 1, "", "on_next_configurations_end"], [35, 2, 1, "", "on_next_configurations_start"], [35, 2, 1, "", "on_start"], [35, 2, 1, "", "on_tell_end"], [35, 2, 1, "", "on_tell_start"]], "smac.facade": [[36, 1, 1, "", "AbstractFacade"], [36, 1, 1, "", "AlgorithmConfigurationFacade"], [36, 1, 1, "", "BlackBoxFacade"], [36, 1, 1, "", "HyperbandFacade"], [36, 1, 1, "", "HyperparameterOptimizationFacade"], [36, 1, 1, "", "MultiFidelityFacade"], [36, 1, 1, "", "RandomFacade"], [37, 0, 0, "-", "abstract_facade"], [38, 0, 0, "-", "algorithm_configuration_facade"], [39, 0, 0, "-", "blackbox_facade"], [40, 0, 0, "-", "boing_facade"], [41, 0, 0, "-", "hyperband_facade"], [42, 0, 0, "-", "hyperparameter_optimization_facade"], [43, 0, 0, "-", "multi_fidelity_facade"], [44, 0, 0, "-", "random_facade"]], "smac.facade.AbstractFacade": [[36, 2, 1, "", "ask"], [36, 2, 1, "", "get_acquisition_function"], [36, 2, 1, "", "get_acquisition_maximizer"], [36, 2, 1, "", "get_initial_design"], [36, 2, 1, "", "get_intensifier"], [36, 2, 1, "", "get_model"], [36, 2, 1, "", "get_multi_objective_algorithm"], [36, 2, 1, "", "get_next_configurations"], [36, 2, 1, "", "get_random_design"], [36, 2, 1, "", "get_runhistory_encoder"], [36, 2, 1, "", "get_target_function_budgets"], [36, 2, 1, "", "get_target_function_instances"], [36, 2, 1, "", "get_target_function_seeds"], [36, 3, 1, "", "incumbent"], [36, 3, 1, "", "meta"], [36, 2, 1, "", "optimize"], [36, 3, 1, "", "runhistory"], [36, 3, 1, "", "scenario"], [36, 3, 1, "", "stats"], [36, 2, 1, "", "tell"], [36, 2, 1, "", "validate"]], "smac.facade.AlgorithmConfigurationFacade": [[36, 2, 1, "", "get_acquisition_function"], [36, 2, 1, "", "get_acquisition_maximizer"], [36, 2, 1, "", "get_initial_design"], [36, 2, 1, "", "get_intensifier"], [36, 2, 1, "", "get_model"], [36, 2, 1, "", "get_multi_objective_algorithm"], [36, 2, 1, "", "get_random_design"], [36, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.BlackBoxFacade": [[36, 2, 1, "", "get_acquisition_function"], [36, 2, 1, "", "get_acquisition_maximizer"], [36, 2, 1, "", "get_initial_design"], [36, 2, 1, "", "get_intensifier"], [36, 2, 1, "", "get_kernel"], [36, 2, 1, "", "get_model"], [36, 2, 1, "", "get_multi_objective_algorithm"], [36, 2, 1, "", "get_random_design"], [36, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.HyperbandFacade": [[36, 2, 1, "", "get_intensifier"]], "smac.facade.HyperparameterOptimizationFacade": [[36, 2, 1, "", "get_acquisition_function"], [36, 2, 1, "", "get_acquisition_maximizer"], [36, 2, 1, "", "get_initial_design"], [36, 2, 1, "", "get_intensifier"], [36, 2, 1, "", "get_model"], [36, 2, 1, "", "get_multi_objective_algorithm"], [36, 2, 1, "", "get_random_design"], [36, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.MultiFidelityFacade": [[36, 2, 1, "", "get_initial_design"], [36, 2, 1, "", "get_intensifier"]], "smac.facade.RandomFacade": [[36, 2, 1, "", "get_acquisition_function"], [36, 2, 1, "", "get_acquisition_maximizer"], [36, 2, 1, "", "get_initial_design"], [36, 2, 1, "", "get_intensifier"], [36, 2, 1, "", "get_model"], [36, 2, 1, "", "get_multi_objective_algorithm"], [36, 2, 1, "", "get_random_design"], [36, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.abstract_facade": [[37, 1, 1, "", "AbstractFacade"]], "smac.facade.abstract_facade.AbstractFacade": [[37, 2, 1, "", "ask"], [37, 2, 1, "", "get_acquisition_function"], [37, 2, 1, "", "get_acquisition_maximizer"], [37, 2, 1, "", "get_initial_design"], [37, 2, 1, "", "get_intensifier"], [37, 2, 1, "", "get_model"], [37, 2, 1, "", "get_multi_objective_algorithm"], [37, 2, 1, "", "get_next_configurations"], [37, 2, 1, "", "get_random_design"], [37, 2, 1, "", "get_runhistory_encoder"], [37, 2, 1, "", "get_target_function_budgets"], [37, 2, 1, "", "get_target_function_instances"], [37, 2, 1, "", "get_target_function_seeds"], [37, 3, 1, "", "incumbent"], [37, 3, 1, "", "meta"], [37, 2, 1, "", "optimize"], [37, 3, 1, "", "runhistory"], [37, 3, 1, "", "scenario"], [37, 3, 1, "", "stats"], [37, 2, 1, "", "tell"], [37, 2, 1, "", "validate"]], "smac.facade.algorithm_configuration_facade": [[38, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[39, 1, 1, "", "BlackBoxFacade"]], "smac.facade.blackbox_facade.BlackBoxFacade": [[39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_kernel"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.hyperband_facade": [[41, 1, 1, "", "HyperbandFacade"]], "smac.facade.hyperband_facade.HyperbandFacade": [[41, 2, 1, "", "get_intensifier"]], "smac.facade.hyperparameter_optimization_facade": [[42, 1, 1, "", "HyperparameterOptimizationFacade"]], "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade": [[42, 2, 1, "", "get_acquisition_function"], [42, 2, 1, "", "get_acquisition_maximizer"], [42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_multi_objective_algorithm"], [42, 2, 1, "", "get_random_design"], [42, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.multi_fidelity_facade": [[43, 1, 1, "", "MultiFidelityFacade"]], "smac.facade.multi_fidelity_facade.MultiFidelityFacade": [[43, 2, 1, "", "get_initial_design"], [43, 2, 1, "", "get_intensifier"]], "smac.facade.random_facade": [[44, 1, 1, "", "RandomFacade"]], "smac.facade.random_facade.RandomFacade": [[44, 2, 1, "", "get_acquisition_function"], [44, 2, 1, "", "get_acquisition_maximizer"], [44, 2, 1, "", "get_initial_design"], [44, 2, 1, "", "get_intensifier"], [44, 2, 1, "", "get_model"], [44, 2, 1, "", "get_multi_objective_algorithm"], [44, 2, 1, "", "get_random_design"], [44, 2, 1, "", "get_runhistory_encoder"]], "smac.initial_design": [[45, 1, 1, "", "AbstractInitialDesign"], [45, 1, 1, "", "DefaultInitialDesign"], [45, 1, 1, "", "FactorialInitialDesign"], [45, 1, 1, "", "LatinHypercubeInitialDesign"], [45, 1, 1, "", "RandomInitialDesign"], [45, 1, 1, "", "SobolInitialDesign"], [46, 0, 0, "-", "abstract_initial_design"], [47, 0, 0, "-", "default_design"], [48, 0, 0, "-", "factorial_design"], [49, 0, 0, "-", "latin_hypercube_design"], [50, 0, 0, "-", "random_design"], [51, 0, 0, "-", "sobol_design"]], "smac.initial_design.AbstractInitialDesign": [[45, 3, 1, "", "meta"], [45, 2, 1, "", "select_configurations"]], "smac.initial_design.abstract_initial_design": [[46, 1, 1, "", "AbstractInitialDesign"]], "smac.initial_design.abstract_initial_design.AbstractInitialDesign": [[46, 3, 1, "", "meta"], [46, 2, 1, "", "select_configurations"]], "smac.initial_design.default_design": [[47, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[48, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[49, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.random_design": [[50, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[51, 1, 1, "", "SobolInitialDesign"]], "smac.intensifier": [[52, 1, 1, "", "AbstractIntensifier"], [52, 1, 1, "", "AbstractParallelIntensifier"], [52, 1, 1, "", "Hyperband"], [52, 1, 1, "", "Intensifier"], [52, 1, 1, "", "SuccessiveHalving"], [53, 0, 0, "-", "abstract_intensifier"], [54, 0, 0, "-", "abstract_parallel_intensifier"], [55, 0, 0, "-", "hyperband"], [56, 0, 0, "-", "hyperband_worker"], [57, 0, 0, "-", "intensifier"], [58, 0, 0, "-", "stages"], [59, 0, 0, "-", "successive_halving"], [60, 0, 0, "-", "successive_halving_worker"]], "smac.intensifier.AbstractIntensifier": [[52, 2, 1, "", "get_next_trial"], [52, 2, 1, "", "get_target_function_budgets"], [52, 2, 1, "", "get_target_function_instances"], [52, 2, 1, "", "get_target_function_seeds"], [52, 3, 1, "", "iteration_done"], [52, 3, 1, "", "meta"], [52, 3, 1, "", "num_trials"], [52, 2, 1, "", "process_results"], [52, 3, 1, "", "repeat_configs"], [52, 3, 1, "", "uses_budgets"], [52, 3, 1, "", "uses_instances"], [52, 3, 1, "", "uses_seeds"]], "smac.intensifier.AbstractParallelIntensifier": [[52, 2, 1, "", "get_next_trial"], [52, 2, 1, "", "process_results"], [52, 3, 1, "", "uses_seeds"]], "smac.intensifier.Intensifier": [[52, 2, 1, "", "get_next_challenger"], [52, 2, 1, "", "get_next_trial"], [52, 2, 1, "", "get_target_function_budgets"], [52, 2, 1, "", "get_target_function_instances"], [52, 2, 1, "", "get_target_function_seeds"], [52, 3, 1, "", "intensify_percentage"], [52, 3, 1, "", "meta"], [52, 2, 1, "", "process_results"], [52, 3, 1, "", "uses_budgets"], [52, 3, 1, "", "uses_instances"], [52, 3, 1, "", "uses_seeds"]], "smac.intensifier.SuccessiveHalving": [[52, 2, 1, "", "calculate_budgets"], [52, 2, 1, "", "get_target_function_budgets"], [52, 2, 1, "", "get_target_function_instances"], [52, 2, 1, "", "get_target_function_seeds"], [52, 3, 1, "", "meta"], [52, 3, 1, "", "uses_budgets"], [52, 3, 1, "", "uses_instances"]], "smac.intensifier.abstract_intensifier": [[53, 1, 1, "", "AbstractIntensifier"]], "smac.intensifier.abstract_intensifier.AbstractIntensifier": [[53, 2, 1, "", "get_next_trial"], [53, 2, 1, "", "get_target_function_budgets"], [53, 2, 1, "", "get_target_function_instances"], [53, 2, 1, "", "get_target_function_seeds"], [53, 3, 1, "", "iteration_done"], [53, 3, 1, "", "meta"], [53, 3, 1, "", "num_trials"], [53, 2, 1, "", "process_results"], [53, 3, 1, "", "repeat_configs"], [53, 3, 1, "", "uses_budgets"], [53, 3, 1, "", "uses_instances"], [53, 3, 1, "", "uses_seeds"]], "smac.intensifier.abstract_parallel_intensifier": [[54, 1, 1, "", "AbstractParallelIntensifier"]], "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier": [[54, 2, 1, "", "get_next_trial"], [54, 2, 1, "", "process_results"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.hyperband": [[55, 1, 1, "", "Hyperband"]], "smac.intensifier.hyperband_worker": [[56, 1, 1, "", "HyperbandWorker"]], "smac.intensifier.hyperband_worker.HyperbandWorker": [[56, 2, 1, "", "get_next_trial"], [56, 2, 1, "", "process_results"], [56, 3, 1, "", "uses_budgets"], [56, 3, 1, "", "uses_instances"], [56, 3, 1, "", "uses_seeds"]], "smac.intensifier.intensifier": [[57, 1, 1, "", "Intensifier"]], "smac.intensifier.intensifier.Intensifier": [[57, 2, 1, "", "get_next_challenger"], [57, 2, 1, "", "get_next_trial"], [57, 2, 1, "", "get_target_function_budgets"], [57, 2, 1, "", "get_target_function_instances"], [57, 2, 1, "", "get_target_function_seeds"], [57, 3, 1, "", "intensify_percentage"], [57, 3, 1, "", "meta"], [57, 2, 1, "", "process_results"], [57, 3, 1, "", "uses_budgets"], [57, 3, 1, "", "uses_instances"], [57, 3, 1, "", "uses_seeds"]], "smac.intensifier.stages": [[58, 1, 1, "", "IntensifierStage"]], "smac.intensifier.successive_halving": [[59, 1, 1, "", "SuccessiveHalving"]], "smac.intensifier.successive_halving.SuccessiveHalving": [[59, 2, 1, "", "calculate_budgets"], [59, 2, 1, "", "get_target_function_budgets"], [59, 2, 1, "", "get_target_function_instances"], [59, 2, 1, "", "get_target_function_seeds"], [59, 3, 1, "", "meta"], [59, 3, 1, "", "uses_budgets"], [59, 3, 1, "", "uses_instances"]], "smac.intensifier.successive_halving_worker": [[60, 1, 1, "", "SuccessiveHalvingWorker"]], "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker": [[60, 2, 1, "", "get_next_trial"], [60, 2, 1, "", "get_target_function_budgets"], [60, 2, 1, "", "get_target_function_instances"], [60, 2, 1, "", "get_target_function_seeds"], [60, 2, 1, "", "process_results"], [60, 3, 1, "", "stage"], [60, 3, 1, "", "uses_budgets"], [60, 3, 1, "", "uses_instances"], [60, 3, 1, "", "uses_seeds"]], "smac.main": [[61, 1, 1, "", "BaseSMBO"], [61, 1, 1, "", "SMBO"], [62, 0, 0, "-", "base_smbo"], [63, 0, 0, "-", "boing"], [64, 0, 0, "-", "smbo"], [65, 0, 0, "-", "turbo"]], "smac.main.BaseSMBO": [[61, 2, 1, "", "ask"], [61, 2, 1, "", "get_next_configurations"], [61, 3, 1, "", "incumbent"], [61, 2, 1, "", "optimize"], [61, 3, 1, "", "runhistory"], [61, 2, 1, "", "save"], [61, 3, 1, "", "stats"], [61, 2, 1, "", "tell"], [61, 2, 1, "", "update_acquisition_function"], [61, 2, 1, "", "update_model"], [61, 2, 1, "", "validate"]], "smac.main.SMBO": [[61, 2, 1, "", "ask"], [61, 2, 1, "", "get_next_configurations"], [61, 2, 1, "", "tell"]], "smac.main.base_smbo": [[62, 1, 1, "", "BaseSMBO"]], "smac.main.base_smbo.BaseSMBO": [[62, 2, 1, "", "ask"], [62, 2, 1, "", "get_next_configurations"], [62, 3, 1, "", "incumbent"], [62, 2, 1, "", "optimize"], [62, 3, 1, "", "runhistory"], [62, 2, 1, "", "save"], [62, 3, 1, "", "stats"], [62, 2, 1, "", "tell"], [62, 2, 1, "", "update_acquisition_function"], [62, 2, 1, "", "update_model"], [62, 2, 1, "", "validate"]], "smac.main.smbo": [[64, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[64, 2, 1, "", "ask"], [64, 2, 1, "", "get_next_configurations"], [64, 2, 1, "", "tell"]], "smac.model": [[66, 1, 1, "", "AbstractModel"], [66, 1, 1, "", "MultiObjectiveModel"], [66, 1, 1, "", "RandomModel"], [67, 0, 0, "-", "abstract_model"], [68, 0, 0, "-", "gaussian_process"], [85, 0, 0, "-", "multi_objective_model"], [86, 0, 0, "-", "random_forest"], [89, 0, 0, "-", "random_model"]], "smac.model.AbstractModel": [[66, 3, 1, "", "meta"], [66, 2, 1, "", "predict"], [66, 2, 1, "", "predict_marginalized"], [66, 2, 1, "", "train"]], "smac.model.MultiObjectiveModel": [[66, 3, 1, "", "models"], [66, 2, 1, "", "predict_marginalized"]], "smac.model.abstract_model": [[67, 1, 1, "", "AbstractModel"]], "smac.model.abstract_model.AbstractModel": [[67, 3, 1, "", "meta"], [67, 2, 1, "", "predict"], [67, 2, 1, "", "predict_marginalized"], [67, 2, 1, "", "train"]], "smac.model.gaussian_process": [[68, 1, 1, "", "AbstractGaussianProcess"], [68, 1, 1, "", "GaussianProcess"], [68, 1, 1, "", "MCMCGaussianProcess"], [69, 0, 0, "-", "abstract_gaussian_process"], [70, 0, 0, "-", "gaussian_process"], [71, 0, 0, "-", "gpytorch_gaussian_process"], [72, 0, 0, "-", "kernels"], [78, 0, 0, "-", "mcmc_gaussian_process"], [79, 0, 0, "-", "priors"]], "smac.model.gaussian_process.AbstractGaussianProcess": [[68, 3, 1, "", "meta"]], "smac.model.gaussian_process.GaussianProcess": [[68, 3, 1, "", "meta"], [68, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.MCMCGaussianProcess": [[68, 3, 1, "", "meta"], [68, 3, 1, "", "models"]], "smac.model.gaussian_process.abstract_gaussian_process": [[69, 1, 1, "", "AbstractGaussianProcess"]], "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess": [[69, 3, 1, "", "meta"]], "smac.model.gaussian_process.gaussian_process": [[70, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[70, 3, 1, "", "meta"], [70, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.kernels": [[72, 1, 1, "", "AbstractKernel"], [72, 1, 1, "", "ConstantKernel"], [72, 1, 1, "", "HammingKernel"], [72, 1, 1, "", "MaternKernel"], [72, 1, 1, "", "ProductKernel"], [72, 1, 1, "", "RBFKernel"], [72, 1, 1, "", "SumKernel"], [72, 1, 1, "", "WhiteKernel"], [73, 0, 0, "-", "base_kernels"], [74, 0, 0, "-", "hamming_kernel"], [75, 0, 0, "-", "matern_kernel"], [76, 0, 0, "-", "rbf_kernel"], [77, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.AbstractKernel": [[72, 2, 1, "", "__call__"], [72, 2, 1, "", "get_params"], [72, 4, 1, "", "has_conditions"], [72, 3, 1, "", "hyperparameters"], [72, 3, 1, "", "meta"], [72, 3, 1, "", "n_dims"], [72, 4, 1, "", "operate_on"], [72, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.HammingKernel": [[72, 3, 1, "", "hyperparameter_length_scale"], [72, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.SumKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels": [[73, 1, 1, "", "AbstractKernel"], [73, 1, 1, "", "ConstantKernel"], [73, 1, 1, "", "ProductKernel"], [73, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel": [[73, 2, 1, "", "__call__"], [73, 2, 1, "", "get_params"], [73, 4, 1, "", "has_conditions"], [73, 3, 1, "", "hyperparameters"], [73, 3, 1, "", "meta"], [73, 3, 1, "", "n_dims"], [73, 4, 1, "", "operate_on"], [73, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[73, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[73, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[73, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[74, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[74, 3, 1, "", "hyperparameter_length_scale"], [74, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.matern_kernel": [[75, 1, 1, "", "MaternKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[76, 1, 1, "", "RBFKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[77, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[78, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess": [[78, 3, 1, "", "meta"], [78, 3, 1, "", "models"]], "smac.model.gaussian_process.priors": [[79, 1, 1, "", "GammaPrior"], [79, 1, 1, "", "HorseshoePrior"], [79, 1, 1, "", "LogNormalPrior"], [79, 1, 1, "", "SoftTopHatPrior"], [79, 1, 1, "", "TophatPrior"], [80, 0, 0, "-", "abstract_prior"], [81, 0, 0, "-", "gamma_prior"], [82, 0, 0, "-", "horseshoe_prior"], [83, 0, 0, "-", "log_normal_prior"], [84, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.GammaPrior": [[79, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.HorseshoePrior": [[79, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.LogNormalPrior": [[79, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.SoftTopHatPrior": [[79, 2, 1, "", "get_gradient"], [79, 2, 1, "", "get_log_probability"], [79, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.TophatPrior": [[79, 2, 1, "", "get_gradient"], [79, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.abstract_prior": [[80, 1, 1, "", "AbstractPrior"]], "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior": [[80, 2, 1, "", "get_gradient"], [80, 2, 1, "", "get_log_probability"], [80, 3, 1, "", "meta"], [80, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[81, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.gamma_prior.GammaPrior": [[81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[82, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior": [[82, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[83, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior": [[83, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[84, 1, 1, "", "SoftTopHatPrior"], [84, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[84, 2, 1, "", "get_gradient"], [84, 2, 1, "", "get_log_probability"], [84, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[84, 2, 1, "", "get_gradient"], [84, 3, 1, "", "meta"]], "smac.model.multi_objective_model": [[85, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[85, 3, 1, "", "models"], [85, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest": [[86, 1, 1, "", "AbstractRandomForest"], [86, 1, 1, "", "RandomForest"], [87, 0, 0, "-", "abstract_random_forest"], [88, 0, 0, "-", "random_forest"]], "smac.model.random_forest.RandomForest": [[86, 3, 1, "", "meta"], [86, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest.abstract_random_forest": [[87, 1, 1, "", "AbstractRandomForest"]], "smac.model.random_forest.random_forest": [[88, 1, 1, "", "RandomForest"]], "smac.model.random_forest.random_forest.RandomForest": [[88, 3, 1, "", "meta"], [88, 2, 1, "", "predict_marginalized"]], "smac.model.random_model": [[89, 1, 1, "", "RandomModel"]], "smac.multi_objective": [[90, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [90, 1, 1, "", "MeanAggregationStrategy"], [90, 1, 1, "", "ParEGO"], [91, 0, 0, "-", "abstract_multi_objective_algorithm"], [92, 0, 0, "-", "aggregation_strategy"], [93, 0, 0, "-", "parego"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[90, 2, 1, "", "__call__"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.MeanAggregationStrategy": [[90, 2, 1, "", "__call__"]], "smac.multi_objective.ParEGO": [[90, 2, 1, "", "__call__"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[91, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[91, 2, 1, "", "__call__"], [91, 3, 1, "", "meta"], [91, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.aggregation_strategy": [[92, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[92, 2, 1, "", "__call__"]], "smac.multi_objective.parego": [[93, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[93, 2, 1, "", "__call__"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "update_on_iteration_start"]], "smac.random_design": [[94, 1, 1, "", "AbstractRandomDesign"], [94, 1, 1, "", "CosineAnnealingRandomDesign"], [94, 1, 1, "", "DynamicModulusRandomDesign"], [94, 1, 1, "", "DynamicProbabilityRandomDesign"], [94, 1, 1, "", "ModulusRandomDesign"], [94, 1, 1, "", "ProbabilityRandomDesign"], [95, 0, 0, "-", "abstract_random_design"], [96, 0, 0, "-", "annealing_design"], [97, 0, 0, "-", "modulus_design"], [98, 0, 0, "-", "probability_design"]], "smac.random_design.AbstractRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "next_iteration"]], "smac.random_design.CosineAnnealingRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicModulusRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicProbabilityRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "next_iteration"]], "smac.random_design.ModulusRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"]], "smac.random_design.ProbabilityRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"]], "smac.random_design.abstract_random_design": [[95, 1, 1, "", "AbstractRandomDesign"]], "smac.random_design.abstract_random_design.AbstractRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "next_iteration"]], "smac.random_design.annealing_design": [[96, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.annealing_design.CosineAnnealingRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[97, 1, 1, "", "DynamicModulusRandomDesign"], [97, 1, 1, "", "ModulusRandomDesign"]], "smac.random_design.modulus_design.DynamicModulusRandomDesign": [[97, 2, 1, "", "check"], [97, 3, 1, "", "meta"], [97, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.ModulusRandomDesign": [[97, 2, 1, "", "check"], [97, 3, 1, "", "meta"]], "smac.random_design.probability_design": [[98, 1, 1, "", "DynamicProbabilityRandomDesign"], [98, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.DynamicProbabilityRandomDesign": [[98, 2, 1, "", "check"], [98, 3, 1, "", "meta"], [98, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[98, 2, 1, "", "check"], [98, 3, 1, "", "meta"]], "smac.runhistory": [[99, 1, 1, "", "DataOrigin"], [99, 1, 1, "", "InstanceSeedBudgetKey"], [99, 1, 1, "", "InstanceSeedKey"], [99, 1, 1, "", "RunHistory"], [99, 1, 1, "", "StatusType"], [99, 1, 1, "", "TrialInfo"], [99, 1, 1, "", "TrialInfoIntent"], [99, 1, 1, "", "TrialKey"], [99, 1, 1, "", "TrialValue"], [100, 0, 0, "-", "dataclasses"], [101, 0, 0, "-", "encoder"], [111, 0, 0, "-", "enumerations"], [112, 0, 0, "-", "runhistory"]], "smac.runhistory.RunHistory": [[99, 2, 1, "", "__contains__"], [99, 2, 1, "", "__eq__"], [99, 2, 1, "", "__getitem__"], [99, 2, 1, "", "__iter__"], [99, 2, 1, "", "__len__"], [99, 2, 1, "", "add"], [99, 2, 1, "", "average_cost"], [99, 3, 1, "", "config_ids"], [99, 2, 1, "", "empty"], [99, 2, 1, "", "get_config"], [99, 2, 1, "", "get_configs"], [99, 2, 1, "", "get_configs_per_budget"], [99, 2, 1, "", "get_cost"], [99, 2, 1, "", "get_incumbent"], [99, 2, 1, "", "get_min_cost"], [99, 2, 1, "", "get_trials"], [99, 3, 1, "", "ids_config"], [99, 2, 1, "", "incremental_update_cost"], [99, 2, 1, "", "load_json"], [99, 2, 1, "", "min_cost"], [99, 3, 1, "", "objective_bounds"], [99, 3, 1, "", "objective_weights"], [99, 2, 1, "", "reset"], [99, 2, 1, "", "save_json"], [99, 2, 1, "", "sum_cost"], [99, 2, 1, "", "update"], [99, 2, 1, "", "update_cost"], [99, 2, 1, "", "update_costs"], [99, 2, 1, "", "update_from_json"]], "smac.runhistory.dataclasses": [[100, 1, 1, "", "InstanceSeedBudgetKey"], [100, 1, 1, "", "InstanceSeedKey"], [100, 1, 1, "", "TrajectoryItem"], [100, 1, 1, "", "TrialInfo"], [100, 1, 1, "", "TrialKey"], [100, 1, 1, "", "TrialValue"]], "smac.runhistory.encoder": [[101, 1, 1, "", "AbstractRunHistoryEncoder"], [101, 1, 1, "", "RunHistoryEIPSEncoder"], [101, 1, 1, "", "RunHistoryEncoder"], [101, 1, 1, "", "RunHistoryInverseScaledEncoder"], [101, 1, 1, "", "RunHistoryLogEncoder"], [101, 1, 1, "", "RunHistoryLogScaledEncoder"], [101, 1, 1, "", "RunHistoryRawEncoder"], [101, 1, 1, "", "RunHistoryRawScaledEncoder"], [101, 1, 1, "", "RunHistoryScaledEncoder"], [101, 1, 1, "", "RunHistorySqrtScaledEncoder"], [102, 0, 0, "-", "abstract_encoder"], [103, 0, 0, "-", "boing_encoder"], [104, 0, 0, "-", "eips_encoder"], [105, 0, 0, "-", "encoder"], [106, 0, 0, "-", "inverse_scaled_encoder"], [107, 0, 0, "-", "log_encoder"], [108, 0, 0, "-", "log_scaled_encoder"], [109, 0, 0, "-", "scaled_encoder"], [110, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[101, 2, 1, "", "get_configurations"], [101, 3, 1, "", "meta"], [101, 3, 1, "", "multi_objective_algorithm"], [101, 2, 1, "", "transform"], [101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryRawEncoder": [[101, 2, 1, "", "transform_raw_values"], [101, 2, 1, "", "transform_response_values"], [101, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.RunHistoryRawScaledEncoder": [[101, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[102, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[102, 2, 1, "", "get_configurations"], [102, 3, 1, "", "meta"], [102, 3, 1, "", "multi_objective_algorithm"], [102, 2, 1, "", "transform"], [102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[103, 1, 1, "", "RunHistoryRawEncoder"], [103, 1, 1, "", "RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder": [[103, 2, 1, "", "transform_raw_values"], [103, 2, 1, "", "transform_response_values"], [103, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder": [[103, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.eips_encoder": [[104, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[104, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[105, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[105, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[106, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder": [[106, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[107, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[107, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[108, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[108, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[109, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[109, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[110, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[110, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[111, 1, 1, "", "DataOrigin"], [111, 1, 1, "", "StatusType"], [111, 1, 1, "", "TrialInfoIntent"]], "smac.runhistory.runhistory": [[112, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[112, 2, 1, "", "__contains__"], [112, 2, 1, "", "__eq__"], [112, 2, 1, "", "__getitem__"], [112, 2, 1, "", "__iter__"], [112, 2, 1, "", "__len__"], [112, 2, 1, "", "add"], [112, 2, 1, "", "average_cost"], [112, 3, 1, "", "config_ids"], [112, 2, 1, "", "empty"], [112, 2, 1, "", "get_config"], [112, 2, 1, "", "get_configs"], [112, 2, 1, "", "get_configs_per_budget"], [112, 2, 1, "", "get_cost"], [112, 2, 1, "", "get_incumbent"], [112, 2, 1, "", "get_min_cost"], [112, 2, 1, "", "get_trials"], [112, 3, 1, "", "ids_config"], [112, 2, 1, "", "incremental_update_cost"], [112, 2, 1, "", "load_json"], [112, 2, 1, "", "min_cost"], [112, 3, 1, "", "objective_bounds"], [112, 3, 1, "", "objective_weights"], [112, 2, 1, "", "reset"], [112, 2, 1, "", "save_json"], [112, 2, 1, "", "sum_cost"], [112, 2, 1, "", "update"], [112, 2, 1, "", "update_cost"], [112, 2, 1, "", "update_costs"], [112, 2, 1, "", "update_from_json"]], "smac.runner": [[113, 1, 1, "", "AbstractRunner"], [113, 1, 1, "", "DaskParallelRunner"], [113, 5, 1, "", "FirstRunCrashedException"], [113, 5, 1, "", "TargetAlgorithmAbortException"], [113, 1, 1, "", "TargetFunctionRunner"], [114, 0, 0, "-", "abstract_runner"], [115, 0, 0, "-", "dask_runner"], [116, 0, 0, "-", "exceptions"], [117, 0, 0, "-", "target_function_runner"]], "smac.runner.AbstractRunner": [[113, 2, 1, "", "count_available_workers"], [113, 2, 1, "", "is_running"], [113, 2, 1, "", "iter_results"], [113, 3, 1, "", "meta"], [113, 2, 1, "", "run"], [113, 2, 1, "", "run_wrapper"], [113, 2, 1, "", "submit_trial"], [113, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[113, 2, 1, "", "__del__"], [113, 2, 1, "", "close"], [113, 2, 1, "", "count_available_workers"], [113, 2, 1, "", "is_running"], [113, 2, 1, "", "iter_results"], [113, 2, 1, "", "run"], [113, 2, 1, "", "submit_trial"], [113, 2, 1, "", "wait"]], "smac.runner.TargetFunctionRunner": [[113, 2, 1, "", "__call__"], [113, 2, 1, "", "count_available_workers"], [113, 2, 1, "", "is_running"], [113, 2, 1, "", "iter_results"], [113, 2, 1, "", "run"], [113, 2, 1, "", "submit_trial"], [113, 2, 1, "", "wait"]], "smac.runner.abstract_runner": [[114, 1, 1, "", "AbstractRunner"]], "smac.runner.abstract_runner.AbstractRunner": [[114, 2, 1, "", "count_available_workers"], [114, 2, 1, "", "is_running"], [114, 2, 1, "", "iter_results"], [114, 3, 1, "", "meta"], [114, 2, 1, "", "run"], [114, 2, 1, "", "run_wrapper"], [114, 2, 1, "", "submit_trial"], [114, 2, 1, "", "wait"]], "smac.runner.dask_runner": [[115, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[115, 2, 1, "", "__del__"], [115, 2, 1, "", "close"], [115, 2, 1, "", "count_available_workers"], [115, 2, 1, "", "is_running"], [115, 2, 1, "", "iter_results"], [115, 2, 1, "", "run"], [115, 2, 1, "", "submit_trial"], [115, 2, 1, "", "wait"]], "smac.runner.exceptions": [[116, 5, 1, "", "FirstRunCrashedException"], [116, 5, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.target_function_runner": [[117, 1, 1, "", "TargetFunctionRunner"]], "smac.runner.target_function_runner.TargetFunctionRunner": [[117, 2, 1, "", "__call__"], [117, 2, 1, "", "count_available_workers"], [117, 2, 1, "", "is_running"], [117, 2, 1, "", "iter_results"], [117, 2, 1, "", "run"], [117, 2, 1, "", "submit_trial"], [117, 2, 1, "", "wait"]], "smac.scenario": [[118, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[118, 2, 1, "", "__post_init__"], [118, 2, 1, "", "count_instance_features"], [118, 2, 1, "", "count_objectives"], [118, 2, 1, "", "load"], [118, 2, 1, "", "make_serializable"], [118, 3, 1, "", "meta"], [118, 2, 1, "", "save"]], "smac.utils": [[120, 0, 0, "-", "configspace"], [121, 0, 0, "-", "data_structures"], [122, 0, 0, "-", "logging"], [123, 0, 0, "-", "multi_objective"], [124, 0, 0, "-", "subspaces"]], "smac.utils.configspace": [[120, 6, 1, "", "convert_configurations_to_array"], [120, 6, 1, "", "get_conditional_hyperparameters"], [120, 6, 1, "", "get_types"]], "smac.utils.data_structures": [[121, 6, 1, "", "recursively_compare_dicts"]], "smac.utils.logging": [[122, 6, 1, "", "format_array"], [122, 6, 1, "", "get_logger"], [122, 6, 1, "", "setup_logging"]], "smac.utils.multi_objective": [[123, 6, 1, "", "normalize_costs"]], "smac.utils.subspaces": [[125, 0, 0, "-", "boing_subspace"], [126, 0, 0, "-", "turbo_subspace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "requir": 0, "anaconda": 0, "conda": 0, "forg": 0, "packag": 1, "overview": 1, "featur": 1, "comparison": 1, "get": 2, "start": 2, "configur": 2, "space": 2, "target": 2, "function": [2, 9, 20, 21, 22, 23, 24, 25, 26, 27, 120, 121, 122, 123, 127, 138], "scenario": [2, 118], "facad": [2, 36, 37, 38, 39, 40, 41, 42, 43, 44], "minim": 3, "exampl": [3, 142], "api": 4, "refer": [4, 5], "glossari": 6, "f": 7, "A": 7, "q": 7, "licens": 8, "compon": 9, "surrog": 9, "model": [9, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "acquisit": [9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "maximi": 9, "initi": 9, "design": 9, "random": 9, "intensifi": [9, 52, 53, 54, 55, 56, 57, 58, 59, 60], "multi": [9, 10, 11, 134, 136, 140, 142], "object": [9, 11, 139, 140, 142], "algorithm": 9, "runhistori": [9, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "encod": [9, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "callback": [9, 35, 130], "fidel": [10, 136, 142], "optim": [10, 11, 12], "across": 12, "instanc": [12, 136, 142], "ask": [13, 129], "tell": [13, 129], "interfac": [13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "call": 13, "without": 13, "multipl": [13, 134, 135], "parallel": 14, "commandlin": 14, "usag": [14, 18], "python": 14, "stop": 15, "criteria": 15, "termin": 15, "cost": 15, "threshold": 15, "continu": 16, "run": 16, "reproduc": 17, "advanc": 18, "navig": 18, "smac": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126], "modul": [19, 20, 28, 36, 45, 52, 61, 66, 68, 72, 79, 86, 90, 94, 99, 101, 113, 119, 124], "abstract_acquisition_funct": 21, "class": [21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 69, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118], "confidence_bound": 22, "expected_improv": 23, "integrated_acquisition_funct": 24, "prior_acqusition_funct": 25, "probability_improv": 26, "thompson": 27, "maxim": [28, 29, 30, 31, 32, 33, 34], "abstract_acqusition_maxim": 29, "differential_evolut": 30, "helper": 31, "local_and_random_search": 32, "local_search": 33, "random_search": 34, "abstract_facad": 37, "algorithm_configuration_facad": 38, "blackbox_facad": 39, "boing_facad": 40, "hyperband_facad": 41, "hyperparameter_optimization_facad": 42, "multi_fidelity_facad": 43, "random_facad": 44, "initial_design": [45, 46, 47, 48, 49, 50, 51], "abstract_initial_design": 46, "default_design": 47, "factorial_design": 48, "latin_hypercube_design": 49, "random_design": [50, 94, 95, 96, 97, 98], "sobol_design": 51, "abstract_intensifi": 53, "abstract_parallel_intensifi": 54, "hyperband": 55, "hyperband_work": 56, "stage": 58, "successive_halv": 59, "successive_halving_work": 60, "main": [61, 62, 63, 64, 65], "base_smbo": 62, "bo": 63, "smbo": 64, "turbo": 65, "abstract_model": 67, "gaussian_process": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "abstract_gaussian_process": 69, "gpytorch_gaussian_process": 71, "kernel": [72, 73, 74, 75, 76, 77], "base_kernel": 73, "hamming_kernel": 74, "matern_kernel": 75, "rbf_kernel": 76, "white_kernel": 77, "mcmc_gaussian_process": 78, "prior": [79, 80, 81, 82, 83, 84, 131], "abstract_prior": 80, "gamma_prior": 81, "horseshoe_prior": 82, "log_normal_prior": 83, "tophat_prior": 84, "multi_objective_model": 85, "random_forest": [86, 87, 88], "abstract_random_forest": 87, "random_model": 89, "multi_object": [90, 91, 92, 93, 123], "abstract_multi_objective_algorithm": 91, "aggregation_strategi": 92, "parego": [93, 139], "abstract_random_design": 95, "annealing_design": 96, "modulus_design": 97, "probability_design": 98, "dataclass": 100, "abstract_encod": 102, "boing_encod": 103, "eips_encod": 104, "inverse_scaled_encod": 106, "log_encod": 107, "log_scaled_encod": 108, "scaled_encod": 109, "sqrt_scaled_encod": 110, "enumer": 111, "runner": [113, 114, 115, 116, 117], "abstract_runn": 114, "dask_runn": 115, "except": 116, "target_function_runn": 117, "util": [119, 120, 121, 122, 123, 124, 125, 126], "configspac": 120, "data_structur": 121, "log": 122, "subspac": [124, 125, 126], "boing_subspac": 125, "turbo_subspac": 126, "synthet": 127, "support": 128, "vector": 128, "machin": 128, "cross": 128, "valid": 128, "custom": 130, "user": 131, "over": 131, "optimum": 131, "basic": [132, 142], "comput": [133, 137, 141], "time": [133, 137, 141], "layer": 134, "perceptron": 134, "us": 134, "epoch": 134, "stochast": 135, "gradient": 135, "descent": 135, "On": 135, "dataset": 135, "2d": 138, "schaffer": 138, "weight": 139, "home": 143, "contact": 143}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Installation": [[0, "installation"]], "Requirements": [[0, "requirements"]], "Anaconda": [[0, "anaconda"]], "Conda-forge": [[0, "conda-forge"]], "Package Overview": [[1, "package-overview"]], "Features": [[1, "features"]], "Comparison": [[1, "comparison"]], "Getting Started": [[2, "getting-started"]], "Configuration Space": [[2, "configuration-space"]], "Target Function": [[2, "target-function"]], "Scenario": [[2, "scenario"]], "Facade": [[2, "facade"]], "Minimal Example": [[3, "minimal-example"]], "API References": [[4, "api-references"]], "References": [[5, "references"]], "Glossary": [[6, "glossary"]], "F.A.Q.": [[7, "f-a-q"]], "License": [[8, "license"]], "Components": [[9, "components"]], "Surrogate Model": [[9, "surrogate-model"]], "Acquisition Function": [[9, "acquisition-function"]], "Acquisition Maximier": [[9, "acquisition-maximier"]], "Initial Design": [[9, "initial-design"]], "Random Design": [[9, "random-design"]], "Intensifier": [[9, "intensifier"]], "Multi-Objective Algorithm": [[9, "multi-objective-algorithm"]], "RunHistory": [[9, "runhistory"]], "RunHistory Encoder": [[9, "runhistory-encoder"]], "Callback": [[9, "callback"]], "Multi-Fidelity Optimization": [[10, "multi-fidelity-optimization"]], "Multi-Objective Optimization": [[11, "multi-objective-optimization"]], "Optimization across Instances": [[12, "optimization-across-instances"]], "Ask-and-Tell Interface": [[13, "ask-and-tell-interface"]], "Calling Tell without Ask": [[13, "calling-tell-without-ask"]], "Calling Multiple Tells": [[13, "calling-multiple-tells"]], "Parallelism": [[14, "parallelism"]], "Commandline": [[14, "commandline"]], "Usage in Python": [[14, "usage-in-python"]], "Stopping Criteria": [[15, "stopping-criteria"]], "Termination Cost Threshold": [[15, "termination-cost-threshold"]], "Continue a Run": [[16, "continue-a-run"]], "Reproducability": [[17, "reproducability"]], "Advanced Usage": [[18, "advanced-usage"]], "Navigation": [[18, "navigation"]], "smac.acquisition": [[19, "module-smac.acquisition"]], "Interfaces": [[19, "interfaces"], [20, "interfaces"], [21, "interfaces"], [22, "interfaces"], [23, "interfaces"], [24, "interfaces"], [25, "interfaces"], [26, "interfaces"], [27, "interfaces"], [28, "interfaces"], [29, "interfaces"], [30, "interfaces"], [31, "interfaces"], [32, "interfaces"], [33, "interfaces"], [34, "interfaces"], [35, "interfaces"], [36, "interfaces"], [37, "interfaces"], [38, "interfaces"], [39, "interfaces"], [40, "interfaces"], [41, "interfaces"], [42, "interfaces"], [43, "interfaces"], [44, "interfaces"], [45, "interfaces"], [46, "interfaces"], [47, "interfaces"], [48, "interfaces"], [49, "interfaces"], [50, "interfaces"], [51, "interfaces"], [52, "interfaces"], [53, "interfaces"], [54, "interfaces"], [55, "interfaces"], [56, "interfaces"], [57, "interfaces"], [58, "interfaces"], [59, "interfaces"], [60, "interfaces"], [61, "interfaces"], [62, "interfaces"], [63, "interfaces"], [64, "interfaces"], [65, "interfaces"], [66, "interfaces"], [67, "interfaces"], [68, "interfaces"], [69, "interfaces"], [70, "interfaces"], [71, "interfaces"], [72, "interfaces"], [73, "interfaces"], [74, "interfaces"], [75, "interfaces"], [76, "interfaces"], [77, "interfaces"], [78, "interfaces"], [79, "interfaces"], [80, "interfaces"], [81, "interfaces"], [82, "interfaces"], [83, "interfaces"], [84, "interfaces"], [85, "interfaces"], [86, "interfaces"], [87, "interfaces"], [88, "interfaces"], [89, "interfaces"], [90, "interfaces"], [91, "interfaces"], [92, "interfaces"], [93, "interfaces"], [94, "interfaces"], [95, "interfaces"], [96, "interfaces"], [97, "interfaces"], [98, "interfaces"], [99, "interfaces"], [100, "interfaces"], [101, "interfaces"], [102, "interfaces"], [103, "interfaces"], [104, "interfaces"], [105, "interfaces"], [106, "interfaces"], [107, "interfaces"], [108, "interfaces"], [109, "interfaces"], [110, "interfaces"], [111, "interfaces"], [112, "interfaces"], [113, "interfaces"], [114, "interfaces"], [115, "interfaces"], [116, "interfaces"], [117, "interfaces"], [118, "interfaces"], [119, "interfaces"], [120, "interfaces"], [121, "interfaces"], [122, "interfaces"], [123, "interfaces"], [124, "interfaces"], [125, "interfaces"], [126, "interfaces"]], "Modules": [[19, "modules"], [20, "modules"], [28, "modules"], [36, "modules"], [45, "modules"], [52, "modules"], [61, "modules"], [66, "modules"], [68, "modules"], [72, "modules"], [79, "modules"], [86, "modules"], [90, "modules"], [94, "modules"], [99, "modules"], [101, "modules"], [113, "modules"], [119, "modules"], [124, "modules"]], "smac.acquisition.function": [[20, "module-smac.acquisition.function"]], "smac.acquisition.function.abstract_acquisition_function": [[21, "module-smac.acquisition.function.abstract_acquisition_function"]], "Classes": [[21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [62, "classes"], [64, "classes"], [67, "classes"], [69, "classes"], [70, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [87, "classes"], [88, "classes"], [89, "classes"], [91, "classes"], [92, "classes"], [93, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [100, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [114, "classes"], [115, "classes"], [117, "classes"], [118, "classes"]], "smac.acquisition.function.confidence_bound": [[22, "module-smac.acquisition.function.confidence_bound"]], "smac.acquisition.function.expected_improvement": [[23, "module-smac.acquisition.function.expected_improvement"]], "smac.acquisition.function.integrated_acquisition_function": [[24, "module-smac.acquisition.function.integrated_acquisition_function"]], "smac.acquisition.function.prior_acqusition_function": [[25, "module-smac.acquisition.function.prior_acqusition_function"]], "smac.acquisition.function.probability_improvement": [[26, "module-smac.acquisition.function.probability_improvement"]], "smac.acquisition.function.thompson": [[27, "module-smac.acquisition.function.thompson"]], "smac.acquisition.maximizer": [[28, "module-smac.acquisition.maximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[29, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "smac.acquisition.maximizer.differential_evolution": [[30, "module-smac.acquisition.maximizer.differential_evolution"]], "smac.acquisition.maximizer.helpers": [[31, "module-smac.acquisition.maximizer.helpers"]], "smac.acquisition.maximizer.local_and_random_search": [[32, "module-smac.acquisition.maximizer.local_and_random_search"]], "smac.acquisition.maximizer.local_search": [[33, "module-smac.acquisition.maximizer.local_search"]], "smac.acquisition.maximizer.random_search": [[34, "module-smac.acquisition.maximizer.random_search"]], "smac.callback": [[35, "module-smac.callback"]], "smac.facade": [[36, "module-smac.facade"]], "smac.facade.abstract_facade": [[37, "module-smac.facade.abstract_facade"]], "smac.facade.algorithm_configuration_facade": [[38, "module-smac.facade.algorithm_configuration_facade"]], "smac.facade.blackbox_facade": [[39, "module-smac.facade.blackbox_facade"]], "smac.facade.boing_facade": [[40, "module-smac.facade.boing_facade"]], "smac.facade.hyperband_facade": [[41, "module-smac.facade.hyperband_facade"]], "smac.facade.hyperparameter_optimization_facade": [[42, "module-smac.facade.hyperparameter_optimization_facade"]], "smac.facade.multi_fidelity_facade": [[43, "module-smac.facade.multi_fidelity_facade"]], "smac.facade.random_facade": [[44, "module-smac.facade.random_facade"]], "smac.initial_design": [[45, "module-smac.initial_design"]], "smac.initial_design.abstract_initial_design": [[46, "module-smac.initial_design.abstract_initial_design"]], "smac.initial_design.default_design": [[47, "module-smac.initial_design.default_design"]], "smac.initial_design.factorial_design": [[48, "module-smac.initial_design.factorial_design"]], "smac.initial_design.latin_hypercube_design": [[49, "module-smac.initial_design.latin_hypercube_design"]], "smac.initial_design.random_design": [[50, "module-smac.initial_design.random_design"]], "smac.initial_design.sobol_design": [[51, "module-smac.initial_design.sobol_design"]], "smac.intensifier": [[52, "module-smac.intensifier"]], "smac.intensifier.abstract_intensifier": [[53, "module-smac.intensifier.abstract_intensifier"]], "smac.intensifier.abstract_parallel_intensifier": [[54, "module-smac.intensifier.abstract_parallel_intensifier"]], "smac.intensifier.hyperband": [[55, "module-smac.intensifier.hyperband"]], "smac.intensifier.hyperband_worker": [[56, "module-smac.intensifier.hyperband_worker"]], "smac.intensifier.intensifier": [[57, "module-smac.intensifier.intensifier"]], "smac.intensifier.stages": [[58, "module-smac.intensifier.stages"]], "smac.intensifier.successive_halving": [[59, "module-smac.intensifier.successive_halving"]], "smac.intensifier.successive_halving_worker": [[60, "module-smac.intensifier.successive_halving_worker"]], "smac.main": [[61, "module-smac.main"]], "smac.main.base_smbo": [[62, "module-smac.main.base_smbo"]], "smac.main.boing": [[63, "module-smac.main.boing"]], "smac.main.smbo": [[64, "module-smac.main.smbo"]], "smac.main.turbo": [[65, "module-smac.main.turbo"]], "smac.model": [[66, "module-smac.model"]], "smac.model.abstract_model": [[67, "module-smac.model.abstract_model"]], "smac.model.gaussian_process": [[68, "module-smac.model.gaussian_process"]], "smac.model.gaussian_process.abstract_gaussian_process": [[69, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "smac.model.gaussian_process.gaussian_process": [[70, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[71, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "smac.model.gaussian_process.kernels": [[72, "module-smac.model.gaussian_process.kernels"]], "smac.model.gaussian_process.kernels.base_kernels": [[73, "module-smac.model.gaussian_process.kernels.base_kernels"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[74, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[75, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[76, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[77, "module-smac.model.gaussian_process.kernels.white_kernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[78, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "smac.model.gaussian_process.priors": [[79, "module-smac.model.gaussian_process.priors"]], "smac.model.gaussian_process.priors.abstract_prior": [[80, "module-smac.model.gaussian_process.priors.abstract_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[81, "module-smac.model.gaussian_process.priors.gamma_prior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[82, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[83, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[84, "module-smac.model.gaussian_process.priors.tophat_prior"]], "smac.model.multi_objective_model": [[85, "module-smac.model.multi_objective_model"]], "smac.model.random_forest": [[86, "module-smac.model.random_forest"]], "smac.model.random_forest.abstract_random_forest": [[87, "module-smac.model.random_forest.abstract_random_forest"]], "smac.model.random_forest.random_forest": [[88, "module-smac.model.random_forest.random_forest"]], "smac.model.random_model": [[89, "module-smac.model.random_model"]], "smac.multi_objective": [[90, "module-smac.multi_objective"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[91, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "smac.multi_objective.aggregation_strategy": [[92, "module-smac.multi_objective.aggregation_strategy"]], "smac.multi_objective.parego": [[93, "module-smac.multi_objective.parego"]], "smac.random_design": [[94, "module-smac.random_design"]], "smac.random_design.abstract_random_design": [[95, "module-smac.random_design.abstract_random_design"]], "smac.random_design.annealing_design": [[96, "module-smac.random_design.annealing_design"]], "smac.random_design.modulus_design": [[97, "module-smac.random_design.modulus_design"]], "smac.random_design.probability_design": [[98, "module-smac.random_design.probability_design"]], "smac.runhistory": [[99, "module-smac.runhistory"]], "smac.runhistory.dataclasses": [[100, "module-smac.runhistory.dataclasses"]], "smac.runhistory.encoder": [[101, "module-smac.runhistory.encoder"]], "smac.runhistory.encoder.abstract_encoder": [[102, "module-smac.runhistory.encoder.abstract_encoder"]], "smac.runhistory.encoder.boing_encoder": [[103, "module-smac.runhistory.encoder.boing_encoder"]], "smac.runhistory.encoder.eips_encoder": [[104, "module-smac.runhistory.encoder.eips_encoder"]], "smac.runhistory.encoder.encoder": [[105, "module-smac.runhistory.encoder.encoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[106, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "smac.runhistory.encoder.log_encoder": [[107, "module-smac.runhistory.encoder.log_encoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[108, "module-smac.runhistory.encoder.log_scaled_encoder"]], "smac.runhistory.encoder.scaled_encoder": [[109, "module-smac.runhistory.encoder.scaled_encoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[110, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "smac.runhistory.enumerations": [[111, "module-smac.runhistory.enumerations"]], "smac.runhistory.runhistory": [[112, "module-smac.runhistory.runhistory"]], "smac.runner": [[113, "module-smac.runner"]], "smac.runner.abstract_runner": [[114, "module-smac.runner.abstract_runner"]], "smac.runner.dask_runner": [[115, "module-smac.runner.dask_runner"]], "smac.runner.exceptions": [[116, "module-smac.runner.exceptions"]], "Exceptions": [[116, "exceptions"]], "smac.runner.target_function_runner": [[117, "module-smac.runner.target_function_runner"]], "smac.scenario": [[118, "module-smac.scenario"]], "smac.utils": [[119, "module-smac.utils"]], "smac.utils.configspace": [[120, "module-smac.utils.configspace"]], "Functions": [[120, "functions"], [121, "functions"], [122, "functions"], [123, "functions"]], "smac.utils.data_structures": [[121, "module-smac.utils.data_structures"]], "smac.utils.logging": [[122, "module-smac.utils.logging"]], "smac.utils.multi_objective": [[123, "module-smac.utils.multi_objective"]], "smac.utils.subspaces": [[124, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[125, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[126, "module-smac.utils.subspaces.turbo_subspace"]], "Synthetic Function": [[127, "synthetic-function"]], "Support Vector Machine with Cross-Validation": [[128, "support-vector-machine-with-cross-validation"]], "Ask-and-Tell": [[129, "ask-and-tell"]], "Custom Callback": [[130, "custom-callback"]], "User Priors over the Optimum": [[131, "user-priors-over-the-optimum"]], "Basics": [[132, "basics"], [142, "basics"]], "Computation times": [[133, "computation-times"], [137, "computation-times"], [141, "computation-times"]], "Multi-Layer Perceptron Using Multiple Epochs": [[134, "multi-layer-perceptron-using-multiple-epochs"]], "Stochastic Gradient Descent On Multiple Datasets": [[135, "stochastic-gradient-descent-on-multiple-datasets"]], "Multi-Fidelity and Multi-Instances": [[136, "multi-fidelity-and-multi-instances"], [142, "multi-fidelity-and-multi-instances"]], "2D Schaffer Function": [[138, "d-schaffer-function"]], "ParEGO with Objective Weights": [[139, "parego-with-objective-weights"]], "Multi-Objective": [[140, "multi-objective"], [142, "multi-objective"]], "Examples": [[142, "examples"]], "Home": [[143, "home"]], "Contact": [[143, "contact"]]}, "indexentries": {"bb": [[6, "term-BB"]], "bo": [[6, "term-BO"]], "bohb": [[6, "term-BOHB"]], "bayesian optimization": [[6, "term-Bayesian-Optimization"]], "black-box": [[6, "term-Black-Box"]], "budget": [[6, "term-Budget"]], "cli": [[6, "term-CLI"]], "cv": [[6, "term-CV"]], "gp": [[6, "term-GP"]], "gp-mcmc": [[6, "term-GP-MCMC"]], "hb": [[6, "term-HB"]], "hp": [[6, "term-HP"]], "hyperband": [[6, "term-Hyperband"]], "incumbent": [[6, "term-Incumbent"]], "instances": [[6, "term-Instances"]], "intensification": [[6, "term-Intensification"]], "mf": [[6, "term-MF"]], "multi-fidelity": [[6, "term-Multi-Fidelity"]], "multi-objective": [[6, "term-Multi-Objective"]], "objective": [[6, "term-Objective"]], "rf": [[6, "term-RF"]], "roar": [[6, "term-ROAR"]], "random online adaptive racing": [[6, "term-Random-Online-Adaptive-Racing"]], "smac": [[6, "term-SMAC"]], "target function": [[6, "term-Target-Function"]], "trial": [[6, "term-Trial"]], "module": [[19, "module-smac.acquisition"], [20, "module-smac.acquisition.function"], [21, "module-smac.acquisition.function.abstract_acquisition_function"], [22, "module-smac.acquisition.function.confidence_bound"], [23, "module-smac.acquisition.function.expected_improvement"], [24, "module-smac.acquisition.function.integrated_acquisition_function"], [25, "module-smac.acquisition.function.prior_acqusition_function"], [26, "module-smac.acquisition.function.probability_improvement"], [27, "module-smac.acquisition.function.thompson"], [28, "module-smac.acquisition.maximizer"], [29, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"], [30, "module-smac.acquisition.maximizer.differential_evolution"], [31, "module-smac.acquisition.maximizer.helpers"], [32, "module-smac.acquisition.maximizer.local_and_random_search"], [33, "module-smac.acquisition.maximizer.local_search"], [34, "module-smac.acquisition.maximizer.random_search"], [35, "module-smac.callback"], [36, "module-smac.facade"], [37, "module-smac.facade.abstract_facade"], [38, "module-smac.facade.algorithm_configuration_facade"], [39, "module-smac.facade.blackbox_facade"], [40, "module-smac.facade.boing_facade"], [41, "module-smac.facade.hyperband_facade"], [42, "module-smac.facade.hyperparameter_optimization_facade"], [43, "module-smac.facade.multi_fidelity_facade"], [44, "module-smac.facade.random_facade"], [45, "module-smac.initial_design"], [46, "module-smac.initial_design.abstract_initial_design"], [47, "module-smac.initial_design.default_design"], [48, "module-smac.initial_design.factorial_design"], [49, "module-smac.initial_design.latin_hypercube_design"], [50, "module-smac.initial_design.random_design"], [51, "module-smac.initial_design.sobol_design"], [52, "module-smac.intensifier"], [53, "module-smac.intensifier.abstract_intensifier"], [54, "module-smac.intensifier.abstract_parallel_intensifier"], [55, "module-smac.intensifier.hyperband"], [56, "module-smac.intensifier.hyperband_worker"], [57, "module-smac.intensifier.intensifier"], [58, "module-smac.intensifier.stages"], [59, "module-smac.intensifier.successive_halving"], [60, "module-smac.intensifier.successive_halving_worker"], [61, "module-smac.main"], [62, "module-smac.main.base_smbo"], [63, "module-smac.main.boing"], [64, "module-smac.main.smbo"], [65, "module-smac.main.turbo"], [66, "module-smac.model"], [67, "module-smac.model.abstract_model"], [68, "module-smac.model.gaussian_process"], [69, "module-smac.model.gaussian_process.abstract_gaussian_process"], [70, "module-smac.model.gaussian_process.gaussian_process"], [71, "module-smac.model.gaussian_process.gpytorch_gaussian_process"], [72, "module-smac.model.gaussian_process.kernels"], [73, "module-smac.model.gaussian_process.kernels.base_kernels"], [74, "module-smac.model.gaussian_process.kernels.hamming_kernel"], [75, "module-smac.model.gaussian_process.kernels.matern_kernel"], [76, "module-smac.model.gaussian_process.kernels.rbf_kernel"], [77, "module-smac.model.gaussian_process.kernels.white_kernel"], [78, "module-smac.model.gaussian_process.mcmc_gaussian_process"], [79, "module-smac.model.gaussian_process.priors"], [80, "module-smac.model.gaussian_process.priors.abstract_prior"], [81, "module-smac.model.gaussian_process.priors.gamma_prior"], [82, "module-smac.model.gaussian_process.priors.horseshoe_prior"], [83, "module-smac.model.gaussian_process.priors.log_normal_prior"], [84, "module-smac.model.gaussian_process.priors.tophat_prior"], [85, "module-smac.model.multi_objective_model"], [86, "module-smac.model.random_forest"], [87, "module-smac.model.random_forest.abstract_random_forest"], [88, "module-smac.model.random_forest.random_forest"], [89, "module-smac.model.random_model"], [90, "module-smac.multi_objective"], [91, "module-smac.multi_objective.abstract_multi_objective_algorithm"], [92, "module-smac.multi_objective.aggregation_strategy"], [93, "module-smac.multi_objective.parego"], [94, "module-smac.random_design"], [95, "module-smac.random_design.abstract_random_design"], [96, "module-smac.random_design.annealing_design"], [97, "module-smac.random_design.modulus_design"], [98, "module-smac.random_design.probability_design"], [99, "module-smac.runhistory"], [100, "module-smac.runhistory.dataclasses"], [101, "module-smac.runhistory.encoder"], [102, "module-smac.runhistory.encoder.abstract_encoder"], [103, "module-smac.runhistory.encoder.boing_encoder"], [104, "module-smac.runhistory.encoder.eips_encoder"], [105, "module-smac.runhistory.encoder.encoder"], [106, "module-smac.runhistory.encoder.inverse_scaled_encoder"], [107, "module-smac.runhistory.encoder.log_encoder"], [108, "module-smac.runhistory.encoder.log_scaled_encoder"], [109, "module-smac.runhistory.encoder.scaled_encoder"], [110, "module-smac.runhistory.encoder.sqrt_scaled_encoder"], [111, "module-smac.runhistory.enumerations"], [112, "module-smac.runhistory.runhistory"], [113, "module-smac.runner"], [114, "module-smac.runner.abstract_runner"], [115, "module-smac.runner.dask_runner"], [116, "module-smac.runner.exceptions"], [117, "module-smac.runner.target_function_runner"], [118, "module-smac.scenario"], [119, "module-smac.utils"], [120, "module-smac.utils.configspace"], [121, "module-smac.utils.data_structures"], [122, "module-smac.utils.logging"], [123, "module-smac.utils.multi_objective"], [124, "module-smac.utils.subspaces"], [125, "module-smac.utils.subspaces.boing_subspace"], [126, "module-smac.utils.subspaces.turbo_subspace"]], "smac.acquisition": [[19, "module-smac.acquisition"]], "abstractacquisitionfunction (class in smac.acquisition.function)": [[20, "smac.acquisition.function.AbstractAcquisitionFunction"]], "ei (class in smac.acquisition.function)": [[20, "smac.acquisition.function.EI"]], "eips (class in smac.acquisition.function)": [[20, "smac.acquisition.function.EIPS"]], "integratedacquisitionfunction (class in smac.acquisition.function)": [[20, "smac.acquisition.function.IntegratedAcquisitionFunction"]], "lcb (class in smac.acquisition.function)": [[20, "smac.acquisition.function.LCB"]], "pi (class in smac.acquisition.function)": [[20, "smac.acquisition.function.PI"]], "prioracquisitionfunction (class in smac.acquisition.function)": [[20, "smac.acquisition.function.PriorAcquisitionFunction"]], "ts (class in smac.acquisition.function)": [[20, "smac.acquisition.function.TS"]], "__call__() (smac.acquisition.function.abstractacquisitionfunction method)": [[20, "smac.acquisition.function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstractacquisitionfunction property)": [[20, "smac.acquisition.function.AbstractAcquisitionFunction.meta"]], "meta (smac.acquisition.function.ei property)": [[20, "smac.acquisition.function.EI.meta"]], "meta (smac.acquisition.function.integratedacquisitionfunction property)": [[20, "smac.acquisition.function.IntegratedAcquisitionFunction.meta"]], "meta (smac.acquisition.function.lcb property)": [[20, "smac.acquisition.function.LCB.meta"]], "meta (smac.acquisition.function.pi property)": [[20, "smac.acquisition.function.PI.meta"]], "meta (smac.acquisition.function.prioracquisitionfunction property)": [[20, "smac.acquisition.function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstractacquisitionfunction property)": [[20, "smac.acquisition.function.AbstractAcquisitionFunction.model"]], "model (smac.acquisition.function.prioracquisitionfunction property)": [[20, "smac.acquisition.function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.abstractacquisitionfunction property)": [[20, "smac.acquisition.function.AbstractAcquisitionFunction.name"]], "name (smac.acquisition.function.ei property)": [[20, "smac.acquisition.function.EI.name"]], "name (smac.acquisition.function.eips property)": [[20, "smac.acquisition.function.EIPS.name"]], "name (smac.acquisition.function.integratedacquisitionfunction property)": [[20, "smac.acquisition.function.IntegratedAcquisitionFunction.name"]], "name (smac.acquisition.function.lcb property)": [[20, "smac.acquisition.function.LCB.name"]], "name (smac.acquisition.function.pi property)": [[20, "smac.acquisition.function.PI.name"]], "name (smac.acquisition.function.prioracquisitionfunction property)": [[20, "smac.acquisition.function.PriorAcquisitionFunction.name"]], "name (smac.acquisition.function.ts property)": [[20, "smac.acquisition.function.TS.name"]], "smac.acquisition.function": [[20, "module-smac.acquisition.function"]], "update() (smac.acquisition.function.abstractacquisitionfunction method)": [[20, "smac.acquisition.function.AbstractAcquisitionFunction.update"]], "abstractacquisitionfunction (class in smac.acquisition.function.abstract_acquisition_function)": [[21, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction"]], "__call__() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[21, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[21, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[21, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.model"]], "name (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[21, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.name"]], "smac.acquisition.function.abstract_acquisition_function": [[21, "module-smac.acquisition.function.abstract_acquisition_function"]], "update() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[21, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.update"]], "lcb (class in smac.acquisition.function.confidence_bound)": [[22, "smac.acquisition.function.confidence_bound.LCB"]], "meta (smac.acquisition.function.confidence_bound.lcb property)": [[22, "smac.acquisition.function.confidence_bound.LCB.meta"]], "name (smac.acquisition.function.confidence_bound.lcb property)": [[22, "smac.acquisition.function.confidence_bound.LCB.name"]], "smac.acquisition.function.confidence_bound": [[22, "module-smac.acquisition.function.confidence_bound"]], "ei (class in smac.acquisition.function.expected_improvement)": [[23, "smac.acquisition.function.expected_improvement.EI"]], "eips (class in smac.acquisition.function.expected_improvement)": [[23, "smac.acquisition.function.expected_improvement.EIPS"]], "meta (smac.acquisition.function.expected_improvement.ei property)": [[23, "smac.acquisition.function.expected_improvement.EI.meta"]], "name (smac.acquisition.function.expected_improvement.ei property)": [[23, "smac.acquisition.function.expected_improvement.EI.name"]], "name (smac.acquisition.function.expected_improvement.eips property)": [[23, "smac.acquisition.function.expected_improvement.EIPS.name"]], "smac.acquisition.function.expected_improvement": [[23, "module-smac.acquisition.function.expected_improvement"]], "integratedacquisitionfunction (class in smac.acquisition.function.integrated_acquisition_function)": [[24, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction"]], "meta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[24, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.meta"]], "name (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[24, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.name"]], "smac.acquisition.function.integrated_acquisition_function": [[24, "module-smac.acquisition.function.integrated_acquisition_function"]], "prioracquisitionfunction (class in smac.acquisition.function.prior_acqusition_function)": [[25, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction"]], "meta (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[25, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[25, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[25, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.name"]], "smac.acquisition.function.prior_acqusition_function": [[25, "module-smac.acquisition.function.prior_acqusition_function"]], "pi (class in smac.acquisition.function.probability_improvement)": [[26, "smac.acquisition.function.probability_improvement.PI"]], "meta (smac.acquisition.function.probability_improvement.pi property)": [[26, "smac.acquisition.function.probability_improvement.PI.meta"]], "name (smac.acquisition.function.probability_improvement.pi property)": [[26, "smac.acquisition.function.probability_improvement.PI.name"]], "smac.acquisition.function.probability_improvement": [[26, "module-smac.acquisition.function.probability_improvement"]], "ts (class in smac.acquisition.function.thompson)": [[27, "smac.acquisition.function.thompson.TS"]], "name (smac.acquisition.function.thompson.ts property)": [[27, "smac.acquisition.function.thompson.TS.name"]], "smac.acquisition.function.thompson": [[27, "module-smac.acquisition.function.thompson"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer)": [[28, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer"]], "differentialevolution (class in smac.acquisition.maximizer)": [[28, "smac.acquisition.maximizer.DifferentialEvolution"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer)": [[28, "smac.acquisition.maximizer.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer)": [[28, "smac.acquisition.maximizer.LocalAndSortedRandomSearch"]], "localsearch (class in smac.acquisition.maximizer)": [[28, "smac.acquisition.maximizer.LocalSearch"]], "randomsearch (class in smac.acquisition.maximizer)": [[28, "smac.acquisition.maximizer.RandomSearch"]], "acquisition_function (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[28, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "acquisition_function (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[28, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstractacquisitionmaximizer method)": [[28, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[28, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.meta"]], "meta (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[28, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.meta"]], "meta (smac.acquisition.maximizer.localsearch property)": [[28, "smac.acquisition.maximizer.LocalSearch.meta"]], "smac.acquisition.maximizer": [[28, "module-smac.acquisition.maximizer"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer.abstract_acqusition_maximizer)": [[29, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer"]], "acquisition_function (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[29, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer method)": [[29, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[29, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[29, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "differentialevolution (class in smac.acquisition.maximizer.differential_evolution)": [[30, "smac.acquisition.maximizer.differential_evolution.DifferentialEvolution"]], "smac.acquisition.maximizer.differential_evolution": [[30, "module-smac.acquisition.maximizer.differential_evolution"]], "challengerlist (class in smac.acquisition.maximizer.helpers)": [[31, "smac.acquisition.maximizer.helpers.ChallengerList"]], "smac.acquisition.maximizer.helpers": [[31, "module-smac.acquisition.maximizer.helpers"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[32, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[32, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch"]], "acquisition_function (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[32, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.acquisition_function"]], "meta (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[32, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.meta"]], "smac.acquisition.maximizer.local_and_random_search": [[32, "module-smac.acquisition.maximizer.local_and_random_search"]], "localsearch (class in smac.acquisition.maximizer.local_search)": [[33, "smac.acquisition.maximizer.local_search.LocalSearch"]], "meta (smac.acquisition.maximizer.local_search.localsearch property)": [[33, "smac.acquisition.maximizer.local_search.LocalSearch.meta"]], "smac.acquisition.maximizer.local_search": [[33, "module-smac.acquisition.maximizer.local_search"]], "randomsearch (class in smac.acquisition.maximizer.random_search)": [[34, "smac.acquisition.maximizer.random_search.RandomSearch"]], "smac.acquisition.maximizer.random_search": [[34, "module-smac.acquisition.maximizer.random_search"]], "callback (class in smac.callback)": [[35, "smac.callback.Callback"]], "on_ask_end() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_start"]], "on_tell_end() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback method)": [[35, "smac.callback.Callback.on_tell_start"]], "smac.callback": [[35, "module-smac.callback"]], "abstractfacade (class in smac.facade)": [[36, "smac.facade.AbstractFacade"]], "algorithmconfigurationfacade (class in smac.facade)": [[36, "smac.facade.AlgorithmConfigurationFacade"]], "blackboxfacade (class in smac.facade)": [[36, "smac.facade.BlackBoxFacade"]], "hyperbandfacade (class in smac.facade)": [[36, "smac.facade.HyperbandFacade"]], "hyperparameteroptimizationfacade (class in smac.facade)": [[36, "smac.facade.HyperparameterOptimizationFacade"]], "multifidelityfacade (class in smac.facade)": [[36, "smac.facade.MultiFidelityFacade"]], "randomfacade (class in smac.facade)": [[36, "smac.facade.RandomFacade"]], "ask() (smac.facade.abstractfacade method)": [[36, "smac.facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstractfacade static method)": [[36, "smac.facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.algorithmconfigurationfacade static method)": [[36, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.hyperparameteroptimizationfacade static method)": [[36, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.randomfacade static method)": [[36, "smac.facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstractfacade static method)": [[36, "smac.facade.AbstractFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.algorithmconfigurationfacade static method)": [[36, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.hyperparameteroptimizationfacade static method)": [[36, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.randomfacade static method)": [[36, "smac.facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.abstractfacade static method)": [[36, "smac.facade.AbstractFacade.get_initial_design"]], "get_initial_design() (smac.facade.algorithmconfigurationfacade static method)": [[36, "smac.facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_initial_design() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_initial_design"]], "get_initial_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[36, "smac.facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_initial_design() (smac.facade.multifidelityfacade static method)": [[36, "smac.facade.MultiFidelityFacade.get_initial_design"]], "get_initial_design() (smac.facade.randomfacade static method)": [[36, "smac.facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstractfacade static method)": [[36, "smac.facade.AbstractFacade.get_intensifier"]], "get_intensifier() (smac.facade.algorithmconfigurationfacade static method)": [[36, "smac.facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_intensifier() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperbandfacade static method)": [[36, "smac.facade.HyperbandFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperparameteroptimizationfacade static method)": [[36, "smac.facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_intensifier() (smac.facade.multifidelityfacade static method)": [[36, "smac.facade.MultiFidelityFacade.get_intensifier"]], "get_intensifier() (smac.facade.randomfacade static method)": [[36, "smac.facade.RandomFacade.get_intensifier"]], "get_kernel() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.abstractfacade static method)": [[36, "smac.facade.AbstractFacade.get_model"]], "get_model() (smac.facade.algorithmconfigurationfacade static method)": [[36, "smac.facade.AlgorithmConfigurationFacade.get_model"]], "get_model() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_model"]], "get_model() (smac.facade.hyperparameteroptimizationfacade static method)": [[36, "smac.facade.HyperparameterOptimizationFacade.get_model"]], "get_model() (smac.facade.randomfacade static method)": [[36, "smac.facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstractfacade static method)": [[36, "smac.facade.AbstractFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.algorithmconfigurationfacade static method)": [[36, "smac.facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.hyperparameteroptimizationfacade static method)": [[36, "smac.facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.randomfacade static method)": [[36, "smac.facade.RandomFacade.get_multi_objective_algorithm"]], "get_next_configurations() (smac.facade.abstractfacade method)": [[36, "smac.facade.AbstractFacade.get_next_configurations"]], "get_random_design() (smac.facade.abstractfacade static method)": [[36, "smac.facade.AbstractFacade.get_random_design"]], "get_random_design() (smac.facade.algorithmconfigurationfacade static method)": [[36, "smac.facade.AlgorithmConfigurationFacade.get_random_design"]], "get_random_design() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_random_design"]], "get_random_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[36, "smac.facade.HyperparameterOptimizationFacade.get_random_design"]], "get_random_design() (smac.facade.randomfacade static method)": [[36, "smac.facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstractfacade static method)": [[36, "smac.facade.AbstractFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.algorithmconfigurationfacade static method)": [[36, "smac.facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.blackboxfacade static method)": [[36, "smac.facade.BlackBoxFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.hyperparameteroptimizationfacade static method)": [[36, "smac.facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.randomfacade static method)": [[36, "smac.facade.RandomFacade.get_runhistory_encoder"]], "get_target_function_budgets() (smac.facade.abstractfacade method)": [[36, "smac.facade.AbstractFacade.get_target_function_budgets"]], "get_target_function_instances() (smac.facade.abstractfacade method)": [[36, "smac.facade.AbstractFacade.get_target_function_instances"]], "get_target_function_seeds() (smac.facade.abstractfacade method)": [[36, "smac.facade.AbstractFacade.get_target_function_seeds"]], "incumbent (smac.facade.abstractfacade property)": [[36, "smac.facade.AbstractFacade.incumbent"]], "meta (smac.facade.abstractfacade property)": [[36, "smac.facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstractfacade method)": [[36, "smac.facade.AbstractFacade.optimize"]], "runhistory (smac.facade.abstractfacade property)": [[36, "smac.facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstractfacade property)": [[36, "smac.facade.AbstractFacade.scenario"]], "smac.facade": [[36, "module-smac.facade"]], "stats (smac.facade.abstractfacade property)": [[36, "smac.facade.AbstractFacade.stats"]], "tell() (smac.facade.abstractfacade method)": [[36, "smac.facade.AbstractFacade.tell"]], "validate() (smac.facade.abstractfacade method)": [[36, "smac.facade.AbstractFacade.validate"]], "abstractfacade (class in smac.facade.abstract_facade)": [[37, "smac.facade.abstract_facade.AbstractFacade"]], "ask() (smac.facade.abstract_facade.abstractfacade method)": [[37, "smac.facade.abstract_facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstract_facade.abstractfacade static method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstract_facade.abstractfacade static method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.abstract_facade.abstractfacade static method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstract_facade.abstractfacade static method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_intensifier"]], "get_model() (smac.facade.abstract_facade.abstractfacade static method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstract_facade.abstractfacade static method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_multi_objective_algorithm"]], "get_next_configurations() (smac.facade.abstract_facade.abstractfacade method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_next_configurations"]], "get_random_design() (smac.facade.abstract_facade.abstractfacade static method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstract_facade.abstractfacade static method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_runhistory_encoder"]], "get_target_function_budgets() (smac.facade.abstract_facade.abstractfacade method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_target_function_budgets"]], "get_target_function_instances() (smac.facade.abstract_facade.abstractfacade method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_target_function_instances"]], "get_target_function_seeds() (smac.facade.abstract_facade.abstractfacade method)": [[37, "smac.facade.abstract_facade.AbstractFacade.get_target_function_seeds"]], "incumbent (smac.facade.abstract_facade.abstractfacade property)": [[37, "smac.facade.abstract_facade.AbstractFacade.incumbent"]], "meta (smac.facade.abstract_facade.abstractfacade property)": [[37, "smac.facade.abstract_facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstract_facade.abstractfacade method)": [[37, "smac.facade.abstract_facade.AbstractFacade.optimize"]], "runhistory (smac.facade.abstract_facade.abstractfacade property)": [[37, "smac.facade.abstract_facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstract_facade.abstractfacade property)": [[37, "smac.facade.abstract_facade.AbstractFacade.scenario"]], "smac.facade.abstract_facade": [[37, "module-smac.facade.abstract_facade"]], "stats (smac.facade.abstract_facade.abstractfacade property)": [[37, "smac.facade.abstract_facade.AbstractFacade.stats"]], "tell() (smac.facade.abstract_facade.abstractfacade method)": [[37, "smac.facade.abstract_facade.AbstractFacade.tell"]], "validate() (smac.facade.abstract_facade.abstractfacade method)": [[37, "smac.facade.abstract_facade.AbstractFacade.validate"]], "algorithmconfigurationfacade (class in smac.facade.algorithm_configuration_facade)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade"]], "get_acquisition_function() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_intensifier() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_model() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "smac.facade.algorithm_configuration_facade": [[38, "module-smac.facade.algorithm_configuration_facade"]], "blackboxfacade (class in smac.facade.blackbox_facade)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade"]], "get_acquisition_function() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_initial_design"]], "get_intensifier() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_intensifier"]], "get_kernel() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.blackbox_facade.blackboxfacade static method)": [[39, "smac.facade.blackbox_facade.BlackBoxFacade.get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[39, "module-smac.facade.blackbox_facade"]], "smac.facade.boing_facade": [[40, "module-smac.facade.boing_facade"]], "hyperbandfacade (class in smac.facade.hyperband_facade)": [[41, "smac.facade.hyperband_facade.HyperbandFacade"]], "get_intensifier() (smac.facade.hyperband_facade.hyperbandfacade static method)": [[41, "smac.facade.hyperband_facade.HyperbandFacade.get_intensifier"]], "smac.facade.hyperband_facade": [[41, "module-smac.facade.hyperband_facade"]], "hyperparameteroptimizationfacade (class in smac.facade.hyperparameter_optimization_facade)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade"]], "get_acquisition_function() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_intensifier() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_model() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[42, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "smac.facade.hyperparameter_optimization_facade": [[42, "module-smac.facade.hyperparameter_optimization_facade"]], "multifidelityfacade (class in smac.facade.multi_fidelity_facade)": [[43, "smac.facade.multi_fidelity_facade.MultiFidelityFacade"]], "get_initial_design() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[43, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_initial_design"]], "get_intensifier() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[43, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_intensifier"]], "smac.facade.multi_fidelity_facade": [[43, "module-smac.facade.multi_fidelity_facade"]], "randomfacade (class in smac.facade.random_facade)": [[44, "smac.facade.random_facade.RandomFacade"]], "get_acquisition_function() (smac.facade.random_facade.randomfacade static method)": [[44, "smac.facade.random_facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.random_facade.randomfacade static method)": [[44, "smac.facade.random_facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.random_facade.randomfacade static method)": [[44, "smac.facade.random_facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.random_facade.randomfacade static method)": [[44, "smac.facade.random_facade.RandomFacade.get_intensifier"]], "get_model() (smac.facade.random_facade.randomfacade static method)": [[44, "smac.facade.random_facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.random_facade.randomfacade static method)": [[44, "smac.facade.random_facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.random_facade.randomfacade static method)": [[44, "smac.facade.random_facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.random_facade.randomfacade static method)": [[44, "smac.facade.random_facade.RandomFacade.get_runhistory_encoder"]], "smac.facade.random_facade": [[44, "module-smac.facade.random_facade"]], "abstractinitialdesign (class in smac.initial_design)": [[45, "smac.initial_design.AbstractInitialDesign"]], "defaultinitialdesign (class in smac.initial_design)": [[45, "smac.initial_design.DefaultInitialDesign"]], "factorialinitialdesign (class in smac.initial_design)": [[45, "smac.initial_design.FactorialInitialDesign"]], "latinhypercubeinitialdesign (class in smac.initial_design)": [[45, "smac.initial_design.LatinHypercubeInitialDesign"]], "randominitialdesign (class in smac.initial_design)": [[45, "smac.initial_design.RandomInitialDesign"]], "sobolinitialdesign (class in smac.initial_design)": [[45, "smac.initial_design.SobolInitialDesign"]], "meta (smac.initial_design.abstractinitialdesign property)": [[45, "smac.initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstractinitialdesign method)": [[45, "smac.initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design": [[45, "module-smac.initial_design"]], "abstractinitialdesign (class in smac.initial_design.abstract_initial_design)": [[46, "smac.initial_design.abstract_initial_design.AbstractInitialDesign"]], "meta (smac.initial_design.abstract_initial_design.abstractinitialdesign property)": [[46, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstract_initial_design.abstractinitialdesign method)": [[46, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design.abstract_initial_design": [[46, "module-smac.initial_design.abstract_initial_design"]], "defaultinitialdesign (class in smac.initial_design.default_design)": [[47, "smac.initial_design.default_design.DefaultInitialDesign"]], "smac.initial_design.default_design": [[47, "module-smac.initial_design.default_design"]], "factorialinitialdesign (class in smac.initial_design.factorial_design)": [[48, "smac.initial_design.factorial_design.FactorialInitialDesign"]], "smac.initial_design.factorial_design": [[48, "module-smac.initial_design.factorial_design"]], "latinhypercubeinitialdesign (class in smac.initial_design.latin_hypercube_design)": [[49, "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[49, "module-smac.initial_design.latin_hypercube_design"]], "randominitialdesign (class in smac.initial_design.random_design)": [[50, "smac.initial_design.random_design.RandomInitialDesign"]], "smac.initial_design.random_design": [[50, "module-smac.initial_design.random_design"]], "sobolinitialdesign (class in smac.initial_design.sobol_design)": [[51, "smac.initial_design.sobol_design.SobolInitialDesign"]], "smac.initial_design.sobol_design": [[51, "module-smac.initial_design.sobol_design"]], "abstractintensifier (class in smac.intensifier)": [[52, "smac.intensifier.AbstractIntensifier"]], "abstractparallelintensifier (class in smac.intensifier)": [[52, "smac.intensifier.AbstractParallelIntensifier"]], "hyperband (class in smac.intensifier)": [[52, "smac.intensifier.Hyperband"]], "intensifier (class in smac.intensifier)": [[52, "smac.intensifier.Intensifier"]], "successivehalving (class in smac.intensifier)": [[52, "smac.intensifier.SuccessiveHalving"]], "calculate_budgets() (smac.intensifier.successivehalving method)": [[52, "smac.intensifier.SuccessiveHalving.calculate_budgets"]], "get_next_challenger() (smac.intensifier.intensifier method)": [[52, "smac.intensifier.Intensifier.get_next_challenger"]], "get_next_trial() (smac.intensifier.abstractintensifier method)": [[52, "smac.intensifier.AbstractIntensifier.get_next_trial"]], "get_next_trial() (smac.intensifier.abstractparallelintensifier method)": [[52, "smac.intensifier.AbstractParallelIntensifier.get_next_trial"]], "get_next_trial() (smac.intensifier.intensifier method)": [[52, "smac.intensifier.Intensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.abstractintensifier method)": [[52, "smac.intensifier.AbstractIntensifier.get_target_function_budgets"]], "get_target_function_budgets() (smac.intensifier.intensifier method)": [[52, "smac.intensifier.Intensifier.get_target_function_budgets"]], "get_target_function_budgets() (smac.intensifier.successivehalving method)": [[52, "smac.intensifier.SuccessiveHalving.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.abstractintensifier method)": [[52, "smac.intensifier.AbstractIntensifier.get_target_function_instances"]], "get_target_function_instances() (smac.intensifier.intensifier method)": [[52, "smac.intensifier.Intensifier.get_target_function_instances"]], "get_target_function_instances() (smac.intensifier.successivehalving method)": [[52, "smac.intensifier.SuccessiveHalving.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.abstractintensifier method)": [[52, "smac.intensifier.AbstractIntensifier.get_target_function_seeds"]], "get_target_function_seeds() (smac.intensifier.intensifier method)": [[52, "smac.intensifier.Intensifier.get_target_function_seeds"]], "get_target_function_seeds() (smac.intensifier.successivehalving method)": [[52, "smac.intensifier.SuccessiveHalving.get_target_function_seeds"]], "intensify_percentage (smac.intensifier.intensifier property)": [[52, "smac.intensifier.Intensifier.intensify_percentage"]], "iteration_done (smac.intensifier.abstractintensifier property)": [[52, "smac.intensifier.AbstractIntensifier.iteration_done"]], "meta (smac.intensifier.abstractintensifier property)": [[52, "smac.intensifier.AbstractIntensifier.meta"]], "meta (smac.intensifier.intensifier property)": [[52, "smac.intensifier.Intensifier.meta"]], "meta (smac.intensifier.successivehalving property)": [[52, "smac.intensifier.SuccessiveHalving.meta"]], "num_trials (smac.intensifier.abstractintensifier property)": [[52, "smac.intensifier.AbstractIntensifier.num_trials"]], "process_results() (smac.intensifier.abstractintensifier method)": [[52, "smac.intensifier.AbstractIntensifier.process_results"]], "process_results() (smac.intensifier.abstractparallelintensifier method)": [[52, "smac.intensifier.AbstractParallelIntensifier.process_results"]], "process_results() (smac.intensifier.intensifier method)": [[52, "smac.intensifier.Intensifier.process_results"]], "repeat_configs (smac.intensifier.abstractintensifier property)": [[52, "smac.intensifier.AbstractIntensifier.repeat_configs"]], "smac.intensifier": [[52, "module-smac.intensifier"]], "uses_budgets (smac.intensifier.abstractintensifier property)": [[52, "smac.intensifier.AbstractIntensifier.uses_budgets"]], "uses_budgets (smac.intensifier.intensifier property)": [[52, "smac.intensifier.Intensifier.uses_budgets"]], "uses_budgets (smac.intensifier.successivehalving property)": [[52, "smac.intensifier.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.abstractintensifier property)": [[52, "smac.intensifier.AbstractIntensifier.uses_instances"]], "uses_instances (smac.intensifier.intensifier property)": [[52, "smac.intensifier.Intensifier.uses_instances"]], "uses_instances (smac.intensifier.successivehalving property)": [[52, "smac.intensifier.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.abstractintensifier property)": [[52, "smac.intensifier.AbstractIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.abstractparallelintensifier property)": [[52, "smac.intensifier.AbstractParallelIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.intensifier property)": [[52, "smac.intensifier.Intensifier.uses_seeds"]], "abstractintensifier (class in smac.intensifier.abstract_intensifier)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier"]], "get_next_trial() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_seeds"]], "iteration_done (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.iteration_done"]], "meta (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.meta"]], "num_trials (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.num_trials"]], "process_results() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.process_results"]], "repeat_configs (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.repeat_configs"]], "smac.intensifier.abstract_intensifier": [[53, "module-smac.intensifier.abstract_intensifier"]], "uses_budgets (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_budgets"]], "uses_instances (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_instances"]], "uses_seeds (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[53, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_seeds"]], "abstractparallelintensifier (class in smac.intensifier.abstract_parallel_intensifier)": [[54, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier"]], "get_next_trial() (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier method)": [[54, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.get_next_trial"]], "process_results() (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier method)": [[54, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.process_results"]], "smac.intensifier.abstract_parallel_intensifier": [[54, "module-smac.intensifier.abstract_parallel_intensifier"]], "uses_seeds (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier property)": [[54, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.uses_seeds"]], "hyperband (class in smac.intensifier.hyperband)": [[55, "smac.intensifier.hyperband.Hyperband"]], "smac.intensifier.hyperband": [[55, "module-smac.intensifier.hyperband"]], "hyperbandworker (class in smac.intensifier.hyperband_worker)": [[56, "smac.intensifier.hyperband_worker.HyperbandWorker"]], "get_next_trial() (smac.intensifier.hyperband_worker.hyperbandworker method)": [[56, "smac.intensifier.hyperband_worker.HyperbandWorker.get_next_trial"]], "process_results() (smac.intensifier.hyperband_worker.hyperbandworker method)": [[56, "smac.intensifier.hyperband_worker.HyperbandWorker.process_results"]], "smac.intensifier.hyperband_worker": [[56, "module-smac.intensifier.hyperband_worker"]], "uses_budgets (smac.intensifier.hyperband_worker.hyperbandworker property)": [[56, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_budgets"]], "uses_instances (smac.intensifier.hyperband_worker.hyperbandworker property)": [[56, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_instances"]], "uses_seeds (smac.intensifier.hyperband_worker.hyperbandworker property)": [[56, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_seeds"]], "intensifier (class in smac.intensifier.intensifier)": [[57, "smac.intensifier.intensifier.Intensifier"]], "get_next_challenger() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.get_next_challenger"]], "get_next_trial() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.get_target_function_seeds"]], "intensify_percentage (smac.intensifier.intensifier.intensifier property)": [[57, "smac.intensifier.intensifier.Intensifier.intensify_percentage"]], "meta (smac.intensifier.intensifier.intensifier property)": [[57, "smac.intensifier.intensifier.Intensifier.meta"]], "process_results() (smac.intensifier.intensifier.intensifier method)": [[57, "smac.intensifier.intensifier.Intensifier.process_results"]], "smac.intensifier.intensifier": [[57, "module-smac.intensifier.intensifier"]], "uses_budgets (smac.intensifier.intensifier.intensifier property)": [[57, "smac.intensifier.intensifier.Intensifier.uses_budgets"]], "uses_instances (smac.intensifier.intensifier.intensifier property)": [[57, "smac.intensifier.intensifier.Intensifier.uses_instances"]], "uses_seeds (smac.intensifier.intensifier.intensifier property)": [[57, "smac.intensifier.intensifier.Intensifier.uses_seeds"]], "intensifierstage (class in smac.intensifier.stages)": [[58, "smac.intensifier.stages.IntensifierStage"]], "smac.intensifier.stages": [[58, "module-smac.intensifier.stages"]], "successivehalving (class in smac.intensifier.successive_halving)": [[59, "smac.intensifier.successive_halving.SuccessiveHalving"]], "calculate_budgets() (smac.intensifier.successive_halving.successivehalving method)": [[59, "smac.intensifier.successive_halving.SuccessiveHalving.calculate_budgets"]], "get_target_function_budgets() (smac.intensifier.successive_halving.successivehalving method)": [[59, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.successive_halving.successivehalving method)": [[59, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.successive_halving.successivehalving method)": [[59, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_seeds"]], "meta (smac.intensifier.successive_halving.successivehalving property)": [[59, "smac.intensifier.successive_halving.SuccessiveHalving.meta"]], "smac.intensifier.successive_halving": [[59, "module-smac.intensifier.successive_halving"]], "uses_budgets (smac.intensifier.successive_halving.successivehalving property)": [[59, "smac.intensifier.successive_halving.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving.successivehalving property)": [[59, "smac.intensifier.successive_halving.SuccessiveHalving.uses_instances"]], "successivehalvingworker (class in smac.intensifier.successive_halving_worker)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker"]], "get_next_trial() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_seeds"]], "process_results() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.process_results"]], "smac.intensifier.successive_halving_worker": [[60, "module-smac.intensifier.successive_halving_worker"]], "stage (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.stage"]], "uses_budgets (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_instances"]], "uses_seeds (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[60, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_seeds"]], "basesmbo (class in smac.main)": [[61, "smac.main.BaseSMBO"]], "smbo (class in smac.main)": [[61, "smac.main.SMBO"]], "ask() (smac.main.basesmbo method)": [[61, "smac.main.BaseSMBO.ask"]], "ask() (smac.main.smbo method)": [[61, "smac.main.SMBO.ask"]], "get_next_configurations() (smac.main.basesmbo method)": [[61, "smac.main.BaseSMBO.get_next_configurations"]], "get_next_configurations() (smac.main.smbo method)": [[61, "smac.main.SMBO.get_next_configurations"]], "incumbent (smac.main.basesmbo property)": [[61, "smac.main.BaseSMBO.incumbent"]], "optimize() (smac.main.basesmbo method)": [[61, "smac.main.BaseSMBO.optimize"]], "runhistory (smac.main.basesmbo property)": [[61, "smac.main.BaseSMBO.runhistory"]], "save() (smac.main.basesmbo method)": [[61, "smac.main.BaseSMBO.save"]], "smac.main": [[61, "module-smac.main"]], "stats (smac.main.basesmbo property)": [[61, "smac.main.BaseSMBO.stats"]], "tell() (smac.main.basesmbo method)": [[61, "smac.main.BaseSMBO.tell"]], "tell() (smac.main.smbo method)": [[61, "smac.main.SMBO.tell"]], "update_acquisition_function() (smac.main.basesmbo method)": [[61, "smac.main.BaseSMBO.update_acquisition_function"]], "update_model() (smac.main.basesmbo method)": [[61, "smac.main.BaseSMBO.update_model"]], "validate() (smac.main.basesmbo method)": [[61, "smac.main.BaseSMBO.validate"]], "basesmbo (class in smac.main.base_smbo)": [[62, "smac.main.base_smbo.BaseSMBO"]], "ask() (smac.main.base_smbo.basesmbo method)": [[62, "smac.main.base_smbo.BaseSMBO.ask"]], "get_next_configurations() (smac.main.base_smbo.basesmbo method)": [[62, "smac.main.base_smbo.BaseSMBO.get_next_configurations"]], "incumbent (smac.main.base_smbo.basesmbo property)": [[62, "smac.main.base_smbo.BaseSMBO.incumbent"]], "optimize() (smac.main.base_smbo.basesmbo method)": [[62, "smac.main.base_smbo.BaseSMBO.optimize"]], "runhistory (smac.main.base_smbo.basesmbo property)": [[62, "smac.main.base_smbo.BaseSMBO.runhistory"]], "save() (smac.main.base_smbo.basesmbo method)": [[62, "smac.main.base_smbo.BaseSMBO.save"]], "smac.main.base_smbo": [[62, "module-smac.main.base_smbo"]], "stats (smac.main.base_smbo.basesmbo property)": [[62, "smac.main.base_smbo.BaseSMBO.stats"]], "tell() (smac.main.base_smbo.basesmbo method)": [[62, "smac.main.base_smbo.BaseSMBO.tell"]], "update_acquisition_function() (smac.main.base_smbo.basesmbo method)": [[62, "smac.main.base_smbo.BaseSMBO.update_acquisition_function"]], "update_model() (smac.main.base_smbo.basesmbo method)": [[62, "smac.main.base_smbo.BaseSMBO.update_model"]], "validate() (smac.main.base_smbo.basesmbo method)": [[62, "smac.main.base_smbo.BaseSMBO.validate"]], "smac.main.boing": [[63, "module-smac.main.boing"]], "smbo (class in smac.main.smbo)": [[64, "smac.main.smbo.SMBO"]], "ask() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.ask"]], "get_next_configurations() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.get_next_configurations"]], "smac.main.smbo": [[64, "module-smac.main.smbo"]], "tell() (smac.main.smbo.smbo method)": [[64, "smac.main.smbo.SMBO.tell"]], "smac.main.turbo": [[65, "module-smac.main.turbo"]], "abstractmodel (class in smac.model)": [[66, "smac.model.AbstractModel"]], "multiobjectivemodel (class in smac.model)": [[66, "smac.model.MultiObjectiveModel"]], "randommodel (class in smac.model)": [[66, "smac.model.RandomModel"]], "meta (smac.model.abstractmodel property)": [[66, "smac.model.AbstractModel.meta"]], "models (smac.model.multiobjectivemodel property)": [[66, "smac.model.MultiObjectiveModel.models"]], "predict() (smac.model.abstractmodel method)": [[66, "smac.model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstractmodel method)": [[66, "smac.model.AbstractModel.predict_marginalized"]], "predict_marginalized() (smac.model.multiobjectivemodel method)": [[66, "smac.model.MultiObjectiveModel.predict_marginalized"]], "smac.model": [[66, "module-smac.model"]], "train() (smac.model.abstractmodel method)": [[66, "smac.model.AbstractModel.train"]], "abstractmodel (class in smac.model.abstract_model)": [[67, "smac.model.abstract_model.AbstractModel"]], "meta (smac.model.abstract_model.abstractmodel property)": [[67, "smac.model.abstract_model.AbstractModel.meta"]], "predict() (smac.model.abstract_model.abstractmodel method)": [[67, "smac.model.abstract_model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstract_model.abstractmodel method)": [[67, "smac.model.abstract_model.AbstractModel.predict_marginalized"]], "smac.model.abstract_model": [[67, "module-smac.model.abstract_model"]], "train() (smac.model.abstract_model.abstractmodel method)": [[67, "smac.model.abstract_model.AbstractModel.train"]], "abstractgaussianprocess (class in smac.model.gaussian_process)": [[68, "smac.model.gaussian_process.AbstractGaussianProcess"]], "gaussianprocess (class in smac.model.gaussian_process)": [[68, "smac.model.gaussian_process.GaussianProcess"]], "mcmcgaussianprocess (class in smac.model.gaussian_process)": [[68, "smac.model.gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.abstractgaussianprocess property)": [[68, "smac.model.gaussian_process.AbstractGaussianProcess.meta"]], "meta (smac.model.gaussian_process.gaussianprocess property)": [[68, "smac.model.gaussian_process.GaussianProcess.meta"]], "meta (smac.model.gaussian_process.mcmcgaussianprocess property)": [[68, "smac.model.gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmcgaussianprocess property)": [[68, "smac.model.gaussian_process.MCMCGaussianProcess.models"]], "sample_functions() (smac.model.gaussian_process.gaussianprocess method)": [[68, "smac.model.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process": [[68, "module-smac.model.gaussian_process"]], "abstractgaussianprocess (class in smac.model.gaussian_process.abstract_gaussian_process)": [[69, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess"]], "meta (smac.model.gaussian_process.abstract_gaussian_process.abstractgaussianprocess property)": [[69, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess.meta"]], "smac.model.gaussian_process.abstract_gaussian_process": [[69, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "gaussianprocess (class in smac.model.gaussian_process.gaussian_process)": [[70, "smac.model.gaussian_process.gaussian_process.GaussianProcess"]], "meta (smac.model.gaussian_process.gaussian_process.gaussianprocess property)": [[70, "smac.model.gaussian_process.gaussian_process.GaussianProcess.meta"]], "sample_functions() (smac.model.gaussian_process.gaussian_process.gaussianprocess method)": [[70, "smac.model.gaussian_process.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[70, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[71, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "abstractkernel (class in smac.model.gaussian_process.kernels)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels)": [[72, "smac.model.gaussian_process.kernels.ConstantKernel"]], "hammingkernel (class in smac.model.gaussian_process.kernels)": [[72, "smac.model.gaussian_process.kernels.HammingKernel"]], "maternkernel (class in smac.model.gaussian_process.kernels)": [[72, "smac.model.gaussian_process.kernels.MaternKernel"]], "productkernel (class in smac.model.gaussian_process.kernels)": [[72, "smac.model.gaussian_process.kernels.ProductKernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels)": [[72, "smac.model.gaussian_process.kernels.RBFKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels)": [[72, "smac.model.gaussian_process.kernels.SumKernel"]], "whitekernel (class in smac.model.gaussian_process.kernels)": [[72, "smac.model.gaussian_process.kernels.WhiteKernel"]], "__call__() (smac.model.gaussian_process.kernels.abstractkernel method)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.constantkernel method)": [[72, "smac.model.gaussian_process.kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.productkernel method)": [[72, "smac.model.gaussian_process.kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.sumkernel method)": [[72, "smac.model.gaussian_process.kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.abstractkernel method)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel.has_conditions"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hammingkernel property)": [[72, "smac.model.gaussian_process.kernels.HammingKernel.hyperparameter_length_scale"]], "hyperparameters (smac.model.gaussian_process.kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel.meta"]], "meta (smac.model.gaussian_process.kernels.hammingkernel property)": [[72, "smac.model.gaussian_process.kernels.HammingKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels": [[72, "module-smac.model.gaussian_process.kernels"]], "abstractkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[73, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel"]], "productkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[73, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[73, "smac.model.gaussian_process.kernels.base_kernels.SumKernel"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.constantkernel method)": [[73, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.productkernel method)": [[73, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.sumkernel method)": [[73, "smac.model.gaussian_process.kernels.base_kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.has_conditions"]], "hyperparameters (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[73, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels.base_kernels": [[73, "module-smac.model.gaussian_process.kernels.base_kernels"]], "hammingkernel (class in smac.model.gaussian_process.kernels.hamming_kernel)": [[74, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[74, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.hyperparameter_length_scale"]], "meta (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[74, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[74, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "maternkernel (class in smac.model.gaussian_process.kernels.matern_kernel)": [[75, "smac.model.gaussian_process.kernels.matern_kernel.MaternKernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[75, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels.rbf_kernel)": [[76, "smac.model.gaussian_process.kernels.rbf_kernel.RBFKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[76, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "whitekernel (class in smac.model.gaussian_process.kernels.white_kernel)": [[77, "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[77, "module-smac.model.gaussian_process.kernels.white_kernel"]], "mcmcgaussianprocess (class in smac.model.gaussian_process.mcmc_gaussian_process)": [[78, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[78, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[78, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.models"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[78, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "gammaprior (class in smac.model.gaussian_process.priors)": [[79, "smac.model.gaussian_process.priors.GammaPrior"]], "horseshoeprior (class in smac.model.gaussian_process.priors)": [[79, "smac.model.gaussian_process.priors.HorseshoePrior"]], "lognormalprior (class in smac.model.gaussian_process.priors)": [[79, "smac.model.gaussian_process.priors.LogNormalPrior"]], "softtophatprior (class in smac.model.gaussian_process.priors)": [[79, "smac.model.gaussian_process.priors.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors)": [[79, "smac.model.gaussian_process.priors.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.softtophatprior method)": [[79, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophatprior method)": [[79, "smac.model.gaussian_process.priors.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.softtophatprior method)": [[79, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.gammaprior property)": [[79, "smac.model.gaussian_process.priors.GammaPrior.meta"]], "meta (smac.model.gaussian_process.priors.horseshoeprior property)": [[79, "smac.model.gaussian_process.priors.HorseshoePrior.meta"]], "meta (smac.model.gaussian_process.priors.lognormalprior property)": [[79, "smac.model.gaussian_process.priors.LogNormalPrior.meta"]], "meta (smac.model.gaussian_process.priors.softtophatprior property)": [[79, "smac.model.gaussian_process.priors.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophatprior property)": [[79, "smac.model.gaussian_process.priors.TophatPrior.meta"]], "smac.model.gaussian_process.priors": [[79, "module-smac.model.gaussian_process.priors"]], "abstractprior (class in smac.model.gaussian_process.priors.abstract_prior)": [[80, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior"]], "get_gradient() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[80, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[80, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.abstract_prior.abstractprior property)": [[80, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.meta"]], "sample_from_prior() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[80, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.sample_from_prior"]], "smac.model.gaussian_process.priors.abstract_prior": [[80, "module-smac.model.gaussian_process.priors.abstract_prior"]], "gammaprior (class in smac.model.gaussian_process.priors.gamma_prior)": [[81, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior"]], "meta (smac.model.gaussian_process.priors.gamma_prior.gammaprior property)": [[81, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior.meta"]], "smac.model.gaussian_process.priors.gamma_prior": [[81, "module-smac.model.gaussian_process.priors.gamma_prior"]], "horseshoeprior (class in smac.model.gaussian_process.priors.horseshoe_prior)": [[82, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior"]], "meta (smac.model.gaussian_process.priors.horseshoe_prior.horseshoeprior property)": [[82, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior.meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[82, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "lognormalprior (class in smac.model.gaussian_process.priors.log_normal_prior)": [[83, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior"]], "meta (smac.model.gaussian_process.priors.log_normal_prior.lognormalprior property)": [[83, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior.meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[83, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "softtophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[84, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[84, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[84, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.tophatprior method)": [[84, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[84, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.tophat_prior.softtophatprior property)": [[84, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophat_prior.tophatprior property)": [[84, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[84, "module-smac.model.gaussian_process.priors.tophat_prior"]], "multiobjectivemodel (class in smac.model.multi_objective_model)": [[85, "smac.model.multi_objective_model.MultiObjectiveModel"]], "models (smac.model.multi_objective_model.multiobjectivemodel property)": [[85, "smac.model.multi_objective_model.MultiObjectiveModel.models"]], "predict_marginalized() (smac.model.multi_objective_model.multiobjectivemodel method)": [[85, "smac.model.multi_objective_model.MultiObjectiveModel.predict_marginalized"]], "smac.model.multi_objective_model": [[85, "module-smac.model.multi_objective_model"]], "abstractrandomforest (class in smac.model.random_forest)": [[86, "smac.model.random_forest.AbstractRandomForest"]], "randomforest (class in smac.model.random_forest)": [[86, "smac.model.random_forest.RandomForest"]], "meta (smac.model.random_forest.randomforest property)": [[86, "smac.model.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.randomforest method)": [[86, "smac.model.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest": [[86, "module-smac.model.random_forest"]], "abstractrandomforest (class in smac.model.random_forest.abstract_random_forest)": [[87, "smac.model.random_forest.abstract_random_forest.AbstractRandomForest"]], "smac.model.random_forest.abstract_random_forest": [[87, "module-smac.model.random_forest.abstract_random_forest"]], "randomforest (class in smac.model.random_forest.random_forest)": [[88, "smac.model.random_forest.random_forest.RandomForest"]], "meta (smac.model.random_forest.random_forest.randomforest property)": [[88, "smac.model.random_forest.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.random_forest.randomforest method)": [[88, "smac.model.random_forest.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest.random_forest": [[88, "module-smac.model.random_forest.random_forest"]], "randommodel (class in smac.model.random_model)": [[89, "smac.model.random_model.RandomModel"]], "smac.model.random_model": [[89, "module-smac.model.random_model"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective)": [[90, "smac.multi_objective.AbstractMultiObjectiveAlgorithm"]], "meanaggregationstrategy (class in smac.multi_objective)": [[90, "smac.multi_objective.MeanAggregationStrategy"]], "parego (class in smac.multi_objective)": [[90, "smac.multi_objective.ParEGO"]], "__call__() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[90, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.__call__"]], "__call__() (smac.multi_objective.meanaggregationstrategy method)": [[90, "smac.multi_objective.MeanAggregationStrategy.__call__"]], "__call__() (smac.multi_objective.parego method)": [[90, "smac.multi_objective.ParEGO.__call__"]], "meta (smac.multi_objective.abstractmultiobjectivealgorithm property)": [[90, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.meta"]], "meta (smac.multi_objective.parego property)": [[90, "smac.multi_objective.ParEGO.meta"]], "smac.multi_objective": [[90, "module-smac.multi_objective"]], "update_on_iteration_start() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[90, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "update_on_iteration_start() (smac.multi_objective.parego method)": [[90, "smac.multi_objective.ParEGO.update_on_iteration_start"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective.abstract_multi_objective_algorithm)": [[91, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm"]], "__call__() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[91, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.__call__"]], "meta (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm property)": [[91, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[91, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "update_on_iteration_start() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[91, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "meanaggregationstrategy (class in smac.multi_objective.aggregation_strategy)": [[92, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy"]], "__call__() (smac.multi_objective.aggregation_strategy.meanaggregationstrategy method)": [[92, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.__call__"]], "smac.multi_objective.aggregation_strategy": [[92, "module-smac.multi_objective.aggregation_strategy"]], "parego (class in smac.multi_objective.parego)": [[93, "smac.multi_objective.parego.ParEGO"]], "__call__() (smac.multi_objective.parego.parego method)": [[93, "smac.multi_objective.parego.ParEGO.__call__"]], "meta (smac.multi_objective.parego.parego property)": [[93, "smac.multi_objective.parego.ParEGO.meta"]], "smac.multi_objective.parego": [[93, "module-smac.multi_objective.parego"]], "update_on_iteration_start() (smac.multi_objective.parego.parego method)": [[93, "smac.multi_objective.parego.ParEGO.update_on_iteration_start"]], "abstractrandomdesign (class in smac.random_design)": [[94, "smac.random_design.AbstractRandomDesign"]], "cosineannealingrandomdesign (class in smac.random_design)": [[94, "smac.random_design.CosineAnnealingRandomDesign"]], "dynamicmodulusrandomdesign (class in smac.random_design)": [[94, "smac.random_design.DynamicModulusRandomDesign"]], "dynamicprobabilityrandomdesign (class in smac.random_design)": [[94, "smac.random_design.DynamicProbabilityRandomDesign"]], "modulusrandomdesign (class in smac.random_design)": [[94, "smac.random_design.ModulusRandomDesign"]], "probabilityrandomdesign (class in smac.random_design)": [[94, "smac.random_design.ProbabilityRandomDesign"]], "check() (smac.random_design.abstractrandomdesign method)": [[94, "smac.random_design.AbstractRandomDesign.check"]], "check() (smac.random_design.cosineannealingrandomdesign method)": [[94, "smac.random_design.CosineAnnealingRandomDesign.check"]], "check() (smac.random_design.dynamicmodulusrandomdesign method)": [[94, "smac.random_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.dynamicprobabilityrandomdesign method)": [[94, "smac.random_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.modulusrandomdesign method)": [[94, "smac.random_design.ModulusRandomDesign.check"]], "check() (smac.random_design.probabilityrandomdesign method)": [[94, "smac.random_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.abstractrandomdesign property)": [[94, "smac.random_design.AbstractRandomDesign.meta"]], "meta (smac.random_design.cosineannealingrandomdesign property)": [[94, "smac.random_design.CosineAnnealingRandomDesign.meta"]], "meta (smac.random_design.dynamicmodulusrandomdesign property)": [[94, "smac.random_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.dynamicprobabilityrandomdesign property)": [[94, "smac.random_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.modulusrandomdesign property)": [[94, "smac.random_design.ModulusRandomDesign.meta"]], "meta (smac.random_design.probabilityrandomdesign property)": [[94, "smac.random_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.abstractrandomdesign method)": [[94, "smac.random_design.AbstractRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.cosineannealingrandomdesign method)": [[94, "smac.random_design.CosineAnnealingRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicmodulusrandomdesign method)": [[94, "smac.random_design.DynamicModulusRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicprobabilityrandomdesign method)": [[94, "smac.random_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design": [[94, "module-smac.random_design"]], "abstractrandomdesign (class in smac.random_design.abstract_random_design)": [[95, "smac.random_design.abstract_random_design.AbstractRandomDesign"]], "check() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[95, "smac.random_design.abstract_random_design.AbstractRandomDesign.check"]], "meta (smac.random_design.abstract_random_design.abstractrandomdesign property)": [[95, "smac.random_design.abstract_random_design.AbstractRandomDesign.meta"]], "next_iteration() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[95, "smac.random_design.abstract_random_design.AbstractRandomDesign.next_iteration"]], "smac.random_design.abstract_random_design": [[95, "module-smac.random_design.abstract_random_design"]], "cosineannealingrandomdesign (class in smac.random_design.annealing_design)": [[96, "smac.random_design.annealing_design.CosineAnnealingRandomDesign"]], "check() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[96, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.check"]], "meta (smac.random_design.annealing_design.cosineannealingrandomdesign property)": [[96, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.meta"]], "next_iteration() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[96, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.next_iteration"]], "smac.random_design.annealing_design": [[96, "module-smac.random_design.annealing_design"]], "dynamicmodulusrandomdesign (class in smac.random_design.modulus_design)": [[97, "smac.random_design.modulus_design.DynamicModulusRandomDesign"]], "modulusrandomdesign (class in smac.random_design.modulus_design)": [[97, "smac.random_design.modulus_design.ModulusRandomDesign"]], "check() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[97, "smac.random_design.modulus_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.modulus_design.modulusrandomdesign method)": [[97, "smac.random_design.modulus_design.ModulusRandomDesign.check"]], "meta (smac.random_design.modulus_design.dynamicmodulusrandomdesign property)": [[97, "smac.random_design.modulus_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.modulus_design.modulusrandomdesign property)": [[97, "smac.random_design.modulus_design.ModulusRandomDesign.meta"]], "next_iteration() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[97, "smac.random_design.modulus_design.DynamicModulusRandomDesign.next_iteration"]], "smac.random_design.modulus_design": [[97, "module-smac.random_design.modulus_design"]], "dynamicprobabilityrandomdesign (class in smac.random_design.probability_design)": [[98, "smac.random_design.probability_design.DynamicProbabilityRandomDesign"]], "probabilityrandomdesign (class in smac.random_design.probability_design)": [[98, "smac.random_design.probability_design.ProbabilityRandomDesign"]], "check() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[98, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.probability_design.probabilityrandomdesign method)": [[98, "smac.random_design.probability_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.probability_design.dynamicprobabilityrandomdesign property)": [[98, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.probability_design.probabilityrandomdesign property)": [[98, "smac.random_design.probability_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[98, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design.probability_design": [[98, "module-smac.random_design.probability_design"]], "dataorigin (class in smac.runhistory)": [[99, "smac.runhistory.DataOrigin"]], "instanceseedbudgetkey (class in smac.runhistory)": [[99, "smac.runhistory.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory)": [[99, "smac.runhistory.InstanceSeedKey"]], "runhistory (class in smac.runhistory)": [[99, "smac.runhistory.RunHistory"]], "statustype (class in smac.runhistory)": [[99, "smac.runhistory.StatusType"]], "trialinfo (class in smac.runhistory)": [[99, "smac.runhistory.TrialInfo"]], "trialinfointent (class in smac.runhistory)": [[99, "smac.runhistory.TrialInfoIntent"]], "trialkey (class in smac.runhistory)": [[99, "smac.runhistory.TrialKey"]], "trialvalue (class in smac.runhistory)": [[99, "smac.runhistory.TrialValue"]], "__contains__() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.add"]], "average_cost() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory property)": [[99, "smac.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.empty"]], "get_config() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.get_config"]], "get_configs() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.get_cost"]], "get_incumbent() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.get_incumbent"]], "get_min_cost() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.get_min_cost"]], "get_trials() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory property)": [[99, "smac.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.incremental_update_cost"]], "load_json() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.load_json"]], "min_cost() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.min_cost"]], "objective_bounds (smac.runhistory.runhistory property)": [[99, "smac.runhistory.RunHistory.objective_bounds"]], "objective_weights (smac.runhistory.runhistory property)": [[99, "smac.runhistory.RunHistory.objective_weights"]], "reset() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.reset"]], "save_json() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.save_json"]], "smac.runhistory": [[99, "module-smac.runhistory"]], "sum_cost() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory method)": [[99, "smac.runhistory.RunHistory.update_from_json"]], "instanceseedbudgetkey (class in smac.runhistory.dataclasses)": [[100, "smac.runhistory.dataclasses.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory.dataclasses)": [[100, "smac.runhistory.dataclasses.InstanceSeedKey"]], "trajectoryitem (class in smac.runhistory.dataclasses)": [[100, "smac.runhistory.dataclasses.TrajectoryItem"]], "trialinfo (class in smac.runhistory.dataclasses)": [[100, "smac.runhistory.dataclasses.TrialInfo"]], "trialkey (class in smac.runhistory.dataclasses)": [[100, "smac.runhistory.dataclasses.TrialKey"]], "trialvalue (class in smac.runhistory.dataclasses)": [[100, "smac.runhistory.dataclasses.TrialValue"]], "smac.runhistory.dataclasses": [[100, "module-smac.runhistory.dataclasses"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.AbstractRunHistoryEncoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistoryEIPSEncoder"]], "runhistoryencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistoryEncoder"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder"]], "runhistorylogencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistoryLogEncoder"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistoryLogScaledEncoder"]], "runhistoryrawencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistoryRawEncoder"]], "runhistoryrawscaledencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistoryRawScaledEncoder"]], "runhistoryscaledencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistoryScaledEncoder"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder)": [[101, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder"]], "get_configurations() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[101, "smac.runhistory.encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[101, "smac.runhistory.encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "smac.runhistory.encoder": [[101, "module-smac.runhistory.encoder"]], "transform() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform"]], "transform_raw_values() (smac.runhistory.encoder.runhistoryrawencoder method)": [[101, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_raw_values"]], "transform_raw_values() (smac.runhistory.encoder.runhistoryrawscaledencoder method)": [[101, "smac.runhistory.encoder.RunHistoryRawScaledEncoder.transform_raw_values"]], "transform_response_values() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryeipsencoder method)": [[101, "smac.runhistory.encoder.RunHistoryEIPSEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryencoder method)": [[101, "smac.runhistory.encoder.RunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryinversescaledencoder method)": [[101, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogencoder method)": [[101, "smac.runhistory.encoder.RunHistoryLogEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogscaledencoder method)": [[101, "smac.runhistory.encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryrawencoder method)": [[101, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryscaledencoder method)": [[101, "smac.runhistory.encoder.RunHistoryScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorysqrtscaledencoder method)": [[101, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "transform_with_raw() (smac.runhistory.encoder.runhistoryrawencoder method)": [[101, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_with_raw"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder.abstract_encoder)": [[102, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder"]], "get_configurations() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[102, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[102, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[102, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "smac.runhistory.encoder.abstract_encoder": [[102, "module-smac.runhistory.encoder.abstract_encoder"]], "transform() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[102, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[102, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform_response_values"]], "runhistoryrawencoder (class in smac.runhistory.encoder.boing_encoder)": [[103, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder"]], "runhistoryrawscaledencoder (class in smac.runhistory.encoder.boing_encoder)": [[103, "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder": [[103, "module-smac.runhistory.encoder.boing_encoder"]], "transform_raw_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[103, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_raw_values"]], "transform_raw_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawscaledencoder method)": [[103, "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder.transform_raw_values"]], "transform_response_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[103, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_response_values"]], "transform_with_raw() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[103, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_with_raw"]], "runhistoryeipsencoder (class in smac.runhistory.encoder.eips_encoder)": [[104, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder": [[104, "module-smac.runhistory.encoder.eips_encoder"]], "transform_response_values() (smac.runhistory.encoder.eips_encoder.runhistoryeipsencoder method)": [[104, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder.transform_response_values"]], "runhistoryencoder (class in smac.runhistory.encoder.encoder)": [[105, "smac.runhistory.encoder.encoder.RunHistoryEncoder"]], "smac.runhistory.encoder.encoder": [[105, "module-smac.runhistory.encoder.encoder"]], "transform_response_values() (smac.runhistory.encoder.encoder.runhistoryencoder method)": [[105, "smac.runhistory.encoder.encoder.RunHistoryEncoder.transform_response_values"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder.inverse_scaled_encoder)": [[106, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[106, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.inverse_scaled_encoder.runhistoryinversescaledencoder method)": [[106, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "runhistorylogencoder (class in smac.runhistory.encoder.log_encoder)": [[107, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder": [[107, "module-smac.runhistory.encoder.log_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_encoder.runhistorylogencoder method)": [[107, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder.transform_response_values"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder.log_scaled_encoder)": [[108, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[108, "module-smac.runhistory.encoder.log_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_scaled_encoder.runhistorylogscaledencoder method)": [[108, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "runhistoryscaledencoder (class in smac.runhistory.encoder.scaled_encoder)": [[109, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder": [[109, "module-smac.runhistory.encoder.scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.scaled_encoder.runhistoryscaledencoder method)": [[109, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder.transform_response_values"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder.sqrt_scaled_encoder)": [[110, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[110, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.sqrt_scaled_encoder.runhistorysqrtscaledencoder method)": [[110, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "dataorigin (class in smac.runhistory.enumerations)": [[111, "smac.runhistory.enumerations.DataOrigin"]], "statustype (class in smac.runhistory.enumerations)": [[111, "smac.runhistory.enumerations.StatusType"]], "trialinfointent (class in smac.runhistory.enumerations)": [[111, "smac.runhistory.enumerations.TrialInfoIntent"]], "smac.runhistory.enumerations": [[111, "module-smac.runhistory.enumerations"]], "runhistory (class in smac.runhistory.runhistory)": [[112, "smac.runhistory.runhistory.RunHistory"]], "__contains__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.add"]], "average_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.empty"]], "get_config() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_config"]], "get_configs() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_cost"]], "get_incumbent() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_incumbent"]], "get_min_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_min_cost"]], "get_trials() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.incremental_update_cost"]], "load_json() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.load_json"]], "min_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.min_cost"]], "objective_bounds (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.objective_bounds"]], "objective_weights (smac.runhistory.runhistory.runhistory property)": [[112, "smac.runhistory.runhistory.RunHistory.objective_weights"]], "reset() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.reset"]], "save_json() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.save_json"]], "smac.runhistory.runhistory": [[112, "module-smac.runhistory.runhistory"]], "sum_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory.runhistory method)": [[112, "smac.runhistory.runhistory.RunHistory.update_from_json"]], "abstractrunner (class in smac.runner)": [[113, "smac.runner.AbstractRunner"]], "daskparallelrunner (class in smac.runner)": [[113, "smac.runner.DaskParallelRunner"]], "firstruncrashedexception": [[113, "smac.runner.FirstRunCrashedException"], [116, "smac.runner.exceptions.FirstRunCrashedException"]], "targetalgorithmabortexception": [[113, "smac.runner.TargetAlgorithmAbortException"], [116, "smac.runner.exceptions.TargetAlgorithmAbortException"]], "targetfunctionrunner (class in smac.runner)": [[113, "smac.runner.TargetFunctionRunner"]], "__call__() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.__call__"]], "__del__() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.__del__"]], "close() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.count_available_workers"]], "count_available_workers() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.count_available_workers"]], "count_available_workers() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.count_available_workers"]], "is_running() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.is_running"]], "is_running() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.is_running"]], "is_running() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.is_running"]], "iter_results() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.iter_results"]], "iter_results() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.iter_results"]], "iter_results() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.iter_results"]], "meta (smac.runner.abstractrunner property)": [[113, "smac.runner.AbstractRunner.meta"]], "run() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.run"]], "run() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.run"]], "run() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.run"]], "run_wrapper() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.run_wrapper"]], "smac.runner": [[113, "module-smac.runner"]], "submit_trial() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.submit_trial"]], "submit_trial() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.submit_trial"]], "submit_trial() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.submit_trial"]], "wait() (smac.runner.abstractrunner method)": [[113, "smac.runner.AbstractRunner.wait"]], "wait() (smac.runner.daskparallelrunner method)": [[113, "smac.runner.DaskParallelRunner.wait"]], "wait() (smac.runner.targetfunctionrunner method)": [[113, "smac.runner.TargetFunctionRunner.wait"]], "abstractrunner (class in smac.runner.abstract_runner)": [[114, "smac.runner.abstract_runner.AbstractRunner"]], "count_available_workers() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.count_available_workers"]], "is_running() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.is_running"]], "iter_results() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.iter_results"]], "meta (smac.runner.abstract_runner.abstractrunner property)": [[114, "smac.runner.abstract_runner.AbstractRunner.meta"]], "run() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.run"]], "run_wrapper() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.run_wrapper"]], "smac.runner.abstract_runner": [[114, "module-smac.runner.abstract_runner"]], "submit_trial() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.submit_trial"]], "wait() (smac.runner.abstract_runner.abstractrunner method)": [[114, "smac.runner.abstract_runner.AbstractRunner.wait"]], "daskparallelrunner (class in smac.runner.dask_runner)": [[115, "smac.runner.dask_runner.DaskParallelRunner"]], "__del__() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.__del__"]], "close() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.iter_results"]], "run() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.run"]], "smac.runner.dask_runner": [[115, "module-smac.runner.dask_runner"]], "submit_trial() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.wait"]], "smac.runner.exceptions": [[116, "module-smac.runner.exceptions"]], "targetfunctionrunner (class in smac.runner.target_function_runner)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner"]], "__call__() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.__call__"]], "count_available_workers() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.count_available_workers"]], "is_running() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.is_running"]], "iter_results() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.iter_results"]], "run() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.run"]], "smac.runner.target_function_runner": [[117, "module-smac.runner.target_function_runner"]], "submit_trial() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.submit_trial"]], "wait() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.wait"]], "scenario (class in smac.scenario)": [[118, "smac.scenario.Scenario"]], "__post_init__() (smac.scenario.scenario method)": [[118, "smac.scenario.Scenario.__post_init__"]], "count_instance_features() (smac.scenario.scenario method)": [[118, "smac.scenario.Scenario.count_instance_features"]], "count_objectives() (smac.scenario.scenario method)": [[118, "smac.scenario.Scenario.count_objectives"]], "load() (smac.scenario.scenario static method)": [[118, "smac.scenario.Scenario.load"]], "make_serializable() (smac.scenario.scenario static method)": [[118, "smac.scenario.Scenario.make_serializable"]], "meta (smac.scenario.scenario property)": [[118, "smac.scenario.Scenario.meta"]], "save() (smac.scenario.scenario method)": [[118, "smac.scenario.Scenario.save"]], "smac.scenario": [[118, "module-smac.scenario"]], "smac.utils": [[119, "module-smac.utils"]], "convert_configurations_to_array() (in module smac.utils.configspace)": [[120, "smac.utils.configspace.convert_configurations_to_array"]], "get_conditional_hyperparameters() (in module smac.utils.configspace)": [[120, "smac.utils.configspace.get_conditional_hyperparameters"]], "get_types() (in module smac.utils.configspace)": [[120, "smac.utils.configspace.get_types"]], "smac.utils.configspace": [[120, "module-smac.utils.configspace"]], "recursively_compare_dicts() (in module smac.utils.data_structures)": [[121, "smac.utils.data_structures.recursively_compare_dicts"]], "smac.utils.data_structures": [[121, "module-smac.utils.data_structures"]], "format_array() (in module smac.utils.logging)": [[122, "smac.utils.logging.format_array"]], "get_logger() (in module smac.utils.logging)": [[122, "smac.utils.logging.get_logger"]], "setup_logging() (in module smac.utils.logging)": [[122, "smac.utils.logging.setup_logging"]], "smac.utils.logging": [[122, "module-smac.utils.logging"]], "normalize_costs() (in module smac.utils.multi_objective)": [[123, "smac.utils.multi_objective.normalize_costs"]], "smac.utils.multi_objective": [[123, "module-smac.utils.multi_objective"]], "smac.utils.subspaces": [[124, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[125, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[126, "module-smac.utils.subspaces.turbo_subspace"]]}})