Search.setIndex({"docnames": ["1_installation", "2_package_overview", "3_getting_started", "4_minimal_example", "5_api", "6_references", "7_glossary", "8_faq", "9_license", "advanced_usage/2_components", "advanced_usage/3_multi_objective", "advanced_usage/4_instances", "advanced_usage/5_stopping_criteria", "advanced_usage/6_ask_and_tell", "advanced_usage/7_continue", "advanced_usage/8_reproducability", "advanced_usage/9_parallelism", "advanced_usage/index", "api/smac.acquisition", "api/smac.acquisition.functions", "api/smac.acquisition.functions.abstract_acquisition_function", "api/smac.acquisition.functions.confidence_bound", "api/smac.acquisition.functions.expected_improvement", "api/smac.acquisition.functions.integrated_acquisition_function", "api/smac.acquisition.functions.prior_acqusition_function", "api/smac.acquisition.functions.probability_improvement", "api/smac.acquisition.functions.thompson", "api/smac.acquisition.maximizers", "api/smac.acquisition.maximizers.abstract_acqusition_maximizer", "api/smac.acquisition.maximizers.differential_evolution", "api/smac.acquisition.maximizers.helpers", "api/smac.acquisition.maximizers.local_and_random_search", "api/smac.acquisition.maximizers.local_search", "api/smac.acquisition.maximizers.random_search", "api/smac.callback", "api/smac.facade", "api/smac.facade.abstract_facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.boing_facade", "api/smac.facade.hyperband_facade", "api/smac.facade.hyperparameter_optimization_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.facade.random_facade", "api/smac.initial_design", "api/smac.initial_design.abstract_initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensifier", "api/smac.intensifier.abstract_intensifier", "api/smac.intensifier.abstract_parallel_intensifier", "api/smac.intensifier.hyperband", "api/smac.intensifier.hyperband_worker", "api/smac.intensifier.intensifier", "api/smac.intensifier.stages", "api/smac.intensifier.successive_halving", "api/smac.intensifier.successive_halving_worker", "api/smac.main", "api/smac.main.base_smbo", "api/smac.main.boing", "api/smac.main.smbo", "api/smac.main.turbo", "api/smac.model", "api/smac.model.abstract_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.abstract_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch_gaussian_process", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.abstract_prior", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.abstract_random_forest", "api/smac.model.random_forest.random_forest", "api/smac.model.random_model", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.random_design", "api/smac.random_design.abstract_random_design", "api/smac.random_design.annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inverse_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.abstract_runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.target_function_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.configspace", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.multi_objective", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "examples/1_basics/1_synthetic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_ask_and_tell", "examples/1_basics/4_callback", "examples/1_basics/5_priors", "examples/1_basics/6_full_customization", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/2_parego", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/5_commandline/index", "examples/index", "index"], "filenames": ["1_installation.rst", "2_package_overview.rst", "3_getting_started.rst", "4_minimal_example.rst", "5_api.rst", "6_references.rst", "7_glossary.rst", "8_faq.rst", "9_license.rst", "advanced_usage/2_components.rst", "advanced_usage/3_multi_objective.rst", "advanced_usage/4_instances.rst", "advanced_usage/5_stopping_criteria.rst", "advanced_usage/6_ask_and_tell.rst", "advanced_usage/7_continue.rst", "advanced_usage/8_reproducability.rst", "advanced_usage/9_parallelism.rst", "advanced_usage/index.rst", "api/smac.acquisition.rst", "api/smac.acquisition.functions.rst", "api/smac.acquisition.functions.abstract_acquisition_function.rst", "api/smac.acquisition.functions.confidence_bound.rst", "api/smac.acquisition.functions.expected_improvement.rst", "api/smac.acquisition.functions.integrated_acquisition_function.rst", "api/smac.acquisition.functions.prior_acqusition_function.rst", "api/smac.acquisition.functions.probability_improvement.rst", "api/smac.acquisition.functions.thompson.rst", "api/smac.acquisition.maximizers.rst", "api/smac.acquisition.maximizers.abstract_acqusition_maximizer.rst", "api/smac.acquisition.maximizers.differential_evolution.rst", "api/smac.acquisition.maximizers.helpers.rst", "api/smac.acquisition.maximizers.local_and_random_search.rst", "api/smac.acquisition.maximizers.local_search.rst", "api/smac.acquisition.maximizers.random_search.rst", "api/smac.callback.rst", "api/smac.facade.rst", "api/smac.facade.abstract_facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.boing_facade.rst", "api/smac.facade.hyperband_facade.rst", "api/smac.facade.hyperparameter_optimization_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.facade.random_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.abstract_initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensifier.rst", "api/smac.intensifier.abstract_intensifier.rst", "api/smac.intensifier.abstract_parallel_intensifier.rst", "api/smac.intensifier.hyperband.rst", "api/smac.intensifier.hyperband_worker.rst", "api/smac.intensifier.intensifier.rst", "api/smac.intensifier.stages.rst", "api/smac.intensifier.successive_halving.rst", "api/smac.intensifier.successive_halving_worker.rst", "api/smac.main.rst", "api/smac.main.base_smbo.rst", "api/smac.main.boing.rst", "api/smac.main.smbo.rst", "api/smac.main.turbo.rst", "api/smac.model.rst", "api/smac.model.abstract_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.abstract_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch_gaussian_process.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.abstract_prior.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.abstract_random_forest.rst", "api/smac.model.random_forest.random_forest.rst", "api/smac.model.random_model.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.random_design.rst", "api/smac.random_design.abstract_random_design.rst", "api/smac.random_design.annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inverse_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.abstract_runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.target_function_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.configspace.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.multi_objective.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "examples/1_basics/1_synthetic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_ask_and_tell.rst", "examples/1_basics/4_callback.rst", "examples/1_basics/5_priors.rst", "examples/1_basics/6_full_customization.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/2_parego.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/5_commandline/index.rst", "examples/index.rst", "index.rst"], "titles": ["Installation", "Package Overview", "Getting Started", "Minimal Example", "API References", "References", "Glossary", "F.A.Q.", "License", "Components", "Multi-Objective Optimization", "Instances and Features", "Stopping Criteria", "Ask-and-Tell Interface", "Continue a Run", "Reproducability", "Parallelism", "Advanced Usage", "smac.acquisition", "smac.acquisition.functions", "smac.acquisition.functions.abstract_acquisition_function", "smac.acquisition.functions.confidence_bound", "smac.acquisition.functions.expected_improvement", "smac.acquisition.functions.integrated_acquisition_function", "smac.acquisition.functions.prior_acqusition_function", "smac.acquisition.functions.probability_improvement", "smac.acquisition.functions.thompson", "smac.acquisition.maximizers", "smac.acquisition.maximizers.abstract_acqusition_maximizer", "smac.acquisition.maximizers.differential_evolution", "smac.acquisition.maximizers.helpers", "smac.acquisition.maximizers.local_and_random_search", "smac.acquisition.maximizers.local_search", "smac.acquisition.maximizers.random_search", "smac.callback", "smac.facade", "smac.facade.abstract_facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.boing_facade", "smac.facade.hyperband_facade", "smac.facade.hyperparameter_optimization_facade", "smac.facade.multi_fidelity_facade", "smac.facade.random_facade", "smac.initial_design", "smac.initial_design.abstract_initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensifier", "smac.intensifier.abstract_intensifier", "smac.intensifier.abstract_parallel_intensifier", "smac.intensifier.hyperband", "smac.intensifier.hyperband_worker", "smac.intensifier.intensifier", "smac.intensifier.stages", "smac.intensifier.successive_halving", "smac.intensifier.successive_halving_worker", "smac.main", "smac.main.base_smbo", "smac.main.boing", "smac.main.smbo", "smac.main.turbo", "smac.model", "smac.model.abstract_model", "smac.model.gaussian_process", "smac.model.gaussian_process.abstract_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch_gaussian_process", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.abstract_prior", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.abstract_random_forest", "smac.model.random_forest.random_forest", "smac.model.random_model", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.random_design", "smac.random_design.abstract_random_design", "smac.random_design.annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inverse_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.runhistory", "smac.runner", "smac.runner.abstract_runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.target_function_runner", "smac.scenario", "smac.utils", "smac.utils.configspace", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.multi_objective", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "Synthetic Function", "Support Vector Machine with Cross-Validation", "Ask-and-Tell Interface", "Callback", "User Priors over the Optimum", "Full Customization", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function", "ParEGO", "Multi-Objective", "Computation times", "Commandline", "Examples", "Home"], "terms": {"smac": [0, 1, 2, 3, 6, 7, 9, 10, 13, 14, 16, 17, 126, 127, 128, 130, 134, 135, 138, 139, 143, 144], "i": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 24, 27, 28, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 81, 84, 85, 87, 93, 94, 95, 96, 97, 98, 100, 102, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 126, 127, 128, 130, 134, 135, 138, 139, 144], "written": [0, 6, 144], "python3": [0, 16, 144], "therefor": [0, 2, 6, 35, 43, 71, 72, 117, 134, 139], "an": [0, 1, 2, 6, 7, 10, 16, 19, 20, 27, 28, 30, 34, 35, 36, 37, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 59, 67, 77, 98, 111, 112, 113, 114, 115, 116, 117, 121, 126, 127, 130, 134, 135, 139, 144], "environ": [0, 2, 3, 117, 126, 130, 134, 139], "python": [0, 1, 7, 30, 67, 69, 77, 79, 112, 116, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143, 144], "3": [0, 2, 6, 8, 10, 11, 35, 37, 38, 40, 41, 42, 43, 51, 54, 56, 58, 85, 87, 93, 96, 100, 101, 102, 103, 104, 106, 107, 108, 112, 114, 126, 127, 128, 130, 134, 135, 138, 139, 144], "8": [0, 2, 51, 56, 85, 87, 127, 130, 134, 139, 144], "furthermor": 0, "random": [0, 1, 2, 6, 16, 19, 24, 27, 28, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 49, 51, 56, 60, 61, 65, 66, 85, 86, 87, 88, 93, 94, 95, 96, 97, 117, 127, 130, 134, 139, 144], "forest": [0, 1, 2, 6, 19, 24, 35, 37, 41, 65, 66, 85, 86, 87, 127, 130, 144], "us": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 15, 16, 19, 20, 24, 26, 27, 28, 30, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 81, 83, 84, 85, 87, 93, 95, 96, 98, 100, 101, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 119, 120, 121, 126, 127, 128, 130, 135, 136, 137, 138, 139, 143, 144], "swig": 0, "build": [0, 98, 110, 127, 130, 134, 135], "depend": [0, 1, 2, 7, 13, 15, 35, 36, 38, 60, 61, 63, 65, 66, 89, 90, 112, 115, 117, 127], "either": [0, 2, 7, 35, 36, 67, 77, 98, 111, 112, 116], "your": [0, 1, 6, 7, 10, 11, 117, 134, 135], "system": [0, 134, 135], "directli": [0, 112, 116], "The": [0, 1, 2, 3, 7, 10, 11, 13, 15, 16, 19, 20, 23, 27, 28, 31, 35, 36, 37, 38, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 80, 83, 84, 85, 87, 93, 96, 98, 100, 101, 102, 111, 112, 113, 114, 116, 117, 119, 126, 128, 134, 135, 138, 139, 144], "command": [0, 6, 16], "linux": 0, "machin": [0, 3, 19, 23, 132, 133, 143, 144], "follow": [0, 1, 2, 3, 7, 9, 10, 11, 16, 35, 42, 43, 51, 56, 58, 85, 87, 112, 113, 114], "apt": 0, "get": [0, 9, 27, 29, 33, 51, 53, 71, 72, 112, 114, 121, 126, 127, 128, 130, 134, 135, 139], "test": [0, 65, 66, 67, 69, 98, 111, 144], "mac": [0, 7], "9": [0, 16, 51, 56, 135, 144], "10": [0, 19, 24, 27, 31, 32, 35, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 51, 56, 67, 69, 85, 87, 126, 127, 128, 130, 134, 138, 139, 144], "we": [0, 2, 7, 9, 10, 16, 19, 26, 27, 28, 35, 43, 51, 53, 56, 67, 77, 79, 112, 113, 126, 127, 128, 130, 134, 135, 139, 143, 144], "recommend": [0, 7, 16], "creat": [0, 7, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 44, 45, 51, 52, 53, 54, 56, 58, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 112, 113, 114, 127, 130, 134, 135, 139], "activ": [0, 7, 16, 51, 54, 58, 71, 72, 112, 114, 130, 134, 139], "n": [0, 19, 20, 26, 51, 56, 60, 61, 63, 67, 69, 77, 79, 112, 114], "If": [0, 2, 7, 8, 14, 16, 19, 24, 27, 28, 35, 36, 41, 43, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 67, 71, 72, 77, 84, 85, 87, 93, 96, 98, 100, 101, 111, 112, 114, 117, 121, 122, 127, 135, 144], "you": [0, 1, 2, 7, 8, 9, 10, 11, 14, 16, 35, 41, 43, 67, 77, 112, 114, 117, 127, 130, 144], "haven": 0, "t": [0, 1, 7, 16, 19, 21, 22, 25, 26, 71, 72], "yet": [0, 7, 13, 35, 42], "can": [0, 1, 2, 6, 7, 8, 9, 10, 11, 13, 16, 19, 26, 27, 28, 32, 35, 36, 42, 51, 52, 53, 54, 56, 58, 60, 61, 67, 77, 98, 100, 102, 110, 111, 112, 113, 114, 116, 117, 121, 126, 127, 128, 130, 134, 139, 144], "insid": [0, 9], "gxx_linux": 0, "64": [0, 27, 32], "gcc_linux": 0, "now": [0, 10, 35, 42, 126, 127, 128, 135], "via": [0, 10, 16, 27, 29, 33, 51, 52, 112, 113, 114], "pypi": 0, "pip": 0, "Or": 0, "altern": [0, 10, 11, 127, 135], "clone": 0, "from": [0, 1, 2, 3, 6, 7, 9, 14, 16, 27, 29, 31, 35, 36, 42, 43, 44, 45, 51, 53, 54, 55, 56, 58, 59, 60, 61, 63, 67, 69, 71, 72, 79, 98, 99, 111, 112, 113, 114, 117, 126, 127, 128, 130, 134, 135, 138, 139], "github": [0, 7, 44, 50, 144], "git": 0, "http": [0, 5, 8, 16, 19, 21, 23, 30, 44, 50, 51, 58, 89, 92, 144], "com": [0, 30, 144], "automl": [0, 7, 126, 127, 128, 130, 134, 135, 138, 139, 144], "smac3": [0, 7, 16, 144], "cd": 0, "e": [0, 1, 10, 16, 19, 22, 27, 31, 35, 36, 51, 54, 58, 60, 61, 78, 80, 112, 113, 135], "dev": 0, "channel": 0, "achiev": [0, 2], "ad": [0, 34, 71, 72, 98, 111, 119, 134], "config": [0, 2, 3, 6, 35, 36, 37, 38, 41, 44, 45, 51, 52, 53, 56, 60, 61, 63, 98, 99, 111, 112, 113, 114, 116, 117, 119, 126, 127, 128, 130, 134, 135, 138, 139], "add": [0, 7, 9, 11, 35, 36, 37, 38, 41, 42, 43, 44, 45, 55, 59, 60, 61, 63, 98, 111, 127, 130, 134, 135, 139], "set": [0, 1, 6, 7, 10, 14, 16, 35, 36, 38, 41, 42, 43, 44, 45, 51, 54, 55, 56, 58, 59, 60, 61, 93, 95, 97, 98, 100, 102, 110, 111, 112, 116, 117, 121, 122, 130, 134, 135, 139], "channel_prior": 0, "strict": 0, "must": [0, 2, 27, 28, 30, 35, 37, 38, 41, 43, 65, 66, 71, 72, 78, 79, 80, 83, 84, 98, 111, 112, 113, 117, 134], "have": [0, 7, 8, 9, 13, 16, 27, 31, 35, 36, 42, 43, 51, 52, 53, 60, 61, 98, 110, 111, 112, 113, 114, 116, 130, 135, 139], "4": [0, 11, 35, 37, 51, 56, 126, 128, 130, 134, 135, 138, 139], "To": [0, 7, 9, 11, 14, 16, 51, 53, 54, 56, 112, 114, 130, 134], "updat": [0, 19, 20, 34, 35, 36, 42, 43, 51, 52, 53, 55, 56, 59, 60, 61, 63, 89, 90, 92, 98, 111, 126, 127, 128, 130, 138, 139], "check": [0, 51, 56, 93, 94, 95, 96, 97, 98, 111, 112, 113, 117], "current": [0, 6, 19, 20, 35, 36, 43, 51, 52, 53, 55, 56, 59, 60, 61, 67, 69, 93, 97, 98, 100, 101, 110, 111], "version": [0, 7, 27, 31], "pleas": [0, 1, 2, 7, 8, 9, 10, 16, 19, 26, 35, 43, 51, 54, 144], "instruct": 0, "offici": 0, "document": [0, 2, 16, 51, 54], "onc": [0, 27, 32, 35, 43, 51, 54, 58, 130, 134, 139], "ha": [0, 1, 16, 27, 28, 44, 45, 71, 72], "been": [0, 7, 13, 35, 36, 51, 52, 60, 61, 98, 111, 112, 113, 114, 116], "enabl": [0, 35, 37, 41, 85, 87, 98, 111], "read": [0, 6, 14, 16, 98, 111], "feedstock": 0, "more": [0, 1, 2, 9, 17, 35, 37, 38, 41, 51, 52, 53, 54, 56, 112, 113, 114], "detail": [0, 1, 2, 6, 7, 16, 17, 19, 23, 24, 51, 54, 56, 134], "support": [1, 2, 3, 12, 13, 16, 35, 40, 42, 71, 72, 132, 133, 134, 135, 143], "determin": [1, 7, 15, 35, 36, 51, 52, 53, 55, 58, 59, 67, 71, 72, 77, 112, 116], "well": [1, 19, 24, 51, 52, 89, 90, 91, 92, 112, 113, 126, 127, 128, 130], "perform": [1, 2, 6, 7, 27, 31, 32, 35, 36, 37, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 85, 87, 98, 111, 112, 113, 117, 135, 144], "hyperparamet": [1, 2, 3, 5, 6, 19, 23, 24, 27, 31, 35, 36, 38, 41, 42, 44, 45, 51, 54, 58, 60, 61, 65, 66, 67, 69, 71, 72, 73, 77, 78, 79, 83, 84, 85, 87, 119, 126, 127, 128, 130, 134, 139, 144], "configur": [1, 3, 6, 7, 15, 16, 19, 20, 27, 28, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 59, 60, 61, 63, 78, 79, 83, 93, 94, 95, 96, 97, 98, 100, 101, 102, 110, 111, 112, 113, 114, 116, 117, 119, 121, 126, 127, 128, 130, 134, 135, 138, 139, 144], "algorithm": [1, 2, 6, 7, 10, 16, 19, 23, 35, 36, 37, 38, 40, 41, 43, 100, 101, 112, 113, 116, 135, 144], "By": [1, 122, 134], "being": [1, 6, 51, 53, 58, 71, 72, 112, 116], "robust": [1, 51, 54, 58, 67, 69, 77, 79], "flexibl": [1, 67, 69, 77, 79, 98, 110], "framework": [1, 2, 6, 67, 69, 77, 79], "bo": [1, 6, 35, 36, 100, 102], "improv": [1, 2, 19, 22, 25, 35, 37, 38, 41], "within": [1, 7, 51, 56, 112, 114], "few": [1, 35, 43, 135], "function": [1, 6, 7, 10, 11, 16, 27, 28, 30, 31, 34, 35, 36, 37, 38, 41, 42, 43, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 67, 69, 71, 72, 77, 98, 100, 101, 102, 103, 111, 112, 113, 114, 115, 116, 117, 128, 130, 132, 133, 134, 135, 140, 141, 143], "evalu": [1, 6, 7, 11, 16, 19, 20, 27, 28, 35, 36, 37, 38, 41, 44, 45, 46, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 71, 72, 93, 94, 95, 96, 97, 98, 100, 102, 111, 112, 116, 126, 127, 128, 134, 135, 138, 139], "It": [1, 6, 13, 35, 42, 51, 56, 58, 85, 87, 98, 110, 112, 114, 126, 127, 128], "offer": [1, 2, 10, 112, 113], "sever": [1, 16, 30, 34, 143], "facad": [1, 7, 9, 10, 60, 61, 117, 126, 127, 130, 134, 138, 139], "pre": 1, "typic": 1, "case": [1, 2, 19, 24, 27, 31, 35, 36, 43, 51, 56, 60, 61, 98, 111, 112, 113, 114, 116, 117, 135, 143], "optim": [1, 2, 3, 5, 6, 7, 9, 11, 12, 13, 15, 19, 21, 23, 24, 26, 27, 31, 34, 35, 36, 42, 43, 51, 54, 58, 60, 61, 63, 67, 69, 77, 79, 89, 90, 93, 96, 98, 110, 117, 126, 127, 128, 130, 134, 135, 138, 139, 144], "solv": 1, "low": [1, 2, 35, 43], "dimension": [1, 35, 37, 65, 66, 67, 68, 69, 77, 85, 87, 126, 128], "continu": [1, 35, 36, 38, 42, 98, 111, 126, 127, 128, 130, 134, 144], "artifici": 1, "global": 1, "problem": [1, 6, 7, 35, 36, 112, 113, 114, 116, 126, 128], "across": [1, 6, 7, 11, 51, 54, 58, 98, 111, 135], "multipl": [1, 6, 7, 13, 19, 24, 35, 36, 44, 45, 51, 54, 58, 65, 84, 98, 111, 117, 130, 136, 137, 139, 143], "instanc": [1, 2, 6, 7, 13, 35, 36, 37, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 77, 84, 85, 87, 98, 99, 100, 101, 102, 110, 111, 112, 113, 114, 116, 117, 119, 135], "characterist": 1, "capabl": [1, 112, 114], "bayesian": [1, 6, 9, 19, 23, 24, 35, 36, 60, 61, 63, 67, 69, 77, 79, 93, 96, 144], "sampl": [1, 11, 19, 26, 27, 28, 30, 31, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 51, 52, 56, 58, 60, 61, 65, 66, 67, 69, 77, 79, 84, 85, 87, 117, 126, 127, 128, 130, 138, 139], "effici": [1, 51, 54, 58, 98, 111, 144], "black": [1, 2, 6, 126], "box": [1, 2, 6, 126], "onli": [1, 6, 7, 10, 12, 13, 15, 19, 20, 26, 35, 36, 44, 46, 51, 54, 56, 58, 60, 61, 65, 66, 71, 72, 84, 98, 100, 101, 110, 111, 112, 114, 116, 117, 121, 128, 130, 134, 135, 139], "awar": 1, "input": [1, 6, 19, 21, 55, 59, 65, 66, 67, 69, 79, 84, 85, 87, 100, 102, 104, 121, 126, 128], "output": [1, 6, 16, 51, 52, 65, 66, 67, 69, 77, 117], "agnost": 1, "intern": [1, 11, 14, 35, 36, 44, 45, 51, 52, 54, 58, 59, 60, 61, 65, 66, 67, 71, 72, 77, 78, 79, 83, 84, 89, 90, 92, 98, 110, 111, 112, 113, 114, 116, 117, 134], "categor": [1, 27, 31, 35, 38, 127, 130, 134, 135, 139], "hierarch": 1, "condit": [1, 6, 71, 72, 119, 127, 134, 135, 139], "integr": [1, 19, 23, 67, 77, 130], "configurationspac": [1, 3, 6, 27, 28, 30, 31, 32, 65, 66, 67, 68, 69, 77, 98, 111, 126, 127, 128, 130, 134, 135, 138, 139], "up": [1, 7, 51, 53, 98, 111, 121, 126, 134, 135], "100": [1, 3, 117, 126, 128], "ani": [1, 7, 8, 9, 14, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 35, 36, 44, 45, 51, 52, 54, 56, 58, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 111, 112, 113, 114, 116, 117, 126, 130, 139], "object": [1, 3, 6, 11, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 41, 43, 44, 45, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 111, 112, 113, 114, 116, 117, 119, 122, 126, 127, 128, 130, 134, 135, 138, 139], "g": [1, 5, 10, 27, 31, 35, 36, 60, 61, 112, 113, 135], "qualiti": [1, 6, 10, 51, 58], "runtim": [1, 10, 19, 22, 51, 58, 100, 103, 112, 113, 114, 116, 139], "possibl": [1, 2, 19, 24, 35, 36, 51, 54, 71, 72, 117, 135], "multi": [1, 2, 6, 35, 36, 37, 38, 41, 42, 43, 60, 61, 89, 90, 91, 92, 98, 100, 101, 111, 112, 116, 117, 130, 135, 137, 138, 139], "number": [1, 6, 11, 16, 19, 21, 24, 27, 28, 31, 32, 35, 37, 38, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 77, 79, 85, 87, 93, 94, 95, 96, 97, 98, 110, 111, 112, 113, 114, 116, 117, 127, 128, 130, 134, 135], "scalar": [1, 10, 35, 36, 79], "oject": 1, "fidel": [1, 2, 6, 12, 35, 36, 42, 60, 61, 98, 111, 117, 134, 135], "judg": [1, 35, 36, 60, 61, 98, 111, 117], "budget": [1, 2, 6, 12, 13, 35, 36, 37, 38, 40, 41, 42, 43, 51, 52, 54, 55, 56, 58, 59, 60, 61, 63, 98, 99, 100, 101, 102, 111, 112, 113, 114, 116, 117, 126, 127, 128, 130, 134, 135, 138, 139], "discard": [1, 7], "unsuit": 1, "earli": [1, 7, 35, 43], "thi": [1, 2, 7, 8, 10, 11, 16, 17, 19, 20, 27, 28, 31, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 69, 71, 72, 73, 77, 78, 79, 83, 85, 87, 93, 96, 98, 100, 102, 111, 112, 113, 114, 115, 116, 117, 119, 128, 130, 134, 135, 139, 144], "result": [1, 2, 9, 13, 35, 36, 51, 52, 53, 55, 56, 59, 60, 61, 63, 112, 113, 114, 116, 117, 121, 126], "massiv": 1, "speed": [1, 7], "find": [1, 2, 3, 6, 16, 126, 127, 128, 139], "one": [1, 7, 27, 30, 31, 35, 43, 51, 58, 67, 77, 98, 100, 105, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 121, 128, 130, 135, 139], "dataset": [1, 3, 7, 11, 117, 127, 130, 134, 136, 137, 139, 143], "mani": [1, 2, 6, 16, 35, 36, 43, 51, 52, 58, 60, 61, 65, 84], "commandlin": [1, 7], "cli": [1, 6], "execut": [1, 7, 9, 35, 36, 42, 51, 52, 53, 55, 56, 59, 60, 61, 63, 112, 113, 114, 116, 133, 134, 135, 137, 141], "file": [1, 6, 7, 8, 14, 16, 35, 36, 98, 111, 117, 133, 137, 141], "also": [1, 7, 11, 16, 35, 36, 51, 52, 53, 55, 56, 59, 60, 61, 63, 67, 77, 98, 111, 112, 113, 114, 122, 127, 130, 134, 139], "consequ": 1, "other": [1, 9, 10, 13, 15, 16, 19, 26, 35, 36, 51, 56, 98, 111], "languag": 1, "surrog": [1, 2, 6, 19, 20, 24, 34, 35, 36, 37, 38, 41, 42, 43, 60, 61, 63, 65, 66, 84, 100, 101, 117, 126, 127], "model": [1, 2, 6, 7, 19, 20, 23, 24, 34, 35, 36, 37, 38, 40, 41, 42, 43, 60, 61, 63, 100, 101, 112, 114, 117, 126, 127, 128, 130, 135, 144], "gaussian": [1, 2, 6, 35, 38, 65, 66, 67, 68, 69, 71, 72, 77, 79, 126], "process": [1, 2, 6, 7, 9, 34, 35, 36, 38, 51, 52, 56, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 77, 79, 98, 110, 112, 113, 116, 117, 126, 135], "without": [1, 2, 8, 30], "acquisit": [1, 2, 34, 35, 36, 37, 38, 41, 42, 43, 60, 61, 63, 67, 77, 100, 103, 130], "probabl": [1, 2, 19, 25, 35, 37, 38, 41, 78, 79, 83, 93, 95, 97], "pi": [1, 19, 25], "expect": [1, 2, 7, 19, 22, 35, 36, 37, 38, 41, 85, 87, 112, 113], "ei": [1, 19, 20, 22, 35, 37, 38, 41, 42], "lower": [1, 19, 21, 78, 83, 98, 111, 130, 139], "confid": [1, 19, 21, 35, 43, 51, 56], "bound": [1, 19, 21, 78, 83, 98, 111, 119, 122, 139], "lcb": [1, 19, 21], "thompson": [1, 19], "intensif": [1, 6, 15, 34, 35, 42, 51, 52, 56, 60, 61, 63, 134], "aggress": [1, 35, 40, 43, 134, 144], "race": [1, 6, 35, 40, 43, 51, 52, 53, 54, 55, 56, 58, 59, 134, 144], "success": [1, 6, 35, 40, 42, 51, 54, 58, 59, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 134, 135], "halv": [1, 6, 35, 40, 42, 51, 54, 58, 59, 134, 135], "hyperband": [1, 2, 5, 6, 35, 40, 42, 51, 55, 58, 134, 135], "see": [1, 2, 6, 7, 8, 11, 16, 19, 23, 24, 44, 50, 98, 111], "figur": [1, 138], "tabl": [1, 2], "provid": [1, 2, 7, 9, 13, 16, 30, 51, 58, 65, 84, 98, 110, 112, 114, 126, 127, 128, 130, 134, 135, 138, 139, 143], "": [1, 6, 7, 13, 14, 16, 27, 31, 32, 35, 36, 51, 52, 53, 55, 56, 59, 60, 61, 67, 69, 77, 79, 98, 111, 112, 113, 114, 116, 117, 126, 127, 128, 130, 134, 135, 139], "tool": [1, 7, 144], "complex": [1, 112, 113], "space": [1, 16, 19, 21, 22, 24, 27, 31, 35, 38, 41, 42, 43, 44, 45, 78, 79, 83, 98, 111, 117, 126, 127, 130, 134, 135], "parallel": [1, 51, 53, 54, 112, 113, 114, 116, 117], "hypermapp": 1, "optuna": 1, "hyperopt": 1, "botorch": 1, "openbox": 1, "hpbandster": [1, 7], "In": [2, 11, 27, 28, 35, 36, 51, 56, 60, 61, 67, 69, 77, 78, 79, 83, 98, 111, 112, 113, 114, 116, 117, 135, 139, 144], "core": [2, 16, 144], "need": [2, 11, 30, 35, 36, 51, 52, 53, 55, 56, 58, 59, 60, 61, 71, 72, 98, 111, 112, 113, 114, 116, 135], "four": [2, 65, 66], "compon": [2, 17, 35, 36, 37, 42, 65, 66, 67, 68, 69, 77, 85, 87], "run": [2, 6, 7, 15, 16, 34, 35, 36, 40, 42, 43, 51, 52, 53, 54, 56, 58, 60, 61, 63, 98, 110, 111, 112, 113, 114, 115, 116, 117, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "all": [2, 7, 9, 15, 16, 19, 24, 27, 31, 35, 36, 37, 38, 41, 42, 51, 52, 53, 54, 56, 58, 60, 61, 65, 66, 67, 68, 71, 72, 79, 84, 85, 86, 87, 98, 100, 101, 102, 111, 112, 113, 114, 115, 116, 117, 121, 126, 127, 128, 130, 134, 135, 143], "which": [2, 6, 7, 11, 15, 19, 20, 23, 27, 30, 31, 35, 36, 37, 38, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 77, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 110, 112, 113, 114, 116, 117, 127, 128, 130, 134, 135, 144], "ar": [2, 6, 7, 9, 10, 11, 12, 13, 15, 16, 19, 20, 22, 27, 30, 31, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 51, 52, 54, 56, 58, 59, 60, 61, 65, 66, 67, 68, 69, 71, 72, 77, 79, 85, 87, 98, 100, 101, 111, 112, 113, 114, 116, 117, 119, 121, 122, 126, 128, 130, 134, 135, 139], "explain": [2, 9], "page": [2, 144], "defin": [2, 11, 19, 24, 27, 28, 31, 35, 36, 57, 60, 61, 63, 79, 98, 110, 112, 113, 117, 126, 127, 128, 130, 134, 135, 139], "search": [2, 19, 24, 27, 31, 32, 35, 37, 38, 41, 42, 43, 126, 128], "tunabl": 2, "paramet": [2, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 126, 127, 128, 130, 134, 135, 144], "legal": 2, "rang": [2, 127, 128, 130, 134, 135], "default": [2, 7, 10, 19, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 92, 93, 96, 97, 98, 100, 101, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 126, 127, 128, 130, 134, 135, 138, 139], "valu": [2, 9, 10, 19, 20, 21, 22, 24, 25, 26, 34, 35, 36, 42, 43, 51, 54, 57, 58, 60, 61, 63, 65, 66, 67, 69, 71, 72, 77, 79, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 126, 127, 128, 130, 134, 139], "configspac": [2, 3, 27, 28, 29, 30, 31, 32, 33, 35, 36, 60, 61, 65, 66, 67, 68, 69, 77, 85, 87, 88, 98, 111, 117, 126, 127, 128, 130, 134, 135, 138, 139], "import": [2, 3, 7, 9, 126, 127, 128, 130, 134, 135, 138, 139], "c": [2, 3, 89, 92, 126, 127, 128, 130, 134, 135, 138, 139, 144], "learning_r": [2, 134, 135, 139], "1e": [2, 19, 24, 71, 72, 73, 74, 75, 76, 85, 87, 130], "1": [2, 3, 5, 11, 16, 19, 20, 21, 22, 25, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 80, 84, 85, 87, 100, 101, 102, 103, 104, 106, 107, 108, 112, 114, 117, 119, 122, 126, 127, 128, 130, 134, 135, 138, 139], "take": [2, 7, 35, 36, 65, 66, 85, 87, 112, 114, 134], "return": [2, 3, 6, 10, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 126, 127, 128, 130, 134, 135, 138, 139], "For": [2, 7, 11, 35, 36, 38, 41, 42, 44, 45, 60, 61, 71, 72, 112, 113, 116, 117, 134, 144], "exampl": [2, 6, 7, 10, 11, 19, 20, 35, 36, 38, 41, 42, 44, 45, 51, 52, 60, 61, 98, 110, 112, 113, 117, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "could": [2, 7, 16, 51, 56, 112, 115, 117, 121, 135], "neural": [2, 51, 58, 134], "network": [2, 51, 58, 130, 134], "predict": [2, 6, 65, 66, 84, 85, 87], "base": [2, 5, 6, 7, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 127, 135, 144], "learn": [2, 5, 19, 23, 130, 134, 144], "rate": [2, 130, 134], "everi": [2, 51, 54, 58, 93, 95, 96], "would": 2, "most": [2, 35, 36, 38, 41, 42, 44, 45, 60, 61, 98, 111, 130, 134], "like": [2, 35, 36, 43, 60, 61, 130], "differ": [2, 6, 7, 11, 13, 16, 27, 31, 34, 35, 36, 51, 54, 56, 57, 60, 61, 85, 87, 89, 90, 98, 110, 112, 113, 117, 120, 130, 134, 135, 139], "howev": [2, 7, 15, 35, 36, 60, 61, 134, 135], "tri": [2, 7], "best": [2, 3, 6, 19, 21, 22, 25, 26, 27, 31, 35, 36, 42, 43, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 126, 127, 128, 135, 139], "try": [2, 7, 35, 41, 51, 56, 135], "potenti": 2, "def": [2, 3, 9, 126, 127, 128, 130, 134, 135, 138, 139], "train": [2, 3, 6, 11, 34, 35, 36, 41, 42, 51, 58, 60, 61, 65, 66, 67, 68, 69, 77, 85, 87, 100, 101, 117, 126, 127, 128, 130, 134, 135, 139], "self": [2, 9, 27, 28, 51, 56, 65, 66, 67, 71, 72, 77, 78, 79, 83, 93, 95, 98, 111, 112, 113, 114, 116, 126, 127, 128, 130, 134, 135, 139], "seed": [2, 3, 6, 7, 14, 16, 27, 28, 29, 31, 32, 33, 35, 36, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 126, 127, 128, 130, 134, 135, 138, 139], "int": [2, 3, 16, 27, 28, 31, 32, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 111, 112, 113, 114, 116, 117, 119, 121, 126, 127, 128, 130, 134, 135, 138, 139], "float": [2, 3, 19, 21, 22, 24, 25, 26, 27, 31, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 111, 112, 113, 114, 116, 117, 119, 121, 122, 126, 127, 128, 130, 134, 135, 138, 139], "multilayerperceptron": 2, "fit": [2, 8, 19, 20, 65, 88], "accuraci": [2, 130, 134, 139], "valid": [2, 6, 7, 35, 36, 60, 61, 65, 66, 117, 126, 128, 130, 132, 133, 134, 135, 138, 139, 143], "alwai": [2, 7, 12, 51, 56, 126, 128], "minim": [2, 12, 27, 32, 35, 37, 38, 40, 41, 42, 51, 52, 54, 56, 58, 93, 95], "smaller": [2, 85, 87, 119], "better": [2, 9, 16, 35, 43, 126, 127, 128, 130, 134, 135, 138, 139, 144], "gener": [2, 6, 7, 14, 16, 30, 35, 36, 44, 50, 51, 52, 53, 55, 56, 59, 89, 90, 98, 110, 112, 113, 114, 116, 117, 127, 144], "argument": [2, 10, 16, 19, 20, 35, 36, 38, 41, 42, 44, 45, 51, 53, 54, 58, 60, 61, 71, 72, 112, 113, 117, 135, 139], "intensifi": [2, 12, 13, 15, 34, 35, 36, 37, 38, 40, 41, 42, 43, 60, 61, 63, 98, 110, 112, 113, 114, 116, 117, 126, 127, 128, 130, 134, 135, 138, 139], "first": [2, 7, 35, 36, 51, 55, 56, 58, 59, 60, 61, 71, 72, 112, 115, 116, 120, 126, 127, 128, 130, 134, 135, 138, 139], "arbitrari": [2, 112, 113, 114, 116, 126, 128, 144], "name": [2, 10, 14, 19, 20, 21, 22, 23, 24, 25, 26, 35, 36, 71, 72, 98, 111, 117, 121, 126], "here": [2, 7, 9, 11, 19, 26, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 144], "specifi": [2, 3, 14, 16, 27, 28, 31, 35, 36, 51, 54, 58, 60, 61, 65, 66, 67, 69, 71, 72, 78, 82, 117, 119, 126, 134, 135], "requir": [2, 7, 16, 19, 20, 24, 26, 51, 58, 85, 87, 112, 113, 117, 135], "addition": [2, 9, 11, 100, 101], "successivehalv": [2, 51, 54, 58, 59], "did": 2, "pass": [2, 7, 9, 10, 11, 16, 35, 36, 51, 58, 85, 87, 100, 101, 112, 113, 114, 116, 117, 121, 122, 126, 130, 134, 135, 139], "never": [2, 30], "both": [2, 10, 51, 56, 98, 100, 102, 110, 112, 116, 139], "variabl": [2, 117, 130, 134, 139], "want": [2, 7, 10, 11, 14, 16, 19, 26, 35, 43, 127, 130, 134, 135, 139, 144], "limit": [2, 7, 112, 113, 114, 116], "time": [2, 7, 15, 16, 30, 35, 37, 38, 41, 43, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 93, 96, 97, 98, 99, 100, 102, 111, 112, 113, 114, 116, 117, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "where": [2, 6, 7, 14, 19, 20, 24, 27, 31, 35, 43, 51, 56, 135, 139], "save": [2, 35, 36, 60, 61, 63, 98, 110, 111, 117, 139], "output_directori": [2, 14, 117], "path": [2, 35, 36, 117, 121], "walltime_limit": [2, 117, 134, 135, 139], "120": 2, "two": [2, 7, 16, 27, 31, 51, 58, 85, 87, 135, 144], "minut": [2, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "n_worker": [2, 51, 52, 53, 55, 56, 59, 112, 114, 117, 134, 139], "eight": 2, "worker": [2, 51, 52, 53, 54, 55, 56, 58, 59, 112, 113, 114, 116, 117, 134, 135], "A": [2, 5, 6, 8, 11, 16, 19, 24, 27, 31, 51, 52, 56, 67, 69, 77, 79, 89, 90, 91, 92, 100, 102, 112, 113, 114, 116, 138, 144], "entri": 2, "point": [2, 19, 21, 27, 28, 31, 35, 37, 41, 65, 66, 67, 69, 84, 85, 87, 138, 139], "construct": [2, 112, 114], "pipelin": [2, 35, 36], "variou": [2, 35, 36], "satisfi": 2, "crucial": [2, 134], "peak": 2, "idea": [2, 7, 16, 144], "behind": 2, "simpl": [2, 6, 9, 98, 110, 127, 138], "interfac": [2, 6, 10, 16, 132, 133, 143], "easi": 2, "understand": 2, "dive": 2, "deep": [2, 71, 72, 134], "materi": 2, "expert": 2, "invit": 2, "chang": [2, 9, 14, 35, 42, 51, 52, 53, 55, 56, 59, 71, 72, 98, 111, 126, 127, 128, 130, 134, 135, 138, 139], "thei": [2, 51, 58], "even": [2, 8, 11, 13, 35, 37, 38, 40, 41, 42, 51, 52, 54, 56, 58], "horizont": 2, "scrollabl": 2, "show": [2, 7, 10, 35, 36, 60, 61, 128, 138, 139, 143], "what": [2, 7, 65, 66, 98, 111, 112, 113, 114], "reveal": 2, "medium": 2, "high": 2, "initi": [2, 13, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 56, 58, 60, 61, 93, 95, 96, 112, 114, 117, 126, 127, 128, 130, 134, 135, 138, 139], "design": [2, 13, 27, 28, 30, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 112, 114, 126, 127, 128, 130, 134, 135, 138, 139], "sobol": [2, 35, 38, 41, 44, 50], "Not": 2, "maximi": [2, 35, 36, 60, 61], "local": [2, 27, 31, 32, 35, 37, 38, 41, 51, 53, 100, 102, 112, 114], "runhistori": [2, 10, 16, 34, 35, 36, 37, 38, 41, 42, 43, 51, 52, 53, 55, 56, 59, 60, 61, 63, 128, 138, 139], "encod": [2, 35, 36, 37, 38, 41, 43, 60, 61], "log": [2, 19, 21, 22, 35, 36, 41, 51, 52, 53, 55, 56, 59, 60, 61, 67, 69, 78, 79, 82, 83, 85, 87, 100, 103, 106, 107, 127, 130, 134, 135, 139], "5": [2, 3, 27, 31, 35, 37, 38, 41, 42, 43, 51, 56, 71, 74, 85, 87, 100, 101, 102, 103, 104, 106, 107, 108, 112, 114, 126, 127, 128, 130, 134, 135, 138, 139, 144], "20": [2, 35, 37, 41, 67, 77, 85, 87, 126, 128], "50": [2, 35, 38, 41, 42, 44, 45, 67, 77, 127], "closest": [2, 134], "implement": [2, 7, 11, 19, 20, 27, 28, 31, 32, 44, 45, 51, 54, 58, 60, 61, 63, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 82, 85, 87, 89, 92, 112, 113, 114, 134], "bohb": [2, 6, 7, 51, 54, 58, 134], "emphas": 2, "highli": 2, "modular": 2, "accept": [2, 7, 35, 43, 134], "direct": 2, "modul": [2, 121], "blackboxfacad": [2, 9, 35, 38, 126], "bbfacad": 2, "hyperparameteroptimizationfacad": [2, 3, 15, 35, 41, 42, 127, 128, 130, 138, 139], "hpofacad": [2, 139], "multifidelityfacad": [2, 9, 35, 42, 134, 135], "mffacad": 2, "algorithmconfigurationfacad": [2, 35, 37], "acfacad": 2, "randomfacad": [2, 35, 40, 43], "rfacad": 2, "hyperbandfacad": [2, 35, 40, 43], "hbfacad": 2, "target_funct": [2, 35, 36, 37, 38, 40, 41, 42, 43, 112, 113, 138], "code": [3, 7, 9, 14, 27, 31, 67, 69, 77, 78, 83, 99, 112, 114, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "vector": [3, 27, 32, 100, 101, 102, 132, 133, 143], "iri": [3, 127], "numpi": [3, 71, 72, 100, 102, 121, 127, 130, 134, 135, 138, 139], "np": [3, 19, 20, 22, 59, 65, 66, 67, 69, 71, 72, 79, 84, 85, 87, 93, 96, 100, 101, 103, 117, 119, 121, 127, 130, 134, 135, 138, 139], "scenario": [3, 7, 10, 11, 14, 16, 19, 24, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 58, 60, 61, 89, 90, 91, 92, 100, 101, 102, 103, 104, 106, 107, 108, 112, 113, 126, 127, 128, 130, 134, 135, 138, 139], "sklearn": [3, 71, 72, 127, 130, 134, 135, 139], "svm": [3, 127], "svc": [3, 127], "model_select": [3, 127, 130, 134, 135, 139], "cross_val_scor": [3, 127, 130, 134, 135, 139], "load_iri": [3, 127], "0": [3, 7, 10, 11, 16, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 55, 56, 59, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 111, 117, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141], "classifi": [3, 127, 130, 134, 135, 139], "random_st": [3, 127, 130, 134, 135, 139], "score": [3, 127, 130, 134, 135, 139], "data": [3, 6, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 35, 36, 37, 41, 42, 44, 45, 51, 52, 53, 56, 58, 60, 61, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 110, 111, 112, 113, 117, 126, 127, 130, 134, 135, 139], "target": [3, 6, 7, 10, 11, 16, 35, 36, 42, 51, 52, 54, 56, 58, 59, 60, 61, 65, 66, 85, 87, 98, 111, 112, 113, 114, 115, 116, 117, 126, 127, 130, 134, 135, 139], "cv": [3, 6, 127, 130, 134, 135, 139], "mean": [3, 7, 10, 11, 35, 37, 38, 40, 41, 42, 43, 65, 66, 67, 69, 77, 78, 80, 82, 84, 85, 87, 89, 91, 98, 111, 117, 127, 130, 134, 135, 139], "1000": [3, 35, 38, 126, 127], "determinist": [3, 7, 35, 42, 51, 54, 58, 117, 128, 134, 135], "true": [3, 16, 35, 36, 37, 41, 51, 52, 53, 55, 56, 59, 60, 61, 63, 67, 69, 71, 72, 77, 85, 87, 98, 111, 117, 121, 126, 127, 128, 130, 134, 135, 138, 139], "n_trial": [3, 19, 24, 35, 38, 41, 42, 44, 45, 117, 126, 127, 128, 130, 134, 135, 138, 139], "200": [3, 10, 134, 139], "incumb": [3, 6, 19, 25, 35, 36, 42, 43, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 98, 99, 111, 126, 127, 128, 130, 134, 135, 138, 139], "lisha": 5, "li": [5, 51, 58], "kevin": 5, "jamieson": 5, "giulia": 5, "desalvo": 5, "afshin": 5, "rostamizadeh": 5, "ameet": 5, "talwalkar": 5, "novel": [5, 6], "bandit": [5, 6], "approach": [5, 35, 43, 100, 102], "j": 5, "mach": 5, "re": [5, 98, 111], "18": [5, 51, 56], "185": 5, "52": [5, 134], "2017": [5, 67, 69, 77, 79], "jmlr": [5, 144], "org": [5, 8, 19, 21, 126, 127, 128, 130, 134, 135, 138, 139, 144], "paper": [5, 19, 23, 144], "v18": 5, "16": [5, 51, 56, 130], "558": 5, "html": [5, 44, 50], "2": [5, 6, 11, 19, 21, 24, 27, 30, 32, 35, 37, 41, 42, 51, 56, 85, 87, 93, 96, 112, 114, 126, 127, 128, 130, 134, 135, 138, 139], "pibo": [5, 19, 24], "hvarfner": [5, 19, 24], "et": [5, 7, 19, 23, 24, 51, 54, 58, 67, 77], "al": [5, 7, 19, 23, 24, 51, 54, 58, 67, 77], "2022": 5, "arxiv": [5, 19, 21, 144], "pdf": [5, 19, 21, 23, 51, 58, 89, 92], "2204": 5, "11051": 5, "weigh": 6, "explor": [6, 19, 21, 22, 25, 35, 36, 37, 38, 41], "exploit": [6, 19, 21, 22, 25, 35, 36, 37, 38, 41, 42], "minimum": [6, 35, 37, 38, 41, 51, 52, 53, 56, 85, 87, 98, 111, 117, 126], "its": [6, 11, 16, 51, 52, 67, 71, 72, 77, 126, 127], "hb": [6, 59], "extens": [6, 51, 54], "work": [6, 7, 11, 13, 16, 35, 42, 112, 114, 126, 139], "sequenti": [6, 7, 144], "roar": [6, 35, 40, 43], "onlin": [6, 35, 40, 43], "adapt": [6, 79, 134, 135, 139], "free": [6, 7, 8, 35, 40], "instanti": [6, 10, 35, 36, 38, 51, 53, 58], "smbo": [6, 9, 34, 35, 36, 37, 38, 41, 42, 51, 53, 56, 60, 89, 90, 92, 93, 94, 95, 96, 97, 98, 110, 112, 113, 114, 116], "select": [6, 11, 35, 36, 43, 44, 45, 47, 51, 54, 55, 56, 58, 59, 98, 111, 112, 113, 139], "uniformli": [6, 35, 43, 51, 56], "iter": [6, 9, 15, 27, 28, 30, 31, 32, 34, 35, 36, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 89, 90, 92, 93, 94, 95, 96, 97, 98, 111, 112, 113, 114, 116, 134, 135], "compar": [6, 35, 40, 43, 120], "them": [6, 100, 105, 107, 108, 109, 112, 114, 134, 139], "against": [6, 7, 35, 42, 51, 54, 56, 58], "mechan": [6, 112, 113, 134, 144], "extend": 6, "chapter": [6, 17], "bb": 6, "refer": [6, 7, 9, 19, 21, 44, 50, 51, 54, 58, 144], "observ": [6, 35, 42, 98, 111, 119], "mf": 6, "epoch": [6, 51, 58, 117, 136, 137, 143], "subset": [6, 11, 51, 56, 98, 111, 117, 135], "therebi": 6, "prematur": 6, "tfe": [6, 7], "cost": [6, 10, 11, 12, 35, 36, 41, 51, 52, 53, 55, 56, 59, 60, 61, 89, 90, 91, 92, 98, 99, 100, 101, 102, 111, 112, 113, 114, 116, 117, 122, 126, 127, 128, 130, 134, 135, 138, 139], "given": [6, 19, 20, 21, 22, 25, 26, 51, 52, 54, 58, 65, 66, 93, 95, 97, 98, 100, 101, 111, 112, 113, 116, 122, 135], "rf": [6, 19, 24], "gp": [6, 19, 21, 67, 77], "mcmc": [6, 35, 38, 67, 77], "markov": 6, "chain": [6, 67, 77], "mont": [6, 67, 77], "carlo": [6, 67, 77], "metric": 6, "anoth": [6, 98, 110, 127], "word": 6, "size": [6, 51, 56, 117, 130, 134], "trial": [6, 13, 34, 35, 36, 37, 38, 41, 51, 52, 53, 55, 56, 59, 60, 61, 63, 98, 100, 101, 111, 112, 113, 114, 116, 117, 126, 127, 128, 130, 134, 135, 138, 139], "singl": [6, 10, 17, 35, 37, 41, 43, 65, 84, 85, 87, 89, 90, 91, 92, 98, 111, 112, 113, 114, 116], "combin": [6, 13, 35, 36, 42, 51, 58, 60, 61, 89, 90, 91, 92, 98, 111, 112, 113, 114, 117, 127, 134, 135, 144], "pc": 6, "epm": [6, 51, 56, 98, 110], "empir": [6, 19, 24, 51, 52, 53, 55, 56, 59, 98, 111], "regress": 6, "character": 6, "These": [6, 9, 130], "previous": [6, 51, 55, 56, 59], "unseen": [6, 35, 42], "includ": [6, 65, 66, 84, 130, 135, 144], "untest": 6, "analyz": 6, "how": [6, 7, 9, 10, 15, 35, 36, 37, 38, 41, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 98, 110, 111, 112, 113, 114, 117, 120, 128, 134, 138, 139, 143], "under": [6, 8], "promis": [6, 35, 36, 43, 51, 52, 53, 55, 56, 59, 60, 61], "new": [6, 7, 14, 16, 30, 34, 35, 43, 51, 52, 53, 55, 56, 59, 98, 111, 126, 127, 128, 130, 138, 139], "benchmark": [6, 127], "govern": 6, "each": [6, 11, 16, 19, 24, 27, 30, 32, 35, 36, 40, 42, 51, 52, 53, 54, 56, 58, 60, 61, 67, 69, 77, 89, 90, 92, 93, 97, 98, 111, 112, 114, 117, 139], "when": [6, 7, 10, 13, 35, 36, 37, 43, 51, 58, 59, 60, 61, 65, 66, 67, 68, 69, 71, 72, 77, 85, 87, 112, 114, 117, 121, 134], "trust": 6, "enough": [6, 35, 43, 51, 52, 112, 113], "make": [6, 7, 10, 13, 19, 26, 51, 52, 53, 55, 56, 58, 59, 67, 77, 93, 96, 112, 113, 114, 116, 117, 130, 134, 135, 139], "known": [6, 35, 42, 126], "cross": [6, 117, 130, 132, 133, 134, 135, 139, 143], "line": [6, 16, 51, 56], "should": [7, 8, 15, 19, 20, 23, 30, 35, 36, 37, 38, 41, 51, 52, 56, 60, 61, 63, 65, 71, 72, 84, 93, 94, 95, 96, 97, 98, 110, 117, 126, 128], "smac2": [7, 85, 87], "reimplement": 7, "origin": [7, 27, 31, 51, 53, 78, 79, 83, 98, 99, 111, 144], "hutter": [7, 67, 69, 77, 79, 144], "2021": [7, 126, 127, 128, 130, 134, 135, 138, 139, 144], "slightli": 7, "comparison": 7, "stabl": 7, "releas": 7, "v2": 7, "java": 7, "found": [7, 19, 24, 35, 36, 60, 61, 93, 96, 126, 144], "sinc": [7, 15, 35, 43, 134, 139], "maintain": 7, "applic": 7, "cannot": 7, "root": [7, 100, 109, 120], "directori": [7, 16, 117], "instal": 7, "pyrfr": 7, "rais": [7, 100, 101, 130, 134, 139], "cryptic": 7, "error": 7, "ensur": [7, 15, 19, 24, 117], "gcc": 7, "compil": 7, "same": [7, 16, 27, 31, 35, 37, 38, 41, 43, 51, 56, 98, 110, 111, 117, 122], "link": 7, "dure": [7, 27, 31, 32, 35, 36, 43, 51, 56, 60, 61, 85, 87, 98, 110], "often": [7, 10, 11, 35, 43, 126, 128], "happen": [7, 51, 56], "anaconda": 7, "solut": [7, 27, 29, 33, 35, 36, 60, 61, 63], "my": [7, 35, 38, 41, 42, 44, 45], "sure": [7, 10, 67, 77, 93, 96, 112, 113, 114, 115], "option": [7, 10, 11, 16, 19, 20, 24, 27, 28, 31, 34, 35, 36, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 65, 66, 71, 72, 98, 100, 101, 111, 112, 115, 122], "wrap": [7, 112, 114], "verbos": [7, 16], "debug": [7, 16, 35, 36, 55, 59], "call": [7, 16, 19, 20, 27, 28, 32, 34, 35, 36, 37, 38, 41, 43, 44, 45, 51, 52, 53, 56, 58, 59, 60, 61, 65, 66, 71, 72, 73, 78, 79, 83, 88, 112, 113, 114, 116, 120, 128, 130], "restor": 7, "previou": [7, 27, 28, 31, 35, 36, 60, 61, 98, 111, 126, 130], "state": [7, 14, 51, 52, 56, 89, 90, 92, 93, 96, 98, 100, 101, 111, 127], "ye": 7, "look": [7, 30, 35, 36, 43, 60, 61], "smac4hpo": 7, "close": [7, 112, 114], "discov": 7, "bug": 7, "doe": [7, 13, 15, 19, 26, 30, 35, 42, 51, 56, 93, 96, 112, 114, 139], "behav": [7, 19, 24], "report": 7, "open": [7, 16], "issu": [7, 35, 41, 51, 52, 144], "our": [7, 10, 127, 130, 134, 135, 139, 144], "list": [7, 10, 11, 19, 20, 27, 28, 30, 35, 36, 37, 38, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 65, 66, 67, 68, 69, 71, 72, 77, 84, 85, 87, 89, 90, 91, 92, 93, 94, 98, 100, 101, 102, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 135, 138], "befor": [7, 9, 19, 20, 27, 31, 32, 34, 35, 36, 41, 51, 54, 56, 58, 60, 61, 67, 77, 93, 96, 100, 102, 112, 113, 114, 116, 134, 139], "hasn": 7, "alreadi": [7, 13, 19, 20, 51, 56, 98, 111, 139], "tracker": 7, "latest": 7, "u": [7, 139], "inform": [7, 9, 16, 35, 36, 42, 44, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 63, 98, 110, 111, 112, 113, 114, 116, 127], "descript": [7, 16, 51, 58], "reproduc": [7, 117], "about": [7, 9, 35, 42, 51, 54, 60, 61, 63, 71, 72, 112, 113, 127, 130], "setup": [7, 35, 36, 43, 60, 61], "help": 7, "resolv": 7, "packag": [7, 144], "feel": 7, "screenshot": 7, "contribut": [7, 144], "discuss": 7, "care": [7, 35, 36], "question": 7, "feedback": 7, "prefer": 7, "locat": [7, 19, 22], "featur": [7, 35, 37, 41, 42, 65, 66, 67, 68, 69, 77, 84, 85, 87, 98, 100, 101, 102, 110, 117, 119, 135], "ongo": 7, "guid": [7, 9], "flag": 7, "fals": [7, 19, 22, 24, 34, 35, 36, 37, 38, 40, 41, 42, 43, 51, 52, 53, 55, 56, 59, 60, 61, 67, 71, 72, 73, 74, 75, 76, 77, 85, 87, 98, 111, 112, 114, 117, 127, 128], "assum": [7, 112, 115, 126, 127, 128, 130, 134, 135, 138, 139], "non": [7, 19, 24, 35, 42, 51, 54, 58, 71, 72, 134, 135], "don": 7, "thu": [7, 11, 130], "nevertheless": [7, 51, 56, 112, 114], "still": [7, 14, 98, 110, 112, 113, 114, 116, 128], "realiz": 7, "signific": 7, "advantag": [7, 134], "necessarili": 7, "wors": 7, "might": [7, 71, 72, 89, 90, 91, 92, 98, 111, 112, 113, 114, 116], "lead": 7, "why": 7, "colab": 7, "crash": [7, 100, 101, 102, 103, 104, 106, 107, 108, 112, 115], "child": [7, 44, 45, 112, 113, 127, 134, 139], "pynish": [7, 112, 116, 117], "enforc": [7, 117], "memori": [7, 112, 116, 117], "runner": [7, 60, 61], "mai": 7, "specif": [7, 19, 20, 35, 36, 71, 72, 85, 87, 100, 103, 135], "overcom": 7, "limit_resourc": 7, "program": [8, 30, 98, 110], "softwar": [8, 16], "redistribut": 8, "modifi": 8, "term": 8, "claus": [8, 126, 127, 128, 130, 134, 135, 138, 139], "bsd": [8, 126, 127, 128, 130, 134, 135, 138, 139], "distribut": [8, 16, 78, 80, 82, 85, 87, 112, 114], "hope": 8, "warranti": 8, "impli": [8, 134], "merchant": 8, "FOR": 8, "particular": [8, 51, 56], "purpos": [8, 11], "receiv": [8, 112, 114], "copi": 8, "along": [8, 65, 66], "opensourc": 8, "basic": [9, 10, 128], "mention": [9, 144], "start": [9, 15, 16, 34, 35, 36, 60, 61, 67, 77, 89, 90, 92, 112, 114, 134, 135, 139], "pictur": 9, "influenc": 9, "drastic": 9, "trial_info": [9, 51, 52, 53, 55, 56, 59, 112, 113, 114, 116], "trial_valu": [9, 51, 52, 53, 55, 56, 59], "item": [9, 11, 16, 121], "abil": 9, "easili": [9, 117], "after": [9, 19, 20, 34, 35, 40, 42, 43, 51, 54, 56, 58, 93, 96, 128, 134, 139], "loop": [9, 35, 36, 42, 43, 51, 56, 60, 61, 112, 113], "inherit": [9, 71, 72], "overwrit": [9, 35, 36, 37, 38, 40, 41, 42, 43, 59, 60, 61, 98, 111, 126, 127, 128, 130, 134, 135, 138, 139], "abstract": [9, 19, 20, 27, 28, 34, 35, 36, 51, 52, 60, 61, 65, 66, 67, 68, 79, 85, 86, 89, 90, 93, 94, 100, 101, 112, 113, 114], "method": [9, 19, 20, 27, 28, 34, 35, 36, 42, 51, 52, 54, 56, 58, 60, 61, 63, 65, 66, 71, 72, 73, 78, 79, 83, 85, 87, 112, 113, 114, 116, 130, 134, 135, 139], "afterward": 9, "class": [9, 10, 19, 27, 35, 44, 51, 60, 65, 67, 71, 78, 85, 89, 93, 98, 100, 112, 126, 127, 128, 130, 134, 135, 139], "customcallback": 9, "on_start": [9, 34], "none": [9, 19, 20, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 127, 128, 134, 135, 138, 139], "abstractmethod": 9, "on_end": [9, 34], "on_iteration_start": [9, 34], "on_iteration_end": [9, 34], "info": [9, 34, 35, 36, 51, 52, 60, 61, 63, 112, 113, 126, 127, 128, 130, 134, 135, 138, 139], "runinfo": [9, 98, 110, 112, 113, 114], "runvalu": 9, "bool": [9, 19, 22, 24, 34, 35, 36, 37, 41, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 67, 69, 71, 72, 77, 85, 87, 93, 94, 95, 96, 97, 98, 111, 112, 113, 114, 116, 117, 121, 139], "just": [9, 10, 35, 43], "do": [9, 10, 11, 14, 19, 26, 35, 43, 51, 53, 55, 56, 59, 112, 114, 130], "print": [9, 121, 126, 127, 128, 130, 134, 135, 138, 139], "instead": [10, 13, 71, 72], "exactli": 10, "right": [10, 19, 22, 71, 72], "parego": [10, 89, 140, 141, 143], "christescu": 10, "knowl": 10, "2015": [10, 16, 89, 92], "weight": [10, 19, 24, 27, 31, 35, 37, 38, 41, 43, 89, 90, 91, 92, 98, 111, 117, 130, 138], "sum": [10, 35, 37, 38, 41, 51, 52, 53, 56, 71, 72, 98, 111], "individu": [10, 11, 16, 98, 111], "so": [10, 14, 15, 16, 19, 21, 25, 26, 35, 36, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 112, 113, 114, 116, 121, 130, 134], "store": [10, 60, 61, 98, 111, 134], "usual": [10, 112, 115], "recov": 10, "pareto": [10, 139], "front": [10, 139], "later": [10, 55, 59], "recip": 10, "dictionari": [10, 98, 111, 120], "contain": [10, 35, 36, 51, 52, 56, 60, 61, 63, 71, 72, 98, 100, 102, 111, 112, 113, 114, 116], "kei": [10, 98, 111], "myobj1": 10, "myobj2": 10, "simpli": [10, 35, 43], "multi_object": [10, 100, 101, 138, 139], "run_obj": 10, "custom": [10, 132, 133, 143], "further": [10, 15, 19, 23, 24, 44, 50, 93, 96, 112, 113, 114, 115, 116, 117, 144], "kwarg": [10, 19, 20, 44, 50, 60, 63, 71, 72, 85, 86, 100, 105, 109, 112, 116], "multi_objective_algorithm": [10, 35, 36, 37, 38, 40, 41, 42, 43, 100, 101, 138, 139], "multi_objective_kwarg": 10, "per": [10, 35, 37, 38, 41, 42, 44, 45, 51, 52, 53, 56, 85, 87, 98, 111, 130], "aggreg": [10, 35, 37, 38, 41, 42, 43, 89, 91], "strategi": [10, 35, 36, 37, 38, 41, 42, 43, 44, 45, 89, 90], "nice": 10, "plot": [10, 138, 139], "transform": [11, 35, 36, 60, 61, 79, 85, 87, 89, 90, 91, 92, 100, 101, 102, 103, 105, 106, 107, 108, 109, 121, 135], "randomli": [11, 27, 31, 35, 36, 43, 60, 61], "access": [11, 35, 37, 38, 41, 51, 56, 71, 72], "predefin": 11, "chosen": [11, 35, 38, 134, 143], "five": [11, 35, 38, 41, 42, 44, 45, 134, 139], "identifi": [11, 55, 59, 117], "id": [11, 98, 111], "instance_fil": 11, "those": 11, "expand": [11, 117], "x": [11, 19, 20, 21, 22, 25, 26, 65, 66, 67, 68, 69, 71, 72, 77, 78, 80, 84, 85, 87, 100, 101, 102, 119, 126, 128, 138, 139], "matrix": [11, 65, 66], "plai": 11, "role": 11, "underli": 11, "exact": [11, 35, 36, 60, 61], "instance_featur": [11, 65, 66, 67, 68, 69, 77, 85, 87, 88, 117, 119, 135], "121": 11, "6": [11, 35, 37, 41, 51, 56, 85, 87, 100, 101, 102, 103, 104, 106, 107, 108, 135], "140": 11, "65": 11, "99": 11, "45": [11, 135], "102": 11, "59": 11, "132": 11, "48": [11, 134, 137], "termin": [12, 27, 31, 32, 35, 42, 112, 114], "threshold": [12, 117], "wa": [12, 14, 19, 20, 51, 56, 98, 110, 111, 112, 114], "reach": [12, 35, 42, 93, 96], "rememb": 12, "abort": [12, 112, 115], "highest": [12, 35, 36, 42, 51, 54, 58, 60, 61, 98, 111], "part": [13, 27, 28], "becaus": [13, 15, 51, 56, 71, 72, 98, 111, 112, 113, 115, 126, 135], "callback": [13, 30, 35, 36, 37, 38, 40, 41, 42, 43, 132, 133, 143], "ignor": [13, 35, 36, 60, 61, 71, 72, 130, 134, 135, 139], "skip": [13, 51, 52, 56, 60, 61, 63, 98, 100, 102, 110], "handl": [13, 51, 54, 98, 111, 112, 113, 114, 116], "row": 13, "sens": 13, "advanc": [13, 16], "sh": [13, 59], "reason": [13, 71, 72], "heavili": 13, "user": [13, 19, 24, 27, 31, 35, 36, 51, 54, 58, 60, 61, 112, 114, 132, 133, 143], "wait": [13, 51, 53, 60, 61, 63, 112, 113, 114, 116], "till": 13, "finish": [13, 34, 35, 36, 60, 61, 112, 113, 114, 116, 128, 134, 135], "too": 13, "automat": [14, 112, 114], "resum": 14, "left": [14, 19, 22, 60, 61, 63, 71, 72], "off": [14, 35, 36], "interrupt": 14, "derivid": 14, "ask": [14, 34, 35, 36, 60, 61, 63, 132, 133, 143], "whether": [14, 15, 19, 22, 24, 35, 36, 51, 52, 53, 55, 56, 59, 60, 61, 63, 71, 72, 93, 94, 95, 96, 97, 98, 110, 111, 112, 113, 114, 116, 117], "delet": [14, 112, 114], "old": [14, 35, 36, 60, 61], "complet": [14, 35, 36, 51, 53, 60, 61, 112, 113, 114, 116, 127], "affect": [14, 35, 38, 41, 42, 44, 45], "comput": [15, 16, 19, 20, 21, 22, 23, 25, 78, 79, 83, 98, 111], "intensifier_percentag": 15, "long": 15, "took": [15, 112, 113, 114, 116], "far": [15, 19, 21, 25, 26, 35, 36, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61], "time_bound": [15, 35, 37, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 58, 59], "procedur": [15, 51, 53, 56, 112, 114], "base_smbo": [15, 126, 127, 128, 130, 134, 135, 138, 139], "next": [15, 34, 35, 36, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 93, 94, 95, 96, 97, 112, 113, 127, 128], "process_result": [15, 51, 52, 53, 55, 56, 59], "guarante": [15, 98, 111], "mode": 16, "resourc": [16, 51, 52, 112, 114, 116], "cpu": [16, 117], "variant": 16, "psmac": [16, 98, 110], "share": 16, "between": [16, 19, 21, 22, 25, 35, 37, 38, 41, 65, 66, 85, 87, 100, 105, 107, 108, 109], "togeth": [16, 19, 26, 35, 43], "note": 16, "commun": [16, 126, 128], "write": 16, "disk": [16, 98, 110, 111], "dash": [16, 138], "progress": 16, "ramag": 16, "meta": [16, 19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 35, 36, 44, 45, 51, 52, 56, 58, 60, 61, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 112, 113, 117, 126], "librari": 16, "autom": 16, "univers": 16, "british": 16, "columbia": 16, "retriev": [16, 27, 31, 135], "ubc": 16, "ca": 16, "collect": [16, 35, 42, 60, 61, 71, 72, 73, 112, 113, 114], "ubcthes": 16, "24": 16, "0167184": 16, "shared_model": 16, "input_psmac_dir": 16, "output_path": 16, "On": [16, 71, 72, 112, 113, 114, 116, 136, 137, 143], "exemplari": 16, "verifi": 16, "correct": 16, "level": [16, 35, 36, 42, 120, 121], "grep": 16, "wai": [16, 35, 42, 51, 54], "load": [16, 98, 111, 117, 127], "constructor": 16, "abov": 16, "give": [17, 51, 53, 98, 110, 117], "abstractacquisitionfunct": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 35, 36, 43, 60, 61], "sourc": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "__call__": [19, 20, 71, 72, 89, 90, 91, 92, 112, 116], "type": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 127, 130, 134, 135, 138, 139], "ndarrai": [19, 20, 59, 65, 66, 67, 69, 71, 72, 79, 84, 85, 87, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 119, 121, 135], "properti": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 35, 36, 44, 45, 51, 52, 53, 55, 56, 58, 59, 60, 61, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 111, 112, 113, 117, 126, 127, 128, 130, 134, 135, 139], "dict": [19, 20, 21, 22, 23, 24, 25, 27, 28, 31, 32, 35, 36, 44, 45, 51, 52, 56, 58, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 111, 112, 113, 114, 116, 117, 120, 135, 138, 139], "str": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 35, 36, 38, 44, 45, 51, 52, 54, 56, 58, 59, 60, 61, 65, 66, 67, 68, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 111, 112, 113, 114, 116, 117, 120, 135, 138, 139], "abstract_model": [19, 20, 24, 65, 84], "abstractmodel": [19, 20, 24, 35, 36, 60, 61, 65, 66, 67, 68, 84, 85, 86, 88], "full": [19, 20, 21, 22, 23, 24, 25, 26, 65, 66, 98, 111, 126, 127, 128, 129, 130, 132, 133, 134, 135, 138, 139, 143], "attribut": [19, 20], "calcul": [19, 20, 51, 54, 58, 98, 111, 126, 127, 128, 130, 134, 139], "maxim": [19, 20, 21, 26, 35, 36, 37, 38, 41, 43, 51, 58, 60, 61, 98, 111], "As": [19, 20, 112, 116, 130], "fmin": [19, 20], "acqusit": [19, 20], "present": [19, 20, 35, 42], "_updat": [19, 20], "addit": [19, 20, 35, 37, 38, 41, 42, 43, 44, 45, 98, 100, 102, 111, 112, 113, 114, 116, 126, 127, 128, 130, 134, 135, 138, 139], "xi": [19, 22, 25, 26, 35, 37, 38, 41], "mathbb": [19, 22], "max": [19, 22, 122, 127, 134, 135, 139], "f": [19, 22, 25, 67, 69, 77, 78, 79, 80, 126, 127, 128, 130, 134, 135, 138, 139, 144], "mathbf": [19, 21, 22, 25, 26], "f_": [19, 22, 25], "control": [19, 21, 22, 25, 35, 37, 38, 41, 51, 55, 58, 59], "balanc": [19, 21, 22, 25, 35, 37, 38, 41], "eip": [19, 22, 100, 103], "computess": [19, 22], "frac": [19, 22, 25], "r": [19, 22, 51, 56, 139], "integratedacquisitionfunct": [19, 23], "acquisition_funct": [19, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 60, 61, 130], "margin": [19, 23, 65, 66, 67, 69, 84, 85, 87], "over": [19, 21, 23, 24, 25, 26, 35, 37, 38, 41, 42, 51, 52, 53, 56, 60, 61, 63, 65, 66, 67, 77, 84, 85, 87, 93, 96, 97, 98, 111, 112, 116, 132, 133, 143], "practic": [19, 23, 143], "jasper": [19, 23], "snoek": [19, 23, 67, 77], "nip": [19, 23, 67, 69, 77, 79], "cc": [19, 23], "4522": [19, 23], "beta": [19, 21, 130], "mu": [19, 21, 25, 26, 130], "sqrt": [19, 21, 138], "beta_t": [19, 21], "sigma": [19, 21, 25, 26, 78, 82, 130], "d": [19, 21], "text": [19, 21, 144], "dimens": [19, 21, 65, 66, 126, 127, 128], "tradeoff": [19, 21], "ucb": [19, 21], "0912": [19, 21], "3995": [19, 21], "p": [19, 25, 78, 80], "geq": [19, 25], "phi": [19, 25], "cdf": [19, 25], "standard": [19, 25, 65, 66, 78, 82, 130], "normal": [19, 25, 51, 56, 67, 69, 77, 78, 82, 89, 90, 91, 92, 98, 111, 122, 130], "prioracquisitionfunct": [19, 24, 130], "decay_beta": [19, 24, 130], "prior_floor": [19, 24], "12": [19, 24, 51, 56], "discret": [19, 24, 130], "discrete_bins_factor": [19, 24], "prior": [19, 24, 27, 31, 71, 72, 73, 74, 75, 76, 132, 133, 143], "optimum": [19, 24, 100, 101, 132, 133, 143], "augment": [19, 24], "belief": [19, 24, 130], "carl": [19, 24], "_": [19, 24, 35, 40, 128, 135], "decai": [19, 24], "factor": [19, 24, 35, 40, 42, 51, 54, 58, 93, 97], "solid": [19, 24, 130], "lowest": [19, 24, 35, 36, 98, 111], "neg": [19, 24], "bin": [19, 24], "densiti": [19, 24], "contin": [19, 24], "trigger": [19, 24, 51, 56, 112, 115], "avoid": [19, 24], "patholog": [19, 24], "remov": [19, 24, 27, 31, 139], "piecewis": [19, 24], "constant": [19, 24, 93, 96, 134, 135, 139], "allow": [19, 24, 51, 54, 117], "randomsearch": [19, 26, 27, 33, 35, 43], "localandsortedrandomsearch": [19, 26, 27, 31, 35, 37, 38, 41, 42], "math": [19, 26, 79], "mathcal": [19, 26], "consist": [19, 26, 27, 28, 130, 134, 135, 139, 144], "abstractacquisitionmaxim": [27, 28, 29, 31, 32, 33, 35, 36, 60, 61], "challeng": [27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 93, 94, 112, 113, 126, 127, 128, 130, 134, 135, 138, 139], "5000": [27, 28, 29, 31, 32, 33, 135], "order": [27, 28, 51, 53, 54, 58, 100, 101, 117], "subclass": [27, 28, 35, 36, 71, 72], "_maxim": [27, 28], "abstract_acquisition_funct": [27, 28, 31], "previous_config": [27, 28], "n_point": [27, 28], "random_design": [27, 28, 30, 35, 36, 37, 38, 40, 41, 42, 43, 60, 61], "_challeng": [27, 28], "abstractrandomdesign": [27, 28, 30, 35, 36, 43, 93, 94, 95, 96, 97], "challengerlist": [27, 28, 30], "interleav": [27, 28, 30, 31, 35, 36, 37, 38, 41, 93, 94, 95, 96, 97], "scheme": [27, 28, 112, 113], "next_iter": [27, 28, 93, 94, 95, 96, 97], "end": [27, 28, 34, 51, 56], "differentialevolut": [27, 29], "candid": [27, 29, 33, 35, 36, 42, 51, 58, 60, 61, 63], "differentialevolutionsolv": [27, 29], "scipi": [27, 29, 44, 50], "localandsortedpriorrandomsearch": [27, 31], "uniform_configspac": [27, 31], "max_step": [27, 31, 32], "n_steps_plateau_walk": [27, 31, 32], "local_search_iter": [27, 31, 35, 38, 41], "prior_sampling_fract": [27, 31], "accord": [27, 31, 93, 95, 97], "sort": [27, 31, 35, 37, 38, 41], "main": [27, 31, 35, 43, 112, 114, 144], "normalfloathp": [27, 31], "uniform": [27, 31, 130], "localsearch": [27, 31, 32], "maximum": [27, 31, 32, 35, 37, 38, 41, 51, 52, 53, 55, 56, 59, 85, 87, 93, 95, 96, 117], "step": [27, 31, 32, 35, 42, 67, 77, 112, 116, 134, 135, 139], "plateau": [27, 31, 32], "walk": [27, 31, 32], "ratio": [27, 31, 35, 37, 41, 85, 87], "taken": [27, 31, 100, 101], "oppos": [27, 31], "defaut": [27, 31, 35, 38, 41], "vectorization_min_obtain": [27, 32], "vectorization_max_obtain": [27, 32], "neighbor": [27, 32], "obtain": [27, 32, 67, 69, 79], "tune": [27, 32, 51, 56, 67, 77, 130], "reduc": [27, 30, 32, 35, 37, 41, 65, 66, 67, 68, 69, 77, 85, 87, 112, 114, 128], "overhead": [27, 32], "challenger_callback": 30, "modulus_design": 30, "modulusrandomdesign": [30, 93, 96], "second": [30, 60, 61, 63, 112, 114, 116, 117, 120, 126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "necessari": [30, 35, 42, 51, 52, 53, 55, 56, 59], "hundr": 30, "callabl": [30, 35, 36, 51, 52, 53, 55, 56, 59, 112, 113], "closur": 30, "www": [30, 89, 92], "programiz": 30, "modulu": [30, 93, 96], "stage": [34, 51, 52, 53, 55, 56, 59], "on_ask_end": 34, "intent": [34, 51, 56, 60, 61, 63], "on_ask_start": 34, "on_next_configurations_end": 34, "essenti": 34, "on_next_configurations_start": 34, "on_tell_end": 34, "stat": [34, 35, 36, 44, 50, 60, 61, 63, 112, 113, 128], "gracefulli": 34, "stop": [34, 117, 134, 139], "on_tell_start": 34, "abstractfacad": [35, 36, 37, 38, 41, 43, 138, 139], "acquisition_maxim": [35, 36, 37, 38, 40, 41, 42, 43, 60, 61], "initial_design": [35, 36, 37, 38, 40, 41, 42, 43, 60, 61, 127, 130, 134, 139], "runhistory_encod": [35, 36, 37, 38, 40, 41, 42, 43, 60, 61], "logging_level": [35, 36, 37, 38, 40, 41, 42, 43], "top": [35, 36, 51, 55, 58, 59], "backend": [35, 36], "organ": [35, 36], "separ": [35, 36], "manner": [35, 36], "suit": [35, 36], "With": [35, 36], "except": [35, 36, 51, 56, 112, 114, 116, 130], "explicitli": [35, 36, 112, 114], "get_": [35, 36], "hold": [35, 36, 60, 61, 121, 127], "environment": [35, 36, 60, 61], "abstractrunn": [35, 36, 60, 61, 112, 113, 114, 116], "decid": [35, 36, 51, 53, 60, 61, 112, 113, 144], "initialdesign": [35, 36, 60, 61], "randomdesign": [35, 36, 60, 61], "drawn": [35, 36, 37, 38, 41, 51, 56, 60, 61, 67, 69, 79, 93, 97], "abstractintensifi": [35, 36, 51, 52, 53, 56, 59, 60, 61], "abstractmultiobjectivealgorithm": [35, 36, 89, 90, 91, 92, 100, 101], "interpret": [35, 36], "runhistoryencod": [35, 36, 37, 38, 43, 60, 61, 100, 102, 104, 105, 106, 107, 108, 109], "done": [35, 36, 51, 52, 53, 56, 60, 61, 112, 113, 114, 116], "inact": [35, 36, 60, 61, 119], "indic": [35, 36, 51, 52, 53, 55, 56, 59, 93, 94, 96, 98, 110, 112, 115, 135, 139], "yaml": [35, 36], "noth": [35, 36], "yml": [35, 36], "incorpor": [35, 36, 43, 65, 66, 67, 68, 69, 77, 85, 87, 98, 111, 117, 130], "inconsist": [35, 36, 60, 61, 126], "behaviour": [35, 36, 60, 61], "intend": [35, 36, 112, 114], "trialinfo": [35, 36, 51, 52, 53, 55, 56, 59, 60, 61, 63, 98, 99, 112, 113, 114, 116], "static": [35, 36, 37, 38, 40, 41, 42, 43, 117], "get_acquisition_funct": [35, 36, 37, 38, 41, 43, 130], "trade": [35, 36], "get_acquisition_maxim": [35, 36, 37, 38, 41, 43], "get_initial_design": [35, 36, 37, 38, 41, 42, 43, 127, 130, 134, 139], "warm": [35, 36], "abstractinitialdesign": [35, 36, 44, 45, 46, 47, 48, 49, 50], "get_intensifi": [35, 36, 37, 38, 40, 41, 42, 43, 128, 130], "get_model": [35, 36, 37, 38, 41, 43], "get_multi_objective_algorithm": [35, 36, 37, 38, 41, 43], "get_next_configur": [35, 36, 51, 52, 53, 55, 56, 59, 60, 61, 63], "choos": [35, 36, 38, 51, 52, 55, 59, 60, 61, 63, 67, 77, 134], "suggest": [35, 36, 60, 61, 63, 112, 115], "get_random_design": [35, 36, 37, 38, 41, 43], "get_runhistory_encod": [35, 36, 37, 38, 41, 43], "prepar": [35, 36, 51, 52, 100, 101], "abstractrunhistoryencod": [35, 36, 100, 101, 103, 104], "get_target_function_budget": [35, 36, 51, 52, 56, 58, 59], "get_target_function_inst": [35, 36, 51, 52, 56, 58, 59], "get_target_function_se": [35, 36, 51, 52, 56, 58, 59], "configuration_spac": [35, 36, 60, 61, 98, 111], "hash": [35, 36, 117], "histori": [35, 36, 51, 53, 60, 61, 117], "fill": [35, 36, 60, 61, 112, 116], "relev": [35, 36, 60, 61, 63], "trajectori": [35, 36, 51, 52, 53, 55, 56, 59, 60, 61], "tell": [35, 36, 60, 61, 63, 132, 133, 143], "describ": [35, 36, 60, 61, 63], "trialvalu": [35, 36, 51, 52, 53, 55, 56, 59, 60, 61, 63, 98, 99, 111, 112, 113, 114, 116, 128], "regard": [35, 36, 60, 61, 63], "than": [35, 36, 43, 51, 56, 60, 61, 78, 79, 80, 85, 87, 117, 126, 127, 128, 130, 134, 135, 138, 139], "real": [35, 36, 51, 54, 58, 60, 61, 112, 113, 114, 116], "averag": [35, 36, 60, 61, 98, 111, 117, 134, 139], "additional_config": [35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 130], "defaultinitialdesign": [35, 37, 43, 44, 46], "min_config_cal": [35, 37, 38, 41, 43, 51, 52, 56], "max_config_cal": [35, 37, 38, 41, 43, 51, 52, 56, 128, 130], "2000": [35, 37, 51, 52, 56], "min_challeng": [35, 37, 38, 40, 41, 42, 43, 51, 52, 53, 54, 56, 58], "intensify_percentag": [35, 37, 38, 41, 43, 51, 56], "race_against": [35, 37, 38, 41, 43, 51, 56], "consid": [35, 37, 38, 40, 41, 42, 43, 51, 52, 54, 56, 58, 85, 87, 100, 101, 102, 112, 116, 134, 135, 139], "exhaust": [35, 37, 38, 40, 41, 42, 51, 52, 54, 56, 58, 126, 127, 128, 130, 134, 135, 138, 139], "earlier": [35, 37, 38, 40, 41, 42, 51, 52, 54, 56, 58], "much": [35, 37, 38, 41, 51, 56, 60, 61, 63, 98, 111, 112, 114, 134, 138], "percentag": [35, 37, 38, 41, 51, 56], "higher": [35, 37, 38, 41, 51, 56, 127], "n_tree": [35, 37, 41, 85, 87], "ratio_featur": [35, 37, 41, 85, 87], "8333333333333334": [35, 37, 85, 87], "min_samples_split": [35, 37, 41, 85, 87], "min_samples_leaf": [35, 37, 41, 85, 87], "max_depth": [35, 37, 41, 85, 87], "bootstrap": [35, 37, 41, 85, 87], "pca_compon": [35, 37, 65, 66, 67, 68, 69, 77, 85, 87, 88], "tree": [35, 37, 41, 85, 87], "split": [35, 37, 41, 85, 87, 130, 134, 135, 139], "leaf": [35, 37, 41, 85, 87], "depth": [35, 37, 41, 85, 87], "keep": [35, 37, 65, 66, 67, 68, 69, 77, 85, 87, 112, 113, 114, 116, 139], "pca": [35, 37, 65, 66, 67, 68, 69, 77, 85, 87], "randomforest": [35, 37, 41, 42, 85, 87], "length": [35, 37, 38, 41, 43, 51, 56, 67, 71, 73, 77, 98, 111, 117], "meanaggregationstrategi": [35, 37, 38, 41, 43, 89, 91, 138], "probabilityrandomdesign": [35, 37, 38, 41, 93, 97], "n_config": [35, 38, 41, 42, 44, 45, 46, 47, 48, 49, 127, 134, 139], "n_configs_per_hyperparamt": [35, 38, 41, 42], "max_ratio": [35, 38, 41, 42, 44, 45, 46, 47, 48, 49, 128], "disabl": [35, 38, 41, 42, 44, 45, 100, 102, 117], "n_configs_per_hyperparamet": [35, 38, 41, 42, 44, 45, 46, 47, 48, 49], "cover": [35, 38, 41, 42, 44, 45], "sobolinitialdesign": [35, 38, 41, 44, 50, 127], "get_kernel": [35, 38], "kernel": [35, 38, 67, 68, 69, 77, 127], "composit": [35, 38], "hammingkernel": [35, 38, 71, 73], "matern": [35, 38, 71, 74], "nois": [35, 38], "white": [35, 38, 71, 76], "model_typ": [35, 38], "vanilla": [35, 38], "gaussianprocess": [35, 38, 67, 69, 77], "mcmcgaussianprocess": [35, 38, 67, 77], "08447232371720552": [35, 38], "eta": [35, 40, 42, 51, 54, 58, 134, 135], "That": [35, 40, 41, 42, 51, 53], "10000": [35, 41], "experi": [35, 41], "ram": [35, 41], "1048576": [35, 41, 85, 87], "scale": [35, 41, 51, 54, 58, 71, 73, 78, 79, 80, 81, 83, 100, 101, 105, 107, 108, 109, 127], "runhistorylogscaledencod": [35, 41, 100, 102, 107], "form": [35, 42, 78, 80], "randominitialdesign": [35, 42, 44, 49], "fashion": [35, 42, 51, 53, 112, 114, 116], "_collect_data": [35, 42], "notabl": [35, 42], "through": [35, 42, 98, 111], "least": [35, 42, 134], "_min_samples_model": [35, 42], "exist": [35, 42, 98, 111, 127], "until": [35, 42, 112, 113, 114, 116], "surviv": [35, 42], "inquir": [35, 42], "criterion": [35, 42, 51, 58], "intersect": [35, 42], "common": [35, 42, 51, 53, 112, 113, 114, 130], "abstract_intensifi": [35, 42, 126, 127, 128, 130, 134, 135, 138, 139], "_compare_config": [35, 42], "avail": [35, 42, 51, 52, 53, 54, 55, 56, 58, 59, 98, 111, 112, 113, 114, 116], "datapoint": [35, 42], "disambigu": [35, 42], "index": [35, 42], "replac": [35, 42, 43, 99, 112, 116, 134], "n_seed": [35, 42, 51, 54, 58, 117, 134, 135], "\u03b8": [35, 43, 51, 56], "unpromis": [35, 43], "reject": [35, 43], "veri": [35, 43], "dummi": [35, 43], "neither": [35, 43, 98, 111], "nor": [35, 43, 98, 111], "increas": [35, 43, 93, 96, 134, 135], "randommodel": [35, 43, 65, 88], "select_configur": [44, 45], "_select_configur": [44, 45], "factorialinitialdesign": [44, 47], "factori": [44, 47, 98, 99], "corner": [44, 47], "middl": [44, 47], "latinhypercubeinitialdesign": [44, 48], "latin": [44, 48], "hypercub": [44, 48], "arg": [44, 50, 60, 63, 85, 86, 100, 105, 109, 112, 116], "sequenc": [44, 50, 51, 56], "scrambl": [44, 50], "io": [44, 50], "devdoc": [44, 50], "qmc": [44, 50], "pair": [51, 52, 56, 98, 111, 139], "associ": [51, 52, 117], "produc": [51, 52, 112, 113, 114, 116], "get_next_tri": [51, 52, 53, 55, 56, 59], "repeat_config": [51, 52, 53, 55, 56, 59], "runinfoint": [51, 52], "again": [51, 52, 53, 55, 56, 59], "tupl": [51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 63, 65, 66, 71, 72, 84, 85, 87, 98, 100, 101, 102, 111, 112, 113, 114, 116, 119, 122, 135, 138], "trialinfoint": [51, 52, 53, 55, 56, 59, 60, 61, 63, 98, 110], "consum": [51, 52, 53, 55, 56, 59, 112, 113], "encapsul": [51, 52, 53, 55, 56, 59, 112, 113], "iteration_don": [51, 52], "num_trial": [51, 52, 99], "log_trajectori": [51, 52, 53, 55, 56, 59], "statu": [51, 52, 53, 55, 56, 59, 98, 99, 110, 111, 112, 113, 114, 116], "seen": [51, 52, 53, 55, 56, 59], "sec": [51, 52, 53, 55, 56, 59], "mayb": [51, 52, 53, 55, 56, 59], "incumbent_cost": [51, 52, 53, 55, 56, 59, 126, 127, 128, 130, 134, 135, 138, 139], "repeat": [51, 52], "uses_budget": [51, 52, 55, 56, 58, 59], "uses_inst": [51, 52, 55, 56, 58, 59], "uses_se": [51, 52, 53, 55, 56, 59], "abstractparallelintensifi": [51, 53, 58], "racer": [51, 53, 56], "schedul": [51, 53, 93, 95], "basi": [51, 53, 58], "prevent": [51, 53, 56, 58, 71, 72], "idl": [51, 53, 54, 58], "pick": [51, 53, 55, 59], "send": [51, 53], "request": [51, 53, 98, 110], "redirect": [51, 53], "respect": [51, 53, 58, 71, 72, 78, 79, 83], "reli": [51, 53], "choic": [51, 53, 134], "go": [51, 53, 130, 139], "instance_seed_pair": [51, 54, 58], "instance_ord": [51, 54, 58, 117], "shuffle_onc": [51, 54, 58, 117], "incumbent_select": [51, 54, 58, 135], "highest_executed_budget": [51, 54, 58], "n_initial_challeng": [51, 54, 58], "falkner": [51, 54, 58, 67, 69, 77, 79], "2018": [51, 54, 58], "hyperbandwork": [51, 54, 55], "actual": [51, 54, 58, 67, 77, 112, 113], "logic": [51, 54, 58], "shuffl": [51, 54, 58, 117, 130, 134, 135, 139], "highest_budget": [51, 54, 58], "any_budget": [51, 54, 58], "regardless": [51, 54, 58], "\u03b8_new": [51, 56], "\u03b8_inc": [51, 56], "m": [51, 56], "t_intensifi": [51, 56], "\u03c0": [51, 56], "c_hat": [51, 56], "denot": [51, 56], "run_incumb": [51, 56], "less": [51, 56], "equal": [51, 56, 98, 111], "7": [51, 56, 65, 66, 67, 68, 69, 77, 85, 87, 88, 126], "executerun": [51, 56], "run_challeng": [51, 56], "while": [51, 55, 56, 59], "s_miss": [51, 56], "11": [51, 56, 139], "s_torun": [51, 56], "min": [51, 56, 122, 134, 135, 139], "foreach": [51, 56], "13": [51, 56], "14": [51, 56], "\u03c0_common": [51, 56], "ran": [51, 56], "15": [51, 56, 135], "break": [51, 56], "els": [51, 56, 127, 134, 139], "17": [51, 56], "spent": [51, 56], "exce": [51, 56], "19": [51, 56], "sometim": [51, 56], "get_next_challeng": [51, 56], "exercis": [51, 56, 112, 113, 114, 116], "though": [51, 56], "popul": [51, 56, 112, 113, 114, 116], "_configs_to_run": [51, 56], "pool": [51, 56], "regist": [51, 56], "_to_run": [51, 56], "brand": [51, 56], "_next_iter": [51, 56], "mark": [51, 56], "transit": [51, 56], "new_challeng": [51, 56], "charg": [51, 56], "compli": [51, 56, 112, 114], "job": [51, 56, 112, 114], "circumv": [51, 56], "No": [51, 56, 126, 127, 128, 130, 138, 139], "cap": [51, 56], "post": [51, 56, 139], "intensifierstag": [51, 56, 57], "process_incumbent_run": [51, 56], "process_first_config_run": [51, 56], "At": [51, 56], "move": [51, 56, 93, 95, 98, 111], "supplementari": [51, 58], "proceed": [51, 58, 144], "mlr": [51, 58], "press": [51, 58], "v80": [51, 58], "falkner18a": [51, 58], "supp": [51, 58], "oper": [51, 58, 71, 72], "kind": [51, 58], "min_budget": [51, 58, 117, 134, 135], "max_budget": [51, 58, 117, 134, 135], "total": [51, 58, 85, 87, 112, 114, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141], "posit": [51, 58, 89, 92, 112, 113, 114, 116], "anyth": [51, 58, 71, 72, 121], "eg": [51, 58], "successivehalvingwork": [51, 55, 58, 59], "rather": [51, 58, 79], "calculate_budget": [51, 58], "max_iter": [51, 58], "stand": [55, 59], "alon": [55, 59], "numer": [55, 59, 126], "tag": [55, 59], "logger": [55, 59, 121], "messag": [55, 59], "properli": [55, 59, 112, 116], "enum": [57, 98, 110], "successive_halv": [59, 134, 135], "_all_budget": 59, "_n_configs_in_stag": 59, "_min_budget": 59, "_max_budget": 59, "sub": [59, 100, 101], "rout": 59, "basesmbo": [60, 61, 63], "statist": [60, 61], "time_left": [60, 61, 63], "update_acquisition_funct": [60, 61], "assosi": [60, 61], "update_model": [60, 61], "y": [65, 66, 71, 72, 85, 87, 100, 101, 102, 119], "concret": [65, 66], "covariance_typ": [65, 66], "diagon": [65, 66], "varianc": [65, 66, 67, 69, 77, 84, 85, 87, 135], "_predict": [65, 66], "appli": [65, 66, 79, 100, 102, 126], "std": [65, 66], "deviat": [65, 66, 78, 82, 130], "covari": [65, 66], "whole": [65, 66], "var": [65, 66, 84, 85, 87, 117, 135], "predict_margin": [65, 66, 84, 85, 87], "_train": [65, 66], "correspond": [65, 66, 78, 80, 122], "multiobjectivemodel": [65, 84], "wrapper": [65, 84, 112, 113, 114, 116], "abstractgaussianprocess": [67, 68, 69, 77], "n_restart": [67, 69], "normalize_i": [67, 69, 77], "likelihood": [67, 69], "robo": [67, 69, 77, 79], "klein": [67, 69, 77, 79], "mansur": [67, 69, 77, 79], "workshop": [67, 69, 77, 79], "restart": [67, 69, 93, 95], "zero": [67, 69, 77, 100, 105, 107, 108, 109, 126, 128], "unit": [67, 69, 77, 130], "sample_funct": [67, 69], "x_test": [67, 69], "n_func": [67, 69], "posterior": [67, 69], "function_sampl": [67, 69], "arrai": [67, 69, 71, 72, 121, 139], "n_mcmc_walker": [67, 77], "chain_length": [67, 77], "burning_step": [67, 77], "mcmc_sampler": [67, 77], "emce": [67, 77], "average_sampl": [67, 77], "out": [67, 77], "markow": [67, 77], "propos": [67, 77], "walker": [67, 77], "last": [67, 77, 127], "burnin": [67, 77], "sampler": [67, 77], "nut": [67, 77], "abstractkernel": [71, 72, 73, 74, 75, 76], "operate_on": [71, 72, 73, 74, 75, 76], "has_condit": [71, 72, 73, 74, 75, 76], "mixin": [71, 72], "overrid": [71, 72, 126, 127], "place": [71, 72, 130], "hierarchi": [71, 72], "instantiat": [71, 72], "mypi": [71, 72], "won": [71, 72], "know": [71, 72, 128], "relat": [71, 72], "superclass": [71, 72], "some": [71, 72, 100, 101], "statement": [71, 72], "member": [71, 72], "declar": [71, 72], "_call": [71, 72], "super": [71, 72], "get_param": [71, 72, 73], "etc": [71, 72, 117], "abstractprior": [71, 72, 78, 79, 80, 81, 82, 83], "primarili": [71, 72], "eval_gradi": [71, 72], "estim": [71, 72, 85, 87, 100, 101, 126, 127, 128, 130, 134, 135, 138, 139], "subobject": [71, 72], "param": [71, 72], "map": [71, 72, 98, 111], "n_dim": [71, 72], "fix": [71, 72], "constantkernel": [71, 72], "constant_valu": [71, 72], "constant_value_bound": [71, 72], "05": [71, 72, 73, 74, 75, 76, 89, 92, 135], "100000": [71, 72, 73, 74, 75, 76], "k": [71, 72, 98, 111, 144], "gradient": [71, 72, 78, 79, 83, 136, 137, 143], "shape": [71, 72, 78, 80, 139], "n_samples_x": [71, 72], "n_featur": [71, 72], "n_samples_i": [71, 72], "boolean": [71, 72], "k_gradient": [71, 72], "opt": [71, 72], "length_scal": [71, 73, 74, 75], "length_scale_bound": [71, 73, 74, 75], "stationarykernelmixin": [71, 73], "normalizedkernelmixin": [71, 73], "ham": [71, 73], "hyperparameter_length_scal": [71, 73], "maternkernel": [71, 74], "nu": [71, 74], "productkernel": [71, 72], "k1": [71, 72], "k2": [71, 72], "product": [71, 72], "rbfkernel": [71, 75], "rbf": [71, 75, 127], "sumkernel": [71, 72], "whitekernel": [71, 76], "noise_level": [71, 76], "noise_level_bound": [71, 76], "gammaprior": [78, 80], "loc": [78, 80], "gamma": [78, 80, 127], "greater": [78, 80, 117], "canon": [78, 80], "greather": [78, 80, 117], "horseshoeprior": [78, 81], "horsesho": [78, 81], "spearmint": [78, 81, 83], "lognormalprior": [78, 82], "softtophatprior": [78, 83], "lower_bound": [78, 83], "upper_bound": [78, 83], "expon": [78, 83], "soft": [78, 83], "tophat": [78, 83], "upper": [78, 83, 98, 111, 130], "get_gradi": [78, 79, 83], "theta": [78, 79, 83], "hi": [78, 79, 83], "_get_gradi": [78, 79, 83], "get_log_prob": [78, 79, 83], "exponenti": [78, 79, 83], "_get_log_prob": [78, 79, 83], "tophatprior": [78, 83], "whenev": 79, "lnprob": 79, "sample_from_prior": 79, "n_sampl": 79, "_sample_from_prior": 79, "abstractrandomforest": [85, 86, 87], "n_points_per_tre": [85, 87], "eps_pur": [85, 87], "08": [85, 87], "max_nod": [85, 87], "log_i": [85, 87], "account": [85, 87, 100, 101, 134], "node": [85, 87, 112, 114], "assumpt": [85, 87], "uncertainti": [85, 87], "abc": [89, 90, 112, 113], "loss": [89, 90, 91, 92, 112, 116, 135], "update_on_iteration_start": [89, 90, 92], "rho": [89, 92], "bham": [89, 92], "ac": [89, 92], "uk": [89, 92], "jdk": [89, 92], "ukci": [89, 92], "small": [89, 92], "helper": [93, 94], "th": [93, 94, 95, 96, 97], "begin": [93, 94, 96], "cosineannealingrandomdesign": [93, 95], "min_prob": [93, 95], "max_prob": [93, 95], "restart_iter": [93, 95], "decreas": [93, 95, 96, 97], "cosin": [93, 95], "anneal": [93, 95], "final": [93, 95, 126, 127, 128, 130, 134, 135, 138, 139], "_probabl": [93, 95], "dynamicmodulusrandomdesign": [93, 96], "start_modulu": [93, 96], "modulus_incr": [93, 96], "end_modulu": [93, 96], "inf": [93, 96, 117], "fraction": [93, 96], "amount": [93, 96, 112, 114], "ever": [93, 96], "adjust": [93, 96], "integ": [93, 96, 121, 127, 130, 134, 139], "dynamicprobabilityrandomdesign": [93, 97], "multipli": [93, 97], "dataorigin": [98, 110, 111], "definit": [98, 110], "gather": [98, 110], "external_same_inst": [98, 110, 111], "extern": [98, 110, 111], "external_different_inst": [98, 110], "due": [98, 110, 135], "Will": [98, 110, 112, 114], "instanceseedbudgetkei": [98, 99, 111], "instanceseedkei": [98, 99], "objective_weight": [98, 111, 117, 139], "overwrite_existing_tri": [98, 111], "trialkei": [98, 99, 111], "importantli": [98, 111], "theoret": [98, 111], "picklabl": [98, 111], "__contains__": [98, 111], "semant": [98, 111], "__eq__": [98, 111], "__getitem__": [98, 111], "v": [98, 111, 112, 114, 135], "__iter__": [98, 111], "__len__": [98, 111], "len": [98, 111], "statustyp": [98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 116], "starttim": [98, 99, 111], "endtim": [98, 99, 111], "additional_info": [98, 99, 111, 112, 113, 114, 116], "force_upd": [98, 111], "average_cost": [98, 111, 139], "instance_seed_budget_kei": [98, 111], "queri": [98, 111], "wrt": [98, 111], "warn": [98, 111, 130, 134, 135, 139], "config_id": [98, 99, 111, 138], "empti": [98, 111, 112, 113, 114, 116], "get_config": [98, 111, 139], "get_configs_per_budget": [98, 111], "budget_subset": [98, 100, 101, 102, 111], "get_cost": [98, 111], "docstr": [98, 111], "cach": [98, 111], "get_incumb": [98, 111], "get_min_cost": [98, 111], "min_cost": [98, 111], "get_trial": [98, 111], "only_max_observed_budget": [98, 111], "ids_config": [98, 111, 138], "incremental_update_cost": [98, 111], "increment": [98, 111], "load_json": [98, 111], "filenam": [98, 111], "json": [98, 111], "represent": [98, 100, 101, 102, 111], "objective_bound": [98, 111], "reset": [98, 111], "save_json": [98, 111], "save_extern": [98, 111], "sum_cost": [98, 111], "external_ful": [98, 111], "structur": [98, 111], "_config_id_to_inst_seed_budget": [98, 111], "update_cost": [98, 111], "_cost_per_config": [98, 111], "_num_trials_per_config": [98, 111], "scratch": [98, 111], "accordingli": [98, 111, 130], "update_from_json": [98, 111], "intenum": [98, 110], "run_info": [98, 110], "trajectoryitem": 99, "walltime_us": 99, "trajentri": 99, "considered_st": [100, 101, 102, 103, 104, 106, 107, 108], "memoryout": [100, 101, 102, 103, 104, 106, 107, 108], "donotadv": [100, 101, 102, 103, 104, 106, 107, 108], "lower_budget_st": [100, 101, 102, 103, 104, 106, 107, 108], "scale_percentag": [100, 101, 102, 103, 104, 106, 107, 108], "noqa": [100, 101], "e501": [100, 101], "percentil": [100, 101], "distanc": [100, 101], "typeerror": [100, 101], "get_configur": [100, 101], "append": [100, 101, 138], "configs_arrai": [100, 101], "abstract_multi_objective_algorithm": [100, 101], "objecct": [100, 101], "defaul": [100, 101], "transform_response_valu": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "respons": [100, 101, 103, 105, 106, 107, 108, 109], "transformed_valu": [100, 101], "runhistoryeipsencod": [100, 103], "runhistoryinversescaledencod": [100, 105], "linearli": [100, 105, 107, 108, 109], "invers": [100, 105], "runhistorylogencod": [100, 106], "runhistoryrawencod": [100, 102], "runhistroi": [100, 102], "raw": [100, 102], "transform_raw_valu": [100, 102], "transform_with_raw": [100, 102], "imput": [100, 102, 119], "censor": [100, 102], "timeout": [100, 102], "cutoff": [100, 102], "y_raw": [100, 102], "runhistoryrawscaledencod": [100, 102], "runhistoryscaledencod": [100, 108], "runhistorysqrtscaledencod": [100, 109], "squar": [100, 109, 138], "required_argu": [112, 113], "interact": [112, 113], "perspect": [112, 113], "launch": [112, 113, 114, 116], "submit": [112, 113, 114, 116], "submit_run": [112, 113, 114], "run_wrapp": [112, 113, 114], "among": [112, 113], "realli": [112, 113], "translat": [112, 113], "iter_result": [112, 113, 114, 116], "decis": [112, 113, 114, 116], "abl": [112, 113, 127], "count_available_work": [112, 113, 114, 116], "is_run": [112, 113, 114, 116], "serial": [112, 113, 114, 116], "instantli": [112, 113, 114, 116], "pend": [112, 113, 114, 116], "_results_queu": [112, 113, 114, 116], "get_finish": [112, 113, 114, 116], "aka": [112, 113, 114], "repres": [112, 113, 114, 116, 121, 135, 144], "around": [112, 113], "simplifi": [112, 113], "isol": [112, 113], "submit_tri": [112, 113, 114, 116], "embed": [112, 113, 114], "eventu": [112, 113], "fifo": [112, 113], "dictat": [112, 113, 114], "submiss": [112, 113], "endeavor": [112, 113], "daskparallelrunn": [112, 114], "single_work": [112, 114], "patienc": [112, 114], "dask_client": [112, 114], "bridg": [112, 114], "pattern": [112, 114], "baserunn": [112, 114], "neext": [112, 114], "dask": [112, 114, 117], "precis": [112, 114], "task": [112, 114, 116, 117, 130], "pickl": [112, 114], "come": [112, 114], "Such": [112, 114], "futur": [112, 114], "manag": [112, 114, 117], "client": [112, 114], "fail": [112, 114, 115, 117], "cluster": [112, 114], "attach": [112, 114], "manual": [112, 114, 130], "upon": [112, 114], "__del__": [112, 114], "forc": [112, 114], "dynam": [112, 114], "alloc": [112, 114, 134], "otherwis": [112, 114, 116, 117], "firstruncrashedexcept": [112, 115], "targetalgorithmabortexcept": [112, 115], "targetfunctionrunn": [112, 116], "element": [112, 116, 121], "algorithm_kwarg": [112, 116], "walltim": [112, 116], "immedi": [112, 116], "posixpath": 117, "smac3_output": 117, "crash_cost": 117, "termination_cost_threshold": 117, "cputime_limit": 117, "trial_walltime_limit": 117, "trial_memory_limit": 117, "context": 117, "frame": 117, "mostli": 117, "constraint": [117, 135], "spawn": 117, "mb": [117, 133, 137, 141], "__post_init__": 117, "count_instance_featur": 117, "count": 117, "count_object": 117, "make_serializ": 117, "serializ": [117, 121], "convert_configurations_to_arrai": 119, "get_conditional_hyperparamet": 119, "get_typ": 119, "recursively_compare_dict": 120, "d1": 120, "d2": 120, "diff": 120, "recurs": 120, "string": [120, 121], "format": [120, 121], "format_arrai": 121, "format_v": 121, "get_logg": 121, "logger_nam": 121, "setup_log": 121, "own": 121, "normalize_cost": 122, "unnorm": 122, "normalized_cost": 122, "click": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "download": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "2d": [126, 140, 141, 143], "rosenbrock": [126, 128], "larg": 126, "abstract_initial_design": [126, 127, 128, 130, 134, 135, 138, 139], "py": [126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141], "133": [126, 127, 128, 130, 134, 135, 138, 139], "275": [126, 127, 128, 130, 138, 139], "446": [126, 127, 128, 130, 138, 139], "567": [126, 127, 128, 130, 138, 139], "1102": [126, 128], "7878": [126, 128], "340": [126, 127, 128, 130, 135, 138, 139], "4656": 126, "364": [126, 127, 128, 130, 134, 135, 138, 139], "367": [126, 127, 128, 130, 134, 135, 138, 139], "x0": [126, 128], "9968221839517355": [126, 128], "03135360777378082": 126, "x1": [126, 128], "30847043171525": [126, 128], "21179260686039925": 126, "4314": 126, "6502527847737536": 126, "154531223148483": 126, "0818": 126, "47602048278586295": 126, "13155812805683098": 126, "8351": 126, "7031544591929872": 126, "842364243857716": 126, "260": [126, 127, 128, 130, 134, 135, 138, 139], "abstract_facad": [126, 127, 128, 130, 134, 135, 138, 139], "314": [126, 127, 128, 130, 134, 135, 138, 139], "315": [126, 127, 128, 130, 134, 135, 138, 139], "8351420167215506": 126, "16916": [126, 128], "__copyright__": [126, 127, 128, 130, 134, 135, 138, 139], "copyright": [126, 127, 128, 130, 134, 135, 138, 139], "freiburg": [126, 127, 128, 130, 134, 135, 138, 139], "hannov": [126, 127, 128, 130, 134, 135, 138, 139], "__license__": [126, 127, 128, 130, 134, 135, 138, 139], "rosenbrock2d": [126, 128], "add_hyperparamet": [126, 127, 128, 130, 134, 135, 139], "toi": [126, 128], "serv": [126, 128], "x_i": [126, 128], "domain": [126, 128], "interv": [126, 128], "x2": [126, 128], "__name__": [126, 127, 128, 130, 134, 135, 138, 139], "__main__": [126, 127, 128, 130, 134, 135, 138, 139], "synthetic_funct": 126, "300": [126, 134, 139], "default_cost": [126, 127, 128, 130, 134, 135, 138, 139], "get_default_configur": [126, 127, 128, 130, 134, 135, 138, 139], "let": [126, 127, 128, 130, 134, 139], "script": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "994": [126, 133], "1_synthetic_funct": [126, 133], "jupyt": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "notebook": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139, 143], "ipynb": [126, 127, 128, 129, 130, 131, 134, 135, 138, 139], "mix": 127, "0667": 127, "0133": 127, "03992740880515713": 127, "2760639488343621": 127, "linear": 127, "shrink": 127, "013333333333333308": 127, "03333333333333344": 127, "incondit": [127, 134, 139], "wide": [127, 130], "poli": 127, "sigmoid": 127, "001": [127, 134, 139, 141], "degre": 127, "coef": 127, "coef0": 127, "auto": 127, "gamma_valu": 127, "0001": [127, 134, 139], "Then": 127, "use_degre": 127, "parent": [127, 134, 139], "use_coef": 127, "use_gamma": 127, "use_gamma_valu": 127, "add_condit": [127, 134, 139], "config_dict": 127, "get_dictionari": 127, "pop": 127, "alter": 127, "979": [127, 133], "2_svm_cv": [127, 133], "81": 128, "700": 128, "6438": 128, "0801787059894652": 128, "6511913893559456": 128, "692": 128, "266": 128, "11841909303497555": 128, "642739687876742": 128, "664": 128, "4209": 128, "23190729051219083": 128, "6284718736435133": 128, "631": 128, "3981": 128, "42553725563416656": 128, "68979871241151": 128, "556": 128, "8875": 128, "5047246675538846": 128, "60979112499804": 128, "550": 128, "0838": 128, "5669451075267817": 128, "6615730174631764": 128, "72": 128, "1425": 128, "7153215381459042": 128, "3605748848483428": 128, "14246196585546": 128, "dataclass": 128, "minimium": 128, "assert": 128, "703": [128, 133], "3_ask_and_tel": [128, 133], "000": [129, 131, 133], "4_callback": [129, 133], "layer": [130, 135, 136, 137, 143], "perceptron": [130, 135, 136, 137, 143], "mlp": [130, 134, 135, 139], "deriv": 130, "knowledg": 130, "similar": 130, "intuit": 130, "gain": 130, "categoricalhyperparamet": 130, "optimizt": 130, "stick": 130, "prior_acqusition_funct": 130, "107": 130, "8987": 130, "039": 130, "logist": [130, 134, 139], "relu": [130, 134, 139], "batch_siz": [130, 134, 139], "324": 130, "128": 130, "learning_rate_init": [130, 134, 139], "1134996369914405": 130, "0010000000000000002": 130, "n_layer": [130, 134, 139], "n_neuron": [130, 134, 139], "157": 130, "108": 130, "sgd": [130, 134, 135, 139], "adam": [130, 134, 139], "0267": 130, "83": 130, "001682337847169736": 130, "0245": 130, "63": 130, "024487774682760866": 130, "05787991333952347": 130, "03506344784896309": 130, "betaintegerhyperparamet": 130, "normalfloathyperparamet": 130, "uniformintegerhyperparamet": 130, "load_digit": [130, 134, 135, 139], "convergencewarn": 130, "stratifiedkfold": [130, 134, 135, 139], "neural_network": [130, 134, 139], "mlpclassifi": [130, 134, 139], "digit": [130, 134, 135, 139], "illustr": [130, 134], "educ": 130, "beforehand": 130, "hp": 130, "believ": 130, "rel": 130, "And": [130, 139], "skew": 130, "toward": 130, "wider": 130, "256": [130, 134, 139], "alpha": [130, 135, 138], "60": 130, "tanh": [130, 134, 139], "default_valu": 130, "moreov": 130, "opinion": 130, "batch": [130, 134], "leav": 130, "512": 130, "center": 130, "catch_warn": [130, 134, 135, 139], "filterwarn": [130, 134, 135, 139], "categori": 130, "hidden_layer_s": [130, 134, 139], "solver": [130, 134, 139], "max_it": [130, 134, 135, 139], "fold": [130, 134, 139], "n_split": [130, 134, 135, 139], "error_scor": [130, 134, 139], "default_config": 130, "40": [130, 134, 135, 139], "conduct": 130, "proven": 130, "35": [130, 133], "043": [130, 133], "5_prior": [130, 133], "6_full_custom": [131, 133], "synthet": [132, 133, 143], "00": [133, 134, 135, 137, 141], "39": 133, "719": 133, "examples_1_bas": 133, "02": 133, "good": 134, "123": [134, 135], "197": [134, 135], "25": 134, "abstract_parallel_intensifi": [134, 135], "93": [134, 135], "hyperband_work": [134, 135], "165": [134, 135], "successive_halving_work": [134, 135], "396": [134, 135], "613": 134, "0495": 134, "0568": 134, "3333": 134, "155": 134, "006677306766018313": 134, "56": 134, "lbfg": [134, 139], "245": [134, 135], "33": 134, "0345": 134, "0406": 134, "0000": 134, "117": 134, "008282754423021153": 134, "0189": 134, "91": 134, "006390670908394775": 134, "183": 134, "01892138656762621": 134, "4307319715258433": 134, "025047972763850068": 134, "equalscondit": [134, 139], "30": [134, 135, 139], "invscal": [134, 135, 139], "restrict": 134, "use_lr": [134, 139], "use_lr_init": [134, 139], "use_batch_s": [134, 139], "deactiv": 134, "virtu": 134, "placehold": 134, "lr": [134, 139], "lr_init": [134, 139], "ceil": [134, 139], "407": [134, 137], "1_mlp_epoch": [134, 137], "wlog": 135, "had": 135, "binari": 135, "longer": 135, "But": 135, "217": 135, "0137": 135, "0164": 135, "5488135039273248": 135, "11827442586893322": 135, "eta0": 135, "0006273927602293597": 135, "614170248896958e": 135, "l1_ratio": 135, "317983179393976": 135, "24875314351995803": 135, "67": 135, "27": 135, "008231389269086701": 135, "13423167867113728": 135, "007983889335257179": 135, "__future__": [135, 138, 139], "annot": [135, 138, 139], "itertool": 135, "linear_model": 135, "sgdclassifi": 135, "digitsdataset": 135, "__init__": 135, "_data": 135, "get_inst": 135, "classa": 135, "classb": 135, "target_nam": 135, "get_instance_featur": 135, "get_instance_data": 135, "logical_or": 135, "00001": 135, "clf": 135, "penalti": 135, "elasticnet": 135, "early_stop": 135, "lot": 135, "32": [135, 137], "605": [135, 137, 141], "2_sgd_dataset": [135, 137], "stochast": [136, 137, 143], "descent": [136, 137, 143], "01": [137, 141], "21": 137, "012": 137, "examples_2_multi_fidel": 137, "shown": [138, 139], "3059": 138, "3062": 138, "9324859157204628": 138, "8640956835343081": 138, "2866": 138, "8640174051851504": 138, "8639784171134841": 138, "8621703607018727": 138, "2865": 138, "8613802024158463": 138, "8607574654896779": 138, "86057300810144": 138, "8602103898606681": 138, "859905318504627": 138, "8598739916684282": 138, "8597295956781026": 138, "859520085979836": 138, "8593199836090943": 138, "8587705866744733": 138, "8574074961764109": 138, "8571993851749746": 138, "8569651981964457": 138, "856959899407526": 138, "8567608637383648": 138, "8562151402955451": 138, "2864": 138, "8557358664458059": 138, "2527": 138, "2558": 138, "0849066921609452": 138, "25271859054525136": 138, "17702253": 138, "83739576": 138, "matplotlib": [138, 139], "pyplot": [138, 139], "plt": [138, 139], "aggregation_strategi": 138, "f1": 138, "f2": 138, "metric1": 138, "metric2": 138, "all_x": 138, "scatter": [138, 139], "blue": 138, "zorder": 138, "3000": 138, "vline": 138, "linestyl": [138, 139], "color": 138, "red": [138, 139], "hline": 138, "plot_from_smac": 138, "rh": 138, "trial_kei": 138, "150": 138, "twice": 138, "604": [138, 141], "1_schaffer": [138, 141], "highlight": 139, "ones": 139, "three": 139, "abstract_runn": 139, "106": 139, "2515": 139, "7533": 139, "77": 139, "000534923804864797": 139, "146": 139, "251": 139, "0593": 139, "0633": 139, "66": 139, "0032548296377712667": 139, "152": 139, "028509751331900132": 139, "62956618": 139, "13269758": 139, "0257851": 139, "55951246": 139, "start_tim": 139, "plot_pareto": 139, "luckili": 139, "vstack": 139, "mask": 139, "pareto_mask": 139, "dtype": 139, "enumer": 139, "axi": 139, "cost1": 139, "cost2": 139, "argsort": 139, "x_upper": 139, "y_upper": 139, "x_front": 139, "y_front": 139, "marker": 139, "titl": [139, 144], "xlabel": 139, "ylabel": 139, "focu": 139, "43": [139, 141], "2_parego": [139, 141], "schaffer": [140, 141, 143], "44": 141, "examples_3_multi_object": 141, "were": 143, "varieti": 143, "examples_python": 143, "zip": 143, "examples_jupyt": 143, "Its": 144, "cite": 144, "inproceed": 144, "lindauer": 144, "arxiv21a": 144, "author": 144, "mariu": 144, "katharina": 144, "eggensperg": 144, "matthia": 144, "feurer": 144, "andr\u00e9": 144, "biedenkapp": 144, "difan": 144, "deng": 144, "carolin": 144, "benjamin": 144, "tim": 144, "ruhkopf": 144, "ren\u00e9": 144, "sass": 144, "frank": 144, "versatil": 144, "booktitl": 144, "2109": 144, "09831": 144, "year": 144, "url": 144, "ab": 144, "hoo": 144, "h": 144, "leyton": 144, "brown": 144, "confer": 144, "intellig": 144, "lion": 144, "develop": 144, "visit": 144, "guidelin": 144}, "objects": {"smac": [[18, 0, 0, "-", "acquisition"], [34, 0, 0, "-", "callback"], [35, 0, 0, "-", "facade"], [44, 0, 0, "-", "initial_design"], [51, 0, 0, "-", "intensifier"], [60, 0, 0, "-", "main"], [65, 0, 0, "-", "model"], [89, 0, 0, "-", "multi_objective"], [93, 0, 0, "-", "random_design"], [98, 0, 0, "-", "runhistory"], [112, 0, 0, "-", "runner"], [117, 0, 0, "-", "scenario"], [118, 0, 0, "-", "utils"]], "smac.acquisition": [[19, 0, 0, "-", "functions"], [27, 0, 0, "-", "maximizers"]], "smac.acquisition.functions": [[19, 1, 1, "", "AbstractAcquisitionFunction"], [19, 1, 1, "", "EI"], [19, 1, 1, "", "EIPS"], [19, 1, 1, "", "IntegratedAcquisitionFunction"], [19, 1, 1, "", "LCB"], [19, 1, 1, "", "PI"], [19, 1, 1, "", "PriorAcquisitionFunction"], [19, 1, 1, "", "TS"], [20, 0, 0, "-", "abstract_acquisition_function"], [21, 0, 0, "-", "confidence_bound"], [22, 0, 0, "-", "expected_improvement"], [23, 0, 0, "-", "integrated_acquisition_function"], [24, 0, 0, "-", "prior_acqusition_function"], [25, 0, 0, "-", "probability_improvement"], [26, 0, 0, "-", "thompson"]], "smac.acquisition.functions.AbstractAcquisitionFunction": [[19, 2, 1, "", "__call__"], [19, 3, 1, "", "meta"], [19, 3, 1, "", "model"], [19, 3, 1, "", "name"], [19, 2, 1, "", "update"]], "smac.acquisition.functions.EI": [[19, 3, 1, "", "meta"], [19, 3, 1, "", "name"]], "smac.acquisition.functions.EIPS": [[19, 3, 1, "", "name"]], "smac.acquisition.functions.IntegratedAcquisitionFunction": [[19, 3, 1, "", "meta"], [19, 3, 1, "", "name"]], "smac.acquisition.functions.LCB": [[19, 3, 1, "", "meta"], [19, 3, 1, "", "name"]], "smac.acquisition.functions.PI": [[19, 3, 1, "", "meta"], [19, 3, 1, "", "name"]], "smac.acquisition.functions.PriorAcquisitionFunction": [[19, 3, 1, "", "meta"], [19, 3, 1, "", "model"], [19, 3, 1, "", "name"]], "smac.acquisition.functions.TS": [[19, 3, 1, "", "name"]], "smac.acquisition.functions.abstract_acquisition_function": [[20, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction": [[20, 2, 1, "", "__call__"], [20, 3, 1, "", "meta"], [20, 3, 1, "", "model"], [20, 3, 1, "", "name"], [20, 2, 1, "", "update"]], "smac.acquisition.functions.confidence_bound": [[21, 1, 1, "", "LCB"]], "smac.acquisition.functions.confidence_bound.LCB": [[21, 3, 1, "", "meta"], [21, 3, 1, "", "name"]], "smac.acquisition.functions.expected_improvement": [[22, 1, 1, "", "EI"], [22, 1, 1, "", "EIPS"]], "smac.acquisition.functions.expected_improvement.EI": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.functions.expected_improvement.EIPS": [[22, 3, 1, "", "name"]], "smac.acquisition.functions.integrated_acquisition_function": [[23, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.functions.integrated_acquisition_function.IntegratedAcquisitionFunction": [[23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.functions.prior_acqusition_function": [[24, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.functions.prior_acqusition_function.PriorAcquisitionFunction": [[24, 3, 1, "", "meta"], [24, 3, 1, "", "model"], [24, 3, 1, "", "name"]], "smac.acquisition.functions.probability_improvement": [[25, 1, 1, "", "PI"]], "smac.acquisition.functions.probability_improvement.PI": [[25, 3, 1, "", "meta"], [25, 3, 1, "", "name"]], "smac.acquisition.functions.thompson": [[26, 1, 1, "", "TS"]], "smac.acquisition.functions.thompson.TS": [[26, 3, 1, "", "name"]], "smac.acquisition.maximizers": [[27, 1, 1, "", "AbstractAcquisitionMaximizer"], [27, 1, 1, "", "DifferentialEvolution"], [27, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [27, 1, 1, "", "LocalAndSortedRandomSearch"], [27, 1, 1, "", "LocalSearch"], [27, 1, 1, "", "RandomSearch"], [28, 0, 0, "-", "abstract_acqusition_maximizer"], [29, 0, 0, "-", "differential_evolution"], [30, 0, 0, "-", "helpers"], [31, 0, 0, "-", "local_and_random_search"], [32, 0, 0, "-", "local_search"], [33, 0, 0, "-", "random_search"]], "smac.acquisition.maximizers.AbstractAcquisitionMaximizer": [[27, 3, 1, "", "acquisition_function"], [27, 2, 1, "", "maximize"], [27, 3, 1, "", "meta"]], "smac.acquisition.maximizers.LocalAndSortedRandomSearch": [[27, 3, 1, "", "acquisition_function"], [27, 3, 1, "", "meta"]], "smac.acquisition.maximizers.LocalSearch": [[27, 3, 1, "", "meta"]], "smac.acquisition.maximizers.abstract_acqusition_maximizer": [[28, 1, 1, "", "AbstractAcquisitionMaximizer"]], "smac.acquisition.maximizers.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer": [[28, 3, 1, "", "acquisition_function"], [28, 2, 1, "", "maximize"], [28, 3, 1, "", "meta"]], "smac.acquisition.maximizers.differential_evolution": [[29, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.maximizers.helpers": [[30, 1, 1, "", "ChallengerList"]], "smac.acquisition.maximizers.local_and_random_search": [[31, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [31, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.maximizers.local_and_random_search.LocalAndSortedRandomSearch": [[31, 3, 1, "", "acquisition_function"], [31, 3, 1, "", "meta"]], "smac.acquisition.maximizers.local_search": [[32, 1, 1, "", "LocalSearch"]], "smac.acquisition.maximizers.local_search.LocalSearch": [[32, 3, 1, "", "meta"]], "smac.acquisition.maximizers.random_search": [[33, 1, 1, "", "RandomSearch"]], "smac.callback": [[34, 1, 1, "", "Callback"]], "smac.callback.Callback": [[34, 2, 1, "", "on_ask_end"], [34, 2, 1, "", "on_ask_start"], [34, 2, 1, "", "on_end"], [34, 2, 1, "", "on_iteration_end"], [34, 2, 1, "", "on_iteration_start"], [34, 2, 1, "", "on_next_configurations_end"], [34, 2, 1, "", "on_next_configurations_start"], [34, 2, 1, "", "on_start"], [34, 2, 1, "", "on_tell_end"], [34, 2, 1, "", "on_tell_start"]], "smac.facade": [[35, 1, 1, "", "AbstractFacade"], [35, 1, 1, "", "AlgorithmConfigurationFacade"], [35, 1, 1, "", "BlackBoxFacade"], [35, 1, 1, "", "HyperbandFacade"], [35, 1, 1, "", "HyperparameterOptimizationFacade"], [35, 1, 1, "", "MultiFidelityFacade"], [35, 1, 1, "", "RandomFacade"], [36, 0, 0, "-", "abstract_facade"], [37, 0, 0, "-", "algorithm_configuration_facade"], [38, 0, 0, "-", "blackbox_facade"], [39, 0, 0, "-", "boing_facade"], [40, 0, 0, "-", "hyperband_facade"], [41, 0, 0, "-", "hyperparameter_optimization_facade"], [42, 0, 0, "-", "multi_fidelity_facade"], [43, 0, 0, "-", "random_facade"]], "smac.facade.AbstractFacade": [[35, 2, 1, "", "ask"], [35, 2, 1, "", "get_acquisition_function"], [35, 2, 1, "", "get_acquisition_maximizer"], [35, 2, 1, "", "get_initial_design"], [35, 2, 1, "", "get_intensifier"], [35, 2, 1, "", "get_model"], [35, 2, 1, "", "get_multi_objective_algorithm"], [35, 2, 1, "", "get_next_configurations"], [35, 2, 1, "", "get_random_design"], [35, 2, 1, "", "get_runhistory_encoder"], [35, 2, 1, "", "get_target_function_budgets"], [35, 2, 1, "", "get_target_function_instances"], [35, 2, 1, "", "get_target_function_seeds"], [35, 3, 1, "", "incumbent"], [35, 3, 1, "", "meta"], [35, 2, 1, "", "optimize"], [35, 3, 1, "", "runhistory"], [35, 3, 1, "", "scenario"], [35, 3, 1, "", "stats"], [35, 2, 1, "", "tell"], [35, 2, 1, "", "validate"]], "smac.facade.AlgorithmConfigurationFacade": [[35, 2, 1, "", "get_acquisition_function"], [35, 2, 1, "", "get_acquisition_maximizer"], [35, 2, 1, "", "get_initial_design"], [35, 2, 1, "", "get_intensifier"], [35, 2, 1, "", "get_model"], [35, 2, 1, "", "get_multi_objective_algorithm"], [35, 2, 1, "", "get_random_design"], [35, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.BlackBoxFacade": [[35, 2, 1, "", "get_acquisition_function"], [35, 2, 1, "", "get_acquisition_maximizer"], [35, 2, 1, "", "get_initial_design"], [35, 2, 1, "", "get_intensifier"], [35, 2, 1, "", "get_kernel"], [35, 2, 1, "", "get_model"], [35, 2, 1, "", "get_multi_objective_algorithm"], [35, 2, 1, "", "get_random_design"], [35, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.HyperbandFacade": [[35, 2, 1, "", "get_intensifier"]], "smac.facade.HyperparameterOptimizationFacade": [[35, 2, 1, "", "get_acquisition_function"], [35, 2, 1, "", "get_acquisition_maximizer"], [35, 2, 1, "", "get_initial_design"], [35, 2, 1, "", "get_intensifier"], [35, 2, 1, "", "get_model"], [35, 2, 1, "", "get_multi_objective_algorithm"], [35, 2, 1, "", "get_random_design"], [35, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.MultiFidelityFacade": [[35, 2, 1, "", "get_initial_design"], [35, 2, 1, "", "get_intensifier"]], "smac.facade.RandomFacade": [[35, 2, 1, "", "get_acquisition_function"], [35, 2, 1, "", "get_acquisition_maximizer"], [35, 2, 1, "", "get_initial_design"], [35, 2, 1, "", "get_intensifier"], [35, 2, 1, "", "get_model"], [35, 2, 1, "", "get_multi_objective_algorithm"], [35, 2, 1, "", "get_random_design"], [35, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.abstract_facade": [[36, 1, 1, "", "AbstractFacade"]], "smac.facade.abstract_facade.AbstractFacade": [[36, 2, 1, "", "ask"], [36, 2, 1, "", "get_acquisition_function"], [36, 2, 1, "", "get_acquisition_maximizer"], [36, 2, 1, "", "get_initial_design"], [36, 2, 1, "", "get_intensifier"], [36, 2, 1, "", "get_model"], [36, 2, 1, "", "get_multi_objective_algorithm"], [36, 2, 1, "", "get_next_configurations"], [36, 2, 1, "", "get_random_design"], [36, 2, 1, "", "get_runhistory_encoder"], [36, 2, 1, "", "get_target_function_budgets"], [36, 2, 1, "", "get_target_function_instances"], [36, 2, 1, "", "get_target_function_seeds"], [36, 3, 1, "", "incumbent"], [36, 3, 1, "", "meta"], [36, 2, 1, "", "optimize"], [36, 3, 1, "", "runhistory"], [36, 3, 1, "", "scenario"], [36, 3, 1, "", "stats"], [36, 2, 1, "", "tell"], [36, 2, 1, "", "validate"]], "smac.facade.algorithm_configuration_facade": [[37, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade": [[37, 2, 1, "", "get_acquisition_function"], [37, 2, 1, "", "get_acquisition_maximizer"], [37, 2, 1, "", "get_initial_design"], [37, 2, 1, "", "get_intensifier"], [37, 2, 1, "", "get_model"], [37, 2, 1, "", "get_multi_objective_algorithm"], [37, 2, 1, "", "get_random_design"], [37, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[38, 1, 1, "", "BlackBoxFacade"]], "smac.facade.blackbox_facade.BlackBoxFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_kernel"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.hyperband_facade": [[40, 1, 1, "", "HyperbandFacade"]], "smac.facade.hyperband_facade.HyperbandFacade": [[40, 2, 1, "", "get_intensifier"]], "smac.facade.hyperparameter_optimization_facade": [[41, 1, 1, "", "HyperparameterOptimizationFacade"]], "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade": [[41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.multi_fidelity_facade": [[42, 1, 1, "", "MultiFidelityFacade"]], "smac.facade.multi_fidelity_facade.MultiFidelityFacade": [[42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"]], "smac.facade.random_facade": [[43, 1, 1, "", "RandomFacade"]], "smac.facade.random_facade.RandomFacade": [[43, 2, 1, "", "get_acquisition_function"], [43, 2, 1, "", "get_acquisition_maximizer"], [43, 2, 1, "", "get_initial_design"], [43, 2, 1, "", "get_intensifier"], [43, 2, 1, "", "get_model"], [43, 2, 1, "", "get_multi_objective_algorithm"], [43, 2, 1, "", "get_random_design"], [43, 2, 1, "", "get_runhistory_encoder"]], "smac.initial_design": [[44, 1, 1, "", "AbstractInitialDesign"], [44, 1, 1, "", "DefaultInitialDesign"], [44, 1, 1, "", "FactorialInitialDesign"], [44, 1, 1, "", "LatinHypercubeInitialDesign"], [44, 1, 1, "", "RandomInitialDesign"], [44, 1, 1, "", "SobolInitialDesign"], [45, 0, 0, "-", "abstract_initial_design"], [46, 0, 0, "-", "default_design"], [47, 0, 0, "-", "factorial_design"], [48, 0, 0, "-", "latin_hypercube_design"], [49, 0, 0, "-", "random_design"], [50, 0, 0, "-", "sobol_design"]], "smac.initial_design.AbstractInitialDesign": [[44, 3, 1, "", "meta"], [44, 2, 1, "", "select_configurations"]], "smac.initial_design.abstract_initial_design": [[45, 1, 1, "", "AbstractInitialDesign"]], "smac.initial_design.abstract_initial_design.AbstractInitialDesign": [[45, 3, 1, "", "meta"], [45, 2, 1, "", "select_configurations"]], "smac.initial_design.default_design": [[46, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[47, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[48, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.random_design": [[49, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[50, 1, 1, "", "SobolInitialDesign"]], "smac.intensifier": [[51, 1, 1, "", "AbstractIntensifier"], [51, 1, 1, "", "AbstractParallelIntensifier"], [51, 1, 1, "", "Hyperband"], [51, 1, 1, "", "Intensifier"], [51, 1, 1, "", "SuccessiveHalving"], [52, 0, 0, "-", "abstract_intensifier"], [53, 0, 0, "-", "abstract_parallel_intensifier"], [54, 0, 0, "-", "hyperband"], [55, 0, 0, "-", "hyperband_worker"], [56, 0, 0, "-", "intensifier"], [57, 0, 0, "-", "stages"], [58, 0, 0, "-", "successive_halving"], [59, 0, 0, "-", "successive_halving_worker"]], "smac.intensifier.AbstractIntensifier": [[51, 2, 1, "", "get_next_trial"], [51, 2, 1, "", "get_target_function_budgets"], [51, 2, 1, "", "get_target_function_instances"], [51, 2, 1, "", "get_target_function_seeds"], [51, 3, 1, "", "iteration_done"], [51, 3, 1, "", "meta"], [51, 3, 1, "", "num_trials"], [51, 2, 1, "", "process_results"], [51, 3, 1, "", "repeat_configs"], [51, 3, 1, "", "uses_budgets"], [51, 3, 1, "", "uses_instances"], [51, 3, 1, "", "uses_seeds"]], "smac.intensifier.AbstractParallelIntensifier": [[51, 2, 1, "", "get_next_trial"], [51, 2, 1, "", "process_results"], [51, 3, 1, "", "uses_seeds"]], "smac.intensifier.Intensifier": [[51, 2, 1, "", "get_next_challenger"], [51, 2, 1, "", "get_next_trial"], [51, 2, 1, "", "get_target_function_budgets"], [51, 2, 1, "", "get_target_function_instances"], [51, 2, 1, "", "get_target_function_seeds"], [51, 3, 1, "", "intensify_percentage"], [51, 3, 1, "", "meta"], [51, 2, 1, "", "process_results"], [51, 3, 1, "", "uses_budgets"], [51, 3, 1, "", "uses_instances"], [51, 3, 1, "", "uses_seeds"]], "smac.intensifier.SuccessiveHalving": [[51, 2, 1, "", "calculate_budgets"], [51, 2, 1, "", "get_target_function_budgets"], [51, 2, 1, "", "get_target_function_instances"], [51, 2, 1, "", "get_target_function_seeds"], [51, 3, 1, "", "meta"], [51, 3, 1, "", "uses_budgets"], [51, 3, 1, "", "uses_instances"]], "smac.intensifier.abstract_intensifier": [[52, 1, 1, "", "AbstractIntensifier"]], "smac.intensifier.abstract_intensifier.AbstractIntensifier": [[52, 2, 1, "", "get_next_trial"], [52, 2, 1, "", "get_target_function_budgets"], [52, 2, 1, "", "get_target_function_instances"], [52, 2, 1, "", "get_target_function_seeds"], [52, 3, 1, "", "iteration_done"], [52, 3, 1, "", "meta"], [52, 3, 1, "", "num_trials"], [52, 2, 1, "", "process_results"], [52, 3, 1, "", "repeat_configs"], [52, 3, 1, "", "uses_budgets"], [52, 3, 1, "", "uses_instances"], [52, 3, 1, "", "uses_seeds"]], "smac.intensifier.abstract_parallel_intensifier": [[53, 1, 1, "", "AbstractParallelIntensifier"]], "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier": [[53, 2, 1, "", "get_next_trial"], [53, 2, 1, "", "process_results"], [53, 3, 1, "", "uses_seeds"]], "smac.intensifier.hyperband": [[54, 1, 1, "", "Hyperband"]], "smac.intensifier.hyperband_worker": [[55, 1, 1, "", "HyperbandWorker"]], "smac.intensifier.hyperband_worker.HyperbandWorker": [[55, 2, 1, "", "get_next_trial"], [55, 2, 1, "", "process_results"], [55, 3, 1, "", "uses_budgets"], [55, 3, 1, "", "uses_instances"], [55, 3, 1, "", "uses_seeds"]], "smac.intensifier.intensifier": [[56, 1, 1, "", "Intensifier"]], "smac.intensifier.intensifier.Intensifier": [[56, 2, 1, "", "get_next_challenger"], [56, 2, 1, "", "get_next_trial"], [56, 2, 1, "", "get_target_function_budgets"], [56, 2, 1, "", "get_target_function_instances"], [56, 2, 1, "", "get_target_function_seeds"], [56, 3, 1, "", "intensify_percentage"], [56, 3, 1, "", "meta"], [56, 2, 1, "", "process_results"], [56, 3, 1, "", "uses_budgets"], [56, 3, 1, "", "uses_instances"], [56, 3, 1, "", "uses_seeds"]], "smac.intensifier.stages": [[57, 1, 1, "", "IntensifierStage"]], "smac.intensifier.successive_halving": [[58, 1, 1, "", "SuccessiveHalving"]], "smac.intensifier.successive_halving.SuccessiveHalving": [[58, 2, 1, "", "calculate_budgets"], [58, 2, 1, "", "get_target_function_budgets"], [58, 2, 1, "", "get_target_function_instances"], [58, 2, 1, "", "get_target_function_seeds"], [58, 3, 1, "", "meta"], [58, 3, 1, "", "uses_budgets"], [58, 3, 1, "", "uses_instances"]], "smac.intensifier.successive_halving_worker": [[59, 1, 1, "", "SuccessiveHalvingWorker"]], "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker": [[59, 2, 1, "", "get_next_trial"], [59, 2, 1, "", "get_target_function_budgets"], [59, 2, 1, "", "get_target_function_instances"], [59, 2, 1, "", "get_target_function_seeds"], [59, 2, 1, "", "process_results"], [59, 3, 1, "", "stage"], [59, 3, 1, "", "uses_budgets"], [59, 3, 1, "", "uses_instances"], [59, 3, 1, "", "uses_seeds"]], "smac.main": [[60, 1, 1, "", "BaseSMBO"], [60, 1, 1, "", "SMBO"], [61, 0, 0, "-", "base_smbo"], [62, 0, 0, "-", "boing"], [63, 0, 0, "-", "smbo"], [64, 0, 0, "-", "turbo"]], "smac.main.BaseSMBO": [[60, 2, 1, "", "ask"], [60, 2, 1, "", "get_next_configurations"], [60, 3, 1, "", "incumbent"], [60, 2, 1, "", "optimize"], [60, 3, 1, "", "runhistory"], [60, 2, 1, "", "save"], [60, 3, 1, "", "stats"], [60, 2, 1, "", "tell"], [60, 2, 1, "", "update_acquisition_function"], [60, 2, 1, "", "update_model"], [60, 2, 1, "", "validate"]], "smac.main.SMBO": [[60, 2, 1, "", "ask"], [60, 2, 1, "", "get_next_configurations"], [60, 2, 1, "", "tell"]], "smac.main.base_smbo": [[61, 1, 1, "", "BaseSMBO"]], "smac.main.base_smbo.BaseSMBO": [[61, 2, 1, "", "ask"], [61, 2, 1, "", "get_next_configurations"], [61, 3, 1, "", "incumbent"], [61, 2, 1, "", "optimize"], [61, 3, 1, "", "runhistory"], [61, 2, 1, "", "save"], [61, 3, 1, "", "stats"], [61, 2, 1, "", "tell"], [61, 2, 1, "", "update_acquisition_function"], [61, 2, 1, "", "update_model"], [61, 2, 1, "", "validate"]], "smac.main.smbo": [[63, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[63, 2, 1, "", "ask"], [63, 2, 1, "", "get_next_configurations"], [63, 2, 1, "", "tell"]], "smac.model": [[65, 1, 1, "", "AbstractModel"], [65, 1, 1, "", "MultiObjectiveModel"], [65, 1, 1, "", "RandomModel"], [66, 0, 0, "-", "abstract_model"], [67, 0, 0, "-", "gaussian_process"], [84, 0, 0, "-", "multi_objective_model"], [85, 0, 0, "-", "random_forest"], [88, 0, 0, "-", "random_model"]], "smac.model.AbstractModel": [[65, 3, 1, "", "meta"], [65, 2, 1, "", "predict"], [65, 2, 1, "", "predict_marginalized"], [65, 2, 1, "", "train"]], "smac.model.MultiObjectiveModel": [[65, 3, 1, "", "models"], [65, 2, 1, "", "predict_marginalized"]], "smac.model.abstract_model": [[66, 1, 1, "", "AbstractModel"]], "smac.model.abstract_model.AbstractModel": [[66, 3, 1, "", "meta"], [66, 2, 1, "", "predict"], [66, 2, 1, "", "predict_marginalized"], [66, 2, 1, "", "train"]], "smac.model.gaussian_process": [[67, 1, 1, "", "AbstractGaussianProcess"], [67, 1, 1, "", "GaussianProcess"], [67, 1, 1, "", "MCMCGaussianProcess"], [68, 0, 0, "-", "abstract_gaussian_process"], [69, 0, 0, "-", "gaussian_process"], [70, 0, 0, "-", "gpytorch_gaussian_process"], [71, 0, 0, "-", "kernels"], [77, 0, 0, "-", "mcmc_gaussian_process"], [78, 0, 0, "-", "priors"]], "smac.model.gaussian_process.AbstractGaussianProcess": [[67, 3, 1, "", "meta"]], "smac.model.gaussian_process.GaussianProcess": [[67, 3, 1, "", "meta"], [67, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.MCMCGaussianProcess": [[67, 3, 1, "", "meta"], [67, 3, 1, "", "models"]], "smac.model.gaussian_process.abstract_gaussian_process": [[68, 1, 1, "", "AbstractGaussianProcess"]], "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess": [[68, 3, 1, "", "meta"]], "smac.model.gaussian_process.gaussian_process": [[69, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[69, 3, 1, "", "meta"], [69, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.kernels": [[71, 1, 1, "", "AbstractKernel"], [71, 1, 1, "", "ConstantKernel"], [71, 1, 1, "", "HammingKernel"], [71, 1, 1, "", "MaternKernel"], [71, 1, 1, "", "ProductKernel"], [71, 1, 1, "", "RBFKernel"], [71, 1, 1, "", "SumKernel"], [71, 1, 1, "", "WhiteKernel"], [72, 0, 0, "-", "base_kernels"], [73, 0, 0, "-", "hamming_kernel"], [74, 0, 0, "-", "matern_kernel"], [75, 0, 0, "-", "rbf_kernel"], [76, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.AbstractKernel": [[71, 2, 1, "", "__call__"], [71, 2, 1, "", "get_params"], [71, 4, 1, "", "has_conditions"], [71, 3, 1, "", "hyperparameters"], [71, 3, 1, "", "meta"], [71, 3, 1, "", "n_dims"], [71, 4, 1, "", "operate_on"], [71, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.HammingKernel": [[71, 3, 1, "", "hyperparameter_length_scale"], [71, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.SumKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels": [[72, 1, 1, "", "AbstractKernel"], [72, 1, 1, "", "ConstantKernel"], [72, 1, 1, "", "ProductKernel"], [72, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel": [[72, 2, 1, "", "__call__"], [72, 2, 1, "", "get_params"], [72, 4, 1, "", "has_conditions"], [72, 3, 1, "", "hyperparameters"], [72, 3, 1, "", "meta"], [72, 3, 1, "", "n_dims"], [72, 4, 1, "", "operate_on"], [72, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[72, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[73, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[73, 3, 1, "", "hyperparameter_length_scale"], [73, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.matern_kernel": [[74, 1, 1, "", "MaternKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[75, 1, 1, "", "RBFKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[76, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[77, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess": [[77, 3, 1, "", "meta"], [77, 3, 1, "", "models"]], "smac.model.gaussian_process.priors": [[78, 1, 1, "", "GammaPrior"], [78, 1, 1, "", "HorseshoePrior"], [78, 1, 1, "", "LogNormalPrior"], [78, 1, 1, "", "SoftTopHatPrior"], [78, 1, 1, "", "TophatPrior"], [79, 0, 0, "-", "abstract_prior"], [80, 0, 0, "-", "gamma_prior"], [81, 0, 0, "-", "horseshoe_prior"], [82, 0, 0, "-", "log_normal_prior"], [83, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.GammaPrior": [[78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.HorseshoePrior": [[78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.LogNormalPrior": [[78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.SoftTopHatPrior": [[78, 2, 1, "", "get_gradient"], [78, 2, 1, "", "get_log_probability"], [78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.TophatPrior": [[78, 2, 1, "", "get_gradient"], [78, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.abstract_prior": [[79, 1, 1, "", "AbstractPrior"]], "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior": [[79, 2, 1, "", "get_gradient"], [79, 2, 1, "", "get_log_probability"], [79, 3, 1, "", "meta"], [79, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[80, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.gamma_prior.GammaPrior": [[80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[81, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior": [[81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[82, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior": [[82, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[83, 1, 1, "", "SoftTopHatPrior"], [83, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[83, 2, 1, "", "get_gradient"], [83, 2, 1, "", "get_log_probability"], [83, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[83, 2, 1, "", "get_gradient"], [83, 3, 1, "", "meta"]], "smac.model.multi_objective_model": [[84, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[84, 3, 1, "", "models"], [84, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest": [[85, 1, 1, "", "AbstractRandomForest"], [85, 1, 1, "", "RandomForest"], [86, 0, 0, "-", "abstract_random_forest"], [87, 0, 0, "-", "random_forest"]], "smac.model.random_forest.RandomForest": [[85, 3, 1, "", "meta"], [85, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest.abstract_random_forest": [[86, 1, 1, "", "AbstractRandomForest"]], "smac.model.random_forest.random_forest": [[87, 1, 1, "", "RandomForest"]], "smac.model.random_forest.random_forest.RandomForest": [[87, 3, 1, "", "meta"], [87, 2, 1, "", "predict_marginalized"]], "smac.model.random_model": [[88, 1, 1, "", "RandomModel"]], "smac.multi_objective": [[89, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [89, 1, 1, "", "MeanAggregationStrategy"], [89, 1, 1, "", "ParEGO"], [90, 0, 0, "-", "abstract_multi_objective_algorithm"], [91, 0, 0, "-", "aggregation_strategy"], [92, 0, 0, "-", "parego"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[89, 2, 1, "", "__call__"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.MeanAggregationStrategy": [[89, 2, 1, "", "__call__"]], "smac.multi_objective.ParEGO": [[89, 2, 1, "", "__call__"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[90, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[90, 2, 1, "", "__call__"], [90, 3, 1, "", "meta"], [90, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.aggregation_strategy": [[91, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[91, 2, 1, "", "__call__"]], "smac.multi_objective.parego": [[92, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[92, 2, 1, "", "__call__"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "update_on_iteration_start"]], "smac.random_design": [[93, 1, 1, "", "AbstractRandomDesign"], [93, 1, 1, "", "CosineAnnealingRandomDesign"], [93, 1, 1, "", "DynamicModulusRandomDesign"], [93, 1, 1, "", "DynamicProbabilityRandomDesign"], [93, 1, 1, "", "ModulusRandomDesign"], [93, 1, 1, "", "ProbabilityRandomDesign"], [94, 0, 0, "-", "abstract_random_design"], [95, 0, 0, "-", "annealing_design"], [96, 0, 0, "-", "modulus_design"], [97, 0, 0, "-", "probability_design"]], "smac.random_design.AbstractRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.CosineAnnealingRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicModulusRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicProbabilityRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.ModulusRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"]], "smac.random_design.ProbabilityRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"]], "smac.random_design.abstract_random_design": [[94, 1, 1, "", "AbstractRandomDesign"]], "smac.random_design.abstract_random_design.AbstractRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "next_iteration"]], "smac.random_design.annealing_design": [[95, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.annealing_design.CosineAnnealingRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[96, 1, 1, "", "DynamicModulusRandomDesign"], [96, 1, 1, "", "ModulusRandomDesign"]], "smac.random_design.modulus_design.DynamicModulusRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.ModulusRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"]], "smac.random_design.probability_design": [[97, 1, 1, "", "DynamicProbabilityRandomDesign"], [97, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.DynamicProbabilityRandomDesign": [[97, 2, 1, "", "check"], [97, 3, 1, "", "meta"], [97, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[97, 2, 1, "", "check"], [97, 3, 1, "", "meta"]], "smac.runhistory": [[98, 1, 1, "", "DataOrigin"], [98, 1, 1, "", "InstanceSeedBudgetKey"], [98, 1, 1, "", "InstanceSeedKey"], [98, 1, 1, "", "RunHistory"], [98, 1, 1, "", "StatusType"], [98, 1, 1, "", "TrialInfo"], [98, 1, 1, "", "TrialInfoIntent"], [98, 1, 1, "", "TrialKey"], [98, 1, 1, "", "TrialValue"], [99, 0, 0, "-", "dataclasses"], [100, 0, 0, "-", "encoder"], [110, 0, 0, "-", "enumerations"], [111, 0, 0, "-", "runhistory"]], "smac.runhistory.RunHistory": [[98, 2, 1, "", "__contains__"], [98, 2, 1, "", "__eq__"], [98, 2, 1, "", "__getitem__"], [98, 2, 1, "", "__iter__"], [98, 2, 1, "", "__len__"], [98, 2, 1, "", "add"], [98, 2, 1, "", "average_cost"], [98, 3, 1, "", "config_ids"], [98, 2, 1, "", "empty"], [98, 2, 1, "", "get_config"], [98, 2, 1, "", "get_configs"], [98, 2, 1, "", "get_configs_per_budget"], [98, 2, 1, "", "get_cost"], [98, 2, 1, "", "get_incumbent"], [98, 2, 1, "", "get_min_cost"], [98, 2, 1, "", "get_trials"], [98, 3, 1, "", "ids_config"], [98, 2, 1, "", "incremental_update_cost"], [98, 2, 1, "", "load_json"], [98, 2, 1, "", "min_cost"], [98, 3, 1, "", "objective_bounds"], [98, 3, 1, "", "objective_weights"], [98, 2, 1, "", "reset"], [98, 2, 1, "", "save_json"], [98, 2, 1, "", "sum_cost"], [98, 2, 1, "", "update"], [98, 2, 1, "", "update_cost"], [98, 2, 1, "", "update_costs"], [98, 2, 1, "", "update_from_json"]], "smac.runhistory.dataclasses": [[99, 1, 1, "", "InstanceSeedBudgetKey"], [99, 1, 1, "", "InstanceSeedKey"], [99, 1, 1, "", "TrajectoryItem"], [99, 1, 1, "", "TrialInfo"], [99, 1, 1, "", "TrialKey"], [99, 1, 1, "", "TrialValue"]], "smac.runhistory.encoder": [[100, 1, 1, "", "AbstractRunHistoryEncoder"], [100, 1, 1, "", "RunHistoryEIPSEncoder"], [100, 1, 1, "", "RunHistoryEncoder"], [100, 1, 1, "", "RunHistoryInverseScaledEncoder"], [100, 1, 1, "", "RunHistoryLogEncoder"], [100, 1, 1, "", "RunHistoryLogScaledEncoder"], [100, 1, 1, "", "RunHistoryRawEncoder"], [100, 1, 1, "", "RunHistoryRawScaledEncoder"], [100, 1, 1, "", "RunHistoryScaledEncoder"], [100, 1, 1, "", "RunHistorySqrtScaledEncoder"], [101, 0, 0, "-", "abstract_encoder"], [102, 0, 0, "-", "boing_encoder"], [103, 0, 0, "-", "eips_encoder"], [104, 0, 0, "-", "encoder"], [105, 0, 0, "-", "inverse_scaled_encoder"], [106, 0, 0, "-", "log_encoder"], [107, 0, 0, "-", "log_scaled_encoder"], [108, 0, 0, "-", "scaled_encoder"], [109, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[100, 2, 1, "", "get_configurations"], [100, 3, 1, "", "meta"], [100, 3, 1, "", "multi_objective_algorithm"], [100, 2, 1, "", "transform"], [100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryRawEncoder": [[100, 2, 1, "", "transform_raw_values"], [100, 2, 1, "", "transform_response_values"], [100, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.RunHistoryRawScaledEncoder": [[100, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[101, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[101, 2, 1, "", "get_configurations"], [101, 3, 1, "", "meta"], [101, 3, 1, "", "multi_objective_algorithm"], [101, 2, 1, "", "transform"], [101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[102, 1, 1, "", "RunHistoryRawEncoder"], [102, 1, 1, "", "RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder": [[102, 2, 1, "", "transform_raw_values"], [102, 2, 1, "", "transform_response_values"], [102, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder": [[102, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.eips_encoder": [[103, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[104, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[104, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[105, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder": [[105, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[106, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[106, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[107, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[107, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[108, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[108, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[109, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[109, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[110, 1, 1, "", "DataOrigin"], [110, 1, 1, "", "StatusType"], [110, 1, 1, "", "TrialInfoIntent"]], "smac.runhistory.runhistory": [[111, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[111, 2, 1, "", "__contains__"], [111, 2, 1, "", "__eq__"], [111, 2, 1, "", "__getitem__"], [111, 2, 1, "", "__iter__"], [111, 2, 1, "", "__len__"], [111, 2, 1, "", "add"], [111, 2, 1, "", "average_cost"], [111, 3, 1, "", "config_ids"], [111, 2, 1, "", "empty"], [111, 2, 1, "", "get_config"], [111, 2, 1, "", "get_configs"], [111, 2, 1, "", "get_configs_per_budget"], [111, 2, 1, "", "get_cost"], [111, 2, 1, "", "get_incumbent"], [111, 2, 1, "", "get_min_cost"], [111, 2, 1, "", "get_trials"], [111, 3, 1, "", "ids_config"], [111, 2, 1, "", "incremental_update_cost"], [111, 2, 1, "", "load_json"], [111, 2, 1, "", "min_cost"], [111, 3, 1, "", "objective_bounds"], [111, 3, 1, "", "objective_weights"], [111, 2, 1, "", "reset"], [111, 2, 1, "", "save_json"], [111, 2, 1, "", "sum_cost"], [111, 2, 1, "", "update"], [111, 2, 1, "", "update_cost"], [111, 2, 1, "", "update_costs"], [111, 2, 1, "", "update_from_json"]], "smac.runner": [[112, 1, 1, "", "AbstractRunner"], [112, 1, 1, "", "DaskParallelRunner"], [112, 5, 1, "", "FirstRunCrashedException"], [112, 5, 1, "", "TargetAlgorithmAbortException"], [112, 1, 1, "", "TargetFunctionRunner"], [113, 0, 0, "-", "abstract_runner"], [114, 0, 0, "-", "dask_runner"], [115, 0, 0, "-", "exceptions"], [116, 0, 0, "-", "target_function_runner"]], "smac.runner.AbstractRunner": [[112, 2, 1, "", "count_available_workers"], [112, 2, 1, "", "is_running"], [112, 2, 1, "", "iter_results"], [112, 3, 1, "", "meta"], [112, 2, 1, "", "run"], [112, 2, 1, "", "run_wrapper"], [112, 2, 1, "", "submit_trial"], [112, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[112, 2, 1, "", "__del__"], [112, 2, 1, "", "close"], [112, 2, 1, "", "count_available_workers"], [112, 2, 1, "", "is_running"], [112, 2, 1, "", "iter_results"], [112, 2, 1, "", "run"], [112, 2, 1, "", "submit_trial"], [112, 2, 1, "", "wait"]], "smac.runner.TargetFunctionRunner": [[112, 2, 1, "", "__call__"], [112, 2, 1, "", "count_available_workers"], [112, 2, 1, "", "is_running"], [112, 2, 1, "", "iter_results"], [112, 2, 1, "", "run"], [112, 2, 1, "", "submit_trial"], [112, 2, 1, "", "wait"]], "smac.runner.abstract_runner": [[113, 1, 1, "", "AbstractRunner"]], "smac.runner.abstract_runner.AbstractRunner": [[113, 2, 1, "", "count_available_workers"], [113, 2, 1, "", "is_running"], [113, 2, 1, "", "iter_results"], [113, 3, 1, "", "meta"], [113, 2, 1, "", "run"], [113, 2, 1, "", "run_wrapper"], [113, 2, 1, "", "submit_trial"], [113, 2, 1, "", "wait"]], "smac.runner.dask_runner": [[114, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[114, 2, 1, "", "__del__"], [114, 2, 1, "", "close"], [114, 2, 1, "", "count_available_workers"], [114, 2, 1, "", "is_running"], [114, 2, 1, "", "iter_results"], [114, 2, 1, "", "run"], [114, 2, 1, "", "submit_trial"], [114, 2, 1, "", "wait"]], "smac.runner.exceptions": [[115, 5, 1, "", "FirstRunCrashedException"], [115, 5, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.target_function_runner": [[116, 1, 1, "", "TargetFunctionRunner"]], "smac.runner.target_function_runner.TargetFunctionRunner": [[116, 2, 1, "", "__call__"], [116, 2, 1, "", "count_available_workers"], [116, 2, 1, "", "is_running"], [116, 2, 1, "", "iter_results"], [116, 2, 1, "", "run"], [116, 2, 1, "", "submit_trial"], [116, 2, 1, "", "wait"]], "smac.scenario": [[117, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[117, 2, 1, "", "__post_init__"], [117, 2, 1, "", "count_instance_features"], [117, 2, 1, "", "count_objectives"], [117, 2, 1, "", "load"], [117, 2, 1, "", "make_serializable"], [117, 3, 1, "", "meta"], [117, 2, 1, "", "save"]], "smac.utils": [[119, 0, 0, "-", "configspace"], [120, 0, 0, "-", "data_structures"], [121, 0, 0, "-", "logging"], [122, 0, 0, "-", "multi_objective"], [123, 0, 0, "-", "subspaces"]], "smac.utils.configspace": [[119, 6, 1, "", "convert_configurations_to_array"], [119, 6, 1, "", "get_conditional_hyperparameters"], [119, 6, 1, "", "get_types"]], "smac.utils.data_structures": [[120, 6, 1, "", "recursively_compare_dicts"]], "smac.utils.logging": [[121, 6, 1, "", "format_array"], [121, 6, 1, "", "get_logger"], [121, 6, 1, "", "setup_logging"]], "smac.utils.multi_objective": [[122, 6, 1, "", "normalize_costs"]], "smac.utils.subspaces": [[124, 0, 0, "-", "boing_subspace"], [125, 0, 0, "-", "turbo_subspace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "requir": 0, "anaconda": 0, "conda": 0, "forg": 0, "packag": 1, "overview": 1, "featur": [1, 11], "compon": [1, 9], "comparison": 1, "get": 2, "start": 2, "configur": 2, "space": 2, "target": 2, "function": [2, 9, 19, 20, 21, 22, 23, 24, 25, 26, 119, 120, 121, 122, 126, 138], "scenario": [2, 117], "facad": [2, 35, 36, 37, 38, 39, 40, 41, 42, 43], "minim": 3, "exampl": [3, 143], "api": 4, "refer": [4, 5], "glossari": 6, "f": 7, "A": 7, "q": 7, "licens": 8, "model": [9, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "acquisit": [9, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33], "maximi": 9, "initi": 9, "design": 9, "random": 9, "intensifi": [9, 51, 52, 53, 54, 55, 56, 57, 58, 59], "multi": [9, 10, 134, 136, 140, 143], "object": [9, 10, 140, 143], "algorithm": 9, "runhistori": [9, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "encod": [9, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "callback": [9, 34, 129], "optim": 10, "instanc": [11, 136, 143], "stop": 12, "criteria": 12, "ask": [13, 128], "tell": [13, 128], "interfac": [13, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128], "call": 13, "without": 13, "continu": 14, "run": 14, "reproduc": 15, "parallel": 16, "commandlin": [16, 142, 143], "usag": [16, 17], "python": 16, "advanc": 17, "smac": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "modul": [18, 19, 27, 35, 44, 51, 60, 65, 67, 71, 78, 85, 89, 93, 98, 100, 112, 118, 123], "abstract_acquisition_funct": 20, "class": [20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 66, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117], "confidence_bound": 21, "expected_improv": 22, "integrated_acquisition_funct": 23, "prior_acqusition_funct": 24, "probability_improv": 25, "thompson": 26, "maxim": [27, 28, 29, 30, 31, 32, 33], "abstract_acqusition_maxim": 28, "differential_evolut": 29, "helper": 30, "local_and_random_search": 31, "local_search": 32, "random_search": 33, "abstract_facad": 36, "algorithm_configuration_facad": 37, "blackbox_facad": 38, "boing_facad": 39, "hyperband_facad": 40, "hyperparameter_optimization_facad": 41, "multi_fidelity_facad": 42, "random_facad": 43, "initial_design": [44, 45, 46, 47, 48, 49, 50], "abstract_initial_design": 45, "default_design": 46, "factorial_design": 47, "latin_hypercube_design": 48, "random_design": [49, 93, 94, 95, 96, 97], "sobol_design": 50, "abstract_intensifi": 52, "abstract_parallel_intensifi": 53, "hyperband": 54, "hyperband_work": 55, "stage": 57, "successive_halv": 58, "successive_halving_work": 59, "main": [60, 61, 62, 63, 64], "base_smbo": 61, "bo": 62, "smbo": 63, "turbo": 64, "abstract_model": 66, "gaussian_process": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "abstract_gaussian_process": 68, "gpytorch_gaussian_process": 70, "kernel": [71, 72, 73, 74, 75, 76], "base_kernel": 72, "hamming_kernel": 73, "matern_kernel": 74, "rbf_kernel": 75, "white_kernel": 76, "mcmc_gaussian_process": 77, "prior": [78, 79, 80, 81, 82, 83, 130], "abstract_prior": 79, "gamma_prior": 80, "horseshoe_prior": 81, "log_normal_prior": 82, "tophat_prior": 83, "multi_objective_model": 84, "random_forest": [85, 86, 87], "abstract_random_forest": 86, "random_model": 88, "multi_object": [89, 90, 91, 92, 122], "abstract_multi_objective_algorithm": 90, "aggregation_strategi": 91, "parego": [92, 139], "abstract_random_design": 94, "annealing_design": 95, "modulus_design": 96, "probability_design": 97, "dataclass": 99, "abstract_encod": 101, "boing_encod": 102, "eips_encod": 103, "inverse_scaled_encod": 105, "log_encod": 106, "log_scaled_encod": 107, "scaled_encod": 108, "sqrt_scaled_encod": 109, "enumer": 110, "runner": [112, 113, 114, 115, 116], "abstract_runn": 113, "dask_runn": 114, "except": 115, "target_function_runn": 116, "util": [118, 119, 120, 121, 122, 123, 124, 125], "configspac": 119, "data_structur": 120, "log": 121, "subspac": [123, 124, 125], "boing_subspac": 124, "turbo_subspac": 125, "synthet": 126, "support": 127, "vector": 127, "machin": 127, "cross": 127, "valid": 127, "user": 130, "over": 130, "optimum": 130, "full": 131, "custom": 131, "basic": [132, 143], "comput": [133, 137, 141], "time": [133, 137, 141], "layer": 134, "perceptron": 134, "us": 134, "multipl": [134, 135], "epoch": 134, "stochast": 135, "gradient": 135, "descent": 135, "On": 135, "dataset": 135, "fidel": [136, 143], "2d": 138, "schaffer": 138, "home": 144, "contact": 144}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Installation": [[0, "installation"]], "Requirements": [[0, "requirements"]], "Anaconda": [[0, "anaconda"]], "Conda-forge": [[0, "conda-forge"]], "Package Overview": [[1, "package-overview"]], "Features": [[1, "features"]], "Components": [[1, "components"], [9, "components"]], "Comparison": [[1, "comparison"]], "Getting Started": [[2, "getting-started"]], "Configuration Space": [[2, "configuration-space"]], "Target Function": [[2, "target-function"]], "Scenario": [[2, "scenario"]], "Facade": [[2, "facade"]], "Minimal Example": [[3, "minimal-example"]], "API References": [[4, "api-references"]], "References": [[5, "references"]], "Glossary": [[6, "glossary"]], "F.A.Q.": [[7, "f-a-q"]], "License": [[8, "license"]], "Model": [[9, "model"]], "Acquisition Function": [[9, "acquisition-function"]], "Acquisition Maximier": [[9, "acquisition-maximier"]], "Initial Design": [[9, "initial-design"]], "Random Design": [[9, "random-design"]], "Intensifier": [[9, "intensifier"]], "Multi Objective Algorithm": [[9, "multi-objective-algorithm"]], "Runhistory": [[9, "runhistory"]], "Runhistory Encoder": [[9, "runhistory-encoder"]], "Callbacks": [[9, "callbacks"]], "Multi-Objective Optimization": [[10, "multi-objective-optimization"]], "Instances and Features": [[11, "instances-and-features"]], "Stopping Criteria": [[12, "stopping-criteria"]], "Ask-and-Tell Interface": [[13, "ask-and-tell-interface"], [128, "ask-and-tell-interface"]], "Calling Tell without Ask": [[13, "calling-tell-without-ask"]], "Continue a Run": [[14, "continue-a-run"]], "Reproducability": [[15, "reproducability"]], "Parallelism": [[16, "parallelism"]], "Commandline": [[16, "commandline"], [142, "commandline"], [143, "commandline"]], "Usage in Python": [[16, "usage-in-python"]], "Advanced Usage": [[17, "advanced-usage"]], "smac.acquisition": [[18, "module-smac.acquisition"]], "Interfaces": [[18, "interfaces"], [19, "interfaces"], [20, "interfaces"], [21, "interfaces"], [22, "interfaces"], [23, "interfaces"], [24, "interfaces"], [25, "interfaces"], [26, "interfaces"], [27, "interfaces"], [28, "interfaces"], [29, "interfaces"], [30, "interfaces"], [31, "interfaces"], [32, "interfaces"], [33, "interfaces"], [34, "interfaces"], [35, "interfaces"], [36, "interfaces"], [37, "interfaces"], [38, "interfaces"], [39, "interfaces"], [40, "interfaces"], [41, "interfaces"], [42, "interfaces"], [43, "interfaces"], [44, "interfaces"], [45, "interfaces"], [46, "interfaces"], [47, "interfaces"], [48, "interfaces"], [49, "interfaces"], [50, "interfaces"], [51, "interfaces"], [52, "interfaces"], [53, "interfaces"], [54, "interfaces"], [55, "interfaces"], [56, "interfaces"], [57, "interfaces"], [58, "interfaces"], [59, "interfaces"], [60, "interfaces"], [61, "interfaces"], [62, "interfaces"], [63, "interfaces"], [64, "interfaces"], [65, "interfaces"], [66, "interfaces"], [67, "interfaces"], [68, "interfaces"], [69, "interfaces"], [70, "interfaces"], [71, "interfaces"], [72, "interfaces"], [73, "interfaces"], [74, "interfaces"], [75, "interfaces"], [76, "interfaces"], [77, "interfaces"], [78, "interfaces"], [79, "interfaces"], [80, "interfaces"], [81, "interfaces"], [82, "interfaces"], [83, "interfaces"], [84, "interfaces"], [85, "interfaces"], [86, "interfaces"], [87, "interfaces"], [88, "interfaces"], [89, "interfaces"], [90, "interfaces"], [91, "interfaces"], [92, "interfaces"], [93, "interfaces"], [94, "interfaces"], [95, "interfaces"], [96, "interfaces"], [97, "interfaces"], [98, "interfaces"], [99, "interfaces"], [100, "interfaces"], [101, "interfaces"], [102, "interfaces"], [103, "interfaces"], [104, "interfaces"], [105, "interfaces"], [106, "interfaces"], [107, "interfaces"], [108, "interfaces"], [109, "interfaces"], [110, "interfaces"], [111, "interfaces"], [112, "interfaces"], [113, "interfaces"], [114, "interfaces"], [115, "interfaces"], [116, "interfaces"], [117, "interfaces"], [118, "interfaces"], [119, "interfaces"], [120, "interfaces"], [121, "interfaces"], [122, "interfaces"], [123, "interfaces"], [124, "interfaces"], [125, "interfaces"]], "Modules": [[18, "modules"], [19, "modules"], [27, "modules"], [35, "modules"], [44, "modules"], [51, "modules"], [60, "modules"], [65, "modules"], [67, "modules"], [71, "modules"], [78, "modules"], [85, "modules"], [89, "modules"], [93, "modules"], [98, "modules"], [100, "modules"], [112, "modules"], [118, "modules"], [123, "modules"]], "smac.acquisition.functions": [[19, "module-smac.acquisition.functions"]], "smac.acquisition.functions.abstract_acquisition_function": [[20, "module-smac.acquisition.functions.abstract_acquisition_function"]], "Classes": [[20, "classes"], [21, "classes"], [22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [40, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [61, "classes"], [63, "classes"], [66, "classes"], [68, "classes"], [69, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [86, "classes"], [87, "classes"], [88, "classes"], [90, "classes"], [91, "classes"], [92, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [97, "classes"], [99, "classes"], [101, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [113, "classes"], [114, "classes"], [116, "classes"], [117, "classes"]], "smac.acquisition.functions.confidence_bound": [[21, "module-smac.acquisition.functions.confidence_bound"]], "smac.acquisition.functions.expected_improvement": [[22, "module-smac.acquisition.functions.expected_improvement"]], "smac.acquisition.functions.integrated_acquisition_function": [[23, "module-smac.acquisition.functions.integrated_acquisition_function"]], "smac.acquisition.functions.prior_acqusition_function": [[24, "module-smac.acquisition.functions.prior_acqusition_function"]], "smac.acquisition.functions.probability_improvement": [[25, "module-smac.acquisition.functions.probability_improvement"]], "smac.acquisition.functions.thompson": [[26, "module-smac.acquisition.functions.thompson"]], "smac.acquisition.maximizers": [[27, "module-smac.acquisition.maximizers"]], "smac.acquisition.maximizers.abstract_acqusition_maximizer": [[28, "module-smac.acquisition.maximizers.abstract_acqusition_maximizer"]], "smac.acquisition.maximizers.differential_evolution": [[29, "module-smac.acquisition.maximizers.differential_evolution"]], "smac.acquisition.maximizers.helpers": [[30, "module-smac.acquisition.maximizers.helpers"]], "smac.acquisition.maximizers.local_and_random_search": [[31, "module-smac.acquisition.maximizers.local_and_random_search"]], "smac.acquisition.maximizers.local_search": [[32, "module-smac.acquisition.maximizers.local_search"]], "smac.acquisition.maximizers.random_search": [[33, "module-smac.acquisition.maximizers.random_search"]], "smac.callback": [[34, "module-smac.callback"]], "smac.facade": [[35, "module-smac.facade"]], "smac.facade.abstract_facade": [[36, "module-smac.facade.abstract_facade"]], "smac.facade.algorithm_configuration_facade": [[37, "module-smac.facade.algorithm_configuration_facade"]], "smac.facade.blackbox_facade": [[38, "module-smac.facade.blackbox_facade"]], "smac.facade.boing_facade": [[39, "module-smac.facade.boing_facade"]], "smac.facade.hyperband_facade": [[40, "module-smac.facade.hyperband_facade"]], "smac.facade.hyperparameter_optimization_facade": [[41, "module-smac.facade.hyperparameter_optimization_facade"]], "smac.facade.multi_fidelity_facade": [[42, "module-smac.facade.multi_fidelity_facade"]], "smac.facade.random_facade": [[43, "module-smac.facade.random_facade"]], "smac.initial_design": [[44, "module-smac.initial_design"]], "smac.initial_design.abstract_initial_design": [[45, "module-smac.initial_design.abstract_initial_design"]], "smac.initial_design.default_design": [[46, "module-smac.initial_design.default_design"]], "smac.initial_design.factorial_design": [[47, "module-smac.initial_design.factorial_design"]], "smac.initial_design.latin_hypercube_design": [[48, "module-smac.initial_design.latin_hypercube_design"]], "smac.initial_design.random_design": [[49, "module-smac.initial_design.random_design"]], "smac.initial_design.sobol_design": [[50, "module-smac.initial_design.sobol_design"]], "smac.intensifier": [[51, "module-smac.intensifier"]], "smac.intensifier.abstract_intensifier": [[52, "module-smac.intensifier.abstract_intensifier"]], "smac.intensifier.abstract_parallel_intensifier": [[53, "module-smac.intensifier.abstract_parallel_intensifier"]], "smac.intensifier.hyperband": [[54, "module-smac.intensifier.hyperband"]], "smac.intensifier.hyperband_worker": [[55, "module-smac.intensifier.hyperband_worker"]], "smac.intensifier.intensifier": [[56, "module-smac.intensifier.intensifier"]], "smac.intensifier.stages": [[57, "module-smac.intensifier.stages"]], "smac.intensifier.successive_halving": [[58, "module-smac.intensifier.successive_halving"]], "smac.intensifier.successive_halving_worker": [[59, "module-smac.intensifier.successive_halving_worker"]], "smac.main": [[60, "module-smac.main"]], "smac.main.base_smbo": [[61, "module-smac.main.base_smbo"]], "smac.main.boing": [[62, "module-smac.main.boing"]], "smac.main.smbo": [[63, "module-smac.main.smbo"]], "smac.main.turbo": [[64, "module-smac.main.turbo"]], "smac.model": [[65, "module-smac.model"]], "smac.model.abstract_model": [[66, "module-smac.model.abstract_model"]], "smac.model.gaussian_process": [[67, "module-smac.model.gaussian_process"]], "smac.model.gaussian_process.abstract_gaussian_process": [[68, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "smac.model.gaussian_process.gaussian_process": [[69, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[70, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "smac.model.gaussian_process.kernels": [[71, "module-smac.model.gaussian_process.kernels"]], "smac.model.gaussian_process.kernels.base_kernels": [[72, "module-smac.model.gaussian_process.kernels.base_kernels"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[73, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[74, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[75, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[76, "module-smac.model.gaussian_process.kernels.white_kernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[77, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "smac.model.gaussian_process.priors": [[78, "module-smac.model.gaussian_process.priors"]], "smac.model.gaussian_process.priors.abstract_prior": [[79, "module-smac.model.gaussian_process.priors.abstract_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[80, "module-smac.model.gaussian_process.priors.gamma_prior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[81, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[82, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[83, "module-smac.model.gaussian_process.priors.tophat_prior"]], "smac.model.multi_objective_model": [[84, "module-smac.model.multi_objective_model"]], "smac.model.random_forest": [[85, "module-smac.model.random_forest"]], "smac.model.random_forest.abstract_random_forest": [[86, "module-smac.model.random_forest.abstract_random_forest"]], "smac.model.random_forest.random_forest": [[87, "module-smac.model.random_forest.random_forest"]], "smac.model.random_model": [[88, "module-smac.model.random_model"]], "smac.multi_objective": [[89, "module-smac.multi_objective"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[90, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "smac.multi_objective.aggregation_strategy": [[91, "module-smac.multi_objective.aggregation_strategy"]], "smac.multi_objective.parego": [[92, "module-smac.multi_objective.parego"]], "smac.random_design": [[93, "module-smac.random_design"]], "smac.random_design.abstract_random_design": [[94, "module-smac.random_design.abstract_random_design"]], "smac.random_design.annealing_design": [[95, "module-smac.random_design.annealing_design"]], "smac.random_design.modulus_design": [[96, "module-smac.random_design.modulus_design"]], "smac.random_design.probability_design": [[97, "module-smac.random_design.probability_design"]], "smac.runhistory": [[98, "module-smac.runhistory"]], "smac.runhistory.dataclasses": [[99, "module-smac.runhistory.dataclasses"]], "smac.runhistory.encoder": [[100, "module-smac.runhistory.encoder"]], "smac.runhistory.encoder.abstract_encoder": [[101, "module-smac.runhistory.encoder.abstract_encoder"]], "smac.runhistory.encoder.boing_encoder": [[102, "module-smac.runhistory.encoder.boing_encoder"]], "smac.runhistory.encoder.eips_encoder": [[103, "module-smac.runhistory.encoder.eips_encoder"]], "smac.runhistory.encoder.encoder": [[104, "module-smac.runhistory.encoder.encoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[105, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "smac.runhistory.encoder.log_encoder": [[106, "module-smac.runhistory.encoder.log_encoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[107, "module-smac.runhistory.encoder.log_scaled_encoder"]], "smac.runhistory.encoder.scaled_encoder": [[108, "module-smac.runhistory.encoder.scaled_encoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[109, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "smac.runhistory.enumerations": [[110, "module-smac.runhistory.enumerations"]], "smac.runhistory.runhistory": [[111, "module-smac.runhistory.runhistory"]], "smac.runner": [[112, "module-smac.runner"]], "smac.runner.abstract_runner": [[113, "module-smac.runner.abstract_runner"]], "smac.runner.dask_runner": [[114, "module-smac.runner.dask_runner"]], "smac.runner.exceptions": [[115, "module-smac.runner.exceptions"]], "Exceptions": [[115, "exceptions"]], "smac.runner.target_function_runner": [[116, "module-smac.runner.target_function_runner"]], "smac.scenario": [[117, "module-smac.scenario"]], "smac.utils": [[118, "module-smac.utils"]], "smac.utils.configspace": [[119, "module-smac.utils.configspace"]], "Functions": [[119, "functions"], [120, "functions"], [121, "functions"], [122, "functions"]], "smac.utils.data_structures": [[120, "module-smac.utils.data_structures"]], "smac.utils.logging": [[121, "module-smac.utils.logging"]], "smac.utils.multi_objective": [[122, "module-smac.utils.multi_objective"]], "smac.utils.subspaces": [[123, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[124, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[125, "module-smac.utils.subspaces.turbo_subspace"]], "Synthetic Function": [[126, "synthetic-function"]], "Support Vector Machine with Cross-Validation": [[127, "support-vector-machine-with-cross-validation"]], "Callback": [[129, "callback"]], "User Priors over the Optimum": [[130, "user-priors-over-the-optimum"]], "Full Customization": [[131, "full-customization"]], "Basics": [[132, "basics"], [143, "basics"]], "Computation times": [[133, "computation-times"], [137, "computation-times"], [141, "computation-times"]], "Multi-Layer Perceptron Using Multiple Epochs": [[134, "multi-layer-perceptron-using-multiple-epochs"]], "Stochastic Gradient Descent On Multiple Datasets": [[135, "stochastic-gradient-descent-on-multiple-datasets"]], "Multi-Fidelity and Multi-Instances": [[136, "multi-fidelity-and-multi-instances"], [143, "multi-fidelity-and-multi-instances"]], "2D Schaffer Function": [[138, "d-schaffer-function"]], "ParEGO": [[139, "parego"]], "Multi-Objective": [[140, "multi-objective"], [143, "multi-objective"]], "Examples": [[143, "examples"]], "Home": [[144, "home"]], "Contact": [[144, "contact"]]}, "indexentries": {"bb": [[6, "term-BB"]], "bo": [[6, "term-BO"]], "bohb": [[6, "term-BOHB"]], "budget": [[6, "term-Budget"]], "cli": [[6, "term-CLI"]], "cv": [[6, "term-CV"]], "epm": [[6, "term-EPM"]], "gp": [[6, "term-GP"]], "gp-mcmc": [[6, "term-GP-MCMC"]], "hb": [[6, "term-HB"]], "intensification": [[6, "term-Intensification"]], "mf": [[6, "term-MF"]], "objective": [[6, "term-Objective"]], "pcs": [[6, "term-PCS"]], "rf": [[6, "term-RF"]], "roar": [[6, "term-ROAR"]], "smac": [[6, "term-SMAC"]], "tfe": [[6, "term-TFE"]], "trial": [[6, "term-Trial"]], "module": [[18, "module-smac.acquisition"], [19, "module-smac.acquisition.functions"], [20, "module-smac.acquisition.functions.abstract_acquisition_function"], [21, "module-smac.acquisition.functions.confidence_bound"], [22, "module-smac.acquisition.functions.expected_improvement"], [23, "module-smac.acquisition.functions.integrated_acquisition_function"], [24, "module-smac.acquisition.functions.prior_acqusition_function"], [25, "module-smac.acquisition.functions.probability_improvement"], [26, "module-smac.acquisition.functions.thompson"], [27, "module-smac.acquisition.maximizers"], [28, "module-smac.acquisition.maximizers.abstract_acqusition_maximizer"], [29, "module-smac.acquisition.maximizers.differential_evolution"], [30, "module-smac.acquisition.maximizers.helpers"], [31, "module-smac.acquisition.maximizers.local_and_random_search"], [32, "module-smac.acquisition.maximizers.local_search"], [33, "module-smac.acquisition.maximizers.random_search"], [34, "module-smac.callback"], [35, "module-smac.facade"], [36, "module-smac.facade.abstract_facade"], [37, "module-smac.facade.algorithm_configuration_facade"], [38, "module-smac.facade.blackbox_facade"], [39, "module-smac.facade.boing_facade"], [40, "module-smac.facade.hyperband_facade"], [41, "module-smac.facade.hyperparameter_optimization_facade"], [42, "module-smac.facade.multi_fidelity_facade"], [43, "module-smac.facade.random_facade"], [44, "module-smac.initial_design"], [45, "module-smac.initial_design.abstract_initial_design"], [46, "module-smac.initial_design.default_design"], [47, "module-smac.initial_design.factorial_design"], [48, "module-smac.initial_design.latin_hypercube_design"], [49, "module-smac.initial_design.random_design"], [50, "module-smac.initial_design.sobol_design"], [51, "module-smac.intensifier"], [52, "module-smac.intensifier.abstract_intensifier"], [53, "module-smac.intensifier.abstract_parallel_intensifier"], [54, "module-smac.intensifier.hyperband"], [55, "module-smac.intensifier.hyperband_worker"], [56, "module-smac.intensifier.intensifier"], [57, "module-smac.intensifier.stages"], [58, "module-smac.intensifier.successive_halving"], [59, "module-smac.intensifier.successive_halving_worker"], [60, "module-smac.main"], [61, "module-smac.main.base_smbo"], [62, "module-smac.main.boing"], [63, "module-smac.main.smbo"], [64, "module-smac.main.turbo"], [65, "module-smac.model"], [66, "module-smac.model.abstract_model"], [67, "module-smac.model.gaussian_process"], [68, "module-smac.model.gaussian_process.abstract_gaussian_process"], [69, "module-smac.model.gaussian_process.gaussian_process"], [70, "module-smac.model.gaussian_process.gpytorch_gaussian_process"], [71, "module-smac.model.gaussian_process.kernels"], [72, "module-smac.model.gaussian_process.kernels.base_kernels"], [73, "module-smac.model.gaussian_process.kernels.hamming_kernel"], [74, "module-smac.model.gaussian_process.kernels.matern_kernel"], [75, "module-smac.model.gaussian_process.kernels.rbf_kernel"], [76, "module-smac.model.gaussian_process.kernels.white_kernel"], [77, "module-smac.model.gaussian_process.mcmc_gaussian_process"], [78, "module-smac.model.gaussian_process.priors"], [79, "module-smac.model.gaussian_process.priors.abstract_prior"], [80, "module-smac.model.gaussian_process.priors.gamma_prior"], [81, "module-smac.model.gaussian_process.priors.horseshoe_prior"], [82, "module-smac.model.gaussian_process.priors.log_normal_prior"], [83, "module-smac.model.gaussian_process.priors.tophat_prior"], [84, "module-smac.model.multi_objective_model"], [85, "module-smac.model.random_forest"], [86, "module-smac.model.random_forest.abstract_random_forest"], [87, "module-smac.model.random_forest.random_forest"], [88, "module-smac.model.random_model"], [89, "module-smac.multi_objective"], [90, "module-smac.multi_objective.abstract_multi_objective_algorithm"], [91, "module-smac.multi_objective.aggregation_strategy"], [92, "module-smac.multi_objective.parego"], [93, "module-smac.random_design"], [94, "module-smac.random_design.abstract_random_design"], [95, "module-smac.random_design.annealing_design"], [96, "module-smac.random_design.modulus_design"], [97, "module-smac.random_design.probability_design"], [98, "module-smac.runhistory"], [99, "module-smac.runhistory.dataclasses"], [100, "module-smac.runhistory.encoder"], [101, "module-smac.runhistory.encoder.abstract_encoder"], [102, "module-smac.runhistory.encoder.boing_encoder"], [103, "module-smac.runhistory.encoder.eips_encoder"], [104, "module-smac.runhistory.encoder.encoder"], [105, "module-smac.runhistory.encoder.inverse_scaled_encoder"], [106, "module-smac.runhistory.encoder.log_encoder"], [107, "module-smac.runhistory.encoder.log_scaled_encoder"], [108, "module-smac.runhistory.encoder.scaled_encoder"], [109, "module-smac.runhistory.encoder.sqrt_scaled_encoder"], [110, "module-smac.runhistory.enumerations"], [111, "module-smac.runhistory.runhistory"], [112, "module-smac.runner"], [113, "module-smac.runner.abstract_runner"], [114, "module-smac.runner.dask_runner"], [115, "module-smac.runner.exceptions"], [116, "module-smac.runner.target_function_runner"], [117, "module-smac.scenario"], [118, "module-smac.utils"], [119, "module-smac.utils.configspace"], [120, "module-smac.utils.data_structures"], [121, "module-smac.utils.logging"], [122, "module-smac.utils.multi_objective"], [123, "module-smac.utils.subspaces"], [124, "module-smac.utils.subspaces.boing_subspace"], [125, "module-smac.utils.subspaces.turbo_subspace"]], "smac.acquisition": [[18, "module-smac.acquisition"]], "abstractacquisitionfunction (class in smac.acquisition.functions)": [[19, "smac.acquisition.functions.AbstractAcquisitionFunction"]], "ei (class in smac.acquisition.functions)": [[19, "smac.acquisition.functions.EI"]], "eips (class in smac.acquisition.functions)": [[19, "smac.acquisition.functions.EIPS"]], "integratedacquisitionfunction (class in smac.acquisition.functions)": [[19, "smac.acquisition.functions.IntegratedAcquisitionFunction"]], "lcb (class in smac.acquisition.functions)": [[19, "smac.acquisition.functions.LCB"]], "pi (class in smac.acquisition.functions)": [[19, "smac.acquisition.functions.PI"]], "prioracquisitionfunction (class in smac.acquisition.functions)": [[19, "smac.acquisition.functions.PriorAcquisitionFunction"]], "ts (class in smac.acquisition.functions)": [[19, "smac.acquisition.functions.TS"]], "__call__() (smac.acquisition.functions.abstractacquisitionfunction method)": [[19, "smac.acquisition.functions.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.functions.abstractacquisitionfunction property)": [[19, "smac.acquisition.functions.AbstractAcquisitionFunction.meta"]], "meta (smac.acquisition.functions.ei property)": [[19, "smac.acquisition.functions.EI.meta"]], "meta (smac.acquisition.functions.integratedacquisitionfunction property)": [[19, "smac.acquisition.functions.IntegratedAcquisitionFunction.meta"]], "meta (smac.acquisition.functions.lcb property)": [[19, "smac.acquisition.functions.LCB.meta"]], "meta (smac.acquisition.functions.pi property)": [[19, "smac.acquisition.functions.PI.meta"]], "meta (smac.acquisition.functions.prioracquisitionfunction property)": [[19, "smac.acquisition.functions.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.functions.abstractacquisitionfunction property)": [[19, "smac.acquisition.functions.AbstractAcquisitionFunction.model"]], "model (smac.acquisition.functions.prioracquisitionfunction property)": [[19, "smac.acquisition.functions.PriorAcquisitionFunction.model"]], "name (smac.acquisition.functions.abstractacquisitionfunction property)": [[19, "smac.acquisition.functions.AbstractAcquisitionFunction.name"]], "name (smac.acquisition.functions.ei property)": [[19, "smac.acquisition.functions.EI.name"]], "name (smac.acquisition.functions.eips property)": [[19, "smac.acquisition.functions.EIPS.name"]], "name (smac.acquisition.functions.integratedacquisitionfunction property)": [[19, "smac.acquisition.functions.IntegratedAcquisitionFunction.name"]], "name (smac.acquisition.functions.lcb property)": [[19, "smac.acquisition.functions.LCB.name"]], "name (smac.acquisition.functions.pi property)": [[19, "smac.acquisition.functions.PI.name"]], "name (smac.acquisition.functions.prioracquisitionfunction property)": [[19, "smac.acquisition.functions.PriorAcquisitionFunction.name"]], "name (smac.acquisition.functions.ts property)": [[19, "smac.acquisition.functions.TS.name"]], "smac.acquisition.functions": [[19, "module-smac.acquisition.functions"]], "update() (smac.acquisition.functions.abstractacquisitionfunction method)": [[19, "smac.acquisition.functions.AbstractAcquisitionFunction.update"]], "abstractacquisitionfunction (class in smac.acquisition.functions.abstract_acquisition_function)": [[20, "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction"]], "__call__() (smac.acquisition.functions.abstract_acquisition_function.abstractacquisitionfunction method)": [[20, "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.functions.abstract_acquisition_function.abstractacquisitionfunction property)": [[20, "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction.meta"]], "model (smac.acquisition.functions.abstract_acquisition_function.abstractacquisitionfunction property)": [[20, "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction.model"]], "name (smac.acquisition.functions.abstract_acquisition_function.abstractacquisitionfunction property)": [[20, "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction.name"]], "smac.acquisition.functions.abstract_acquisition_function": [[20, "module-smac.acquisition.functions.abstract_acquisition_function"]], "update() (smac.acquisition.functions.abstract_acquisition_function.abstractacquisitionfunction method)": [[20, "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction.update"]], "lcb (class in smac.acquisition.functions.confidence_bound)": [[21, "smac.acquisition.functions.confidence_bound.LCB"]], "meta (smac.acquisition.functions.confidence_bound.lcb property)": [[21, "smac.acquisition.functions.confidence_bound.LCB.meta"]], "name (smac.acquisition.functions.confidence_bound.lcb property)": [[21, "smac.acquisition.functions.confidence_bound.LCB.name"]], "smac.acquisition.functions.confidence_bound": [[21, "module-smac.acquisition.functions.confidence_bound"]], "ei (class in smac.acquisition.functions.expected_improvement)": [[22, "smac.acquisition.functions.expected_improvement.EI"]], "eips (class in smac.acquisition.functions.expected_improvement)": [[22, "smac.acquisition.functions.expected_improvement.EIPS"]], "meta (smac.acquisition.functions.expected_improvement.ei property)": [[22, "smac.acquisition.functions.expected_improvement.EI.meta"]], "name (smac.acquisition.functions.expected_improvement.ei property)": [[22, "smac.acquisition.functions.expected_improvement.EI.name"]], "name (smac.acquisition.functions.expected_improvement.eips property)": [[22, "smac.acquisition.functions.expected_improvement.EIPS.name"]], "smac.acquisition.functions.expected_improvement": [[22, "module-smac.acquisition.functions.expected_improvement"]], "integratedacquisitionfunction (class in smac.acquisition.functions.integrated_acquisition_function)": [[23, "smac.acquisition.functions.integrated_acquisition_function.IntegratedAcquisitionFunction"]], "meta (smac.acquisition.functions.integrated_acquisition_function.integratedacquisitionfunction property)": [[23, "smac.acquisition.functions.integrated_acquisition_function.IntegratedAcquisitionFunction.meta"]], "name (smac.acquisition.functions.integrated_acquisition_function.integratedacquisitionfunction property)": [[23, "smac.acquisition.functions.integrated_acquisition_function.IntegratedAcquisitionFunction.name"]], "smac.acquisition.functions.integrated_acquisition_function": [[23, "module-smac.acquisition.functions.integrated_acquisition_function"]], "prioracquisitionfunction (class in smac.acquisition.functions.prior_acqusition_function)": [[24, "smac.acquisition.functions.prior_acqusition_function.PriorAcquisitionFunction"]], "meta (smac.acquisition.functions.prior_acqusition_function.prioracquisitionfunction property)": [[24, "smac.acquisition.functions.prior_acqusition_function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.functions.prior_acqusition_function.prioracquisitionfunction property)": [[24, "smac.acquisition.functions.prior_acqusition_function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.functions.prior_acqusition_function.prioracquisitionfunction property)": [[24, "smac.acquisition.functions.prior_acqusition_function.PriorAcquisitionFunction.name"]], "smac.acquisition.functions.prior_acqusition_function": [[24, "module-smac.acquisition.functions.prior_acqusition_function"]], "pi (class in smac.acquisition.functions.probability_improvement)": [[25, "smac.acquisition.functions.probability_improvement.PI"]], "meta (smac.acquisition.functions.probability_improvement.pi property)": [[25, "smac.acquisition.functions.probability_improvement.PI.meta"]], "name (smac.acquisition.functions.probability_improvement.pi property)": [[25, "smac.acquisition.functions.probability_improvement.PI.name"]], "smac.acquisition.functions.probability_improvement": [[25, "module-smac.acquisition.functions.probability_improvement"]], "ts (class in smac.acquisition.functions.thompson)": [[26, "smac.acquisition.functions.thompson.TS"]], "name (smac.acquisition.functions.thompson.ts property)": [[26, "smac.acquisition.functions.thompson.TS.name"]], "smac.acquisition.functions.thompson": [[26, "module-smac.acquisition.functions.thompson"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizers)": [[27, "smac.acquisition.maximizers.AbstractAcquisitionMaximizer"]], "differentialevolution (class in smac.acquisition.maximizers)": [[27, "smac.acquisition.maximizers.DifferentialEvolution"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizers)": [[27, "smac.acquisition.maximizers.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizers)": [[27, "smac.acquisition.maximizers.LocalAndSortedRandomSearch"]], "localsearch (class in smac.acquisition.maximizers)": [[27, "smac.acquisition.maximizers.LocalSearch"]], "randomsearch (class in smac.acquisition.maximizers)": [[27, "smac.acquisition.maximizers.RandomSearch"]], "acquisition_function (smac.acquisition.maximizers.abstractacquisitionmaximizer property)": [[27, "smac.acquisition.maximizers.AbstractAcquisitionMaximizer.acquisition_function"]], "acquisition_function (smac.acquisition.maximizers.localandsortedrandomsearch property)": [[27, "smac.acquisition.maximizers.LocalAndSortedRandomSearch.acquisition_function"]], "maximize() (smac.acquisition.maximizers.abstractacquisitionmaximizer method)": [[27, "smac.acquisition.maximizers.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizers.abstractacquisitionmaximizer property)": [[27, "smac.acquisition.maximizers.AbstractAcquisitionMaximizer.meta"]], "meta (smac.acquisition.maximizers.localandsortedrandomsearch property)": [[27, "smac.acquisition.maximizers.LocalAndSortedRandomSearch.meta"]], "meta (smac.acquisition.maximizers.localsearch property)": [[27, "smac.acquisition.maximizers.LocalSearch.meta"]], "smac.acquisition.maximizers": [[27, "module-smac.acquisition.maximizers"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizers.abstract_acqusition_maximizer)": [[28, "smac.acquisition.maximizers.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer"]], "acquisition_function (smac.acquisition.maximizers.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[28, "smac.acquisition.maximizers.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "maximize() (smac.acquisition.maximizers.abstract_acqusition_maximizer.abstractacquisitionmaximizer method)": [[28, "smac.acquisition.maximizers.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizers.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[28, "smac.acquisition.maximizers.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.meta"]], "smac.acquisition.maximizers.abstract_acqusition_maximizer": [[28, "module-smac.acquisition.maximizers.abstract_acqusition_maximizer"]], "differentialevolution (class in smac.acquisition.maximizers.differential_evolution)": [[29, "smac.acquisition.maximizers.differential_evolution.DifferentialEvolution"]], "smac.acquisition.maximizers.differential_evolution": [[29, "module-smac.acquisition.maximizers.differential_evolution"]], "challengerlist (class in smac.acquisition.maximizers.helpers)": [[30, "smac.acquisition.maximizers.helpers.ChallengerList"]], "smac.acquisition.maximizers.helpers": [[30, "module-smac.acquisition.maximizers.helpers"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizers.local_and_random_search)": [[31, "smac.acquisition.maximizers.local_and_random_search.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizers.local_and_random_search)": [[31, "smac.acquisition.maximizers.local_and_random_search.LocalAndSortedRandomSearch"]], "acquisition_function (smac.acquisition.maximizers.local_and_random_search.localandsortedrandomsearch property)": [[31, "smac.acquisition.maximizers.local_and_random_search.LocalAndSortedRandomSearch.acquisition_function"]], "meta (smac.acquisition.maximizers.local_and_random_search.localandsortedrandomsearch property)": [[31, "smac.acquisition.maximizers.local_and_random_search.LocalAndSortedRandomSearch.meta"]], "smac.acquisition.maximizers.local_and_random_search": [[31, "module-smac.acquisition.maximizers.local_and_random_search"]], "localsearch (class in smac.acquisition.maximizers.local_search)": [[32, "smac.acquisition.maximizers.local_search.LocalSearch"]], "meta (smac.acquisition.maximizers.local_search.localsearch property)": [[32, "smac.acquisition.maximizers.local_search.LocalSearch.meta"]], "smac.acquisition.maximizers.local_search": [[32, "module-smac.acquisition.maximizers.local_search"]], "randomsearch (class in smac.acquisition.maximizers.random_search)": [[33, "smac.acquisition.maximizers.random_search.RandomSearch"]], "smac.acquisition.maximizers.random_search": [[33, "module-smac.acquisition.maximizers.random_search"]], "callback (class in smac.callback)": [[34, "smac.callback.Callback"]], "on_ask_end() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_start"]], "on_tell_end() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback method)": [[34, "smac.callback.Callback.on_tell_start"]], "smac.callback": [[34, "module-smac.callback"]], "abstractfacade (class in smac.facade)": [[35, "smac.facade.AbstractFacade"]], "algorithmconfigurationfacade (class in smac.facade)": [[35, "smac.facade.AlgorithmConfigurationFacade"]], "blackboxfacade (class in smac.facade)": [[35, "smac.facade.BlackBoxFacade"]], "hyperbandfacade (class in smac.facade)": [[35, "smac.facade.HyperbandFacade"]], "hyperparameteroptimizationfacade (class in smac.facade)": [[35, "smac.facade.HyperparameterOptimizationFacade"]], "multifidelityfacade (class in smac.facade)": [[35, "smac.facade.MultiFidelityFacade"]], "randomfacade (class in smac.facade)": [[35, "smac.facade.RandomFacade"]], "ask() (smac.facade.abstractfacade method)": [[35, "smac.facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstractfacade static method)": [[35, "smac.facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.algorithmconfigurationfacade static method)": [[35, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.hyperparameteroptimizationfacade static method)": [[35, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.randomfacade static method)": [[35, "smac.facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstractfacade static method)": [[35, "smac.facade.AbstractFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.algorithmconfigurationfacade static method)": [[35, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.hyperparameteroptimizationfacade static method)": [[35, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.randomfacade static method)": [[35, "smac.facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.abstractfacade static method)": [[35, "smac.facade.AbstractFacade.get_initial_design"]], "get_initial_design() (smac.facade.algorithmconfigurationfacade static method)": [[35, "smac.facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_initial_design() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_initial_design"]], "get_initial_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[35, "smac.facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_initial_design() (smac.facade.multifidelityfacade static method)": [[35, "smac.facade.MultiFidelityFacade.get_initial_design"]], "get_initial_design() (smac.facade.randomfacade static method)": [[35, "smac.facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstractfacade static method)": [[35, "smac.facade.AbstractFacade.get_intensifier"]], "get_intensifier() (smac.facade.algorithmconfigurationfacade static method)": [[35, "smac.facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_intensifier() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperbandfacade static method)": [[35, "smac.facade.HyperbandFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperparameteroptimizationfacade static method)": [[35, "smac.facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_intensifier() (smac.facade.multifidelityfacade static method)": [[35, "smac.facade.MultiFidelityFacade.get_intensifier"]], "get_intensifier() (smac.facade.randomfacade static method)": [[35, "smac.facade.RandomFacade.get_intensifier"]], "get_kernel() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.abstractfacade static method)": [[35, "smac.facade.AbstractFacade.get_model"]], "get_model() (smac.facade.algorithmconfigurationfacade static method)": [[35, "smac.facade.AlgorithmConfigurationFacade.get_model"]], "get_model() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_model"]], "get_model() (smac.facade.hyperparameteroptimizationfacade static method)": [[35, "smac.facade.HyperparameterOptimizationFacade.get_model"]], "get_model() (smac.facade.randomfacade static method)": [[35, "smac.facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstractfacade static method)": [[35, "smac.facade.AbstractFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.algorithmconfigurationfacade static method)": [[35, "smac.facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.hyperparameteroptimizationfacade static method)": [[35, "smac.facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.randomfacade static method)": [[35, "smac.facade.RandomFacade.get_multi_objective_algorithm"]], "get_next_configurations() (smac.facade.abstractfacade method)": [[35, "smac.facade.AbstractFacade.get_next_configurations"]], "get_random_design() (smac.facade.abstractfacade static method)": [[35, "smac.facade.AbstractFacade.get_random_design"]], "get_random_design() (smac.facade.algorithmconfigurationfacade static method)": [[35, "smac.facade.AlgorithmConfigurationFacade.get_random_design"]], "get_random_design() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_random_design"]], "get_random_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[35, "smac.facade.HyperparameterOptimizationFacade.get_random_design"]], "get_random_design() (smac.facade.randomfacade static method)": [[35, "smac.facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstractfacade static method)": [[35, "smac.facade.AbstractFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.algorithmconfigurationfacade static method)": [[35, "smac.facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.blackboxfacade static method)": [[35, "smac.facade.BlackBoxFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.hyperparameteroptimizationfacade static method)": [[35, "smac.facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.randomfacade static method)": [[35, "smac.facade.RandomFacade.get_runhistory_encoder"]], "get_target_function_budgets() (smac.facade.abstractfacade method)": [[35, "smac.facade.AbstractFacade.get_target_function_budgets"]], "get_target_function_instances() (smac.facade.abstractfacade method)": [[35, "smac.facade.AbstractFacade.get_target_function_instances"]], "get_target_function_seeds() (smac.facade.abstractfacade method)": [[35, "smac.facade.AbstractFacade.get_target_function_seeds"]], "incumbent (smac.facade.abstractfacade property)": [[35, "smac.facade.AbstractFacade.incumbent"]], "meta (smac.facade.abstractfacade property)": [[35, "smac.facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstractfacade method)": [[35, "smac.facade.AbstractFacade.optimize"]], "runhistory (smac.facade.abstractfacade property)": [[35, "smac.facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstractfacade property)": [[35, "smac.facade.AbstractFacade.scenario"]], "smac.facade": [[35, "module-smac.facade"]], "stats (smac.facade.abstractfacade property)": [[35, "smac.facade.AbstractFacade.stats"]], "tell() (smac.facade.abstractfacade method)": [[35, "smac.facade.AbstractFacade.tell"]], "validate() (smac.facade.abstractfacade method)": [[35, "smac.facade.AbstractFacade.validate"]], "abstractfacade (class in smac.facade.abstract_facade)": [[36, "smac.facade.abstract_facade.AbstractFacade"]], "ask() (smac.facade.abstract_facade.abstractfacade method)": [[36, "smac.facade.abstract_facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstract_facade.abstractfacade static method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstract_facade.abstractfacade static method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.abstract_facade.abstractfacade static method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstract_facade.abstractfacade static method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_intensifier"]], "get_model() (smac.facade.abstract_facade.abstractfacade static method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstract_facade.abstractfacade static method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_multi_objective_algorithm"]], "get_next_configurations() (smac.facade.abstract_facade.abstractfacade method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_next_configurations"]], "get_random_design() (smac.facade.abstract_facade.abstractfacade static method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstract_facade.abstractfacade static method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_runhistory_encoder"]], "get_target_function_budgets() (smac.facade.abstract_facade.abstractfacade method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_target_function_budgets"]], "get_target_function_instances() (smac.facade.abstract_facade.abstractfacade method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_target_function_instances"]], "get_target_function_seeds() (smac.facade.abstract_facade.abstractfacade method)": [[36, "smac.facade.abstract_facade.AbstractFacade.get_target_function_seeds"]], "incumbent (smac.facade.abstract_facade.abstractfacade property)": [[36, "smac.facade.abstract_facade.AbstractFacade.incumbent"]], "meta (smac.facade.abstract_facade.abstractfacade property)": [[36, "smac.facade.abstract_facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstract_facade.abstractfacade method)": [[36, "smac.facade.abstract_facade.AbstractFacade.optimize"]], "runhistory (smac.facade.abstract_facade.abstractfacade property)": [[36, "smac.facade.abstract_facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstract_facade.abstractfacade property)": [[36, "smac.facade.abstract_facade.AbstractFacade.scenario"]], "smac.facade.abstract_facade": [[36, "module-smac.facade.abstract_facade"]], "stats (smac.facade.abstract_facade.abstractfacade property)": [[36, "smac.facade.abstract_facade.AbstractFacade.stats"]], "tell() (smac.facade.abstract_facade.abstractfacade method)": [[36, "smac.facade.abstract_facade.AbstractFacade.tell"]], "validate() (smac.facade.abstract_facade.abstractfacade method)": [[36, "smac.facade.abstract_facade.AbstractFacade.validate"]], "algorithmconfigurationfacade (class in smac.facade.algorithm_configuration_facade)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade"]], "get_acquisition_function() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_intensifier() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_model() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "smac.facade.algorithm_configuration_facade": [[37, "module-smac.facade.algorithm_configuration_facade"]], "blackboxfacade (class in smac.facade.blackbox_facade)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade"]], "get_acquisition_function() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_initial_design"]], "get_intensifier() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_intensifier"]], "get_kernel() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.blackbox_facade.blackboxfacade static method)": [[38, "smac.facade.blackbox_facade.BlackBoxFacade.get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[38, "module-smac.facade.blackbox_facade"]], "smac.facade.boing_facade": [[39, "module-smac.facade.boing_facade"]], "hyperbandfacade (class in smac.facade.hyperband_facade)": [[40, "smac.facade.hyperband_facade.HyperbandFacade"]], "get_intensifier() (smac.facade.hyperband_facade.hyperbandfacade static method)": [[40, "smac.facade.hyperband_facade.HyperbandFacade.get_intensifier"]], "smac.facade.hyperband_facade": [[40, "module-smac.facade.hyperband_facade"]], "hyperparameteroptimizationfacade (class in smac.facade.hyperparameter_optimization_facade)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade"]], "get_acquisition_function() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_intensifier() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_model() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "smac.facade.hyperparameter_optimization_facade": [[41, "module-smac.facade.hyperparameter_optimization_facade"]], "multifidelityfacade (class in smac.facade.multi_fidelity_facade)": [[42, "smac.facade.multi_fidelity_facade.MultiFidelityFacade"]], "get_initial_design() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[42, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_initial_design"]], "get_intensifier() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[42, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_intensifier"]], "smac.facade.multi_fidelity_facade": [[42, "module-smac.facade.multi_fidelity_facade"]], "randomfacade (class in smac.facade.random_facade)": [[43, "smac.facade.random_facade.RandomFacade"]], "get_acquisition_function() (smac.facade.random_facade.randomfacade static method)": [[43, "smac.facade.random_facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.random_facade.randomfacade static method)": [[43, "smac.facade.random_facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.random_facade.randomfacade static method)": [[43, "smac.facade.random_facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.random_facade.randomfacade static method)": [[43, "smac.facade.random_facade.RandomFacade.get_intensifier"]], "get_model() (smac.facade.random_facade.randomfacade static method)": [[43, "smac.facade.random_facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.random_facade.randomfacade static method)": [[43, "smac.facade.random_facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.random_facade.randomfacade static method)": [[43, "smac.facade.random_facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.random_facade.randomfacade static method)": [[43, "smac.facade.random_facade.RandomFacade.get_runhistory_encoder"]], "smac.facade.random_facade": [[43, "module-smac.facade.random_facade"]], "abstractinitialdesign (class in smac.initial_design)": [[44, "smac.initial_design.AbstractInitialDesign"]], "defaultinitialdesign (class in smac.initial_design)": [[44, "smac.initial_design.DefaultInitialDesign"]], "factorialinitialdesign (class in smac.initial_design)": [[44, "smac.initial_design.FactorialInitialDesign"]], "latinhypercubeinitialdesign (class in smac.initial_design)": [[44, "smac.initial_design.LatinHypercubeInitialDesign"]], "randominitialdesign (class in smac.initial_design)": [[44, "smac.initial_design.RandomInitialDesign"]], "sobolinitialdesign (class in smac.initial_design)": [[44, "smac.initial_design.SobolInitialDesign"]], "meta (smac.initial_design.abstractinitialdesign property)": [[44, "smac.initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstractinitialdesign method)": [[44, "smac.initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design": [[44, "module-smac.initial_design"]], "abstractinitialdesign (class in smac.initial_design.abstract_initial_design)": [[45, "smac.initial_design.abstract_initial_design.AbstractInitialDesign"]], "meta (smac.initial_design.abstract_initial_design.abstractinitialdesign property)": [[45, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstract_initial_design.abstractinitialdesign method)": [[45, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design.abstract_initial_design": [[45, "module-smac.initial_design.abstract_initial_design"]], "defaultinitialdesign (class in smac.initial_design.default_design)": [[46, "smac.initial_design.default_design.DefaultInitialDesign"]], "smac.initial_design.default_design": [[46, "module-smac.initial_design.default_design"]], "factorialinitialdesign (class in smac.initial_design.factorial_design)": [[47, "smac.initial_design.factorial_design.FactorialInitialDesign"]], "smac.initial_design.factorial_design": [[47, "module-smac.initial_design.factorial_design"]], "latinhypercubeinitialdesign (class in smac.initial_design.latin_hypercube_design)": [[48, "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[48, "module-smac.initial_design.latin_hypercube_design"]], "randominitialdesign (class in smac.initial_design.random_design)": [[49, "smac.initial_design.random_design.RandomInitialDesign"]], "smac.initial_design.random_design": [[49, "module-smac.initial_design.random_design"]], "sobolinitialdesign (class in smac.initial_design.sobol_design)": [[50, "smac.initial_design.sobol_design.SobolInitialDesign"]], "smac.initial_design.sobol_design": [[50, "module-smac.initial_design.sobol_design"]], "abstractintensifier (class in smac.intensifier)": [[51, "smac.intensifier.AbstractIntensifier"]], "abstractparallelintensifier (class in smac.intensifier)": [[51, "smac.intensifier.AbstractParallelIntensifier"]], "hyperband (class in smac.intensifier)": [[51, "smac.intensifier.Hyperband"]], "intensifier (class in smac.intensifier)": [[51, "smac.intensifier.Intensifier"]], "successivehalving (class in smac.intensifier)": [[51, "smac.intensifier.SuccessiveHalving"]], "calculate_budgets() (smac.intensifier.successivehalving method)": [[51, "smac.intensifier.SuccessiveHalving.calculate_budgets"]], "get_next_challenger() (smac.intensifier.intensifier method)": [[51, "smac.intensifier.Intensifier.get_next_challenger"]], "get_next_trial() (smac.intensifier.abstractintensifier method)": [[51, "smac.intensifier.AbstractIntensifier.get_next_trial"]], "get_next_trial() (smac.intensifier.abstractparallelintensifier method)": [[51, "smac.intensifier.AbstractParallelIntensifier.get_next_trial"]], "get_next_trial() (smac.intensifier.intensifier method)": [[51, "smac.intensifier.Intensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.abstractintensifier method)": [[51, "smac.intensifier.AbstractIntensifier.get_target_function_budgets"]], "get_target_function_budgets() (smac.intensifier.intensifier method)": [[51, "smac.intensifier.Intensifier.get_target_function_budgets"]], "get_target_function_budgets() (smac.intensifier.successivehalving method)": [[51, "smac.intensifier.SuccessiveHalving.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.abstractintensifier method)": [[51, "smac.intensifier.AbstractIntensifier.get_target_function_instances"]], "get_target_function_instances() (smac.intensifier.intensifier method)": [[51, "smac.intensifier.Intensifier.get_target_function_instances"]], "get_target_function_instances() (smac.intensifier.successivehalving method)": [[51, "smac.intensifier.SuccessiveHalving.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.abstractintensifier method)": [[51, "smac.intensifier.AbstractIntensifier.get_target_function_seeds"]], "get_target_function_seeds() (smac.intensifier.intensifier method)": [[51, "smac.intensifier.Intensifier.get_target_function_seeds"]], "get_target_function_seeds() (smac.intensifier.successivehalving method)": [[51, "smac.intensifier.SuccessiveHalving.get_target_function_seeds"]], "intensify_percentage (smac.intensifier.intensifier property)": [[51, "smac.intensifier.Intensifier.intensify_percentage"]], "iteration_done (smac.intensifier.abstractintensifier property)": [[51, "smac.intensifier.AbstractIntensifier.iteration_done"]], "meta (smac.intensifier.abstractintensifier property)": [[51, "smac.intensifier.AbstractIntensifier.meta"]], "meta (smac.intensifier.intensifier property)": [[51, "smac.intensifier.Intensifier.meta"]], "meta (smac.intensifier.successivehalving property)": [[51, "smac.intensifier.SuccessiveHalving.meta"]], "num_trials (smac.intensifier.abstractintensifier property)": [[51, "smac.intensifier.AbstractIntensifier.num_trials"]], "process_results() (smac.intensifier.abstractintensifier method)": [[51, "smac.intensifier.AbstractIntensifier.process_results"]], "process_results() (smac.intensifier.abstractparallelintensifier method)": [[51, "smac.intensifier.AbstractParallelIntensifier.process_results"]], "process_results() (smac.intensifier.intensifier method)": [[51, "smac.intensifier.Intensifier.process_results"]], "repeat_configs (smac.intensifier.abstractintensifier property)": [[51, "smac.intensifier.AbstractIntensifier.repeat_configs"]], "smac.intensifier": [[51, "module-smac.intensifier"]], "uses_budgets (smac.intensifier.abstractintensifier property)": [[51, "smac.intensifier.AbstractIntensifier.uses_budgets"]], "uses_budgets (smac.intensifier.intensifier property)": [[51, "smac.intensifier.Intensifier.uses_budgets"]], "uses_budgets (smac.intensifier.successivehalving property)": [[51, "smac.intensifier.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.abstractintensifier property)": [[51, "smac.intensifier.AbstractIntensifier.uses_instances"]], "uses_instances (smac.intensifier.intensifier property)": [[51, "smac.intensifier.Intensifier.uses_instances"]], "uses_instances (smac.intensifier.successivehalving property)": [[51, "smac.intensifier.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.abstractintensifier property)": [[51, "smac.intensifier.AbstractIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.abstractparallelintensifier property)": [[51, "smac.intensifier.AbstractParallelIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.intensifier property)": [[51, "smac.intensifier.Intensifier.uses_seeds"]], "abstractintensifier (class in smac.intensifier.abstract_intensifier)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier"]], "get_next_trial() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_seeds"]], "iteration_done (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.iteration_done"]], "meta (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.meta"]], "num_trials (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.num_trials"]], "process_results() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.process_results"]], "repeat_configs (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.repeat_configs"]], "smac.intensifier.abstract_intensifier": [[52, "module-smac.intensifier.abstract_intensifier"]], "uses_budgets (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_budgets"]], "uses_instances (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_instances"]], "uses_seeds (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[52, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_seeds"]], "abstractparallelintensifier (class in smac.intensifier.abstract_parallel_intensifier)": [[53, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier"]], "get_next_trial() (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier method)": [[53, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.get_next_trial"]], "process_results() (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier method)": [[53, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.process_results"]], "smac.intensifier.abstract_parallel_intensifier": [[53, "module-smac.intensifier.abstract_parallel_intensifier"]], "uses_seeds (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier property)": [[53, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.uses_seeds"]], "hyperband (class in smac.intensifier.hyperband)": [[54, "smac.intensifier.hyperband.Hyperband"]], "smac.intensifier.hyperband": [[54, "module-smac.intensifier.hyperband"]], "hyperbandworker (class in smac.intensifier.hyperband_worker)": [[55, "smac.intensifier.hyperband_worker.HyperbandWorker"]], "get_next_trial() (smac.intensifier.hyperband_worker.hyperbandworker method)": [[55, "smac.intensifier.hyperband_worker.HyperbandWorker.get_next_trial"]], "process_results() (smac.intensifier.hyperband_worker.hyperbandworker method)": [[55, "smac.intensifier.hyperband_worker.HyperbandWorker.process_results"]], "smac.intensifier.hyperband_worker": [[55, "module-smac.intensifier.hyperband_worker"]], "uses_budgets (smac.intensifier.hyperband_worker.hyperbandworker property)": [[55, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_budgets"]], "uses_instances (smac.intensifier.hyperband_worker.hyperbandworker property)": [[55, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_instances"]], "uses_seeds (smac.intensifier.hyperband_worker.hyperbandworker property)": [[55, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_seeds"]], "intensifier (class in smac.intensifier.intensifier)": [[56, "smac.intensifier.intensifier.Intensifier"]], "get_next_challenger() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.get_next_challenger"]], "get_next_trial() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.get_target_function_seeds"]], "intensify_percentage (smac.intensifier.intensifier.intensifier property)": [[56, "smac.intensifier.intensifier.Intensifier.intensify_percentage"]], "meta (smac.intensifier.intensifier.intensifier property)": [[56, "smac.intensifier.intensifier.Intensifier.meta"]], "process_results() (smac.intensifier.intensifier.intensifier method)": [[56, "smac.intensifier.intensifier.Intensifier.process_results"]], "smac.intensifier.intensifier": [[56, "module-smac.intensifier.intensifier"]], "uses_budgets (smac.intensifier.intensifier.intensifier property)": [[56, "smac.intensifier.intensifier.Intensifier.uses_budgets"]], "uses_instances (smac.intensifier.intensifier.intensifier property)": [[56, "smac.intensifier.intensifier.Intensifier.uses_instances"]], "uses_seeds (smac.intensifier.intensifier.intensifier property)": [[56, "smac.intensifier.intensifier.Intensifier.uses_seeds"]], "intensifierstage (class in smac.intensifier.stages)": [[57, "smac.intensifier.stages.IntensifierStage"]], "smac.intensifier.stages": [[57, "module-smac.intensifier.stages"]], "successivehalving (class in smac.intensifier.successive_halving)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving"]], "calculate_budgets() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.calculate_budgets"]], "get_target_function_budgets() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.successive_halving.successivehalving method)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_seeds"]], "meta (smac.intensifier.successive_halving.successivehalving property)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.meta"]], "smac.intensifier.successive_halving": [[58, "module-smac.intensifier.successive_halving"]], "uses_budgets (smac.intensifier.successive_halving.successivehalving property)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving.successivehalving property)": [[58, "smac.intensifier.successive_halving.SuccessiveHalving.uses_instances"]], "successivehalvingworker (class in smac.intensifier.successive_halving_worker)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker"]], "get_next_trial() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_seeds"]], "process_results() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.process_results"]], "smac.intensifier.successive_halving_worker": [[59, "module-smac.intensifier.successive_halving_worker"]], "stage (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.stage"]], "uses_budgets (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_instances"]], "uses_seeds (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[59, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_seeds"]], "basesmbo (class in smac.main)": [[60, "smac.main.BaseSMBO"]], "smbo (class in smac.main)": [[60, "smac.main.SMBO"]], "ask() (smac.main.basesmbo method)": [[60, "smac.main.BaseSMBO.ask"]], "ask() (smac.main.smbo method)": [[60, "smac.main.SMBO.ask"]], "get_next_configurations() (smac.main.basesmbo method)": [[60, "smac.main.BaseSMBO.get_next_configurations"]], "get_next_configurations() (smac.main.smbo method)": [[60, "smac.main.SMBO.get_next_configurations"]], "incumbent (smac.main.basesmbo property)": [[60, "smac.main.BaseSMBO.incumbent"]], "optimize() (smac.main.basesmbo method)": [[60, "smac.main.BaseSMBO.optimize"]], "runhistory (smac.main.basesmbo property)": [[60, "smac.main.BaseSMBO.runhistory"]], "save() (smac.main.basesmbo method)": [[60, "smac.main.BaseSMBO.save"]], "smac.main": [[60, "module-smac.main"]], "stats (smac.main.basesmbo property)": [[60, "smac.main.BaseSMBO.stats"]], "tell() (smac.main.basesmbo method)": [[60, "smac.main.BaseSMBO.tell"]], "tell() (smac.main.smbo method)": [[60, "smac.main.SMBO.tell"]], "update_acquisition_function() (smac.main.basesmbo method)": [[60, "smac.main.BaseSMBO.update_acquisition_function"]], "update_model() (smac.main.basesmbo method)": [[60, "smac.main.BaseSMBO.update_model"]], "validate() (smac.main.basesmbo method)": [[60, "smac.main.BaseSMBO.validate"]], "basesmbo (class in smac.main.base_smbo)": [[61, "smac.main.base_smbo.BaseSMBO"]], "ask() (smac.main.base_smbo.basesmbo method)": [[61, "smac.main.base_smbo.BaseSMBO.ask"]], "get_next_configurations() (smac.main.base_smbo.basesmbo method)": [[61, "smac.main.base_smbo.BaseSMBO.get_next_configurations"]], "incumbent (smac.main.base_smbo.basesmbo property)": [[61, "smac.main.base_smbo.BaseSMBO.incumbent"]], "optimize() (smac.main.base_smbo.basesmbo method)": [[61, "smac.main.base_smbo.BaseSMBO.optimize"]], "runhistory (smac.main.base_smbo.basesmbo property)": [[61, "smac.main.base_smbo.BaseSMBO.runhistory"]], "save() (smac.main.base_smbo.basesmbo method)": [[61, "smac.main.base_smbo.BaseSMBO.save"]], "smac.main.base_smbo": [[61, "module-smac.main.base_smbo"]], "stats (smac.main.base_smbo.basesmbo property)": [[61, "smac.main.base_smbo.BaseSMBO.stats"]], "tell() (smac.main.base_smbo.basesmbo method)": [[61, "smac.main.base_smbo.BaseSMBO.tell"]], "update_acquisition_function() (smac.main.base_smbo.basesmbo method)": [[61, "smac.main.base_smbo.BaseSMBO.update_acquisition_function"]], "update_model() (smac.main.base_smbo.basesmbo method)": [[61, "smac.main.base_smbo.BaseSMBO.update_model"]], "validate() (smac.main.base_smbo.basesmbo method)": [[61, "smac.main.base_smbo.BaseSMBO.validate"]], "smac.main.boing": [[62, "module-smac.main.boing"]], "smbo (class in smac.main.smbo)": [[63, "smac.main.smbo.SMBO"]], "ask() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.ask"]], "get_next_configurations() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.get_next_configurations"]], "smac.main.smbo": [[63, "module-smac.main.smbo"]], "tell() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.tell"]], "smac.main.turbo": [[64, "module-smac.main.turbo"]], "abstractmodel (class in smac.model)": [[65, "smac.model.AbstractModel"]], "multiobjectivemodel (class in smac.model)": [[65, "smac.model.MultiObjectiveModel"]], "randommodel (class in smac.model)": [[65, "smac.model.RandomModel"]], "meta (smac.model.abstractmodel property)": [[65, "smac.model.AbstractModel.meta"]], "models (smac.model.multiobjectivemodel property)": [[65, "smac.model.MultiObjectiveModel.models"]], "predict() (smac.model.abstractmodel method)": [[65, "smac.model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstractmodel method)": [[65, "smac.model.AbstractModel.predict_marginalized"]], "predict_marginalized() (smac.model.multiobjectivemodel method)": [[65, "smac.model.MultiObjectiveModel.predict_marginalized"]], "smac.model": [[65, "module-smac.model"]], "train() (smac.model.abstractmodel method)": [[65, "smac.model.AbstractModel.train"]], "abstractmodel (class in smac.model.abstract_model)": [[66, "smac.model.abstract_model.AbstractModel"]], "meta (smac.model.abstract_model.abstractmodel property)": [[66, "smac.model.abstract_model.AbstractModel.meta"]], "predict() (smac.model.abstract_model.abstractmodel method)": [[66, "smac.model.abstract_model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstract_model.abstractmodel method)": [[66, "smac.model.abstract_model.AbstractModel.predict_marginalized"]], "smac.model.abstract_model": [[66, "module-smac.model.abstract_model"]], "train() (smac.model.abstract_model.abstractmodel method)": [[66, "smac.model.abstract_model.AbstractModel.train"]], "abstractgaussianprocess (class in smac.model.gaussian_process)": [[67, "smac.model.gaussian_process.AbstractGaussianProcess"]], "gaussianprocess (class in smac.model.gaussian_process)": [[67, "smac.model.gaussian_process.GaussianProcess"]], "mcmcgaussianprocess (class in smac.model.gaussian_process)": [[67, "smac.model.gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.abstractgaussianprocess property)": [[67, "smac.model.gaussian_process.AbstractGaussianProcess.meta"]], "meta (smac.model.gaussian_process.gaussianprocess property)": [[67, "smac.model.gaussian_process.GaussianProcess.meta"]], "meta (smac.model.gaussian_process.mcmcgaussianprocess property)": [[67, "smac.model.gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmcgaussianprocess property)": [[67, "smac.model.gaussian_process.MCMCGaussianProcess.models"]], "sample_functions() (smac.model.gaussian_process.gaussianprocess method)": [[67, "smac.model.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process": [[67, "module-smac.model.gaussian_process"]], "abstractgaussianprocess (class in smac.model.gaussian_process.abstract_gaussian_process)": [[68, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess"]], "meta (smac.model.gaussian_process.abstract_gaussian_process.abstractgaussianprocess property)": [[68, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess.meta"]], "smac.model.gaussian_process.abstract_gaussian_process": [[68, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "gaussianprocess (class in smac.model.gaussian_process.gaussian_process)": [[69, "smac.model.gaussian_process.gaussian_process.GaussianProcess"]], "meta (smac.model.gaussian_process.gaussian_process.gaussianprocess property)": [[69, "smac.model.gaussian_process.gaussian_process.GaussianProcess.meta"]], "sample_functions() (smac.model.gaussian_process.gaussian_process.gaussianprocess method)": [[69, "smac.model.gaussian_process.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[69, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[70, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "abstractkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.ConstantKernel"]], "hammingkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.HammingKernel"]], "maternkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.MaternKernel"]], "productkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.ProductKernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.RBFKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.SumKernel"]], "whitekernel (class in smac.model.gaussian_process.kernels)": [[71, "smac.model.gaussian_process.kernels.WhiteKernel"]], "__call__() (smac.model.gaussian_process.kernels.abstractkernel method)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.constantkernel method)": [[71, "smac.model.gaussian_process.kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.productkernel method)": [[71, "smac.model.gaussian_process.kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.sumkernel method)": [[71, "smac.model.gaussian_process.kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.abstractkernel method)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.has_conditions"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hammingkernel property)": [[71, "smac.model.gaussian_process.kernels.HammingKernel.hyperparameter_length_scale"]], "hyperparameters (smac.model.gaussian_process.kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.meta"]], "meta (smac.model.gaussian_process.kernels.hammingkernel property)": [[71, "smac.model.gaussian_process.kernels.HammingKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels": [[71, "module-smac.model.gaussian_process.kernels"]], "abstractkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[72, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel"]], "productkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[72, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[72, "smac.model.gaussian_process.kernels.base_kernels.SumKernel"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.constantkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.productkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.sumkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.has_conditions"]], "hyperparameters (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[72, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels.base_kernels": [[72, "module-smac.model.gaussian_process.kernels.base_kernels"]], "hammingkernel (class in smac.model.gaussian_process.kernels.hamming_kernel)": [[73, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[73, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.hyperparameter_length_scale"]], "meta (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[73, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[73, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "maternkernel (class in smac.model.gaussian_process.kernels.matern_kernel)": [[74, "smac.model.gaussian_process.kernels.matern_kernel.MaternKernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[74, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels.rbf_kernel)": [[75, "smac.model.gaussian_process.kernels.rbf_kernel.RBFKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[75, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "whitekernel (class in smac.model.gaussian_process.kernels.white_kernel)": [[76, "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[76, "module-smac.model.gaussian_process.kernels.white_kernel"]], "mcmcgaussianprocess (class in smac.model.gaussian_process.mcmc_gaussian_process)": [[77, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[77, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[77, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.models"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[77, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "gammaprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.GammaPrior"]], "horseshoeprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.HorseshoePrior"]], "lognormalprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.LogNormalPrior"]], "softtophatprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors)": [[78, "smac.model.gaussian_process.priors.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.softtophatprior method)": [[78, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophatprior method)": [[78, "smac.model.gaussian_process.priors.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.softtophatprior method)": [[78, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.gammaprior property)": [[78, "smac.model.gaussian_process.priors.GammaPrior.meta"]], "meta (smac.model.gaussian_process.priors.horseshoeprior property)": [[78, "smac.model.gaussian_process.priors.HorseshoePrior.meta"]], "meta (smac.model.gaussian_process.priors.lognormalprior property)": [[78, "smac.model.gaussian_process.priors.LogNormalPrior.meta"]], "meta (smac.model.gaussian_process.priors.softtophatprior property)": [[78, "smac.model.gaussian_process.priors.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophatprior property)": [[78, "smac.model.gaussian_process.priors.TophatPrior.meta"]], "smac.model.gaussian_process.priors": [[78, "module-smac.model.gaussian_process.priors"]], "abstractprior (class in smac.model.gaussian_process.priors.abstract_prior)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior"]], "get_gradient() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.abstract_prior.abstractprior property)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.meta"]], "sample_from_prior() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[79, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.sample_from_prior"]], "smac.model.gaussian_process.priors.abstract_prior": [[79, "module-smac.model.gaussian_process.priors.abstract_prior"]], "gammaprior (class in smac.model.gaussian_process.priors.gamma_prior)": [[80, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior"]], "meta (smac.model.gaussian_process.priors.gamma_prior.gammaprior property)": [[80, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior.meta"]], "smac.model.gaussian_process.priors.gamma_prior": [[80, "module-smac.model.gaussian_process.priors.gamma_prior"]], "horseshoeprior (class in smac.model.gaussian_process.priors.horseshoe_prior)": [[81, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior"]], "meta (smac.model.gaussian_process.priors.horseshoe_prior.horseshoeprior property)": [[81, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior.meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[81, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "lognormalprior (class in smac.model.gaussian_process.priors.log_normal_prior)": [[82, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior"]], "meta (smac.model.gaussian_process.priors.log_normal_prior.lognormalprior property)": [[82, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior.meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[82, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "softtophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[83, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[83, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[83, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.tophatprior method)": [[83, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[83, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.tophat_prior.softtophatprior property)": [[83, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophat_prior.tophatprior property)": [[83, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[83, "module-smac.model.gaussian_process.priors.tophat_prior"]], "multiobjectivemodel (class in smac.model.multi_objective_model)": [[84, "smac.model.multi_objective_model.MultiObjectiveModel"]], "models (smac.model.multi_objective_model.multiobjectivemodel property)": [[84, "smac.model.multi_objective_model.MultiObjectiveModel.models"]], "predict_marginalized() (smac.model.multi_objective_model.multiobjectivemodel method)": [[84, "smac.model.multi_objective_model.MultiObjectiveModel.predict_marginalized"]], "smac.model.multi_objective_model": [[84, "module-smac.model.multi_objective_model"]], "abstractrandomforest (class in smac.model.random_forest)": [[85, "smac.model.random_forest.AbstractRandomForest"]], "randomforest (class in smac.model.random_forest)": [[85, "smac.model.random_forest.RandomForest"]], "meta (smac.model.random_forest.randomforest property)": [[85, "smac.model.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.randomforest method)": [[85, "smac.model.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest": [[85, "module-smac.model.random_forest"]], "abstractrandomforest (class in smac.model.random_forest.abstract_random_forest)": [[86, "smac.model.random_forest.abstract_random_forest.AbstractRandomForest"]], "smac.model.random_forest.abstract_random_forest": [[86, "module-smac.model.random_forest.abstract_random_forest"]], "randomforest (class in smac.model.random_forest.random_forest)": [[87, "smac.model.random_forest.random_forest.RandomForest"]], "meta (smac.model.random_forest.random_forest.randomforest property)": [[87, "smac.model.random_forest.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.random_forest.randomforest method)": [[87, "smac.model.random_forest.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest.random_forest": [[87, "module-smac.model.random_forest.random_forest"]], "randommodel (class in smac.model.random_model)": [[88, "smac.model.random_model.RandomModel"]], "smac.model.random_model": [[88, "module-smac.model.random_model"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective)": [[89, "smac.multi_objective.AbstractMultiObjectiveAlgorithm"]], "meanaggregationstrategy (class in smac.multi_objective)": [[89, "smac.multi_objective.MeanAggregationStrategy"]], "parego (class in smac.multi_objective)": [[89, "smac.multi_objective.ParEGO"]], "__call__() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[89, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.__call__"]], "__call__() (smac.multi_objective.meanaggregationstrategy method)": [[89, "smac.multi_objective.MeanAggregationStrategy.__call__"]], "__call__() (smac.multi_objective.parego method)": [[89, "smac.multi_objective.ParEGO.__call__"]], "meta (smac.multi_objective.abstractmultiobjectivealgorithm property)": [[89, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.meta"]], "meta (smac.multi_objective.parego property)": [[89, "smac.multi_objective.ParEGO.meta"]], "smac.multi_objective": [[89, "module-smac.multi_objective"]], "update_on_iteration_start() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[89, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "update_on_iteration_start() (smac.multi_objective.parego method)": [[89, "smac.multi_objective.ParEGO.update_on_iteration_start"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective.abstract_multi_objective_algorithm)": [[90, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm"]], "__call__() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[90, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.__call__"]], "meta (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm property)": [[90, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[90, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "update_on_iteration_start() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[90, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "meanaggregationstrategy (class in smac.multi_objective.aggregation_strategy)": [[91, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy"]], "__call__() (smac.multi_objective.aggregation_strategy.meanaggregationstrategy method)": [[91, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.__call__"]], "smac.multi_objective.aggregation_strategy": [[91, "module-smac.multi_objective.aggregation_strategy"]], "parego (class in smac.multi_objective.parego)": [[92, "smac.multi_objective.parego.ParEGO"]], "__call__() (smac.multi_objective.parego.parego method)": [[92, "smac.multi_objective.parego.ParEGO.__call__"]], "meta (smac.multi_objective.parego.parego property)": [[92, "smac.multi_objective.parego.ParEGO.meta"]], "smac.multi_objective.parego": [[92, "module-smac.multi_objective.parego"]], "update_on_iteration_start() (smac.multi_objective.parego.parego method)": [[92, "smac.multi_objective.parego.ParEGO.update_on_iteration_start"]], "abstractrandomdesign (class in smac.random_design)": [[93, "smac.random_design.AbstractRandomDesign"]], "cosineannealingrandomdesign (class in smac.random_design)": [[93, "smac.random_design.CosineAnnealingRandomDesign"]], "dynamicmodulusrandomdesign (class in smac.random_design)": [[93, "smac.random_design.DynamicModulusRandomDesign"]], "dynamicprobabilityrandomdesign (class in smac.random_design)": [[93, "smac.random_design.DynamicProbabilityRandomDesign"]], "modulusrandomdesign (class in smac.random_design)": [[93, "smac.random_design.ModulusRandomDesign"]], "probabilityrandomdesign (class in smac.random_design)": [[93, "smac.random_design.ProbabilityRandomDesign"]], "check() (smac.random_design.abstractrandomdesign method)": [[93, "smac.random_design.AbstractRandomDesign.check"]], "check() (smac.random_design.cosineannealingrandomdesign method)": [[93, "smac.random_design.CosineAnnealingRandomDesign.check"]], "check() (smac.random_design.dynamicmodulusrandomdesign method)": [[93, "smac.random_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.dynamicprobabilityrandomdesign method)": [[93, "smac.random_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.modulusrandomdesign method)": [[93, "smac.random_design.ModulusRandomDesign.check"]], "check() (smac.random_design.probabilityrandomdesign method)": [[93, "smac.random_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.abstractrandomdesign property)": [[93, "smac.random_design.AbstractRandomDesign.meta"]], "meta (smac.random_design.cosineannealingrandomdesign property)": [[93, "smac.random_design.CosineAnnealingRandomDesign.meta"]], "meta (smac.random_design.dynamicmodulusrandomdesign property)": [[93, "smac.random_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.dynamicprobabilityrandomdesign property)": [[93, "smac.random_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.modulusrandomdesign property)": [[93, "smac.random_design.ModulusRandomDesign.meta"]], "meta (smac.random_design.probabilityrandomdesign property)": [[93, "smac.random_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.abstractrandomdesign method)": [[93, "smac.random_design.AbstractRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.cosineannealingrandomdesign method)": [[93, "smac.random_design.CosineAnnealingRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicmodulusrandomdesign method)": [[93, "smac.random_design.DynamicModulusRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicprobabilityrandomdesign method)": [[93, "smac.random_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design": [[93, "module-smac.random_design"]], "abstractrandomdesign (class in smac.random_design.abstract_random_design)": [[94, "smac.random_design.abstract_random_design.AbstractRandomDesign"]], "check() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[94, "smac.random_design.abstract_random_design.AbstractRandomDesign.check"]], "meta (smac.random_design.abstract_random_design.abstractrandomdesign property)": [[94, "smac.random_design.abstract_random_design.AbstractRandomDesign.meta"]], "next_iteration() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[94, "smac.random_design.abstract_random_design.AbstractRandomDesign.next_iteration"]], "smac.random_design.abstract_random_design": [[94, "module-smac.random_design.abstract_random_design"]], "cosineannealingrandomdesign (class in smac.random_design.annealing_design)": [[95, "smac.random_design.annealing_design.CosineAnnealingRandomDesign"]], "check() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[95, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.check"]], "meta (smac.random_design.annealing_design.cosineannealingrandomdesign property)": [[95, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.meta"]], "next_iteration() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[95, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.next_iteration"]], "smac.random_design.annealing_design": [[95, "module-smac.random_design.annealing_design"]], "dynamicmodulusrandomdesign (class in smac.random_design.modulus_design)": [[96, "smac.random_design.modulus_design.DynamicModulusRandomDesign"]], "modulusrandomdesign (class in smac.random_design.modulus_design)": [[96, "smac.random_design.modulus_design.ModulusRandomDesign"]], "check() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[96, "smac.random_design.modulus_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.modulus_design.modulusrandomdesign method)": [[96, "smac.random_design.modulus_design.ModulusRandomDesign.check"]], "meta (smac.random_design.modulus_design.dynamicmodulusrandomdesign property)": [[96, "smac.random_design.modulus_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.modulus_design.modulusrandomdesign property)": [[96, "smac.random_design.modulus_design.ModulusRandomDesign.meta"]], "next_iteration() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[96, "smac.random_design.modulus_design.DynamicModulusRandomDesign.next_iteration"]], "smac.random_design.modulus_design": [[96, "module-smac.random_design.modulus_design"]], "dynamicprobabilityrandomdesign (class in smac.random_design.probability_design)": [[97, "smac.random_design.probability_design.DynamicProbabilityRandomDesign"]], "probabilityrandomdesign (class in smac.random_design.probability_design)": [[97, "smac.random_design.probability_design.ProbabilityRandomDesign"]], "check() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[97, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.probability_design.probabilityrandomdesign method)": [[97, "smac.random_design.probability_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.probability_design.dynamicprobabilityrandomdesign property)": [[97, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.probability_design.probabilityrandomdesign property)": [[97, "smac.random_design.probability_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[97, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design.probability_design": [[97, "module-smac.random_design.probability_design"]], "dataorigin (class in smac.runhistory)": [[98, "smac.runhistory.DataOrigin"]], "instanceseedbudgetkey (class in smac.runhistory)": [[98, "smac.runhistory.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory)": [[98, "smac.runhistory.InstanceSeedKey"]], "runhistory (class in smac.runhistory)": [[98, "smac.runhistory.RunHistory"]], "statustype (class in smac.runhistory)": [[98, "smac.runhistory.StatusType"]], "trialinfo (class in smac.runhistory)": [[98, "smac.runhistory.TrialInfo"]], "trialinfointent (class in smac.runhistory)": [[98, "smac.runhistory.TrialInfoIntent"]], "trialkey (class in smac.runhistory)": [[98, "smac.runhistory.TrialKey"]], "trialvalue (class in smac.runhistory)": [[98, "smac.runhistory.TrialValue"]], "__contains__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.add"]], "average_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.empty"]], "get_config() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_config"]], "get_configs() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_cost"]], "get_incumbent() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_incumbent"]], "get_min_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_min_cost"]], "get_trials() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.incremental_update_cost"]], "load_json() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.load_json"]], "min_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.min_cost"]], "objective_bounds (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.objective_bounds"]], "objective_weights (smac.runhistory.runhistory property)": [[98, "smac.runhistory.RunHistory.objective_weights"]], "reset() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.reset"]], "save_json() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.save_json"]], "smac.runhistory": [[98, "module-smac.runhistory"]], "sum_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory method)": [[98, "smac.runhistory.RunHistory.update_from_json"]], "instanceseedbudgetkey (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.InstanceSeedKey"]], "trajectoryitem (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.TrajectoryItem"]], "trialinfo (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.TrialInfo"]], "trialkey (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.TrialKey"]], "trialvalue (class in smac.runhistory.dataclasses)": [[99, "smac.runhistory.dataclasses.TrialValue"]], "smac.runhistory.dataclasses": [[99, "module-smac.runhistory.dataclasses"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryEIPSEncoder"]], "runhistoryencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryEncoder"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder"]], "runhistorylogencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryLogEncoder"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryLogScaledEncoder"]], "runhistoryrawencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryRawEncoder"]], "runhistoryrawscaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryRawScaledEncoder"]], "runhistoryscaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistoryScaledEncoder"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder)": [[100, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder"]], "get_configurations() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "smac.runhistory.encoder": [[100, "module-smac.runhistory.encoder"]], "transform() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform"]], "transform_raw_values() (smac.runhistory.encoder.runhistoryrawencoder method)": [[100, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_raw_values"]], "transform_raw_values() (smac.runhistory.encoder.runhistoryrawscaledencoder method)": [[100, "smac.runhistory.encoder.RunHistoryRawScaledEncoder.transform_raw_values"]], "transform_response_values() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryeipsencoder method)": [[100, "smac.runhistory.encoder.RunHistoryEIPSEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryencoder method)": [[100, "smac.runhistory.encoder.RunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryinversescaledencoder method)": [[100, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogencoder method)": [[100, "smac.runhistory.encoder.RunHistoryLogEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogscaledencoder method)": [[100, "smac.runhistory.encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryrawencoder method)": [[100, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryscaledencoder method)": [[100, "smac.runhistory.encoder.RunHistoryScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorysqrtscaledencoder method)": [[100, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "transform_with_raw() (smac.runhistory.encoder.runhistoryrawencoder method)": [[100, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_with_raw"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder.abstract_encoder)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder"]], "get_configurations() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "smac.runhistory.encoder.abstract_encoder": [[101, "module-smac.runhistory.encoder.abstract_encoder"]], "transform() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[101, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform_response_values"]], "runhistoryrawencoder (class in smac.runhistory.encoder.boing_encoder)": [[102, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder"]], "runhistoryrawscaledencoder (class in smac.runhistory.encoder.boing_encoder)": [[102, "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder": [[102, "module-smac.runhistory.encoder.boing_encoder"]], "transform_raw_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[102, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_raw_values"]], "transform_raw_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawscaledencoder method)": [[102, "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder.transform_raw_values"]], "transform_response_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[102, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_response_values"]], "transform_with_raw() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[102, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_with_raw"]], "runhistoryeipsencoder (class in smac.runhistory.encoder.eips_encoder)": [[103, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder": [[103, "module-smac.runhistory.encoder.eips_encoder"]], "transform_response_values() (smac.runhistory.encoder.eips_encoder.runhistoryeipsencoder method)": [[103, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder.transform_response_values"]], "runhistoryencoder (class in smac.runhistory.encoder.encoder)": [[104, "smac.runhistory.encoder.encoder.RunHistoryEncoder"]], "smac.runhistory.encoder.encoder": [[104, "module-smac.runhistory.encoder.encoder"]], "transform_response_values() (smac.runhistory.encoder.encoder.runhistoryencoder method)": [[104, "smac.runhistory.encoder.encoder.RunHistoryEncoder.transform_response_values"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder.inverse_scaled_encoder)": [[105, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[105, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.inverse_scaled_encoder.runhistoryinversescaledencoder method)": [[105, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "runhistorylogencoder (class in smac.runhistory.encoder.log_encoder)": [[106, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder": [[106, "module-smac.runhistory.encoder.log_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_encoder.runhistorylogencoder method)": [[106, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder.transform_response_values"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder.log_scaled_encoder)": [[107, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[107, "module-smac.runhistory.encoder.log_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_scaled_encoder.runhistorylogscaledencoder method)": [[107, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "runhistoryscaledencoder (class in smac.runhistory.encoder.scaled_encoder)": [[108, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder": [[108, "module-smac.runhistory.encoder.scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.scaled_encoder.runhistoryscaledencoder method)": [[108, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder.transform_response_values"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder.sqrt_scaled_encoder)": [[109, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[109, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.sqrt_scaled_encoder.runhistorysqrtscaledencoder method)": [[109, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "dataorigin (class in smac.runhistory.enumerations)": [[110, "smac.runhistory.enumerations.DataOrigin"]], "statustype (class in smac.runhistory.enumerations)": [[110, "smac.runhistory.enumerations.StatusType"]], "trialinfointent (class in smac.runhistory.enumerations)": [[110, "smac.runhistory.enumerations.TrialInfoIntent"]], "smac.runhistory.enumerations": [[110, "module-smac.runhistory.enumerations"]], "runhistory (class in smac.runhistory.runhistory)": [[111, "smac.runhistory.runhistory.RunHistory"]], "__contains__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.add"]], "average_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.empty"]], "get_config() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_config"]], "get_configs() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_cost"]], "get_incumbent() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_incumbent"]], "get_min_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_min_cost"]], "get_trials() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.incremental_update_cost"]], "load_json() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.load_json"]], "min_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.min_cost"]], "objective_bounds (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.objective_bounds"]], "objective_weights (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.objective_weights"]], "reset() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.reset"]], "save_json() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.save_json"]], "smac.runhistory.runhistory": [[111, "module-smac.runhistory.runhistory"]], "sum_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.update_from_json"]], "abstractrunner (class in smac.runner)": [[112, "smac.runner.AbstractRunner"]], "daskparallelrunner (class in smac.runner)": [[112, "smac.runner.DaskParallelRunner"]], "firstruncrashedexception": [[112, "smac.runner.FirstRunCrashedException"], [115, "smac.runner.exceptions.FirstRunCrashedException"]], "targetalgorithmabortexception": [[112, "smac.runner.TargetAlgorithmAbortException"], [115, "smac.runner.exceptions.TargetAlgorithmAbortException"]], "targetfunctionrunner (class in smac.runner)": [[112, "smac.runner.TargetFunctionRunner"]], "__call__() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.__call__"]], "__del__() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.__del__"]], "close() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.count_available_workers"]], "count_available_workers() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.count_available_workers"]], "count_available_workers() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.count_available_workers"]], "is_running() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.is_running"]], "is_running() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.is_running"]], "is_running() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.is_running"]], "iter_results() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.iter_results"]], "iter_results() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.iter_results"]], "iter_results() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.iter_results"]], "meta (smac.runner.abstractrunner property)": [[112, "smac.runner.AbstractRunner.meta"]], "run() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.run"]], "run() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.run"]], "run() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.run"]], "run_wrapper() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.run_wrapper"]], "smac.runner": [[112, "module-smac.runner"]], "submit_trial() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.submit_trial"]], "submit_trial() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.submit_trial"]], "submit_trial() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.submit_trial"]], "wait() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.wait"]], "wait() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.wait"]], "wait() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.wait"]], "abstractrunner (class in smac.runner.abstract_runner)": [[113, "smac.runner.abstract_runner.AbstractRunner"]], "count_available_workers() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.count_available_workers"]], "is_running() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.is_running"]], "iter_results() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.iter_results"]], "meta (smac.runner.abstract_runner.abstractrunner property)": [[113, "smac.runner.abstract_runner.AbstractRunner.meta"]], "run() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.run"]], "run_wrapper() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.run_wrapper"]], "smac.runner.abstract_runner": [[113, "module-smac.runner.abstract_runner"]], "submit_trial() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.submit_trial"]], "wait() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.wait"]], "daskparallelrunner (class in smac.runner.dask_runner)": [[114, "smac.runner.dask_runner.DaskParallelRunner"]], "__del__() (smac.runner.dask_runner.daskparallelrunner method)": [[114, "smac.runner.dask_runner.DaskParallelRunner.__del__"]], "close() (smac.runner.dask_runner.daskparallelrunner method)": [[114, "smac.runner.dask_runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.dask_runner.daskparallelrunner method)": [[114, "smac.runner.dask_runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.dask_runner.daskparallelrunner method)": [[114, "smac.runner.dask_runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.dask_runner.daskparallelrunner method)": [[114, "smac.runner.dask_runner.DaskParallelRunner.iter_results"]], "run() (smac.runner.dask_runner.daskparallelrunner method)": [[114, "smac.runner.dask_runner.DaskParallelRunner.run"]], "smac.runner.dask_runner": [[114, "module-smac.runner.dask_runner"]], "submit_trial() (smac.runner.dask_runner.daskparallelrunner method)": [[114, "smac.runner.dask_runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.dask_runner.daskparallelrunner method)": [[114, "smac.runner.dask_runner.DaskParallelRunner.wait"]], "smac.runner.exceptions": [[115, "module-smac.runner.exceptions"]], "targetfunctionrunner (class in smac.runner.target_function_runner)": [[116, "smac.runner.target_function_runner.TargetFunctionRunner"]], "__call__() (smac.runner.target_function_runner.targetfunctionrunner method)": [[116, "smac.runner.target_function_runner.TargetFunctionRunner.__call__"]], "count_available_workers() (smac.runner.target_function_runner.targetfunctionrunner method)": [[116, "smac.runner.target_function_runner.TargetFunctionRunner.count_available_workers"]], "is_running() (smac.runner.target_function_runner.targetfunctionrunner method)": [[116, "smac.runner.target_function_runner.TargetFunctionRunner.is_running"]], "iter_results() (smac.runner.target_function_runner.targetfunctionrunner method)": [[116, "smac.runner.target_function_runner.TargetFunctionRunner.iter_results"]], "run() (smac.runner.target_function_runner.targetfunctionrunner method)": [[116, "smac.runner.target_function_runner.TargetFunctionRunner.run"]], "smac.runner.target_function_runner": [[116, "module-smac.runner.target_function_runner"]], "submit_trial() (smac.runner.target_function_runner.targetfunctionrunner method)": [[116, "smac.runner.target_function_runner.TargetFunctionRunner.submit_trial"]], "wait() (smac.runner.target_function_runner.targetfunctionrunner method)": [[116, "smac.runner.target_function_runner.TargetFunctionRunner.wait"]], "scenario (class in smac.scenario)": [[117, "smac.scenario.Scenario"]], "__post_init__() (smac.scenario.scenario method)": [[117, "smac.scenario.Scenario.__post_init__"]], "count_instance_features() (smac.scenario.scenario method)": [[117, "smac.scenario.Scenario.count_instance_features"]], "count_objectives() (smac.scenario.scenario method)": [[117, "smac.scenario.Scenario.count_objectives"]], "load() (smac.scenario.scenario static method)": [[117, "smac.scenario.Scenario.load"]], "make_serializable() (smac.scenario.scenario static method)": [[117, "smac.scenario.Scenario.make_serializable"]], "meta (smac.scenario.scenario property)": [[117, "smac.scenario.Scenario.meta"]], "save() (smac.scenario.scenario method)": [[117, "smac.scenario.Scenario.save"]], "smac.scenario": [[117, "module-smac.scenario"]], "smac.utils": [[118, "module-smac.utils"]], "convert_configurations_to_array() (in module smac.utils.configspace)": [[119, "smac.utils.configspace.convert_configurations_to_array"]], "get_conditional_hyperparameters() (in module smac.utils.configspace)": [[119, "smac.utils.configspace.get_conditional_hyperparameters"]], "get_types() (in module smac.utils.configspace)": [[119, "smac.utils.configspace.get_types"]], "smac.utils.configspace": [[119, "module-smac.utils.configspace"]], "recursively_compare_dicts() (in module smac.utils.data_structures)": [[120, "smac.utils.data_structures.recursively_compare_dicts"]], "smac.utils.data_structures": [[120, "module-smac.utils.data_structures"]], "format_array() (in module smac.utils.logging)": [[121, "smac.utils.logging.format_array"]], "get_logger() (in module smac.utils.logging)": [[121, "smac.utils.logging.get_logger"]], "setup_logging() (in module smac.utils.logging)": [[121, "smac.utils.logging.setup_logging"]], "smac.utils.logging": [[121, "module-smac.utils.logging"]], "normalize_costs() (in module smac.utils.multi_objective)": [[122, "smac.utils.multi_objective.normalize_costs"]], "smac.utils.multi_objective": [[122, "module-smac.utils.multi_objective"]], "smac.utils.subspaces": [[123, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[124, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[125, "module-smac.utils.subspaces.turbo_subspace"]]}})