Search.setIndex({"docnames": ["1_installation", "2_package_overview", "3_getting_started", "4_minimal_example", "5_api", "6_references", "7_glossary", "8_faq", "9_license", "advanced_usage/10_stopping_criteria", "advanced_usage/1_components", "advanced_usage/2_multi_fidelity", "advanced_usage/3_multi_objective", "advanced_usage/4_instances", "advanced_usage/5_ask_and_tell", "advanced_usage/6_commandline", "advanced_usage/7_parallelism", "advanced_usage/8_continue", "advanced_usage/9_reproducability", "advanced_usage/index", "api/smac.acquisition", "api/smac.acquisition.function", "api/smac.acquisition.function.abstract_acquisition_function", "api/smac.acquisition.function.confidence_bound", "api/smac.acquisition.function.expected_improvement", "api/smac.acquisition.function.integrated_acquisition_function", "api/smac.acquisition.function.prior_acqusition_function", "api/smac.acquisition.function.probability_improvement", "api/smac.acquisition.function.thompson", "api/smac.acquisition.maximizer", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer", "api/smac.acquisition.maximizer.differential_evolution", "api/smac.acquisition.maximizer.helpers", "api/smac.acquisition.maximizer.local_and_random_search", "api/smac.acquisition.maximizer.local_search", "api/smac.acquisition.maximizer.random_search", "api/smac.callback", "api/smac.facade", "api/smac.facade.abstract_facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.boing_facade", "api/smac.facade.hyperband_facade", "api/smac.facade.hyperparameter_optimization_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.facade.random_facade", "api/smac.initial_design", "api/smac.initial_design.abstract_initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensifier", "api/smac.intensifier.abstract_intensifier", "api/smac.intensifier.abstract_parallel_intensifier", "api/smac.intensifier.hyperband", "api/smac.intensifier.hyperband_worker", "api/smac.intensifier.intensifier", "api/smac.intensifier.stages", "api/smac.intensifier.successive_halving", "api/smac.intensifier.successive_halving_worker", "api/smac.main", "api/smac.main.base_smbo", "api/smac.main.boing", "api/smac.main.smbo", "api/smac.main.turbo", "api/smac.model", "api/smac.model.abstract_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.abstract_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch_gaussian_process", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.abstract_prior", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.abstract_random_forest", "api/smac.model.random_forest.random_forest", "api/smac.model.random_model", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.random_design", "api/smac.random_design.abstract_random_design", "api/smac.random_design.annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inverse_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.abstract_runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.serial_runner", "api/smac.runner.target_function_runner", "api/smac.runner.target_function_script_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.configspace", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.multi_objective", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "examples/1_basics/1_synthetic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_ask_and_tell", "examples/1_basics/4_callback", "examples/1_basics/5_priors", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/2_parego", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/5_commandline/1_call_target_function_script", "examples/5_commandline/index", "examples/5_commandline/sg_execution_times", "examples/index", "index"], "filenames": ["1_installation.rst", "2_package_overview.rst", "3_getting_started.rst", "4_minimal_example.rst", "5_api.rst", "6_references.rst", "7_glossary.rst", "8_faq.rst", "9_license.rst", "advanced_usage/10_stopping_criteria.rst", "advanced_usage/1_components.rst", "advanced_usage/2_multi_fidelity.rst", "advanced_usage/3_multi_objective.rst", "advanced_usage/4_instances.rst", "advanced_usage/5_ask_and_tell.rst", "advanced_usage/6_commandline.rst", "advanced_usage/7_parallelism.rst", "advanced_usage/8_continue.rst", "advanced_usage/9_reproducability.rst", "advanced_usage/index.rst", "api/smac.acquisition.rst", "api/smac.acquisition.function.rst", "api/smac.acquisition.function.abstract_acquisition_function.rst", "api/smac.acquisition.function.confidence_bound.rst", "api/smac.acquisition.function.expected_improvement.rst", "api/smac.acquisition.function.integrated_acquisition_function.rst", "api/smac.acquisition.function.prior_acqusition_function.rst", "api/smac.acquisition.function.probability_improvement.rst", "api/smac.acquisition.function.thompson.rst", "api/smac.acquisition.maximizer.rst", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer.rst", "api/smac.acquisition.maximizer.differential_evolution.rst", "api/smac.acquisition.maximizer.helpers.rst", "api/smac.acquisition.maximizer.local_and_random_search.rst", "api/smac.acquisition.maximizer.local_search.rst", "api/smac.acquisition.maximizer.random_search.rst", "api/smac.callback.rst", "api/smac.facade.rst", "api/smac.facade.abstract_facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.boing_facade.rst", "api/smac.facade.hyperband_facade.rst", "api/smac.facade.hyperparameter_optimization_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.facade.random_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.abstract_initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensifier.rst", "api/smac.intensifier.abstract_intensifier.rst", "api/smac.intensifier.abstract_parallel_intensifier.rst", "api/smac.intensifier.hyperband.rst", "api/smac.intensifier.hyperband_worker.rst", "api/smac.intensifier.intensifier.rst", "api/smac.intensifier.stages.rst", "api/smac.intensifier.successive_halving.rst", "api/smac.intensifier.successive_halving_worker.rst", "api/smac.main.rst", "api/smac.main.base_smbo.rst", "api/smac.main.boing.rst", "api/smac.main.smbo.rst", "api/smac.main.turbo.rst", "api/smac.model.rst", "api/smac.model.abstract_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.abstract_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch_gaussian_process.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.abstract_prior.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.abstract_random_forest.rst", "api/smac.model.random_forest.random_forest.rst", "api/smac.model.random_model.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.random_design.rst", "api/smac.random_design.abstract_random_design.rst", "api/smac.random_design.annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inverse_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.abstract_runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.serial_runner.rst", "api/smac.runner.target_function_runner.rst", "api/smac.runner.target_function_script_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.configspace.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.multi_objective.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "examples/1_basics/1_synthetic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_ask_and_tell.rst", "examples/1_basics/4_callback.rst", "examples/1_basics/5_priors.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/2_parego.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/5_commandline/1_call_target_function_script.rst", "examples/5_commandline/index.rst", "examples/5_commandline/sg_execution_times.rst", "examples/index.rst", "index.rst"], "titles": ["Installation", "Package Overview", "Getting Started", "Minimal Example", "API References", "References", "Glossary", "F.A.Q.", "License", "Stopping Criteria", "Components", "Multi-Fidelity Optimization", "Multi-Objective Optimization", "Optimization across Instances", "Ask-and-Tell Interface", "Command-Line Interface", "Parallelism", "Continue a Run", "Reproducability", "Advanced Usage", "smac.acquisition", "smac.acquisition.function", "smac.acquisition.function.abstract_acquisition_function", "smac.acquisition.function.confidence_bound", "smac.acquisition.function.expected_improvement", "smac.acquisition.function.integrated_acquisition_function", "smac.acquisition.function.prior_acqusition_function", "smac.acquisition.function.probability_improvement", "smac.acquisition.function.thompson", "smac.acquisition.maximizer", "smac.acquisition.maximizer.abstract_acqusition_maximizer", "smac.acquisition.maximizer.differential_evolution", "smac.acquisition.maximizer.helpers", "smac.acquisition.maximizer.local_and_random_search", "smac.acquisition.maximizer.local_search", "smac.acquisition.maximizer.random_search", "smac.callback", "smac.facade", "smac.facade.abstract_facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.boing_facade", "smac.facade.hyperband_facade", "smac.facade.hyperparameter_optimization_facade", "smac.facade.multi_fidelity_facade", "smac.facade.random_facade", "smac.initial_design", "smac.initial_design.abstract_initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensifier", "smac.intensifier.abstract_intensifier", "smac.intensifier.abstract_parallel_intensifier", "smac.intensifier.hyperband", "smac.intensifier.hyperband_worker", "smac.intensifier.intensifier", "smac.intensifier.stages", "smac.intensifier.successive_halving", "smac.intensifier.successive_halving_worker", "smac.main", "smac.main.base_smbo", "smac.main.boing", "smac.main.smbo", "smac.main.turbo", "smac.model", "smac.model.abstract_model", "smac.model.gaussian_process", "smac.model.gaussian_process.abstract_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch_gaussian_process", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.abstract_prior", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.abstract_random_forest", "smac.model.random_forest.random_forest", "smac.model.random_model", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.random_design", "smac.random_design.abstract_random_design", "smac.random_design.annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inverse_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.runhistory", "smac.runner", "smac.runner.abstract_runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.serial_runner", "smac.runner.target_function_runner", "smac.runner.target_function_script_runner", "smac.scenario", "smac.utils", "smac.utils.configspace", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.multi_objective", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "Synthetic Function", "Support Vector Machine with Cross-Validation", "Ask-and-Tell", "Custom Callback", "User Priors over the Optimum", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function with Objective Weights", "ParEGO", "Multi-Objective", "Computation times", "Call Target Function From Script", "Command-Line Interface", "Computation times", "Examples", "Home"], "terms": {"smac": [0, 1, 2, 3, 6, 7, 9, 10, 12, 14, 15, 16, 17, 19, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148, 149], "i": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 26, 29, 30, 33, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 79, 80, 81, 83, 86, 87, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148, 149], "written": [0, 149], "python3": [0, 149], "therefor": [0, 2, 6, 10, 12, 13, 14, 37, 45, 73, 74, 121, 137, 142], "an": [0, 1, 2, 6, 7, 10, 11, 12, 13, 14, 15, 21, 22, 29, 30, 32, 36, 37, 38, 39, 40, 43, 44, 45, 53, 54, 55, 56, 57, 58, 60, 61, 69, 79, 91, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 125, 130, 131, 134, 137, 138, 142, 149], "environ": [0, 2, 3, 121, 130, 133, 134, 137, 142, 145], "python": [0, 1, 7, 15, 32, 69, 71, 79, 81, 114, 119, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148, 149], "3": [0, 6, 8, 10, 12, 37, 39, 40, 42, 43, 44, 45, 53, 56, 58, 60, 87, 89, 95, 98, 102, 103, 104, 105, 106, 108, 109, 110, 114, 116, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 149], "8": [0, 2, 10, 53, 58, 87, 89, 131, 134, 137, 142, 149], "furthermor": [0, 133], "random": [0, 2, 6, 19, 21, 26, 29, 30, 32, 33, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 51, 53, 58, 62, 63, 67, 68, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 113, 121, 131, 134, 137, 142, 149], "forest": [0, 2, 6, 10, 21, 26, 37, 39, 43, 67, 68, 87, 88, 89, 131, 134, 149], "us": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 21, 22, 26, 28, 29, 30, 32, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 79, 80, 81, 83, 85, 86, 87, 89, 95, 97, 98, 100, 101, 102, 103, 107, 108, 109, 111, 112, 113, 114, 115, 116, 120, 121, 123, 124, 125, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 145, 146, 148, 149], "swig": 0, "build": [0, 100, 112, 131, 134, 137, 138], "depend": [0, 1, 2, 7, 10, 12, 15, 18, 19, 37, 38, 40, 62, 63, 65, 67, 68, 91, 92, 100, 113, 114, 117, 121, 131], "either": [0, 2, 7, 37, 38, 69, 79, 100, 113, 114, 119], "your": [0, 1, 6, 7, 12, 13, 15, 19, 121, 137, 138], "system": [0, 137, 138], "directli": [0, 10, 11, 15, 114, 119], "The": [0, 1, 2, 3, 6, 7, 10, 11, 12, 14, 15, 18, 21, 22, 25, 29, 30, 33, 37, 38, 39, 40, 42, 43, 44, 45, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 79, 80, 81, 82, 85, 86, 87, 89, 95, 98, 100, 102, 103, 104, 113, 114, 115, 116, 118, 119, 120, 121, 123, 130, 132, 137, 138, 141, 142, 149], "command": [0, 1, 6, 19], "linux": 0, "machin": [0, 3, 21, 25, 135, 136, 148, 149], "follow": [0, 1, 2, 3, 7, 10, 12, 13, 15, 37, 44, 45, 53, 58, 60, 87, 89, 114, 115, 116, 120, 145], "apt": 0, "get": [0, 10, 12, 29, 31, 35, 53, 55, 73, 74, 100, 113, 114, 116, 125, 130, 131, 132, 134, 137, 138, 142, 145], "test": [0, 15, 67, 68, 69, 71, 100, 113, 120, 149], "mac": [0, 7], "9": [0, 53, 58, 138, 149], "10": [0, 2, 6, 21, 26, 29, 33, 34, 37, 39, 40, 43, 44, 46, 47, 48, 49, 50, 51, 53, 58, 69, 71, 87, 89, 130, 131, 132, 133, 134, 137, 141, 142, 145, 149], "we": [0, 2, 6, 7, 10, 12, 13, 15, 19, 21, 28, 29, 30, 37, 45, 53, 55, 58, 69, 79, 81, 114, 115, 130, 131, 132, 133, 134, 137, 138, 142, 145, 148, 149], "recommend": [0, 7, 10, 15, 19], "creat": [0, 7, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 46, 47, 53, 54, 55, 56, 58, 60, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 114, 115, 116, 119, 120, 131, 134, 137, 138, 142], "activ": [0, 7, 53, 56, 60, 73, 74, 114, 116, 134, 137, 142], "n": [0, 21, 22, 28, 53, 58, 62, 63, 65, 69, 71, 79, 81, 114, 116, 142], "If": [0, 2, 7, 8, 10, 13, 15, 17, 19, 21, 26, 29, 30, 37, 38, 43, 45, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 69, 73, 74, 79, 86, 87, 89, 95, 98, 100, 102, 103, 113, 114, 116, 120, 121, 125, 126, 131, 138, 149], "you": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 37, 43, 45, 69, 79, 100, 113, 114, 116, 121, 131, 134, 146, 148, 149], "haven": 0, "t": [0, 2, 7, 21, 23, 24, 27, 28, 73, 74], "yet": [0, 7, 14, 37, 44], "can": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 19, 21, 28, 29, 30, 34, 37, 38, 44, 53, 54, 55, 56, 58, 60, 62, 63, 69, 79, 100, 102, 104, 112, 113, 114, 115, 116, 118, 119, 121, 125, 130, 131, 132, 134, 137, 142, 146, 148, 149], "insid": [0, 10, 133], "gxx_linux": 0, "64": [0, 29, 34], "gcc_linux": 0, "now": [0, 12, 37, 44, 130, 131, 132, 133, 138, 145], "via": [0, 10, 12, 29, 31, 35, 53, 54, 114, 115, 116], "pypi": 0, "pip": 0, "Or": 0, "altern": [0, 12, 131, 138], "clone": 0, "from": [0, 1, 2, 3, 7, 10, 14, 15, 17, 29, 31, 33, 37, 38, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 69, 71, 73, 74, 81, 100, 101, 113, 114, 115, 116, 120, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 146, 147, 148], "github": [0, 7, 46, 52, 149], "git": 0, "http": [0, 5, 8, 21, 23, 25, 32, 46, 52, 53, 60, 91, 94, 149], "com": [0, 32, 149], "automl": [0, 7, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 149], "smac3": [0, 7, 149], "cd": 0, "e": [0, 1, 6, 10, 12, 15, 21, 24, 29, 33, 37, 38, 53, 56, 60, 62, 63, 80, 82, 114, 115, 138], "dev": 0, "channel": 0, "achiev": [0, 2], "ad": [0, 36, 73, 74, 100, 113, 123, 137], "config": [0, 2, 3, 6, 10, 37, 38, 39, 40, 43, 46, 47, 53, 54, 55, 58, 62, 63, 65, 100, 101, 113, 114, 115, 116, 119, 120, 121, 123, 130, 131, 132, 133, 134, 137, 138, 141, 142], "add": [0, 7, 10, 13, 37, 38, 39, 40, 43, 44, 45, 46, 47, 57, 61, 62, 63, 65, 100, 113, 131, 134, 137, 138, 142], "set": [0, 1, 7, 10, 15, 17, 37, 38, 40, 43, 44, 45, 46, 47, 53, 56, 57, 58, 60, 61, 62, 63, 95, 97, 99, 100, 102, 104, 112, 113, 114, 119, 121, 125, 126, 134, 137, 138, 142, 145], "channel_prior": 0, "strict": 0, "must": [0, 2, 15, 29, 30, 32, 37, 39, 40, 43, 45, 67, 68, 73, 74, 80, 81, 82, 85, 86, 91, 93, 120, 121, 137], "have": [0, 6, 7, 8, 10, 11, 14, 15, 29, 33, 37, 38, 44, 45, 53, 54, 55, 62, 63, 100, 112, 113, 114, 115, 116, 118, 134, 138, 142], "4": [0, 1, 10, 15, 37, 39, 53, 58, 120, 130, 132, 133, 134, 137, 138, 141, 142], "To": [0, 7, 10, 13, 17, 53, 55, 56, 58, 114, 116, 134, 137], "updat": [0, 10, 12, 15, 21, 22, 36, 37, 38, 44, 45, 53, 54, 55, 57, 58, 61, 62, 63, 65, 91, 92, 94, 100, 113, 130, 131, 132, 134, 141, 142, 145], "check": [0, 10, 14, 53, 58, 95, 96, 97, 98, 99, 100, 113, 114, 115, 121], "current": [0, 6, 21, 22, 37, 38, 45, 53, 54, 55, 57, 58, 61, 62, 63, 69, 71, 95, 99, 100, 102, 103, 112, 113, 133], "version": [0, 2, 7, 10, 29, 33], "pleas": [0, 1, 2, 7, 8, 10, 11, 14, 15, 21, 28, 37, 45, 53, 56, 149], "instruct": 0, "offici": 0, "document": [0, 2, 5, 53, 56], "onc": [0, 29, 34, 37, 45, 53, 56, 60, 134, 137, 142], "ha": [0, 1, 10, 29, 30, 46, 47, 73, 74], "been": [0, 1, 7, 37, 38, 53, 54, 62, 63, 100, 113, 114, 115, 116, 118], "enabl": [0, 15, 37, 39, 43, 87, 89, 100, 113], "read": [0, 17, 19, 100, 113], "feedstock": 0, "more": [0, 2, 6, 10, 14, 19, 37, 39, 40, 43, 53, 54, 55, 56, 58, 114, 115, 116, 142], "detail": [0, 2, 6, 7, 10, 21, 25, 26, 53, 56, 58, 137], "support": [1, 2, 3, 9, 10, 14, 16, 37, 42, 44, 73, 74, 135, 136, 137, 138, 148], "determin": [1, 7, 10, 11, 18, 37, 38, 53, 54, 55, 57, 60, 61, 69, 73, 74, 79, 118], "well": [1, 10, 21, 26, 53, 54, 114, 115, 130, 131, 132, 134], "perform": [1, 2, 6, 7, 10, 11, 15, 29, 33, 34, 37, 38, 39, 43, 44, 45, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 87, 89, 100, 113, 114, 115, 121, 138, 149], "hyperparamet": [1, 2, 3, 5, 6, 10, 15, 21, 25, 26, 29, 33, 37, 38, 40, 43, 44, 46, 47, 53, 56, 60, 62, 63, 67, 68, 69, 71, 73, 74, 75, 79, 80, 81, 85, 86, 87, 89, 123, 130, 131, 132, 133, 134, 137, 142, 145, 149], "configur": [1, 3, 6, 7, 10, 12, 14, 15, 18, 21, 22, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 58, 61, 62, 63, 65, 80, 81, 85, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 149], "algorithm": [1, 2, 5, 6, 7, 11, 12, 19, 21, 25, 37, 38, 39, 40, 42, 43, 45, 100, 102, 103, 113, 114, 115, 119, 120, 138, 149], "By": [1, 126, 137], "being": [1, 6, 14, 53, 55, 60, 73, 74, 114, 119], "robust": [1, 53, 56, 60, 69, 71, 79, 81], "flexibl": [1, 69, 71, 79, 81, 100, 112], "framework": [1, 2, 6, 69, 71, 79, 81], "bayesian": [1, 6, 10, 21, 25, 26, 37, 38, 62, 63, 65, 69, 71, 79, 81, 95, 98, 133, 149], "optim": [1, 2, 3, 5, 6, 7, 9, 10, 14, 18, 19, 21, 23, 25, 26, 28, 29, 33, 36, 37, 38, 44, 45, 53, 56, 60, 62, 63, 65, 69, 71, 79, 81, 91, 92, 95, 98, 100, 112, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148, 149], "improv": [1, 2, 10, 21, 24, 27, 37, 39, 40, 43], "within": [1, 7, 53, 58, 114, 116], "few": [1, 6, 37, 45, 138], "function": [1, 6, 7, 11, 12, 13, 19, 29, 30, 32, 33, 36, 37, 38, 39, 40, 43, 44, 45, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 69, 71, 73, 74, 79, 100, 102, 103, 104, 105, 113, 114, 115, 116, 117, 118, 119, 120, 121, 132, 134, 135, 136, 137, 138, 143, 144, 146, 147, 148], "evalu": [1, 2, 6, 7, 10, 11, 14, 21, 22, 29, 30, 37, 38, 39, 40, 43, 46, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 74, 95, 96, 97, 98, 99, 100, 102, 104, 113, 114, 119, 130, 131, 132, 133, 137, 138, 141, 142], "It": [1, 6, 10, 37, 44, 53, 58, 60, 87, 89, 100, 112, 114, 116, 130, 131, 132], "offer": [1, 2, 12, 114, 115], "sever": [1, 32, 36, 148], "entri": [1, 2], "point": [1, 2, 10, 21, 23, 29, 30, 33, 37, 39, 43, 67, 68, 69, 71, 86, 87, 89, 141], "pre": [1, 13, 14], "typic": 1, "case": [1, 2, 11, 12, 21, 26, 29, 33, 37, 38, 45, 53, 58, 62, 63, 100, 113, 114, 115, 116, 118, 121, 138, 148], "solv": 1, "low": [1, 2, 10, 37, 45], "dimension": [1, 10, 37, 39, 67, 68, 69, 70, 71, 79, 87, 89, 130, 132], "continu": [1, 37, 38, 40, 44, 100, 113, 130, 131, 132, 134, 137, 149], "artifici": 1, "global": [1, 6], "problem": [1, 5, 6, 7, 37, 38, 114, 115, 116, 119, 120, 130, 132], "across": [1, 6, 7, 19, 53, 56, 60, 100, 113, 138], "multipl": [1, 6, 7, 10, 11, 12, 16, 19, 21, 26, 37, 38, 46, 47, 53, 56, 60, 67, 86, 100, 113, 121, 134, 139, 140, 142, 148], "instanc": [1, 2, 6, 7, 10, 11, 15, 19, 37, 38, 39, 40, 42, 43, 44, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 79, 86, 87, 89, 100, 101, 102, 103, 104, 112, 113, 114, 115, 116, 119, 120, 121, 123, 138], "characterist": 1, "capabl": [1, 114, 116], "sampl": [1, 10, 12, 13, 21, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 53, 54, 58, 60, 62, 63, 67, 68, 69, 71, 79, 81, 86, 87, 89, 121, 130, 131, 132, 134, 141, 142, 145], "effici": [1, 53, 56, 60, 100, 113, 149], "black": [1, 2, 6, 130], "box": [1, 2, 6, 130], "onli": [1, 6, 7, 9, 10, 12, 14, 15, 18, 21, 22, 28, 37, 38, 46, 48, 53, 56, 58, 60, 62, 63, 67, 68, 73, 74, 86, 100, 102, 103, 112, 113, 114, 116, 118, 121, 125, 132, 134, 137, 138, 141, 142], "awar": [1, 14], "input": [1, 6, 10, 21, 23, 57, 61, 67, 68, 69, 71, 81, 86, 87, 89, 102, 104, 106, 125, 130, 132], "output": [1, 6, 15, 53, 54, 67, 68, 69, 71, 79, 121], "agnost": 1, "intern": [1, 10, 11, 12, 13, 17, 37, 38, 46, 47, 53, 54, 56, 60, 61, 62, 63, 67, 68, 69, 73, 74, 79, 80, 81, 85, 86, 91, 92, 94, 100, 112, 113, 114, 115, 116, 119, 120, 121, 137], "categor": [1, 2, 29, 33, 37, 40, 131, 134, 137, 138, 142], "hierarch": 1, "condit": [1, 73, 74, 123, 131, 137, 138, 142], "integr": [1, 10, 21, 25, 69, 79, 133, 134], "configurationspac": [1, 2, 3, 29, 30, 32, 33, 34, 67, 68, 69, 70, 71, 79, 100, 113, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "up": [1, 7, 10, 53, 55, 100, 113, 125, 130, 137, 138], "100": [1, 3, 6, 121, 130, 132, 133], "ani": [1, 6, 7, 8, 10, 17, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 37, 38, 46, 47, 53, 54, 56, 58, 60, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 116, 118, 119, 120, 121, 130, 134, 145], "object": [1, 2, 3, 6, 13, 15, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 116, 118, 119, 120, 121, 123, 126, 130, 131, 132, 133, 134, 137, 138, 142, 144, 145], "g": [1, 5, 6, 10, 12, 15, 29, 33, 37, 38, 62, 63, 138], "accuraci": [1, 2, 134, 137, 142], "runtim": [1, 10, 15, 21, 24, 53, 60, 102, 105, 114, 115, 116, 119, 120, 142], "cross": [1, 6, 121, 134, 135, 136, 137, 138, 142, 148], "valid": [1, 2, 6, 7, 37, 38, 62, 63, 67, 68, 121, 130, 132, 134, 135, 136, 137, 138, 141, 142, 145, 148], "possibl": [1, 2, 10, 21, 26, 37, 38, 53, 56, 73, 74, 121, 138], "multi": [1, 2, 6, 13, 15, 19, 37, 38, 39, 40, 43, 44, 45, 62, 63, 91, 92, 93, 94, 100, 102, 103, 113, 114, 119, 120, 121, 134, 138, 140, 141, 142], "arbitrari": [1, 2, 114, 115, 116, 119, 120, 130, 132, 149], "number": [1, 6, 10, 11, 13, 14, 21, 23, 26, 29, 30, 33, 34, 37, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 79, 81, 87, 89, 91, 93, 95, 96, 97, 98, 99, 100, 112, 114, 115, 116, 118, 119, 120, 121, 131, 132, 134, 137, 138, 145], "scalar": [1, 10, 12, 37, 38, 81], "oject": 1, "both": [1, 2, 11, 12, 53, 58, 100, 102, 104, 112, 118, 142], "parego": [1, 5, 10, 12, 91, 100, 113, 143, 144, 148], "know06": [1, 5, 12], "mean": [1, 3, 7, 10, 12, 13, 37, 39, 40, 42, 43, 44, 45, 67, 68, 69, 71, 79, 80, 82, 84, 86, 87, 89, 91, 93, 100, 113, 121, 131, 134, 137, 138, 142], "aggreg": [1, 12, 37, 39, 40, 43, 44, 45, 91, 93], "strategi": [1, 6, 12, 37, 38, 39, 40, 43, 44, 45, 46, 47, 91, 92], "ar": [1, 2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 24, 29, 32, 33, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 56, 58, 60, 61, 62, 63, 67, 68, 69, 70, 71, 73, 74, 79, 81, 87, 89, 100, 102, 103, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126, 130, 132, 134, 137, 138, 142, 145], "fidel": [1, 2, 6, 9, 13, 19, 37, 38, 44, 62, 63, 100, 113, 121, 137, 138], "judg": [1, 37, 38, 62, 63], "budget": [1, 2, 6, 9, 10, 11, 13, 14, 15, 37, 38, 39, 40, 42, 43, 44, 45, 53, 54, 56, 57, 58, 60, 61, 62, 63, 65, 100, 101, 102, 103, 104, 113, 114, 115, 116, 119, 120, 121, 130, 131, 132, 134, 137, 138, 141, 142, 145], "discard": [1, 7], "unsuit": 1, "earli": [1, 7, 37, 45], "thi": [1, 2, 7, 8, 10, 12, 13, 14, 19, 21, 22, 29, 30, 33, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 71, 73, 74, 75, 79, 80, 81, 85, 87, 89, 95, 98, 100, 102, 104, 113, 114, 115, 116, 117, 118, 121, 123, 132, 133, 134, 137, 138, 142, 145, 146, 148, 149], "result": [1, 2, 10, 14, 37, 38, 53, 54, 55, 57, 58, 61, 62, 63, 65, 114, 115, 116, 118, 119, 120, 121, 125, 130, 145], "massiv": 1, "speed": [1, 7], "find": [1, 2, 3, 6, 10, 130, 131, 132, 133, 145], "one": [1, 6, 7, 15, 29, 32, 33, 37, 45, 53, 60, 69, 79, 100, 102, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 125, 132, 134, 138, 141, 142], "dataset": [1, 3, 6, 7, 13, 121, 131, 134, 137, 139, 140, 142, 148], "mani": [1, 2, 6, 37, 38, 45, 53, 54, 60, 62, 63, 67, 86], "line": [1, 5, 6, 19, 53, 58], "interfac": [1, 2, 6, 12, 19, 132], "execut": [1, 7, 10, 15, 37, 38, 44, 53, 54, 55, 57, 58, 61, 62, 63, 65, 114, 115, 116, 119, 120, 136, 137, 138, 140, 144, 147], "file": [1, 7, 8, 15, 17, 37, 38, 100, 113, 121, 136, 140, 144, 147], "also": [1, 2, 6, 7, 10, 11, 15, 37, 38, 53, 54, 55, 57, 58, 61, 62, 63, 65, 69, 79, 100, 113, 114, 115, 116, 120, 126, 131, 134, 137, 142], "commandlin": [1, 7], "consequ": 1, "other": [1, 10, 18, 21, 28, 37, 38, 53, 58, 100, 113, 142], "languag": 1, "temporar": 1, "disabl": [1, 37, 40, 43, 44, 46, 47, 102, 104, 121, 133], "v2": [1, 7, 14, 15], "0": [1, 2, 3, 7, 10, 12, 13, 14, 15, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 57, 58, 61, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 113, 120, 121, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147], "fall": 1, "back": 1, "v1": [1, 15], "need": [1, 2, 10, 13, 14, 15, 19, 32, 37, 38, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 74, 100, 113, 114, 115, 116, 118, 138], "tabl": [1, 2], "provid": [1, 2, 7, 10, 14, 32, 53, 60, 67, 86, 100, 112, 114, 116, 130, 131, 132, 134, 137, 138, 141, 142, 145, 148], "": [1, 6, 7, 10, 11, 12, 17, 29, 33, 34, 37, 38, 53, 54, 55, 57, 58, 61, 62, 63, 69, 71, 79, 81, 100, 113, 114, 115, 116, 118, 119, 120, 121, 130, 131, 132, 133, 134, 137, 138, 142, 145], "tool": [1, 7, 149], "complex": [1, 10, 19, 114, 115], "space": [1, 10, 15, 21, 23, 24, 26, 29, 33, 37, 40, 43, 44, 45, 46, 47, 80, 81, 85, 100, 113, 120, 121, 130, 131, 134, 137, 138], "parallel": [1, 19, 53, 55, 56, 114, 115, 116, 118, 121], "hypermapp": 1, "optuna": 1, "hyperopt": 1, "botorch": 1, "openbox": 1, "hpbandster": [1, 7], "In": [2, 6, 10, 11, 12, 13, 14, 15, 19, 29, 30, 37, 38, 53, 58, 62, 63, 69, 71, 79, 80, 81, 85, 100, 113, 114, 115, 116, 118, 119, 121, 133, 138, 142, 149], "core": [2, 149], "four": [2, 67, 68], "compon": [2, 15, 19, 37, 38, 39, 44, 67, 68, 69, 70, 71, 79, 87, 89], "run": [2, 6, 7, 10, 11, 12, 14, 15, 18, 36, 37, 38, 42, 44, 45, 53, 54, 55, 56, 58, 60, 62, 63, 65, 100, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "process": [2, 6, 7, 10, 15, 36, 37, 38, 40, 53, 54, 58, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 79, 81, 100, 112, 114, 115, 119, 120, 121, 130, 133, 138], "all": [2, 6, 7, 10, 12, 15, 18, 19, 21, 26, 29, 33, 37, 38, 39, 40, 43, 44, 53, 54, 55, 56, 58, 60, 62, 63, 67, 68, 69, 70, 73, 74, 81, 86, 87, 88, 89, 100, 102, 103, 104, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 130, 131, 132, 134, 137, 138, 142, 148], "which": [2, 6, 7, 10, 12, 14, 15, 18, 21, 22, 25, 29, 32, 33, 37, 38, 39, 40, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 79, 86, 87, 89, 90, 95, 97, 99, 100, 101, 112, 114, 115, 116, 118, 119, 120, 121, 131, 132, 134, 137, 138, 149], "explain": [2, 10], "page": [2, 19, 149], "defin": [2, 13, 14, 21, 26, 29, 30, 33, 37, 38, 59, 62, 63, 65, 81, 100, 112, 114, 115, 121, 130, 131, 132, 134, 137, 138, 142], "search": [2, 10, 21, 26, 29, 33, 34, 37, 39, 40, 43, 44, 45, 130, 132], "tunabl": 2, "paramet": [2, 10, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 134, 137, 138, 145, 149], "legal": 2, "rang": [2, 91, 92, 93, 94, 131, 132, 134, 137, 138], "default": [2, 7, 10, 11, 12, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "valu": [2, 10, 11, 12, 15, 21, 22, 23, 24, 26, 27, 28, 36, 37, 38, 44, 45, 53, 56, 59, 60, 62, 63, 65, 67, 68, 69, 71, 73, 74, 79, 81, 87, 89, 90, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 126, 130, 131, 132, 133, 134, 137, 142, 145], "configspac": [2, 3, 29, 30, 31, 32, 33, 34, 35, 37, 38, 62, 63, 67, 68, 69, 70, 71, 79, 87, 89, 90, 100, 113, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "import": [2, 3, 7, 10, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "c": [2, 3, 91, 94, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 149], "myfloat": 2, "1": [2, 3, 5, 10, 11, 21, 22, 23, 24, 27, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 80, 82, 86, 87, 89, 91, 92, 93, 94, 102, 103, 104, 105, 106, 108, 109, 110, 114, 116, 121, 123, 126, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "5": [2, 3, 10, 15, 29, 33, 37, 39, 40, 43, 44, 45, 53, 58, 73, 76, 87, 89, 102, 103, 104, 105, 106, 108, 109, 110, 114, 116, 120, 130, 131, 132, 133, 134, 137, 138, 142, 149], "uniform": [2, 29, 33, 134], "float": [2, 3, 15, 21, 23, 24, 26, 27, 28, 29, 33, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 113, 114, 115, 116, 119, 120, 121, 123, 125, 126, 130, 131, 132, 133, 134, 137, 138, 141, 142], "myint": 2, "2": [2, 6, 10, 21, 23, 29, 32, 34, 37, 39, 43, 44, 53, 58, 87, 89, 95, 98, 114, 116, 130, 131, 132, 133, 134, 137, 138, 141, 142], "integ": [2, 95, 98, 125, 131, 134, 137, 142], "speci": 2, "mous": 2, "cat": 2, "dog": 2, "see": [2, 6, 7, 8, 10, 11, 12, 21, 25, 26, 46, 52, 100, 113], "take": [2, 7, 10, 12, 37, 38, 67, 68, 87, 89, 114, 116, 137], "return": [2, 3, 6, 10, 12, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "For": [2, 6, 7, 10, 13, 37, 38, 40, 43, 44, 46, 47, 62, 63, 73, 74, 114, 115, 118, 121, 137, 149], "exampl": [2, 6, 7, 10, 11, 12, 13, 14, 15, 21, 22, 37, 38, 40, 43, 44, 46, 47, 53, 54, 62, 63, 100, 112, 113, 114, 115, 120, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "could": [2, 7, 15, 53, 58, 114, 117, 121, 125, 138], "neural": [2, 53, 60, 137], "network": [2, 53, 60, 134, 137], "predict": [2, 10, 67, 68, 86, 87, 89], "base": [2, 5, 6, 7, 10, 12, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 126, 131, 138, 149], "learn": [2, 5, 21, 25, 134, 137, 149], "rate": [2, 134, 137], "everi": [2, 53, 56, 60, 95, 97, 98], "would": [2, 10], "most": [2, 37, 38, 40, 43, 44, 46, 47, 62, 63, 100, 113, 134, 137], "like": [2, 15, 37, 38, 45, 62, 63, 134], "differ": [2, 6, 7, 10, 12, 13, 14, 15, 29, 33, 36, 37, 38, 53, 56, 58, 59, 62, 63, 87, 89, 91, 92, 100, 112, 114, 115, 121, 124, 134, 137, 138, 142], "howev": [2, 6, 7, 10, 12, 14, 15, 18, 19, 37, 38, 62, 63, 120, 137, 138], "tri": [2, 7], "best": [2, 3, 6, 10, 21, 23, 24, 27, 28, 29, 33, 37, 38, 44, 45, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 130, 131, 132, 133, 138, 142, 145], "try": [2, 7, 37, 43, 53, 58, 138], "potenti": 2, "def": [2, 3, 10, 130, 131, 132, 133, 134, 137, 138, 141, 142], "train": [2, 3, 6, 10, 13, 36, 37, 38, 43, 44, 53, 60, 62, 63, 67, 68, 69, 70, 71, 79, 87, 89, 102, 103, 121, 130, 131, 132, 133, 134, 137, 138, 142], "self": [2, 10, 29, 30, 53, 58, 67, 68, 69, 73, 74, 79, 80, 81, 85, 95, 97, 100, 113, 114, 115, 116, 118, 130, 131, 132, 133, 134, 137, 138, 142], "seed": [2, 3, 6, 7, 10, 15, 17, 29, 30, 31, 33, 34, 35, 37, 38, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "int": [2, 3, 29, 30, 33, 34, 37, 38, 39, 40, 42, 43, 44, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 130, 131, 132, 133, 134, 137, 138, 141, 142], "model": [2, 6, 7, 13, 19, 21, 22, 25, 26, 36, 37, 38, 39, 40, 42, 43, 44, 45, 62, 63, 65, 102, 103, 114, 116, 121, 130, 131, 132, 133, 134, 138, 149], "multilayerperceptron": 2, "learning_r": [2, 137, 138, 142], "fit": [2, 8, 21, 22, 67, 90], "alwai": [2, 7, 9, 10, 53, 58, 130, 132], "minim": [2, 9, 29, 34, 37, 39, 40, 42, 43, 44, 53, 54, 56, 58, 60, 95, 97], "smaller": [2, 87, 89, 123], "better": [2, 10, 37, 45, 130, 131, 132, 134, 137, 138, 141, 142, 145, 149], "gener": [2, 6, 7, 10, 11, 17, 32, 37, 38, 46, 52, 53, 54, 55, 57, 58, 61, 91, 92, 100, 112, 114, 115, 116, 118, 121, 131, 149], "argument": [2, 10, 11, 12, 15, 21, 22, 37, 38, 40, 43, 44, 46, 47, 53, 55, 56, 60, 62, 63, 73, 74, 114, 115, 119, 120, 121, 138, 142, 145], "intensifi": [2, 9, 11, 14, 18, 19, 36, 37, 38, 39, 40, 42, 43, 44, 45, 62, 63, 65, 100, 101, 112, 114, 115, 116, 118, 121, 130, 131, 132, 134, 137, 138, 141, 142, 145], "first": [2, 7, 14, 15, 37, 38, 53, 57, 58, 60, 61, 62, 63, 73, 74, 114, 117, 119, 124, 130, 131, 132, 134, 137, 138, 141, 142, 145], "name": [2, 12, 13, 17, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 73, 74, 100, 113, 121, 125, 130], "here": [2, 7, 10, 21, 28, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 149], "specifi": [2, 3, 16, 17, 29, 30, 33, 37, 38, 53, 56, 60, 62, 63, 67, 68, 69, 71, 73, 74, 80, 84, 121, 123, 130, 133, 137, 138, 145], "requir": [2, 7, 11, 21, 22, 26, 28, 53, 60, 87, 89, 100, 113, 114, 115, 119, 120, 121, 138], "addition": [2, 10, 13, 102, 103], "successivehalv": [2, 53, 56, 60, 61], "hyperband": [2, 5, 6, 11, 14, 37, 42, 44, 53, 57, 60, 137, 138], "did": 2, "pass": [2, 7, 10, 11, 12, 15, 37, 38, 53, 60, 87, 89, 102, 103, 114, 115, 116, 119, 120, 121, 125, 126, 130, 134, 137, 138, 142, 145], "But": [2, 14, 138], "don": [2, 7], "worri": 2, "tell": [2, 10, 19, 37, 38, 62, 63, 65, 135, 136, 148], "someth": [2, 15], "miss": 2, "never": [2, 32], "variabl": [2, 15, 121, 134, 137, 142], "want": [2, 6, 7, 10, 12, 13, 14, 17, 19, 21, 28, 37, 45, 131, 134, 137, 138, 142, 146, 148, 149], "limit": [2, 7, 14, 15, 114, 115, 116, 119, 120], "time": [2, 7, 10, 14, 18, 32, 37, 39, 40, 43, 45, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 95, 98, 99, 100, 101, 102, 104, 113, 114, 115, 116, 119, 120, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "where": [2, 6, 7, 17, 21, 22, 26, 29, 33, 37, 45, 53, 58, 138, 142], "save": [2, 37, 38, 62, 63, 65, 100, 112, 113, 121], "output_directori": [2, 17, 121], "path": [2, 15, 37, 38, 121, 125], "your_output_directori": 2, "walltime_limit": [2, 121, 137, 138, 142], "120": 2, "two": [2, 7, 10, 29, 33, 53, 60, 87, 89, 138, 149], "minut": [2, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "n_trial": [2, 3, 21, 26, 37, 40, 43, 44, 46, 47, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "500": [2, 145], "max": [2, 11, 21, 24, 126, 131, 137, 138, 142], "trial": [2, 6, 10, 14, 36, 37, 38, 39, 40, 43, 53, 54, 55, 57, 58, 61, 62, 63, 65, 100, 101, 102, 103, 113, 114, 115, 116, 118, 119, 120, 121, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "n_worker": [2, 16, 53, 54, 55, 57, 58, 61, 114, 116, 121, 137, 142], "eight": 2, "worker": [2, 16, 53, 54, 55, 56, 57, 58, 60, 61, 100, 101, 114, 115, 116, 118, 121, 137, 138], "A": [2, 5, 6, 8, 21, 26, 29, 33, 53, 54, 58, 69, 71, 79, 81, 91, 92, 93, 94, 102, 104, 114, 115, 116, 118, 119, 120, 141, 149], "construct": [2, 114, 116], "pipelin": [2, 37, 38], "variou": [2, 37, 38], "satisfi": [2, 10], "crucial": [2, 137], "peak": 2, "idea": [2, 7, 149], "behind": 2, "simpl": [2, 6, 10, 100, 112, 131, 141, 145], "easi": 2, "understand": 2, "without": [2, 8, 19, 32], "dive": 2, "deep": [2, 73, 74, 137], "materi": 2, "expert": 2, "invit": 2, "chang": [2, 10, 17, 37, 44, 53, 54, 55, 57, 58, 61, 73, 74, 100, 113, 130, 131, 132, 134, 137, 138, 141, 142, 145], "thei": [2, 10, 53, 60], "even": [2, 6, 8, 13, 37, 39, 40, 42, 43, 44, 53, 54, 56, 58, 60], "horizont": 2, "scrollabl": 2, "show": [2, 7, 10, 12, 15, 37, 38, 62, 63, 120, 132, 141, 142, 145, 148], "what": [2, 7, 67, 68, 100, 113, 114, 115, 116], "reveal": 2, "medium": 2, "high": [2, 10], "initi": [2, 14, 19, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 56, 58, 60, 62, 63, 95, 97, 98, 114, 116, 121, 130, 131, 132, 134, 137, 138, 141, 142, 145], "design": [2, 6, 14, 19, 29, 30, 32, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 63, 114, 116, 130, 131, 132, 134, 137, 138, 141, 142, 145], "sobol": [2, 10, 37, 40, 43, 46, 52], "surrog": [2, 13, 19, 21, 22, 26, 36, 37, 38, 39, 40, 43, 44, 45, 62, 63, 65, 67, 68, 86, 102, 103, 121, 130, 131], "gaussian": [2, 6, 10, 37, 40, 67, 68, 69, 70, 71, 73, 74, 79, 81, 130], "Not": 2, "acquisit": [2, 19, 36, 37, 38, 39, 40, 43, 44, 45, 62, 63, 65, 69, 79, 102, 105, 134], "expect": [2, 7, 10, 21, 24, 37, 38, 39, 40, 43, 87, 89, 114, 115], "log": [2, 10, 21, 23, 24, 37, 38, 43, 53, 54, 55, 57, 58, 61, 62, 63, 69, 71, 80, 81, 84, 85, 87, 89, 102, 105, 108, 109, 131, 133, 134, 137, 138, 142], "maximi": [2, 19, 37, 38, 62, 63], "local": [2, 10, 29, 33, 34, 37, 39, 40, 43, 53, 55, 102, 104, 114, 116], "sort": [2, 10, 29, 33, 37, 39, 40, 43, 142], "runhistori": [2, 12, 19, 36, 37, 38, 39, 40, 43, 44, 45, 53, 54, 55, 57, 58, 61, 62, 63, 65, 132, 133, 141, 142], "encod": [2, 12, 19, 37, 38, 39, 40, 43, 45, 62, 63], "probabl": [2, 10, 21, 27, 37, 39, 40, 43, 80, 81, 85, 95, 97, 99], "20": [2, 37, 39, 43, 69, 79, 87, 89, 130, 132, 133], "50": [2, 10, 37, 40, 43, 44, 46, 47, 69, 79, 131, 133, 142, 144], "closest": [2, 137], "implement": [2, 7, 21, 22, 29, 30, 33, 34, 46, 47, 53, 56, 60, 62, 63, 65, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 87, 89, 91, 94, 114, 115, 116, 137], "bohb": [2, 6, 7, 53, 56, 60, 137], "emphas": 2, "highli": 2, "modular": 2, "accept": [2, 7, 37, 45, 137], "note": [2, 15], "contrast": 2, "previou": [2, 7, 10, 29, 30, 33, 37, 38, 62, 63, 100, 113, 130, 134, 145], "instanti": [2, 6, 12, 37, 38, 40, 53, 55, 60], "instead": [2, 6, 12, 13, 14, 15, 73, 74], "kwarg": [2, 21, 22, 46, 52, 62, 65, 73, 74, 87, 88, 102, 107, 111], "direct": 2, "modul": [2, 125], "blackboxfacad": [2, 15, 37, 40, 130, 145], "bbfacad": 2, "hyperparameteroptimizationfacad": [2, 3, 18, 37, 43, 44, 131, 132, 133, 134, 141, 142], "hpofacad": [2, 10, 133, 141, 142], "multifidelityfacad": [2, 10, 37, 44, 137, 138], "mffacad": 2, "algorithmconfigurationfacad": [2, 37, 39], "acfacad": 2, "randomfacad": [2, 37, 42, 45], "rfacad": 2, "hyperbandfacad": [2, 37, 42, 45], "hbfacad": 2, "target_funct": [2, 15, 37, 38, 39, 40, 42, 43, 44, 45, 114, 119, 120, 141], "code": [3, 7, 10, 15, 17, 29, 33, 69, 71, 79, 80, 85, 114, 116, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148], "vector": [3, 29, 34, 102, 103, 104, 135, 136, 148], "iri": [3, 131], "numpi": [3, 73, 74, 102, 104, 125, 131, 134, 137, 138, 141, 142], "np": [3, 21, 22, 24, 61, 67, 68, 69, 71, 73, 74, 81, 86, 87, 89, 95, 98, 102, 103, 105, 121, 123, 125, 131, 134, 137, 138, 141, 142], "scenario": [3, 7, 11, 12, 13, 15, 16, 17, 21, 26, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 62, 63, 91, 92, 93, 94, 102, 103, 104, 105, 106, 108, 109, 110, 114, 115, 118, 119, 120, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "sklearn": [3, 73, 74, 131, 134, 137, 138, 142], "svm": [3, 131], "svc": [3, 131], "model_select": [3, 131, 134, 137, 138, 142], "cross_val_scor": [3, 131, 134, 137, 138, 142], "load_iri": [3, 131], "classifi": [3, 131, 134, 137, 138, 142], "random_st": [3, 131, 134, 137, 138, 142], "score": [3, 131, 134, 137, 138, 142], "data": [3, 6, 10, 11, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 37, 38, 39, 43, 44, 46, 47, 53, 54, 55, 58, 60, 62, 63, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 119, 120, 121, 130, 131, 134, 137, 138, 142, 145], "target": [3, 6, 7, 11, 12, 13, 19, 37, 38, 44, 53, 54, 56, 58, 60, 61, 62, 63, 67, 68, 87, 89, 100, 113, 114, 115, 116, 117, 119, 120, 121, 130, 131, 134, 137, 138, 142, 146, 147, 148], "cv": [3, 6, 131, 134, 137, 138, 142], "1000": [3, 37, 40, 130, 131, 145], "determinist": [3, 7, 37, 44, 53, 56, 60, 121, 132, 137, 138, 141, 145], "true": [3, 37, 38, 39, 43, 53, 54, 55, 57, 58, 61, 62, 63, 65, 69, 71, 73, 74, 79, 87, 89, 100, 113, 121, 125, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "200": [3, 12, 131, 133, 136, 137, 142], "incumb": [3, 6, 10, 12, 15, 21, 27, 37, 38, 44, 45, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 100, 101, 113, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "lisha": 5, "li": [5, 53, 60], "kevin": 5, "jamieson": 5, "giulia": 5, "desalvo": 5, "afshin": 5, "rostamizadeh": 5, "ameet": 5, "talwalkar": 5, "novel": [5, 6], "bandit": [5, 6], "approach": [5, 37, 45, 102, 104], "j": 5, "mach": 5, "re": [5, 100, 113], "18": [5, 53, 58], "185": 5, "52": [5, 137], "2017": [5, 69, 71, 79, 81], "jmlr": [5, 149], "org": [5, 8, 21, 23, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 149], "paper": [5, 21, 25, 149], "v18": 5, "16": [5, 53, 58, 134], "558": 5, "html": [5, 46, 52], "hssl22": [5, 21, 26], "pibo": [5, 21, 26], "hvarfner": [5, 21, 26], "et": [5, 7, 21, 25, 26, 53, 56, 60, 69, 79], "al": [5, 7, 21, 25, 26, 53, 56, 60, 69, 79], "2022": 5, "arxiv": [5, 21, 23, 149], "pdf": [5, 21, 23, 25, 53, 60, 91, 94], "2204": 5, "11051": 5, "knowl": 5, "hybrid": 5, "landscap": 5, "approxim": [5, 10], "expens": [5, 6], "multiobject": 5, "ieeexplor": 5, "ieee": 5, "1583627": 5, "sequenti": [6, 7, 149], "bo": [6, 37, 38, 102, 104], "hb": [6, 61], "roar": [6, 37, 42, 45], "onlin": [6, 37, 42, 45], "adapt": [6, 81, 137, 138, 142], "race": [6, 37, 42, 45, 53, 54, 55, 56, 57, 58, 60, 61, 137, 149], "bb": 6, "mf": 6, "rf": [6, 21, 26], "gp": [6, 21, 23, 69, 79], "mcmc": [6, 37, 40, 69, 79], "markov": 6, "chain": [6, 69, 79], "mont": [6, 69, 79], "carlo": [6, 69, 79], "cli": 6, "hp": [6, 10, 134], "doe": [6, 7, 14, 18, 21, 28, 32, 37, 44, 53, 58, 95, 98, 114, 116], "assum": [6, 7, 37, 38, 114, 117, 130, 131, 132, 134, 137, 138, 141, 142, 145], "form": [6, 15, 37, 44, 80, 82, 120], "usual": [6, 114, 117], "emploi": 6, "weight": [6, 10, 12, 21, 26, 29, 33, 37, 39, 40, 43, 45, 91, 93, 100, 113, 134, 143, 144, 148], "explor": [6, 10, 21, 23, 24, 27, 37, 38, 39, 40, 43], "exploit": [6, 10, 21, 23, 24, 27, 37, 38, 39, 40, 43, 44], "minimum": [6, 37, 39, 40, 43, 53, 54, 55, 58, 87, 89, 100, 113, 121, 130], "its": [6, 10, 13, 53, 54, 69, 73, 74, 79, 130, 131], "extens": [6, 53, 56], "success": [6, 11, 14, 15, 37, 42, 44, 53, 56, 60, 61, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 120, 137, 138], "halv": [6, 11, 14, 37, 42, 44, 53, 56, 60, 61, 137, 138], "work": [6, 7, 11, 13, 14, 19, 37, 44, 114, 116, 130, 142], "free": [6, 7, 8, 37, 42], "smbo": [6, 10, 36, 37, 38, 39, 40, 43, 44, 53, 55, 58, 62, 91, 92, 94, 95, 96, 97, 98, 99, 100, 112, 114, 115, 116, 118, 133], "select": [6, 10, 37, 38, 45, 46, 47, 49, 53, 56, 57, 58, 60, 61, 100, 113, 114, 115, 142], "uniformli": [6, 37, 45, 53, 58], "iter": [6, 10, 18, 29, 30, 32, 33, 34, 36, 37, 38, 40, 42, 43, 44, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 91, 92, 94, 95, 96, 97, 98, 99, 100, 113, 114, 115, 116, 118, 137, 138], "compar": [6, 10, 37, 42, 45, 124], "them": [6, 102, 107, 109, 110, 111, 114, 116, 137, 142], "against": [6, 7, 37, 44, 53, 56, 58, 60], "intensif": [6, 18, 36, 37, 44, 53, 54, 58, 62, 63, 65, 137], "mechan": [6, 114, 115, 137, 149], "extend": 6, "chapter": [6, 19], "refer": [6, 7, 10, 11, 21, 23, 46, 52, 53, 56, 60, 149], "observ": [6, 10, 37, 44, 100, 113, 123], "cost": [6, 10, 12, 13, 15, 37, 38, 43, 53, 54, 55, 57, 58, 61, 62, 63, 91, 92, 93, 94, 100, 101, 102, 103, 104, 113, 114, 115, 116, 119, 120, 121, 126, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "given": [6, 10, 15, 21, 22, 23, 24, 27, 28, 53, 54, 56, 60, 67, 68, 95, 97, 99, 100, 102, 103, 113, 114, 115, 119, 120, 126, 138], "singl": [6, 10, 12, 15, 37, 39, 43, 45, 67, 86, 87, 89, 91, 92, 93, 94, 100, 113, 114, 115, 116, 118, 120], "combin": [6, 37, 38, 44, 53, 60, 62, 63, 91, 92, 93, 94, 100, 113, 114, 115, 116, 121, 131, 137, 138, 149], "metric": 6, "qualiti": [6, 53, 60], "than": [6, 37, 38, 45, 53, 58, 62, 63, 80, 81, 82, 87, 89, 121, 130, 131, 132, 134, 137, 138, 141, 142, 145], "goal": 6, "solut": [6, 7, 29, 31, 35, 37, 38, 62, 63, 65], "least": [6, 37, 44, 137], "good": [6, 16, 137], "compromis": 6, "anoth": [6, 10, 100, 112, 131], "word": [6, 10], "epoch": [6, 11, 53, 60, 121, 139, 140, 148], "size": [6, 53, 58, 121, 134, 137], "subset": [6, 11, 13, 53, 58, 100, 113, 121, 138], "context": [6, 121], "let": [6, 10, 12, 130, 131, 132, 133, 134, 137, 142, 145], "sai": 6, "therebi": [6, 11], "prematur": [6, 11], "often": [6, 7, 12, 13, 37, 45, 130, 132], "transform": [6, 10, 37, 38, 62, 63, 81, 87, 89, 91, 92, 93, 94, 102, 103, 104, 105, 107, 108, 109, 110, 111, 125, 138], "augment": [6, 13, 21, 26], "each": [6, 10, 11, 13, 14, 21, 26, 29, 32, 34, 37, 38, 42, 44, 53, 54, 55, 56, 58, 60, 62, 63, 69, 71, 79, 91, 92, 94, 95, 99, 100, 113, 114, 116, 121, 142], "call": [6, 7, 10, 12, 13, 19, 21, 22, 29, 30, 34, 36, 37, 38, 39, 40, 43, 45, 46, 47, 53, 54, 55, 58, 60, 61, 62, 63, 67, 68, 73, 74, 75, 80, 81, 85, 90, 114, 115, 116, 118, 119, 120, 124, 132, 134, 146, 147, 148], "so": [6, 10, 17, 18, 21, 23, 27, 28, 37, 38, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 114, 115, 116, 118, 125, 133, 134, 137], "found": [6, 7, 14, 21, 26, 37, 38, 62, 63, 95, 98, 130, 145, 149], "superior": 6, "govern": 6, "how": [6, 7, 10, 11, 12, 15, 18, 19, 37, 38, 39, 40, 43, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 100, 112, 113, 114, 115, 116, 120, 121, 124, 132, 137, 141, 142, 145, 148], "when": [6, 7, 10, 11, 12, 14, 37, 38, 39, 45, 53, 60, 61, 62, 63, 67, 68, 69, 70, 71, 73, 74, 79, 87, 89, 114, 116, 121, 125, 137], "trust": 6, "enough": [6, 37, 45, 53, 54, 114, 115], "make": [6, 7, 10, 12, 15, 21, 28, 53, 54, 55, 57, 58, 60, 61, 69, 79, 95, 98, 114, 115, 116, 118, 121, 134, 137, 138, 142], "new": [6, 7, 10, 12, 17, 32, 36, 37, 45, 53, 54, 55, 57, 58, 61, 100, 113, 130, 131, 132, 134, 141, 142, 145], "known": [6, 37, 44, 130], "should": [7, 8, 10, 14, 15, 18, 21, 22, 25, 32, 37, 38, 39, 40, 43, 53, 54, 58, 62, 63, 65, 67, 73, 74, 86, 95, 96, 97, 98, 99, 100, 112, 121, 130, 132], "smac2": [7, 87, 89], "reimplement": 7, "origin": [7, 12, 29, 33, 53, 55, 80, 81, 85, 100, 113, 149], "hutter": [7, 69, 71, 79, 81, 149], "2021": [7, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 149], "slightli": 7, "comparison": 7, "stabl": 7, "releas": 7, "java": 7, "sinc": [7, 10, 14, 15, 18, 19, 37, 45, 137, 142], "maintain": 7, "applic": [7, 11], "cannot": 7, "root": [7, 102, 111, 124], "directori": [7, 121], "instal": 7, "pyrfr": 7, "rais": [7, 102, 103, 134, 137, 142], "cryptic": 7, "error": 7, "ensur": [7, 18, 21, 26, 121], "gcc": 7, "compil": 7, "same": [7, 10, 29, 33, 37, 39, 40, 43, 45, 53, 58, 91, 93, 100, 112, 113, 126], "link": 7, "dure": [7, 10, 29, 33, 34, 37, 38, 45, 53, 58, 62, 63, 87, 89, 100, 112], "happen": [7, 53, 58], "anaconda": 7, "my": [7, 37, 40, 43, 44, 46, 47], "sure": [7, 10, 12, 15, 69, 79, 95, 98, 114, 115, 116, 117], "option": [7, 12, 13, 15, 21, 22, 26, 29, 30, 33, 36, 37, 38, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 68, 73, 74, 100, 102, 103, 113, 114, 117, 120, 126, 133], "wrap": [7, 114, 116], "verbos": 7, "debug": [7, 37, 38, 57, 61], "restor": 7, "state": [7, 10, 12, 17, 53, 54, 58, 91, 92, 94, 95, 98, 100, 102, 103, 113, 131], "ye": 7, "look": [7, 11, 14, 32, 37, 38, 45, 62, 63], "facad": [7, 10, 11, 12, 13, 62, 63, 121, 130, 131, 134, 137, 141, 142], "smac4hpo": 7, "close": [7, 114, 116], "discov": 7, "bug": 7, "behav": [7, 21, 26], "report": [7, 14], "open": 7, "issu": [7, 10, 37, 43, 53, 54, 149], "our": [7, 11, 12, 14, 131, 134, 137, 138, 142, 145, 149], "list": [7, 12, 15, 21, 22, 29, 30, 32, 37, 38, 39, 40, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 68, 69, 70, 71, 73, 74, 79, 86, 87, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 138, 141], "befor": [7, 10, 14, 21, 22, 29, 33, 34, 36, 37, 38, 43, 53, 56, 58, 60, 62, 63, 69, 79, 95, 98, 102, 104, 114, 115, 116, 118, 137, 142], "hasn": 7, "alreadi": [7, 10, 14, 21, 22, 53, 58, 100, 113], "tracker": 7, "latest": 7, "u": 7, "inform": [7, 10, 37, 38, 44, 46, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 100, 101, 112, 113, 114, 115, 116, 119, 120, 131], "descript": [7, 53, 60], "reproduc": [7, 121], "about": [7, 10, 37, 44, 53, 56, 62, 63, 65, 73, 74, 100, 101, 114, 115, 131, 134], "setup": [7, 37, 38, 45, 62, 63], "help": 7, "resolv": 7, "packag": [7, 149], "feel": 7, "screenshot": 7, "contribut": [7, 149], "discuss": [7, 19], "care": [7, 10, 37, 38], "question": 7, "feedback": 7, "prefer": 7, "locat": [7, 21, 24], "featur": [7, 10, 13, 15, 37, 39, 43, 44, 67, 68, 69, 70, 71, 79, 86, 87, 89, 100, 102, 103, 104, 112, 120, 121, 123, 138], "ongo": 7, "guid": [7, 10], "flag": 7, "fals": [7, 21, 24, 26, 36, 37, 38, 39, 40, 42, 43, 44, 45, 53, 54, 55, 57, 58, 61, 62, 63, 69, 73, 74, 75, 76, 77, 78, 79, 87, 89, 100, 113, 114, 116, 121, 131, 132, 133], "non": [7, 15, 21, 26, 37, 44, 53, 56, 60, 73, 74, 137, 138, 146, 148], "thu": [7, 13, 134], "nevertheless": [7, 53, 58, 114, 116], "still": [7, 10, 12, 15, 17, 100, 112, 114, 115, 116, 118, 132], "realiz": [7, 14], "tfe": 7, "signific": 7, "advantag": [7, 137], "necessarili": 7, "wors": 7, "might": [7, 10, 12, 14, 73, 74, 100, 113, 114, 115, 116, 118], "lead": [7, 10], "why": [7, 11], "colab": 7, "crash": [7, 102, 103, 104, 105, 106, 108, 109, 110, 114, 117], "child": [7, 46, 47, 114, 115, 131, 137, 142], "pynish": [7, 114, 119, 121], "enforc": [7, 121], "memori": [7, 114, 119, 121], "runner": [7, 62, 63], "mai": 7, "specif": [7, 14, 21, 22, 37, 38, 73, 74, 87, 89, 102, 105, 138], "overcom": 7, "limit_resourc": 7, "program": [8, 32, 100, 112], "softwar": 8, "redistribut": 8, "modifi": 8, "under": 8, "term": 8, "claus": [8, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "bsd": [8, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "distribut": [8, 10, 80, 82, 84, 87, 89, 114, 116], "hope": 8, "warranti": 8, "impli": [8, 137], "merchant": 8, "FOR": 8, "particular": [8, 53, 58], "purpos": [8, 13], "receiv": [8, 10, 14, 15, 114, 116], "copi": 8, "along": [8, 67, 68], "opensourc": 8, "wa": [9, 10, 17, 21, 22, 53, 58, 100, 101, 112, 113, 114, 116], "reach": [9, 37, 44, 95, 98], "rememb": 9, "abort": [9, 114, 117], "highest": [9, 10, 37, 38, 44, 53, 56, 60, 62, 63, 100, 113], "basic": [10, 12, 132], "mention": [10, 149], "start": [10, 18, 19, 36, 37, 38, 62, 63, 69, 79, 91, 92, 94, 114, 116, 133, 137, 138, 142], "pictur": 10, "These": [10, 134], "influenc": 10, "drastic": 10, "empir": [10, 21, 26, 53, 54, 55, 57, 58, 61, 100, 113], "epm": [10, 53, 58, 100, 112], "mostli": 10, "associ": [10, 53, 54, 121], "incorpor": [10, 14, 37, 38, 45, 67, 68, 69, 70, 71, 79, 87, 89, 100, 113, 121, 134], "higher": [10, 37, 39, 40, 43, 53, 58, 131], "collect": [10, 37, 44, 62, 63, 73, 74, 75, 114, 115, 116], "involv": 10, "_min_sampl": 10, "main": [10, 29, 33, 37, 45, 114, 116, 133, 149], "imagin": 10, "75": 10, "505": 10, "7": [10, 53, 58, 67, 68, 69, 70, 71, 79, 87, 89, 90, 130], "becaus": [10, 12, 14, 18, 53, 58, 73, 74, 100, 113, 114, 115, 117, 130, 138, 142], "end": [10, 29, 30, 36, 53, 58], "me": 10, "request": [10, 53, 55, 100, 112], "get_next_configur": [10, 37, 38, 53, 54, 55, 57, 58, 61, 62, 63, 65], "over": [10, 21, 23, 25, 26, 27, 28, 37, 39, 40, 43, 44, 53, 54, 55, 58, 62, 63, 65, 67, 68, 69, 79, 86, 87, 89, 95, 98, 99, 100, 113, 118, 135, 136, 148], "considered_st": [10, 102, 103, 104, 105, 106, 108, 109, 110], "timeout": [10, 102, 104], "consid": [10, 37, 39, 40, 42, 43, 44, 45, 53, 54, 56, 58, 60, 87, 89, 102, 103, 104, 118, 137, 138, 142], "step": [10, 29, 33, 34, 37, 44, 69, 79, 118, 137, 138, 142], "normalize_cost": [10, 126], "objective_bound": [10, 100, 113], "next": [10, 14, 18, 36, 37, 38, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 95, 96, 97, 98, 99, 114, 115, 131, 132], "inact": [10, 37, 38, 62, 63, 123], "after": [10, 21, 22, 36, 37, 42, 44, 45, 53, 56, 58, 60, 95, 98, 132, 133, 137, 142], "mathemat": 10, "techniqu": 10, "varianc": [10, 67, 68, 69, 71, 79, 86, 87, 89, 138], "section": 10, "otherwis": [10, 114, 116, 119, 121], "bunch": 10, "lower": [10, 21, 23, 80, 85, 100, 113, 134], "confid": [10, 21, 23, 37, 45, 53, 58], "bound": [10, 21, 23, 80, 85, 100, 113, 123, 126, 142], "thompson": [10, 21], "prior": [10, 21, 26, 29, 33, 73, 74, 75, 76, 77, 78, 135, 136, 148], "literatur": 10, "calcul": [10, 21, 22, 53, 56, 60, 100, 113, 130, 131, 132, 134, 137, 145], "respons": [10, 102, 103, 105, 107, 108, 109, 110, 111], "wrapper": [10, 67, 86, 114, 115, 116, 118], "upon": [10, 114, 116], "differenti": 10, "evolut": 10, "while": [10, 53, 57, 58, 61], "neighbour": 10, "pai": 10, "attent": 10, "challeng": [10, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 95, 96, 114, 115, 130, 131, 132, 134, 137, 138, 141, 142, 145], "experi": [10, 37, 43], "ram": [10, 37, 43], "long": [10, 18], "comput": [10, 18, 21, 22, 23, 24, 25, 27, 80, 81, 85, 100, 113], "challengerlist": [10, 29, 30, 32], "latin": [10, 46, 50], "hypercub": [10, 46, 50], "factori": [10, 46, 49, 100, 101], "corner": [10, 46, 49], "sequenc": [10, 46, 52, 53, 58], "quasi": 10, "disrep": 10, "statist": [10, 62, 63], "method": [10, 12, 14, 21, 22, 29, 30, 36, 37, 38, 44, 53, 54, 56, 58, 60, 62, 63, 65, 67, 68, 73, 74, 75, 80, 81, 85, 87, 89, 114, 115, 116, 118, 119, 120, 134, 137, 138, 142], "multidimension": 10, "whether": [10, 17, 18, 21, 24, 26, 37, 38, 53, 54, 55, 57, 58, 61, 62, 63, 65, 73, 74, 95, 96, 97, 98, 99, 100, 112, 113, 114, 115, 116, 118, 121], "chanc": 10, "although": 10, "includ": [10, 67, 68, 86, 134, 138, 149], "trade": [10, 37, 38], "off": [10, 17, 37, 38], "stuck": [10, 14], "optimum": [10, 21, 26, 102, 103, 135, 136, 148], "guarante": [10, 18, 19, 100, 113], "addit": [10, 21, 22, 37, 39, 40, 43, 44, 45, 46, 47, 100, 102, 104, 113, 114, 115, 116, 119, 120, 130, 131, 132, 134, 137, 138, 141, 142, 145], "anneal": [10, 95, 97], "modulu": [10, 32, 95, 98], "far": [10, 18, 21, 23, 27, 28, 37, 38, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 133], "decid": [10, 37, 38, 53, 55, 62, 63, 114, 115, 149], "worth": 10, "spend": 10, "pair": [10, 53, 54, 58, 100, 113, 142], "max_config_cal": [10, 37, 39, 40, 43, 45, 53, 54, 58, 132, 134], "lot": [10, 19, 138], "reproduci": 10, "unless": 10, "intensify_percentag": [10, 37, 39, 40, 43, 45, 53, 58], "throughout": 10, "uses_se": [10, 53, 54, 55, 57, 58, 61], "uses_budget": [10, 53, 54, 57, 58, 60, 61], "uses_inst": [10, 53, 54, 57, 58, 60, 61], "callabl": [10, 32, 37, 38, 53, 54, 55, 57, 58, 61, 114, 119, 120], "saniti": 10, "know": [10, 73, 74, 132], "exact": [10, 37, 38, 62, 63], "get_target_function_se": [10, 37, 38, 53, 54, 58, 60, 61], "get_target_function_budget": [10, 37, 38, 53, 54, 58, 60, 61], "get_target_function_inst": [10, 37, 38, 53, 54, 58, 60, 61], "normal": [10, 15, 21, 27, 53, 58, 69, 71, 79, 80, 84, 91, 92, 93, 94, 100, 113, 126, 134], "access": [10, 37, 39, 40, 43, 53, 58, 73, 74], "plai": [10, 13], "role": [10, 13], "get_cost": [10, 100, 113, 133], "ambigu": [10, 12, 142], "pareto": [10, 12, 100, 113, 142], "front": [10, 12, 100, 113, 142], "everytim": [10, 12, 15, 120], "get_incumb": [10, 12, 100, 113], "hold": [10, 19, 37, 38, 62, 63, 125, 131], "un": 10, "min": [10, 53, 58, 126, 137, 138, 142], "sum": [10, 37, 39, 40, 43, 53, 54, 55, 58, 73, 74, 100, 113], "averag": [10, 37, 38, 39, 40, 43, 45, 62, 63, 91, 93, 100, 113, 137, 142], "trial_info": [10, 53, 54, 55, 57, 58, 61, 114, 115, 116, 118], "trial_valu": [10, 53, 54, 55, 57, 58, 61], "item": [10, 101, 125], "info": [10, 36, 37, 38, 53, 54, 62, 63, 65, 114, 115, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "statu": [10, 15, 53, 54, 55, 57, 58, 61, 100, 101, 112, 113, 114, 115, 116, 119, 120], "starttim": [10, 100, 101, 113], "endtim": [10, 100, 101, 113], "additional_info": [10, 15, 100, 101, 113, 114, 115, 116, 119, 120], "get_config": [10, 100, 113, 142], "average_cost": [10, 100, 113, 142], "format": [10, 124, 125], "afterward": 10, "abil": 10, "easili": [10, 121], "loop": [10, 37, 38, 44, 45, 53, 58, 62, 63, 114, 115, 133], "inherit": [10, 73, 74], "overwrit": [10, 37, 38, 39, 40, 42, 43, 44, 45, 61, 62, 63, 100, 113, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "class": [10, 12, 21, 29, 37, 46, 53, 62, 67, 69, 73, 80, 87, 91, 95, 100, 102, 114, 130, 131, 132, 133, 134, 137, 138, 142], "customcallback": [10, 133], "on_start": [10, 36, 133], "none": [10, 21, 22, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 131, 132, 133, 137, 138, 141, 142], "on_end": [10, 36], "on_iteration_start": [10, 36], "on_iteration_end": [10, 36], "runinfo": [10, 100, 112, 114, 115, 116], "runvalu": 10, "bool": [10, 21, 24, 26, 36, 37, 38, 39, 43, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 69, 71, 73, 74, 79, 87, 89, 95, 96, 97, 98, 99, 100, 113, 114, 115, 116, 118, 121, 125, 133], "just": [10, 12, 16, 37, 45, 133], "do": [10, 12, 13, 15, 17, 21, 28, 37, 45, 53, 55, 57, 58, 61, 114, 116, 134, 145], "print": [10, 12, 15, 125, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "min_budget": [11, 53, 60, 121, 137, 138], "max_budget": [11, 53, 60, 121, 137, 138], "real": [11, 37, 38, 53, 56, 60, 62, 63, 114, 115, 116, 119, 120], "stage": [11, 14, 36, 53, 54, 55, 57, 58, 61, 133], "That": [11, 37, 42, 43, 44, 53, 55], "reason": [11, 73, 74], "simpli": [11, 12, 37, 45, 145], "wherea": 11, "world": 11, "exactli": 12, "right": [12, 15, 21, 24, 73, 74], "histori": [12, 14, 37, 38, 53, 55, 62, 63], "keep": [12, 37, 39, 67, 68, 69, 70, 71, 79, 87, 89, 114, 115, 116, 118, 142], "recip": 12, "dictionari": [12, 100, 113, 124], "contain": [12, 37, 38, 53, 54, 58, 62, 63, 65, 73, 74, 100, 102, 104, 113, 114, 115, 116, 118], "kei": [12, 15, 100, 101, 113, 145], "myobj1": 12, "myobj2": 12, "multi_object": [12, 100, 102, 103, 113, 142], "custom": [12, 19, 135, 136, 148], "multi_objective_algorithm": [12, 37, 38, 39, 40, 42, 43, 44, 45, 100, 102, 103, 113, 141, 142], "get_pareto_front": [12, 100, 113, 142], "plot": [12, 141, 142], "five": [13, 37, 40, 43, 44, 46, 47, 137, 142], "identifi": [13, 57, 61, 121], "id": [13, 100, 113], "d0": 13, "d1": [13, 124], "d2": [13, 124], "d3": 13, "d4": 13, "instance_featur": [13, 15, 67, 68, 69, 70, 71, 79, 87, 89, 90, 120, 121, 123, 138], "those": 13, "expand": [13, 121], "x": [13, 21, 22, 23, 24, 27, 28, 67, 68, 69, 70, 71, 73, 74, 79, 80, 82, 86, 87, 89, 102, 103, 104, 123, 130, 132, 141, 142], "matrix": [13, 67, 68], "underli": 13, "121": 13, "6": [13, 37, 39, 43, 53, 58, 87, 89, 102, 103, 104, 105, 106, 108, 109, 110, 132], "140": 13, "65": [13, 134], "99": 13, "45": [13, 138], "102": 13, "59": 13, "132": [13, 133, 136], "48": 13, "type": [13, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 131, 134, 137, 138, 141], "give": [14, 19, 53, 55, 100, 112, 121], "user": [14, 15, 21, 26, 29, 33, 37, 38, 53, 56, 60, 62, 63, 114, 116, 135, 136, 148], "opportun": 14, "come": [14, 100, 101, 114, 116], "some": [14, 19, 73, 74, 102, 103, 133], "part": [14, 29, 30], "callback": [14, 19, 32, 37, 38, 39, 40, 42, 43, 44, 45, 135, 136, 148], "ignor": [14, 15, 37, 38, 62, 63, 73, 74, 134, 137, 138, 142], "skip": [14, 53, 54, 58, 62, 63, 65, 100, 102, 104, 112], "handl": [14, 53, 56, 100, 113, 114, 115, 116, 119, 120], "fact": 14, "complet": [14, 17, 37, 38, 53, 55, 62, 63, 114, 115, 116, 118, 131], "sometim": [14, 53, 58], "detect": 14, "complic": 14, "further": [15, 18, 21, 25, 26, 46, 52, 95, 98, 114, 115, 116, 117, 119, 120, 121, 149], "script": [15, 37, 38, 120, 130, 131, 132, 133, 134, 137, 138, 141, 142, 146, 147, 148], "popen": [15, 120], "standard": [15, 21, 27, 67, 68, 80, 84, 134], "interpret": [15, 37, 38], "avail": [15, 37, 44, 53, 54, 55, 56, 57, 58, 60, 61, 100, 113, 114, 115, 116, 118], "filenam": [15, 100, 113, 145], "hyperparameter1": [15, 120], "5323": [15, 120], "sh": [15, 61, 145], "bash": [15, 145], "anyth": [15, 53, 60, 73, 74, 125], "els": [15, 53, 58, 131, 137, 142], "wih": 15, "mark": [15, 53, 58], "bin": [15, 21, 26, 145], "usr": 15, "env": 15, "comma": [15, 120], "separ": [15, 37, 38, 120], "empti": [15, 100, 113, 114, 115, 116, 118, 120], "echo": [15, 120, 145], "cut": [15, 145], "f1": [15, 141, 145], "d": [15, 21, 23, 145], "f2": [15, 141, 145], "v": [15, 100, 113, 114, 116, 138, 145], "declar": [15, 73, 74, 145], "fi": [15, 145], "done": [15, 37, 38, 53, 54, 55, 58, 62, 63, 114, 115, 116, 118, 145], "stdout": 15, "white": [15, 37, 40, 73, 78, 120], "01": [15, 120, 136, 140, 144, 147], "except": [15, 37, 38, 53, 58, 114, 116, 118, 134], "semicolon": 15, "string": [15, 37, 38, 120, 124, 125], "match": 15, "statustyp": [15, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120], "chmod": 15, "nativ": 16, "go": [16, 53, 55, 134, 142], "automat": [17, 114, 116], "resum": 17, "left": [17, 21, 24, 62, 63, 65, 73, 74], "interrupt": 17, "derivid": 17, "ask": [17, 19, 36, 37, 38, 62, 63, 65, 135, 136, 148], "delet": [17, 114, 116], "old": [17, 37, 38, 62, 63], "affect": [17, 37, 40, 43, 44, 46, 47], "intensifier_percentag": 18, "took": [18, 114, 115, 116, 119, 120], "time_bound": [18, 37, 39, 40, 42, 43, 44, 53, 54, 55, 56, 57, 58, 60, 61], "procedur": [18, 53, 55, 58, 114, 116], "base_smbo": [18, 130, 131, 132, 134, 137, 138, 141, 142, 145], "process_result": [18, 53, 54, 55, 57, 58, 61], "librari": 19, "strongli": 19, "hint": 19, "react": 19, "certain": 19, "thing": 19, "abstractacquisitionfunct": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 38, 45, 62, 63], "sourc": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148], "abstract": [21, 22, 29, 30, 37, 38, 53, 54, 62, 63, 67, 68, 69, 70, 81, 87, 88, 91, 92, 95, 96, 102, 103, 114, 115, 116], "__call__": [21, 22, 73, 74, 91, 92, 93, 94, 114, 119, 120], "ndarrai": [21, 22, 61, 67, 68, 69, 71, 73, 74, 81, 86, 87, 89, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 125, 138], "properti": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 38, 46, 47, 53, 54, 55, 57, 58, 60, 61, 62, 63, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 113, 114, 115, 119, 120, 121, 130, 131, 132, 133, 134, 137, 138, 142], "meta": [21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 37, 38, 46, 47, 53, 54, 58, 60, 62, 63, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 114, 115, 119, 120, 121, 130, 145], "dict": [21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 37, 38, 46, 47, 53, 54, 58, 60, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 116, 119, 120, 121, 124, 138, 141, 142], "str": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 37, 38, 40, 46, 47, 53, 54, 56, 58, 60, 61, 62, 63, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 114, 115, 116, 119, 120, 121, 124, 138, 141, 142], "abstract_model": [21, 22, 26, 67, 86], "abstractmodel": [21, 22, 26, 37, 38, 62, 63, 67, 68, 69, 70, 86, 87, 88, 90], "full": [21, 22, 23, 24, 25, 26, 27, 28, 67, 68, 100, 113, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "attribut": [21, 22], "maxim": [21, 22, 23, 28, 37, 38, 39, 40, 43, 45, 53, 60, 62, 63, 100, 113], "As": [21, 22, 118, 134], "ei": [21, 22, 24, 37, 39, 40, 43, 44], "fmin": [21, 22], "acqusit": [21, 22], "present": [21, 22, 37, 44], "_updat": [21, 22], "xi": [21, 24, 27, 28, 37, 39, 40, 43], "mathbb": [21, 24], "f": [21, 24, 27, 69, 71, 79, 80, 81, 82, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 149], "mathbf": [21, 23, 24, 27, 28], "f_": [21, 24, 27], "control": [21, 23, 24, 27, 37, 39, 40, 43, 53, 57, 60, 61], "balanc": [21, 23, 24, 27, 37, 39, 40, 43], "between": [21, 23, 24, 27, 37, 39, 40, 43, 67, 68, 87, 89, 102, 107, 109, 110, 111], "eip": [21, 24, 102, 105], "computess": [21, 24], "frac": [21, 24, 27], "r": [21, 24, 53, 58, 142], "integratedacquisitionfunct": [21, 25], "acquisition_funct": [21, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 62, 63, 134], "margin": [21, 25, 67, 68, 69, 71, 86, 87, 89], "practic": [21, 25, 148], "jasper": [21, 25], "snoek": [21, 25, 69, 79], "nip": [21, 25, 69, 71, 79, 81], "cc": [21, 25], "4522": [21, 25], "lcb": [21, 23], "beta": [21, 23, 134], "mu": [21, 23, 27, 28, 134], "sqrt": [21, 23, 141], "beta_t": [21, 23], "sigma": [21, 23, 27, 28, 80, 84, 134], "text": [21, 23, 149], "dimens": [21, 23, 67, 68, 130, 131, 132], "tradeoff": [21, 23], "ucb": [21, 23], "0912": [21, 23], "3995": [21, 23], "pi": [21, 27], "p": [21, 27, 80, 82], "geq": [21, 27], "phi": [21, 27], "cdf": [21, 27], "prioracquisitionfunct": [21, 26, 134], "decay_beta": [21, 26, 134], "prior_floor": [21, 26], "1e": [21, 26, 37, 43, 73, 74, 75, 76, 77, 78, 87, 89, 134], "12": [21, 26, 53, 58], "discret": [21, 26, 134], "discrete_bins_factor": [21, 26], "belief": [21, 26, 134], "carl": [21, 26], "decai": [21, 26], "factor": [21, 26, 37, 42, 44, 53, 56, 60, 95, 99], "solid": [21, 26, 134], "lowest": [21, 26, 37, 38, 100, 113], "neg": [21, 26], "densiti": [21, 26], "contin": [21, 26], "trigger": [21, 26, 53, 58, 114, 117, 133], "avoid": [21, 26], "patholog": [21, 26], "remov": [21, 26, 29, 33, 120, 142], "piecewis": [21, 26], "constant": [21, 26, 95, 98, 137, 138, 142], "allow": [21, 26, 53, 56, 121], "togeth": [21, 28, 37, 45], "randomsearch": [21, 28, 29, 35, 37, 45], "localandsortedrandomsearch": [21, 28, 29, 33, 37, 39, 40, 43, 44], "math": [21, 28, 81], "mathcal": [21, 28], "consist": [21, 28, 29, 30, 134, 137, 138, 142, 149], "abstractacquisitionmaxim": [29, 30, 31, 33, 34, 35, 37, 38, 62, 63], "5000": [29, 30, 31, 33, 34, 35, 138], "order": [29, 30, 53, 55, 56, 60, 102, 103, 121], "subclass": [29, 30, 37, 38, 73, 74], "_maxim": [29, 30], "abstract_acquisition_funct": [29, 30, 33], "previous_config": [29, 30], "n_point": [29, 30], "random_design": [29, 30, 32, 37, 38, 39, 40, 42, 43, 44, 45, 62, 63], "_challeng": [29, 30], "abstractrandomdesign": [29, 30, 32, 37, 38, 45, 95, 96, 97, 98, 99], "interleav": [29, 30, 32, 33, 37, 38, 39, 40, 43, 95, 96, 97, 98, 99], "scheme": [29, 30, 114, 115], "next_iter": [29, 30, 95, 96, 97, 98, 99], "differentialevolut": [29, 31], "candid": [29, 31, 35, 37, 38, 44, 53, 60, 62, 63, 65], "differentialevolutionsolv": [29, 31], "scipi": [29, 31, 46, 52], "localandsortedpriorrandomsearch": [29, 33], "uniform_configspac": [29, 33], "max_step": [29, 33, 34], "n_steps_plateau_walk": [29, 33, 34], "local_search_iter": [29, 33, 37, 40, 43], "prior_sampling_fract": [29, 33], "accord": [29, 33, 95, 97, 99], "randomli": [29, 33, 37, 38, 45, 62, 63], "retriev": [29, 33, 138], "normalfloathp": [29, 33], "localsearch": [29, 33, 34], "maximum": [29, 33, 34, 37, 39, 40, 43, 53, 54, 55, 57, 58, 61, 87, 89, 95, 97, 98, 121], "plateau": [29, 33, 34], "walk": [29, 33, 34], "termin": [29, 33, 34, 37, 44, 114, 116], "ratio": [29, 33, 37, 39, 43, 87, 89], "taken": [29, 33, 102, 103], "oppos": [29, 33], "defaut": [29, 33, 37, 40, 43], "vectorization_min_obtain": [29, 34], "vectorization_max_obtain": [29, 34], "neighbor": [29, 34], "obtain": [29, 34, 69, 71, 81], "tune": [29, 34, 53, 58, 69, 79, 134], "reduc": [29, 32, 34, 37, 39, 43, 67, 68, 69, 70, 71, 79, 87, 89, 114, 116, 132, 145], "overhead": [29, 34], "challenger_callback": 32, "modulus_design": 32, "modulusrandomdesign": [32, 95, 98], "second": [32, 62, 63, 65, 114, 116, 119, 121, 124, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "necessari": [32, 37, 44, 53, 54, 55, 57, 58, 61], "hundr": 32, "closur": 32, "www": [32, 91, 94], "programiz": 32, "on_ask_end": 36, "intent": [36, 53, 58, 62, 63, 65], "on_ask_start": 36, "finish": [36, 37, 38, 62, 63, 114, 115, 116, 118, 132, 133, 137, 138], "on_next_configurations_end": 36, "essenti": 36, "on_next_configurations_start": 36, "on_tell_end": [36, 133], "stat": [36, 37, 38, 46, 52, 62, 63, 65, 132, 133], "gracefulli": 36, "stop": [36, 121, 133, 137, 142], "on_tell_start": 36, "abstractfacad": [37, 38, 39, 40, 43, 45, 141, 142], "acquisition_maxim": [37, 38, 39, 40, 42, 43, 44, 45, 62, 63], "initial_design": [37, 38, 39, 40, 42, 43, 44, 45, 62, 63, 131, 134, 137, 142], "runhistory_encod": [37, 38, 39, 40, 42, 43, 44, 45, 62, 63], "logging_level": [37, 38, 39, 40, 42, 43, 44, 45, 133], "top": [37, 38, 53, 57, 60, 61], "backend": [37, 38], "organ": [37, 38], "manner": [37, 38], "suit": [37, 38], "With": [37, 38], "explicitli": [37, 38, 114, 116], "get_": [37, 38], "environment": [37, 38, 62, 63], "abstractrunn": [37, 38, 62, 63, 114, 115, 116, 118], "targetfunctionscriptrunn": [37, 38, 120], "promis": [37, 38, 45, 53, 54, 55, 57, 58, 61, 62, 63], "initialdesign": [37, 38, 62, 63], "randomdesign": [37, 38, 62, 63], "drawn": [37, 38, 39, 40, 43, 53, 58, 62, 63, 69, 71, 81, 95, 99], "abstractintensifi": [37, 38, 53, 54, 55, 58, 61, 62, 63], "abstractmultiobjectivealgorithm": [37, 38, 91, 92, 93, 94, 100, 102, 103, 113], "runhistoryencod": [37, 38, 39, 40, 45, 62, 63, 102, 104, 106, 107, 108, 109, 110, 111], "level": [37, 38, 44, 124, 125], "indic": [37, 38, 53, 54, 55, 57, 58, 61, 95, 96, 98, 100, 101, 112, 114, 117, 138, 142], "yaml": [37, 38], "noth": [37, 38], "yml": [37, 38], "inconsist": [37, 38, 62, 63, 130, 145], "behaviour": [37, 38, 62, 63], "intend": [37, 38, 114, 116], "trialinfo": [37, 38, 53, 54, 55, 57, 58, 61, 62, 63, 65, 100, 101, 114, 115, 116, 118, 133], "static": [37, 38, 39, 40, 42, 43, 44, 45, 121], "get_acquisition_funct": [37, 38, 39, 40, 43, 45, 134], "get_acquisition_maxim": [37, 38, 39, 40, 43, 45], "get_initial_design": [37, 38, 39, 40, 43, 44, 45, 131, 134, 137, 142], "warm": [37, 38], "abstractinitialdesign": [37, 38, 46, 47, 48, 49, 50, 51, 52], "get_intensifi": [37, 38, 39, 40, 42, 43, 44, 45, 132, 134], "get_model": [37, 38, 39, 40, 43, 45], "get_multi_objective_algorithm": [37, 38, 39, 40, 43, 45, 141], "choos": [37, 38, 40, 53, 54, 57, 61, 62, 63, 65, 69, 79, 137], "suggest": [37, 38, 62, 63, 65, 114, 117], "get_random_design": [37, 38, 39, 40, 43, 45], "get_runhistory_encod": [37, 38, 39, 40, 43, 45], "prepar": [37, 38, 53, 54, 102, 103], "abstractrunhistoryencod": [37, 38, 102, 103, 105, 106], "configuration_spac": [37, 38, 62, 63, 100, 113], "hash": [37, 38, 121], "fill": [37, 38, 62, 63, 118], "relev": [37, 38, 62, 63, 65], "trajectori": [37, 38, 53, 54, 55, 57, 58, 61, 62, 63, 101], "describ": [37, 38, 62, 63, 65], "trialvalu": [37, 38, 53, 54, 55, 57, 58, 61, 62, 63, 65, 100, 101, 113, 114, 115, 116, 118, 132, 133], "regard": [37, 38, 62, 63, 65], "additional_config": [37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 134], "defaultinitialdesign": [37, 39, 45, 46, 48], "min_config_cal": [37, 39, 40, 43, 45, 53, 54, 58], "2000": [37, 39, 53, 54, 58], "min_challeng": [37, 39, 40, 42, 43, 44, 45, 53, 54, 55, 56, 58, 60], "race_against": [37, 39, 40, 43, 45, 53, 58], "per": [37, 39, 40, 43, 44, 46, 47, 53, 54, 55, 58, 87, 89, 100, 113, 134], "exhaust": [37, 39, 40, 42, 43, 44, 53, 54, 56, 58, 60, 130, 131, 132, 134, 137, 138, 141, 142, 145], "earlier": [37, 39, 40, 42, 43, 44, 53, 54, 56, 58, 60], "much": [37, 39, 40, 43, 53, 58, 62, 63, 65, 100, 113, 114, 116, 137, 141], "percentag": [37, 39, 40, 43, 53, 58], "n_tree": [37, 39, 43, 87, 89], "ratio_featur": [37, 39, 43, 87, 89], "8333333333333334": [37, 39, 87, 89], "min_samples_split": [37, 39, 43, 87, 89], "min_samples_leaf": [37, 39, 43, 87, 89], "max_depth": [37, 39, 43, 87, 89], "bootstrap": [37, 39, 43, 87, 89], "pca_compon": [37, 39, 67, 68, 69, 70, 71, 79, 87, 89, 90], "tree": [37, 39, 43, 87, 89], "split": [37, 39, 43, 87, 89, 134, 137, 138, 142], "leaf": [37, 39, 43, 87, 89], "depth": [37, 39, 43, 87, 89], "pca": [37, 39, 67, 68, 69, 70, 71, 79, 87, 89], "randomforest": [37, 39, 43, 44, 87, 89], "objective_weight": [37, 39, 40, 43, 45, 91, 93, 141, 142], "length": [37, 39, 40, 43, 45, 53, 58, 69, 73, 75, 79, 91, 93], "meanaggregationstrategi": [37, 39, 40, 43, 45, 91, 93], "probabilityrandomdesign": [37, 39, 40, 43, 95, 99], "n_config": [37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 131, 137, 142], "n_configs_per_hyperparamt": [37, 40, 43, 44], "max_ratio": [37, 40, 43, 44, 46, 47, 48, 49, 50, 51, 132, 145], "n_configs_per_hyperparamet": [37, 40, 43, 44, 46, 47, 48, 49, 50, 51], "cover": [37, 40, 43, 44, 46, 47], "sobolinitialdesign": [37, 40, 43, 46, 52, 131], "get_kernel": [37, 40], "kernel": [37, 40, 69, 70, 71, 79, 131], "composit": [37, 40], "hammingkernel": [37, 40, 73, 75], "matern": [37, 40, 73, 76], "nois": [37, 40], "model_typ": [37, 40], "chosen": [37, 40, 137, 148], "vanilla": [37, 40], "gaussianprocess": [37, 40, 69, 71, 79], "mcmcgaussianprocess": [37, 40, 69, 79], "08447232371720552": [37, 40], "_": [37, 42, 132, 138, 142], "aggress": [37, 42, 45, 137, 149], "eta": [37, 42, 44, 53, 56, 60, 137, 138], "10000": [37, 43], "1048576": [37, 43, 87, 89], "scale": [37, 43, 53, 56, 60, 73, 75, 80, 81, 82, 83, 85, 102, 103, 107, 109, 110, 111, 131], "runhistorylogscaledencod": [37, 43, 102, 104, 109], "wai": [37, 44, 53, 56, 133], "randominitialdesign": [37, 44, 46, 51], "fashion": [37, 44, 53, 55, 114, 116, 118], "_collect_data": [37, 44], "notabl": [37, 44], "through": [37, 44, 100, 113], "_min_samples_model": [37, 44], "exist": [37, 44, 100, 113, 131], "until": [37, 44, 114, 115, 116, 118], "surviv": [37, 44], "inquir": [37, 44], "unseen": [37, 44], "criterion": [37, 44, 53, 60], "intersect": [37, 44], "common": [37, 44, 53, 55, 114, 115, 116, 134], "abstract_intensifi": [37, 44, 130, 131, 132, 134, 137, 138, 141, 142, 145], "_compare_config": [37, 44], "datapoint": [37, 44], "disambigu": [37, 44], "index": [37, 44], "replac": [37, 44, 45, 114, 119, 137], "n_seed": [37, 44, 53, 56, 60, 121, 137, 138], "\u03b8": [37, 45, 53, 58], "unpromis": [37, 45], "reject": [37, 45], "veri": [37, 45], "dummi": [37, 45], "neither": [37, 45, 100, 113], "nor": [37, 45, 100, 113], "increas": [37, 45, 95, 98, 137, 138], "randommodel": [37, 45, 67, 90], "select_configur": [46, 47], "_select_configur": [46, 47], "factorialinitialdesign": [46, 49], "middl": [46, 49], "latinhypercubeinitialdesign": [46, 50], "arg": [46, 52, 62, 65, 87, 88, 102, 107, 111], "scrambl": [46, 52], "io": [46, 52], "devdoc": [46, 52], "qmc": [46, 52], "resourc": [53, 54, 114, 116, 119], "produc": [53, 54, 114, 115, 116, 118], "get_next_tri": [53, 54, 55, 57, 58, 61], "repeat_config": [53, 54, 55, 57, 58, 61], "runinfoint": [53, 54], "again": [53, 54, 55, 57, 58, 61], "tupl": [53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 67, 68, 73, 74, 86, 87, 89, 100, 102, 103, 104, 113, 114, 115, 116, 118, 119, 120, 123, 126, 138, 141], "trialinfoint": [53, 54, 55, 57, 58, 61, 62, 63, 65, 100, 112], "consum": [53, 54, 55, 57, 58, 61, 114, 115], "encapsul": [53, 54, 55, 57, 58, 61, 114, 115], "iteration_don": [53, 54], "num_trial": [53, 54, 101], "log_trajectori": [53, 54, 55, 57, 58, 61], "seen": [53, 54, 55, 57, 58, 61], "sec": [53, 54, 55, 57, 58, 61], "mayb": [53, 54, 55, 57, 58, 61], "incumbent_cost": [53, 54, 55, 57, 58, 61, 130, 131, 132, 134, 137, 138, 141, 145], "repeat": [53, 54], "abstractparallelintensifi": [53, 55, 60], "racer": [53, 55, 58], "schedul": [53, 55, 95, 97], "basi": [53, 55, 60], "prevent": [53, 55, 58, 60, 73, 74], "idl": [53, 55, 56, 60], "pick": [53, 55, 57, 61], "wait": [53, 55, 62, 63, 65, 114, 115, 116, 118], "send": [53, 55], "redirect": [53, 55], "respect": [53, 55, 60, 73, 74, 80, 81, 85], "reli": [53, 55], "choic": [53, 55, 137], "instance_seed_pair": [53, 56, 60], "instance_ord": [53, 56, 60, 121], "shuffle_onc": [53, 56, 60, 121], "incumbent_select": [53, 56, 60, 138], "highest_executed_budget": [53, 56, 60], "n_initial_challeng": [53, 56, 60], "falkner": [53, 56, 60, 69, 71, 79, 81], "2018": [53, 56, 60], "hyperbandwork": [53, 56, 57], "actual": [53, 56, 60, 69, 79, 114, 115], "logic": [53, 56, 60], "shuffl": [53, 56, 60, 121, 134, 137, 138, 142], "highest_budget": [53, 56, 60], "any_budget": [53, 56, 60], "regardless": [53, 56, 60], "\u03b8_new": [53, 58], "\u03b8_inc": [53, 58], "m": [53, 58], "t_intensifi": [53, 58], "\u03c0": [53, 58], "c_hat": [53, 58], "denot": [53, 58], "run_incumb": [53, 58], "less": [53, 58], "equal": [53, 58, 100, 113], "executerun": [53, 58], "run_challeng": [53, 58], "s_miss": [53, 58], "11": [53, 58, 136, 142], "s_torun": [53, 58], "foreach": [53, 58], "13": [53, 58, 133, 136], "14": [53, 58, 131, 136], "\u03c0_common": [53, 58], "previous": [53, 57, 58, 61], "ran": [53, 58], "15": [53, 58, 134, 136, 138], "break": [53, 58], "17": [53, 58], "spent": [53, 58], "exce": [53, 58], "19": [53, 58], "get_next_challeng": [53, 58], "exercis": [53, 58, 114, 115, 116, 118], "though": [53, 58], "popul": [53, 58, 114, 115, 116, 118], "_configs_to_run": [53, 58], "pool": [53, 58], "regist": [53, 58], "_to_run": [53, 58], "brand": [53, 58], "_next_iter": [53, 58], "transit": [53, 58], "new_challeng": [53, 58], "charg": [53, 58], "compli": [53, 58, 114, 116], "job": [53, 58, 114, 116], "circumv": [53, 58], "No": [53, 58, 130, 131, 132, 134, 141, 142, 145], "cap": [53, 58], "post": [53, 58, 142], "intensifierstag": [53, 58, 59], "process_incumbent_run": [53, 58], "process_first_config_run": [53, 58], "At": [53, 58], "move": [53, 58, 95, 97, 100, 113], "supplementari": [53, 60], "proceed": [53, 60, 149], "mlr": [53, 60], "press": [53, 60], "v80": [53, 60], "falkner18a": [53, 60], "supp": [53, 60], "oper": [53, 60, 73, 74], "kind": [53, 60], "total": [53, 60, 87, 89, 114, 116, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147], "posit": [53, 60, 91, 94, 114, 115, 116, 119, 120], "eg": [53, 60], "successivehalvingwork": [53, 57, 60, 61], "rather": [53, 60, 81], "calculate_budget": [53, 60], "max_iter": [53, 60], "stand": [57, 61], "alon": [57, 61], "numer": [57, 61, 130], "tag": [57, 61], "logger": [57, 61, 125], "messag": [57, 61], "properli": [57, 61, 118], "later": [57, 61], "enum": [59, 100, 112], "successive_halv": [61, 137, 138], "_all_budget": 61, "_n_configs_in_stag": 61, "_min_budget": 61, "_max_budget": 61, "sub": [61, 102, 103], "rout": 61, "basesmbo": [62, 63, 65, 133], "store": [62, 63, 100, 113, 137], "time_left": [62, 63, 65], "update_acquisition_funct": [62, 63], "assosi": [62, 63], "update_model": [62, 63], "y": [67, 68, 73, 74, 87, 89, 102, 103, 104, 123], "concret": [67, 68], "covariance_typ": [67, 68], "diagon": [67, 68], "_predict": [67, 68], "appli": [67, 68, 81, 102, 104, 130], "std": [67, 68], "deviat": [67, 68, 80, 84, 134], "covari": [67, 68], "whole": [67, 68], "var": [67, 68, 86, 87, 89, 121, 138], "predict_margin": [67, 68, 86, 87, 89], "_train": [67, 68], "correspond": [67, 68, 80, 82, 126], "multiobjectivemodel": [67, 86], "abstractgaussianprocess": [69, 70, 71, 79], "n_restart": [69, 71], "normalize_i": [69, 71, 79], "likelihood": [69, 71], "robo": [69, 71, 79, 81], "klein": [69, 71, 79, 81], "mansur": [69, 71, 79, 81], "workshop": [69, 71, 79, 81], "restart": [69, 71, 95, 97], "zero": [69, 71, 79, 102, 107, 109, 110, 111, 130, 132], "unit": [69, 71, 79, 134], "sample_funct": [69, 71], "x_test": [69, 71], "n_func": [69, 71], "posterior": [69, 71], "function_sampl": [69, 71], "arrai": [69, 71, 73, 74, 125, 142], "n_mcmc_walker": [69, 79], "chain_length": [69, 79], "burning_step": [69, 79], "mcmc_sampler": [69, 79], "emce": [69, 79], "average_sampl": [69, 79], "out": [69, 79], "markow": [69, 79], "propos": [69, 79], "walker": [69, 79], "last": [69, 79, 131], "burnin": [69, 79], "sampler": [69, 79], "nut": [69, 79], "abstractkernel": [73, 74, 75, 76, 77, 78], "operate_on": [73, 74, 75, 76, 77, 78], "has_condit": [73, 74, 75, 76, 77, 78], "mixin": [73, 74], "overrid": [73, 74, 130, 131, 145], "place": [73, 74, 134], "hierarchi": [73, 74], "instantiat": [73, 74], "mypi": [73, 74], "won": [73, 74], "relat": [73, 74], "superclass": [73, 74], "statement": [73, 74], "member": [73, 74], "_call": [73, 74], "super": [73, 74], "get_param": [73, 74, 75], "etc": [73, 74, 121], "On": [73, 74, 114, 115, 116, 118, 139, 140, 148], "abstractprior": [73, 74, 80, 81, 82, 83, 84, 85], "primarili": [73, 74], "eval_gradi": [73, 74], "estim": [73, 74, 87, 89, 102, 103, 130, 131, 132, 134, 137, 138, 141, 142, 145], "subobject": [73, 74], "param": [73, 74], "map": [73, 74, 100, 113], "n_dim": [73, 74], "fix": [73, 74], "constantkernel": [73, 74], "constant_valu": [73, 74], "constant_value_bound": [73, 74], "05": [73, 74, 75, 76, 77, 78, 91, 94, 138], "100000": [73, 74, 75, 76, 77, 78], "k": [73, 74, 100, 113, 149], "gradient": [73, 74, 80, 81, 85, 139, 140, 148], "shape": [73, 74, 80, 82], "n_samples_x": [73, 74], "n_featur": [73, 74], "n_samples_i": [73, 74], "boolean": [73, 74], "k_gradient": [73, 74], "opt": [73, 74], "length_scal": [73, 75, 76, 77], "length_scale_bound": [73, 75, 76, 77], "stationarykernelmixin": [73, 75], "normalizedkernelmixin": [73, 75], "ham": [73, 75], "hyperparameter_length_scal": [73, 75], "maternkernel": [73, 76], "nu": [73, 76], "productkernel": [73, 74], "k1": [73, 74], "k2": [73, 74], "product": [73, 74], "rbfkernel": [73, 77], "rbf": [73, 77, 131], "sumkernel": [73, 74], "whitekernel": [73, 78], "noise_level": [73, 78], "noise_level_bound": [73, 78], "gammaprior": [80, 82], "loc": [80, 82], "gamma": [80, 82, 131], "greater": [80, 82, 121], "canon": [80, 82], "greather": [80, 82, 121], "horseshoeprior": [80, 83], "horsesho": [80, 83], "spearmint": [80, 83, 85], "lognormalprior": [80, 84], "softtophatprior": [80, 85], "lower_bound": [80, 85], "upper_bound": [80, 85], "expon": [80, 85], "soft": [80, 85], "tophat": [80, 85], "upper": [80, 85, 100, 113, 134], "get_gradi": [80, 81, 85], "theta": [80, 81, 85], "hi": [80, 81, 85], "_get_gradi": [80, 81, 85], "get_log_prob": [80, 81, 85], "exponenti": [80, 81, 85], "_get_log_prob": [80, 81, 85], "tophatprior": [80, 85], "whenev": 81, "lnprob": 81, "sample_from_prior": 81, "n_sampl": 81, "_sample_from_prior": 81, "abstractrandomforest": [87, 88, 89], "n_points_per_tre": [87, 89], "eps_pur": [87, 89], "08": [87, 89], "max_nod": [87, 89], "log_i": [87, 89], "account": [87, 89, 102, 103, 137], "node": [87, 89, 114, 116], "assumpt": [87, 89], "uncertainti": [87, 89], "abc": [91, 92, 114, 115], "loss": [91, 92, 93, 94, 114, 119, 138], "update_on_iteration_start": [91, 92, 94], "rho": [91, 94], "bham": [91, 94], "ac": [91, 94], "uk": [91, 94], "jdk": [91, 94], "ukci": [91, 94], "2015": [91, 94], "small": [91, 94], "helper": [95, 96], "th": [95, 96, 97, 98, 99], "begin": [95, 96, 98], "cosineannealingrandomdesign": [95, 97], "min_prob": [95, 97], "max_prob": [95, 97], "restart_iter": [95, 97], "decreas": [95, 97, 98, 99], "cosin": [95, 97], "final": [95, 97, 130, 131, 132, 134, 137, 138, 141, 142, 145], "_probabl": [95, 97], "dynamicmodulusrandomdesign": [95, 98], "start_modulu": [95, 98], "modulus_incr": [95, 98], "end_modulu": [95, 98], "inf": [95, 98, 121], "fraction": [95, 98], "amount": [95, 98, 114, 116], "ever": [95, 98], "adjust": [95, 98], "dynamicprobabilityrandomdesign": [95, 99], "multipli": [95, 99], "dataorigin": [100, 112, 113], "definit": [100, 112], "gather": [100, 112], "disk": [100, 112, 113], "external_same_inst": [100, 112, 113], "extern": [100, 112, 113], "psmac": [100, 112], "external_different_inst": [100, 112], "due": [100, 112, 138], "Will": [100, 112, 114, 116], "instanceseedbudgetkei": [100, 101, 113], "instanceseedkei": [100, 101], "overwrite_existing_tri": [100, 113], "trialkei": [100, 101, 113], "importantli": [100, 113], "theoret": [100, 113], "picklabl": [100, 113], "scaral": [100, 113], "__contains__": [100, 113], "semant": [100, 113], "__eq__": [100, 113], "__getitem__": [100, 113], "__iter__": [100, 113], "__len__": [100, 113], "len": [100, 113], "force_upd": [100, 113], "instance_seed_budget_kei": [100, 113], "queri": [100, 113], "wrt": [100, 113], "warn": [100, 113, 134, 137, 138, 142], "config_id": [100, 101, 113, 141], "get_configs_per_budget": [100, 113], "budget_subset": [100, 102, 103, 104, 113], "docstr": [100, 113], "cach": [100, 113], "get_min_cost": [100, 113], "min_cost": [100, 113], "get_trial": [100, 113], "only_max_observed_budget": [100, 113], "ids_config": [100, 113, 141], "incremental_update_cost": [100, 113], "increment": [100, 113], "load_json": [100, 113], "load": [100, 113, 121, 131], "json": [100, 113], "represent": [100, 102, 103, 104, 113], "abstract_multi_objective_algorithm": [100, 102, 103, 113], "reset": [100, 113], "save_json": [100, 113], "save_extern": [100, 113], "sum_cost": [100, 113], "individu": [100, 113], "external_ful": [100, 113], "structur": [100, 113], "_config_id_to_inst_seed_budget": [100, 113], "update_cost": [100, 113], "_cost_per_config": [100, 113], "_num_trials_per_config": [100, 113], "scratch": [100, 113], "accordingli": [100, 113, 134], "update_from_json": [100, 113], "intenum": [100, 112], "run_info": [100, 112], "trajectoryitem": 101, "walltime_us": 101, "memoryout": [102, 103, 104, 105, 106, 108, 109, 110], "donotadv": [102, 103, 104, 105, 106, 108, 109, 110], "lower_budget_st": [102, 103, 104, 105, 106, 108, 109, 110], "scale_percentag": [102, 103, 104, 105, 106, 108, 109, 110], "noqa": [102, 103], "e501": [102, 103], "percentil": [102, 103], "distanc": [102, 103], "typeerror": [102, 103], "get_configur": [102, 103], "append": [102, 103, 141], "configs_arrai": [102, 103], "objecct": [102, 103], "defaul": [102, 103], "transform_response_valu": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "transformed_valu": [102, 103], "runhistoryeipsencod": [102, 105], "runhistoryinversescaledencod": [102, 107], "linearli": [102, 107, 109, 110, 111], "invers": [102, 107], "runhistorylogencod": [102, 108], "runhistoryrawencod": [102, 104], "runhistroi": [102, 104], "raw": [102, 104], "transform_raw_valu": [102, 104], "transform_with_raw": [102, 104], "imput": [102, 104, 123], "censor": [102, 104], "cutoff": [102, 104], "y_raw": [102, 104], "runhistoryrawscaledencod": [102, 104], "runhistoryscaledencod": [102, 110], "runhistorysqrtscaledencod": [102, 111], "squar": [102, 111, 141], "required_argu": [114, 115, 118, 119, 120], "interact": [114, 115], "perspect": [114, 115], "launch": [114, 115, 116, 118], "submit": [114, 115, 116, 118], "submit_run": [114, 115, 116], "run_wrapp": [114, 115, 116], "among": [114, 115], "unner": [114, 115], "realli": [114, 115], "translat": [114, 115], "iter_result": [114, 115, 116, 118], "decis": [114, 115, 116, 118], "abl": [114, 115, 131], "count_available_work": [114, 115, 116, 118], "is_run": [114, 115, 116, 118], "serial": [114, 115, 116, 118], "instantli": [114, 115, 116, 118], "pend": [114, 115, 116, 118], "_results_queu": [114, 115, 116, 118], "get_finish": [114, 115, 116, 118], "aka": [114, 115, 116], "repres": [114, 115, 116, 119, 120, 125, 138, 149], "around": [114, 115], "simplifi": [114, 115], "isol": [114, 115], "submit_tri": [114, 115, 116, 118], "embed": [114, 115, 116], "eventu": [114, 115], "fifo": [114, 115], "dictat": [114, 115, 116], "submiss": [114, 115], "endeavor": [114, 115], "daskparallelrunn": [114, 116], "single_work": [114, 116], "patienc": [114, 116], "dask_client": [114, 116], "bridg": [114, 116], "pattern": [114, 116], "baserunn": [114, 116], "neext": [114, 116], "dask": [114, 116, 121], "precis": [114, 116], "task": [114, 116, 118, 121, 134], "pickl": [114, 116], "Such": [114, 116], "futur": [114, 116], "manag": [114, 116, 121], "client": [114, 116], "fail": [114, 116, 117, 121], "cluster": [114, 116], "attach": [114, 116], "manual": [114, 116, 134], "__del__": [114, 116], "forc": [114, 116], "dynam": [114, 116], "alloc": [114, 116, 137], "firstruncrashedexcept": [114, 117], "targetalgorithmabortexcept": [114, 117], "targetfunctionrunn": [114, 119], "serialrunn": [114, 118, 119, 120], "element": [114, 119, 125], "algorithm_kwarg": [114, 119, 120], "walltim": [114, 119], "immedi": 118, "subprocess": 120, "posixpath": 121, "smac3_output": 121, "crash_cost": 121, "termination_cost_threshold": 121, "cputime_limit": 121, "trial_walltime_limit": 121, "trial_memory_limit": 121, "frame": 121, "threshold": 121, "cpu": 121, "constraint": [121, 138], "spawn": 121, "mb": [121, 136, 140, 144, 147], "__post_init__": 121, "count_instance_featur": 121, "count": 121, "count_object": 121, "make_serializ": 121, "serializ": [121, 125], "convert_configurations_to_arrai": 123, "get_conditional_hyperparamet": 123, "get_typ": 123, "recursively_compare_dict": 124, "diff": 124, "recurs": 124, "format_arrai": 125, "format_v": 125, "get_logg": 125, "logger_nam": 125, "setup_log": 125, "own": 125, "unnorm": 126, "normalized_cost": 126, "click": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "download": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148], "2d": [130, 143, 144, 148], "rosenbrock": [130, 132], "larg": 130, "abstract_initial_design": [130, 131, 132, 134, 137, 138, 141, 142, 145], "py": [130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147], "133": [130, 131, 132, 134, 137, 138, 141, 142, 145], "275": [130, 131, 132, 134, 141, 142, 145], "446": [130, 131, 132, 134, 141, 142, 145], "566": [130, 131, 132, 134, 141, 142, 145], "1102": [130, 132, 133], "7878": [130, 132], "340": [130, 131, 132, 134, 138, 141, 142, 145], "4656": 130, "364": [130, 131, 132, 134, 137, 138, 141, 142, 145], "367": [130, 131, 132, 134, 137, 138, 141, 142, 145], "x0": [130, 132, 133, 145], "9968221839517355": [130, 132, 133], "03135360777378082": [130, 133], "x1": [130, 132, 133], "30847043171525": [130, 132, 133], "21179260686039925": [130, 133], "4314": 130, "6502527847737536": 130, "154531223148483": 130, "0818": 130, "47602048278586295": 130, "13155812805683098": 130, "8351": 130, "7031544591929872": 130, "842364243857716": 130, "260": [130, 131, 132, 134, 137, 138, 141, 142, 145], "abstract_facad": [130, 131, 132, 134, 137, 138, 141, 142, 145], "325": [130, 131, 132, 134, 137, 138, 141, 142, 145], "326": [130, 131, 132, 134, 137, 138, 141, 142, 145], "8351420167215506": 130, "16916": [130, 132], "__copyright__": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "copyright": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "freiburg": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "hannov": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "__license__": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "rosenbrock2d": [130, 132, 133], "add_hyperparamet": [130, 131, 132, 133, 134, 137, 138, 142], "toi": [130, 132], "commun": [130, 132], "serv": [130, 132], "x_i": [130, 132], "domain": [130, 132], "interv": [130, 132], "x2": [130, 132, 133], "__name__": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "__main__": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "synthetic_funct": 130, "300": [130, 137, 142], "default_cost": [130, 131, 132, 134, 137, 138, 141, 142, 145], "get_default_configur": [130, 131, 132, 134, 137, 138, 141, 142, 145], "148": [130, 136], "1_synthetic_funct": [130, 136], "jupyt": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148], "notebook": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148], "ipynb": [130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "mix": 131, "0667": 131, "0133": 131, "03992740880515713": 131, "2760639488343621": 131, "linear": 131, "shrink": 131, "013333333333333308": 131, "03333333333333344": 131, "incondit": [131, 137, 142], "wide": [131, 134], "benchmark": 131, "poli": 131, "sigmoid": 131, "001": [131, 137, 142], "degre": 131, "coef": 131, "coef0": 131, "auto": 131, "gamma_valu": 131, "0001": [131, 137, 142], "Then": 131, "use_degre": 131, "parent": [131, 137, 142], "use_coef": 131, "use_gamma": 131, "use_gamma_valu": 131, "add_condit": [131, 137, 142], "config_dict": 131, "get_dictionari": [131, 133], "pop": 131, "alter": 131, "2_svm_cv": [131, 136], "81": [132, 145], "700": 132, "6438": 132, "0801787059894652": 132, "6511913893559456": 132, "47": 132, "8624": 132, "6583473885830928": 132, "111401430503671": 132, "0305": 132, "4506651975280218": 132, "088687958633888": 132, "015": 132, "0947949525550253": 132, "007": 132, "1079886979440046": 132, "8767": 132, "03339964574006782": 132, "14048599749913748": 132, "0425": 132, "047461941900319715": 132, "03901845394591774": 132, "9785": 132, "2626582671851203": 132, "0030477480568205095": 132, "9197": 132, "047275199709496896": 132, "008720637513054186": 132, "9147": 132, "0061122181221975325": 132, "9061": 132, "05004738127403208": 132, "0035841079577494384": 132, "9033": 132, "050074871748897465": 132, "0005751844711898713": 132, "8483": 132, "09454179913169458": 132, "00793284890757917": 132, "8483176199500154": 132, "dataclass": 132, "minimium": 132, "assert": [132, 133], "24": [132, 136], "352": [132, 136], "3_ask_and_tel": [132, 136], "easieast": 133, "7877872130716": 133, "465623793958126": 133, "30": [133, 137, 138, 142, 145], "40": [133, 134, 137, 138, 140, 142], "03247253450727694": 133, "20629382041066968": 133, "235440563381176": 133, "03297692628862414": 133, "14425180577529417": 133, "047484356255095": 133, "__future__": [133, 138, 141, 142], "annot": [133, 138, 141, 142], "__init__": [133, 138], "trials_count": 133, "999999": 133, "4_callback": [133, 136], "layer": [134, 138, 139, 140, 148], "perceptron": [134, 138, 139, 140, 148], "mlp": [134, 137, 138, 142], "deriv": 134, "knowledg": 134, "similar": 134, "intuit": 134, "gain": 134, "categoricalhyperparamet": 134, "optimizt": 134, "stick": 134, "prior_acqusition_funct": 134, "107": 134, "8987": 134, "039": [134, 142], "logist": [134, 137, 142], "relu": [134, 137, 142], "batch_siz": [134, 137, 142], "324": 134, "128": 134, "learning_rate_init": [134, 137, 142], "1134996369914405": 134, "0010000000000000002": 134, "n_layer": [134, 137, 142], "n_neuron": [134, 137, 142], "157": 134, "108": 134, "sgd": [134, 137, 138, 142], "adam": [134, 137, 142], "0306": 134, "66": 134, "0010972380878858119": 134, "0262": 134, "0011090117979356453": 134, "026155988857938794": 134, "05787991333952347": 134, "046196224079232406": 134, "betaintegerhyperparamet": 134, "normalfloathyperparamet": 134, "uniformintegerhyperparamet": 134, "load_digit": [134, 137, 138, 142], "convergencewarn": 134, "stratifiedkfold": [134, 137, 138, 142], "neural_network": [134, 137, 142], "mlpclassifi": [134, 137, 142], "digit": [134, 137, 138, 142], "illustr": [134, 137], "educ": 134, "beforehand": 134, "believ": 134, "rel": 134, "And": 134, "skew": 134, "toward": 134, "wider": 134, "256": [134, 137, 142], "alpha": [134, 138, 141], "60": 134, "tanh": [134, 137, 142], "default_valu": 134, "moreov": 134, "opinion": 134, "batch": [134, 137], "leav": 134, "512": 134, "center": 134, "catch_warn": [134, 137, 138, 142], "filterwarn": [134, 137, 138, 142], "categori": 134, "hidden_layer_s": [134, 137, 142], "solver": [134, 137, 142], "max_it": [134, 137, 138, 142], "fold": [134, 137, 142], "n_split": [134, 137, 138, 142], "error_scor": [134, 137, 142], "default_config": 134, "conduct": 134, "proven": 134, "822": [134, 136], "5_prior": [134, 136], "synthet": [135, 136, 148], "02": 136, "654": 136, "examples_1_bas": 136, "00": [136, 137, 138, 140, 144, 147], "04": 136, "123": [137, 138], "197": [137, 138], "25": 137, "abstract_parallel_intensifi": [137, 138], "93": [137, 138], "hyperband_work": [137, 138], "165": [137, 138], "successive_halving_work": [137, 138], "396": [137, 138], "613": 137, "0495": 137, "0568": 137, "3333": [137, 141], "155": 137, "006677306766018313": 137, "56": 137, "lbfg": [137, 142], "245": [137, 138], "33": [137, 142], "0345": 137, "0384": 137, "0000": 137, "117": 137, "008282754423021153": 137, "0228": 137, "67": [137, 138], "0070322204321926806": 137, "022819560507582937": 137, "4307319715258433": 137, "025598885793871817": 137, "equalscondit": [137, 142], "invscal": [137, 138, 142], "restrict": 137, "use_lr": [137, 142], "use_lr_init": [137, 142], "use_batch_s": [137, 142], "deactiv": 137, "virtu": 137, "placehold": 137, "lr": [137, 142], "lr_init": [137, 142], "ceil": [137, 142], "43": [137, 140], "418": [137, 140], "1_mlp_epoch": [137, 140], "wlog": 138, "had": 138, "binari": 138, "longer": 138, "217": 138, "0137": 138, "0164": 138, "5488135039273248": 138, "11827442586893322": 138, "eta0": 138, "0006273927602293597": 138, "614170248896958e": 138, "l1_ratio": 138, "317983179393976": 138, "24875314351995803": 138, "27": 138, "008231389269086701": 138, "13423167867113728": 138, "007983889335257179": 138, "itertool": 138, "linear_model": 138, "sgdclassifi": 138, "digitsdataset": 138, "_data": 138, "get_inst": 138, "classa": 138, "classb": 138, "target_nam": 138, "get_instance_featur": 138, "get_instance_data": 138, "logical_or": 138, "00001": 138, "clf": 138, "penalti": 138, "elasticnet": 138, "early_stop": 138, "078": [138, 140], "2_sgd_dataset": [138, 140], "stochast": [139, 140, 148], "descent": [139, 140, 148], "23": 140, "496": 140, "examples_2_multi_fidel": 140, "shown": [141, 142], "5888": 141, "9324859157204628": 141, "3451112993061543": 141, "2725": 141, "3448614852608838": 141, "2724": 141, "3442250183165956": 141, "344081913330525": 141, "3439457083376847": 141, "2723": 141, "3436009486299065": 141, "343062445203584": 141, "3430038657074754": 141, "2722": 141, "3423393633152223": 141, "3423268024390436": 141, "2721": 141, "3411748493907347": 141, "3408257098322904": 141, "264": 141, "154695986884652": 141, "1581912672166585": 141, "2639": 141, "1828007982514523": 141, "1749832250073124": 141, "1748448120914996": 141, "1727127330103513": 141, "1727241873269154": 141, "1730755740919152": 141, "1731571705331119": 141, "173596954335133": 141, "2491": 141, "2502": 141, "246831324420453": 141, "249": 141, "2449620779189017": 141, "2402": 141, "2404": 141, "2844793813252284": 141, "2844462259462253": 141, "283467969854264": 141, "282275260385982": 141, "273756633456062": 141, "2738847990089424": 141, "273934858702745": 141, "2308": 141, "2309": 141, "2837994656468243": 141, "2307": 141, "3252147956587637": 141, "317594589544663": 141, "309332009537401": 141, "3083895672738888": 141, "2306": 141, "3070641795200197": 141, "23064995052356516": 141, "70841677": 141, "48016005": 141, "matplotlib": [141, 142], "pyplot": [141, 142], "plt": [141, 142], "metric1": 141, "metric2": 141, "all_x": 141, "figur": 141, "scatter": [141, 142], "blue": 141, "zorder": 141, "3000": 141, "vline": 141, "linestyl": [141, 142], "dash": 141, "color": 141, "red": [141, 142], "hline": 141, "plot_from_smac": 141, "rh": 141, "trial_kei": 141, "150": 141, "twice": 141, "41": [141, 144], "405": [141, 144], "1_schaffer": [141, 144], "highlight": 142, "ones": 142, "three": 142, "target_function_runn": 142, "71": 142, "5752": 142, "2876": 142, "4975": 142, "5459": 142, "77": 142, "000534923804864797": 142, "146": 142, "3595": 142, "3884": 142, "3657": 142, "3908": 142, "175": 142, "004156370184967407": 142, "90": 142, "0603": 142, "1351": 142, "141": 142, "006059975154896551": 142, "85": 142, "0658": 142, "0711": 142, "152": 142, "01686439589448861": 142, "0074": 142, "0149": 142, "027476010811980665": 142, "89": 142, "0271": 142, "236": 142, "01843859742297543": 142, "033710767389245035": 142, "62956618": 142, "24055131": 142, "2497313": 142, "89092902": 142, "21923788": 142, "03320695": 142, "83661977": 142, "04433457": 142, "45586928": 142, "03617611": 142, "47741914": 142, "03506087": 142, "45976194": 142, "05267977": 142, "37734636": 142, "start_tim": 142, "plot_pareto": 142, "pareto_cost": 142, "bit": 142, "argsort": 142, "vstack": 142, "costs_x": 142, "costs_i": 142, "x_upper": 142, "y_upper": 142, "pareto_costs_x": 142, "pareto_costs_i": 142, "marker": 142, "tolist": 142, "titl": [142, 149], "xlabel": 142, "ylabel": 142, "mind": 142, "enumer": 142, "459": [142, 144], "2_parego": [142, 144], "schaffer": [143, 144, 148], "31": 144, "864": 144, "examples_3_multi_object": 144, "content": 145, "everyth": 145, "267": 145, "244": 145, "243": 145, "242": 145, "241": 145, "136": [145, 147], "1_call_target_function_script": [145, 147], "examples_5_commandlin": 147, "were": 148, "varieti": 148, "examples_python": 148, "zip": 148, "examples_jupyt": 148, "Its": 149, "cite": 149, "inproceed": 149, "lindauer": 149, "arxiv21a": 149, "author": 149, "mariu": 149, "katharina": 149, "eggensperg": 149, "matthia": 149, "feurer": 149, "andr\u00e9": 149, "biedenkapp": 149, "difan": 149, "deng": 149, "carolin": 149, "benjamin": 149, "tim": 149, "ruhkopf": 149, "ren\u00e9": 149, "sass": 149, "frank": 149, "versatil": 149, "booktitl": 149, "2109": 149, "09831": 149, "year": 149, "url": 149, "ab": 149, "hoo": 149, "h": 149, "leyton": 149, "brown": 149, "confer": 149, "intellig": 149, "lion": 149, "develop": 149, "visit": 149, "guidelin": 149}, "objects": {"smac": [[20, 0, 0, "-", "acquisition"], [36, 0, 0, "-", "callback"], [37, 0, 0, "-", "facade"], [46, 0, 0, "-", "initial_design"], [53, 0, 0, "-", "intensifier"], [62, 0, 0, "-", "main"], [67, 0, 0, "-", "model"], [91, 0, 0, "-", "multi_objective"], [95, 0, 0, "-", "random_design"], [100, 0, 0, "-", "runhistory"], [114, 0, 0, "-", "runner"], [121, 0, 0, "-", "scenario"], [122, 0, 0, "-", "utils"]], "smac.acquisition": [[21, 0, 0, "-", "function"], [29, 0, 0, "-", "maximizer"]], "smac.acquisition.function": [[21, 1, 1, "", "AbstractAcquisitionFunction"], [21, 1, 1, "", "EI"], [21, 1, 1, "", "EIPS"], [21, 1, 1, "", "IntegratedAcquisitionFunction"], [21, 1, 1, "", "LCB"], [21, 1, 1, "", "PI"], [21, 1, 1, "", "PriorAcquisitionFunction"], [21, 1, 1, "", "TS"], [22, 0, 0, "-", "abstract_acquisition_function"], [23, 0, 0, "-", "confidence_bound"], [24, 0, 0, "-", "expected_improvement"], [25, 0, 0, "-", "integrated_acquisition_function"], [26, 0, 0, "-", "prior_acqusition_function"], [27, 0, 0, "-", "probability_improvement"], [28, 0, 0, "-", "thompson"]], "smac.acquisition.function.AbstractAcquisitionFunction": [[21, 2, 1, "", "__call__"], [21, 3, 1, "", "meta"], [21, 3, 1, "", "model"], [21, 3, 1, "", "name"], [21, 2, 1, "", "update"]], "smac.acquisition.function.EI": [[21, 3, 1, "", "meta"], [21, 3, 1, "", "name"]], "smac.acquisition.function.EIPS": [[21, 3, 1, "", "name"]], "smac.acquisition.function.IntegratedAcquisitionFunction": [[21, 3, 1, "", "meta"], [21, 3, 1, "", "name"]], "smac.acquisition.function.LCB": [[21, 3, 1, "", "meta"], [21, 3, 1, "", "name"]], "smac.acquisition.function.PI": [[21, 3, 1, "", "meta"], [21, 3, 1, "", "name"]], "smac.acquisition.function.PriorAcquisitionFunction": [[21, 3, 1, "", "meta"], [21, 3, 1, "", "model"], [21, 3, 1, "", "name"]], "smac.acquisition.function.TS": [[21, 3, 1, "", "name"]], "smac.acquisition.function.abstract_acquisition_function": [[22, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction": [[22, 2, 1, "", "__call__"], [22, 3, 1, "", "meta"], [22, 3, 1, "", "model"], [22, 3, 1, "", "name"], [22, 2, 1, "", "update"]], "smac.acquisition.function.confidence_bound": [[23, 1, 1, "", "LCB"]], "smac.acquisition.function.confidence_bound.LCB": [[23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement": [[24, 1, 1, "", "EI"], [24, 1, 1, "", "EIPS"]], "smac.acquisition.function.expected_improvement.EI": [[24, 3, 1, "", "meta"], [24, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement.EIPS": [[24, 3, 1, "", "name"]], "smac.acquisition.function.integrated_acquisition_function": [[25, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction": [[25, 3, 1, "", "meta"], [25, 3, 1, "", "name"]], "smac.acquisition.function.prior_acqusition_function": [[26, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction": [[26, 3, 1, "", "meta"], [26, 3, 1, "", "model"], [26, 3, 1, "", "name"]], "smac.acquisition.function.probability_improvement": [[27, 1, 1, "", "PI"]], "smac.acquisition.function.probability_improvement.PI": [[27, 3, 1, "", "meta"], [27, 3, 1, "", "name"]], "smac.acquisition.function.thompson": [[28, 1, 1, "", "TS"]], "smac.acquisition.function.thompson.TS": [[28, 3, 1, "", "name"]], "smac.acquisition.maximizer": [[29, 1, 1, "", "AbstractAcquisitionMaximizer"], [29, 1, 1, "", "DifferentialEvolution"], [29, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [29, 1, 1, "", "LocalAndSortedRandomSearch"], [29, 1, 1, "", "LocalSearch"], [29, 1, 1, "", "RandomSearch"], [30, 0, 0, "-", "abstract_acqusition_maximizer"], [31, 0, 0, "-", "differential_evolution"], [32, 0, 0, "-", "helpers"], [33, 0, 0, "-", "local_and_random_search"], [34, 0, 0, "-", "local_search"], [35, 0, 0, "-", "random_search"]], "smac.acquisition.maximizer.AbstractAcquisitionMaximizer": [[29, 3, 1, "", "acquisition_function"], [29, 2, 1, "", "maximize"], [29, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalAndSortedRandomSearch": [[29, 3, 1, "", "acquisition_function"], [29, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalSearch": [[29, 3, 1, "", "meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[30, 1, 1, "", "AbstractAcquisitionMaximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer": [[30, 3, 1, "", "acquisition_function"], [30, 2, 1, "", "maximize"], [30, 3, 1, "", "meta"]], "smac.acquisition.maximizer.differential_evolution": [[31, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.maximizer.helpers": [[32, 1, 1, "", "ChallengerList"]], "smac.acquisition.maximizer.local_and_random_search": [[33, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [33, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch": [[33, 3, 1, "", "acquisition_function"], [33, 3, 1, "", "meta"]], "smac.acquisition.maximizer.local_search": [[34, 1, 1, "", "LocalSearch"]], "smac.acquisition.maximizer.local_search.LocalSearch": [[34, 3, 1, "", "meta"]], "smac.acquisition.maximizer.random_search": [[35, 1, 1, "", "RandomSearch"]], "smac.callback": [[36, 1, 1, "", "Callback"]], "smac.callback.Callback": [[36, 2, 1, "", "on_ask_end"], [36, 2, 1, "", "on_ask_start"], [36, 2, 1, "", "on_end"], [36, 2, 1, "", "on_iteration_end"], [36, 2, 1, "", "on_iteration_start"], [36, 2, 1, "", "on_next_configurations_end"], [36, 2, 1, "", "on_next_configurations_start"], [36, 2, 1, "", "on_start"], [36, 2, 1, "", "on_tell_end"], [36, 2, 1, "", "on_tell_start"]], "smac.facade": [[37, 1, 1, "", "AbstractFacade"], [37, 1, 1, "", "AlgorithmConfigurationFacade"], [37, 1, 1, "", "BlackBoxFacade"], [37, 1, 1, "", "HyperbandFacade"], [37, 1, 1, "", "HyperparameterOptimizationFacade"], [37, 1, 1, "", "MultiFidelityFacade"], [37, 1, 1, "", "RandomFacade"], [38, 0, 0, "-", "abstract_facade"], [39, 0, 0, "-", "algorithm_configuration_facade"], [40, 0, 0, "-", "blackbox_facade"], [41, 0, 0, "-", "boing_facade"], [42, 0, 0, "-", "hyperband_facade"], [43, 0, 0, "-", "hyperparameter_optimization_facade"], [44, 0, 0, "-", "multi_fidelity_facade"], [45, 0, 0, "-", "random_facade"]], "smac.facade.AbstractFacade": [[37, 2, 1, "", "ask"], [37, 2, 1, "", "get_acquisition_function"], [37, 2, 1, "", "get_acquisition_maximizer"], [37, 2, 1, "", "get_initial_design"], [37, 2, 1, "", "get_intensifier"], [37, 2, 1, "", "get_model"], [37, 2, 1, "", "get_multi_objective_algorithm"], [37, 2, 1, "", "get_next_configurations"], [37, 2, 1, "", "get_random_design"], [37, 2, 1, "", "get_runhistory_encoder"], [37, 2, 1, "", "get_target_function_budgets"], [37, 2, 1, "", "get_target_function_instances"], [37, 2, 1, "", "get_target_function_seeds"], [37, 3, 1, "", "incumbent"], [37, 3, 1, "", "meta"], [37, 2, 1, "", "optimize"], [37, 3, 1, "", "runhistory"], [37, 3, 1, "", "scenario"], [37, 3, 1, "", "stats"], [37, 2, 1, "", "tell"], [37, 2, 1, "", "validate"]], "smac.facade.AlgorithmConfigurationFacade": [[37, 2, 1, "", "get_acquisition_function"], [37, 2, 1, "", "get_acquisition_maximizer"], [37, 2, 1, "", "get_initial_design"], [37, 2, 1, "", "get_intensifier"], [37, 2, 1, "", "get_model"], [37, 2, 1, "", "get_multi_objective_algorithm"], [37, 2, 1, "", "get_random_design"], [37, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.BlackBoxFacade": [[37, 2, 1, "", "get_acquisition_function"], [37, 2, 1, "", "get_acquisition_maximizer"], [37, 2, 1, "", "get_initial_design"], [37, 2, 1, "", "get_intensifier"], [37, 2, 1, "", "get_kernel"], [37, 2, 1, "", "get_model"], [37, 2, 1, "", "get_multi_objective_algorithm"], [37, 2, 1, "", "get_random_design"], [37, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.HyperbandFacade": [[37, 2, 1, "", "get_intensifier"]], "smac.facade.HyperparameterOptimizationFacade": [[37, 2, 1, "", "get_acquisition_function"], [37, 2, 1, "", "get_acquisition_maximizer"], [37, 2, 1, "", "get_initial_design"], [37, 2, 1, "", "get_intensifier"], [37, 2, 1, "", "get_model"], [37, 2, 1, "", "get_multi_objective_algorithm"], [37, 2, 1, "", "get_random_design"], [37, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.MultiFidelityFacade": [[37, 2, 1, "", "get_initial_design"], [37, 2, 1, "", "get_intensifier"]], "smac.facade.RandomFacade": [[37, 2, 1, "", "get_acquisition_function"], [37, 2, 1, "", "get_acquisition_maximizer"], [37, 2, 1, "", "get_initial_design"], [37, 2, 1, "", "get_intensifier"], [37, 2, 1, "", "get_model"], [37, 2, 1, "", "get_multi_objective_algorithm"], [37, 2, 1, "", "get_random_design"], [37, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.abstract_facade": [[38, 1, 1, "", "AbstractFacade"]], "smac.facade.abstract_facade.AbstractFacade": [[38, 2, 1, "", "ask"], [38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_next_configurations"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"], [38, 2, 1, "", "get_target_function_budgets"], [38, 2, 1, "", "get_target_function_instances"], [38, 2, 1, "", "get_target_function_seeds"], [38, 3, 1, "", "incumbent"], [38, 3, 1, "", "meta"], [38, 2, 1, "", "optimize"], [38, 3, 1, "", "runhistory"], [38, 3, 1, "", "scenario"], [38, 3, 1, "", "stats"], [38, 2, 1, "", "tell"], [38, 2, 1, "", "validate"]], "smac.facade.algorithm_configuration_facade": [[39, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade": [[39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[40, 1, 1, "", "BlackBoxFacade"]], "smac.facade.blackbox_facade.BlackBoxFacade": [[40, 2, 1, "", "get_acquisition_function"], [40, 2, 1, "", "get_acquisition_maximizer"], [40, 2, 1, "", "get_initial_design"], [40, 2, 1, "", "get_intensifier"], [40, 2, 1, "", "get_kernel"], [40, 2, 1, "", "get_model"], [40, 2, 1, "", "get_multi_objective_algorithm"], [40, 2, 1, "", "get_random_design"], [40, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.hyperband_facade": [[42, 1, 1, "", "HyperbandFacade"]], "smac.facade.hyperband_facade.HyperbandFacade": [[42, 2, 1, "", "get_intensifier"]], "smac.facade.hyperparameter_optimization_facade": [[43, 1, 1, "", "HyperparameterOptimizationFacade"]], "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade": [[43, 2, 1, "", "get_acquisition_function"], [43, 2, 1, "", "get_acquisition_maximizer"], [43, 2, 1, "", "get_initial_design"], [43, 2, 1, "", "get_intensifier"], [43, 2, 1, "", "get_model"], [43, 2, 1, "", "get_multi_objective_algorithm"], [43, 2, 1, "", "get_random_design"], [43, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.multi_fidelity_facade": [[44, 1, 1, "", "MultiFidelityFacade"]], "smac.facade.multi_fidelity_facade.MultiFidelityFacade": [[44, 2, 1, "", "get_initial_design"], [44, 2, 1, "", "get_intensifier"]], "smac.facade.random_facade": [[45, 1, 1, "", "RandomFacade"]], "smac.facade.random_facade.RandomFacade": [[45, 2, 1, "", "get_acquisition_function"], [45, 2, 1, "", "get_acquisition_maximizer"], [45, 2, 1, "", "get_initial_design"], [45, 2, 1, "", "get_intensifier"], [45, 2, 1, "", "get_model"], [45, 2, 1, "", "get_multi_objective_algorithm"], [45, 2, 1, "", "get_random_design"], [45, 2, 1, "", "get_runhistory_encoder"]], "smac.initial_design": [[46, 1, 1, "", "AbstractInitialDesign"], [46, 1, 1, "", "DefaultInitialDesign"], [46, 1, 1, "", "FactorialInitialDesign"], [46, 1, 1, "", "LatinHypercubeInitialDesign"], [46, 1, 1, "", "RandomInitialDesign"], [46, 1, 1, "", "SobolInitialDesign"], [47, 0, 0, "-", "abstract_initial_design"], [48, 0, 0, "-", "default_design"], [49, 0, 0, "-", "factorial_design"], [50, 0, 0, "-", "latin_hypercube_design"], [51, 0, 0, "-", "random_design"], [52, 0, 0, "-", "sobol_design"]], "smac.initial_design.AbstractInitialDesign": [[46, 3, 1, "", "meta"], [46, 2, 1, "", "select_configurations"]], "smac.initial_design.abstract_initial_design": [[47, 1, 1, "", "AbstractInitialDesign"]], "smac.initial_design.abstract_initial_design.AbstractInitialDesign": [[47, 3, 1, "", "meta"], [47, 2, 1, "", "select_configurations"]], "smac.initial_design.default_design": [[48, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[49, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[50, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.random_design": [[51, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[52, 1, 1, "", "SobolInitialDesign"]], "smac.intensifier": [[53, 1, 1, "", "AbstractIntensifier"], [53, 1, 1, "", "AbstractParallelIntensifier"], [53, 1, 1, "", "Hyperband"], [53, 1, 1, "", "Intensifier"], [53, 1, 1, "", "SuccessiveHalving"], [54, 0, 0, "-", "abstract_intensifier"], [55, 0, 0, "-", "abstract_parallel_intensifier"], [56, 0, 0, "-", "hyperband"], [57, 0, 0, "-", "hyperband_worker"], [58, 0, 0, "-", "intensifier"], [59, 0, 0, "-", "stages"], [60, 0, 0, "-", "successive_halving"], [61, 0, 0, "-", "successive_halving_worker"]], "smac.intensifier.AbstractIntensifier": [[53, 2, 1, "", "get_next_trial"], [53, 2, 1, "", "get_target_function_budgets"], [53, 2, 1, "", "get_target_function_instances"], [53, 2, 1, "", "get_target_function_seeds"], [53, 3, 1, "", "iteration_done"], [53, 3, 1, "", "meta"], [53, 3, 1, "", "num_trials"], [53, 2, 1, "", "process_results"], [53, 3, 1, "", "repeat_configs"], [53, 3, 1, "", "uses_budgets"], [53, 3, 1, "", "uses_instances"], [53, 3, 1, "", "uses_seeds"]], "smac.intensifier.AbstractParallelIntensifier": [[53, 2, 1, "", "get_next_trial"], [53, 2, 1, "", "process_results"], [53, 3, 1, "", "uses_seeds"]], "smac.intensifier.Intensifier": [[53, 2, 1, "", "get_next_challenger"], [53, 2, 1, "", "get_next_trial"], [53, 2, 1, "", "get_target_function_budgets"], [53, 2, 1, "", "get_target_function_instances"], [53, 2, 1, "", "get_target_function_seeds"], [53, 3, 1, "", "intensify_percentage"], [53, 3, 1, "", "meta"], [53, 2, 1, "", "process_results"], [53, 3, 1, "", "uses_budgets"], [53, 3, 1, "", "uses_instances"], [53, 3, 1, "", "uses_seeds"]], "smac.intensifier.SuccessiveHalving": [[53, 2, 1, "", "calculate_budgets"], [53, 2, 1, "", "get_target_function_budgets"], [53, 2, 1, "", "get_target_function_instances"], [53, 2, 1, "", "get_target_function_seeds"], [53, 3, 1, "", "meta"], [53, 3, 1, "", "uses_budgets"], [53, 3, 1, "", "uses_instances"]], "smac.intensifier.abstract_intensifier": [[54, 1, 1, "", "AbstractIntensifier"]], "smac.intensifier.abstract_intensifier.AbstractIntensifier": [[54, 2, 1, "", "get_next_trial"], [54, 2, 1, "", "get_target_function_budgets"], [54, 2, 1, "", "get_target_function_instances"], [54, 2, 1, "", "get_target_function_seeds"], [54, 3, 1, "", "iteration_done"], [54, 3, 1, "", "meta"], [54, 3, 1, "", "num_trials"], [54, 2, 1, "", "process_results"], [54, 3, 1, "", "repeat_configs"], [54, 3, 1, "", "uses_budgets"], [54, 3, 1, "", "uses_instances"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.abstract_parallel_intensifier": [[55, 1, 1, "", "AbstractParallelIntensifier"]], "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier": [[55, 2, 1, "", "get_next_trial"], [55, 2, 1, "", "process_results"], [55, 3, 1, "", "uses_seeds"]], "smac.intensifier.hyperband": [[56, 1, 1, "", "Hyperband"]], "smac.intensifier.hyperband_worker": [[57, 1, 1, "", "HyperbandWorker"]], "smac.intensifier.hyperband_worker.HyperbandWorker": [[57, 2, 1, "", "get_next_trial"], [57, 2, 1, "", "process_results"], [57, 3, 1, "", "uses_budgets"], [57, 3, 1, "", "uses_instances"], [57, 3, 1, "", "uses_seeds"]], "smac.intensifier.intensifier": [[58, 1, 1, "", "Intensifier"]], "smac.intensifier.intensifier.Intensifier": [[58, 2, 1, "", "get_next_challenger"], [58, 2, 1, "", "get_next_trial"], [58, 2, 1, "", "get_target_function_budgets"], [58, 2, 1, "", "get_target_function_instances"], [58, 2, 1, "", "get_target_function_seeds"], [58, 3, 1, "", "intensify_percentage"], [58, 3, 1, "", "meta"], [58, 2, 1, "", "process_results"], [58, 3, 1, "", "uses_budgets"], [58, 3, 1, "", "uses_instances"], [58, 3, 1, "", "uses_seeds"]], "smac.intensifier.stages": [[59, 1, 1, "", "IntensifierStage"]], "smac.intensifier.successive_halving": [[60, 1, 1, "", "SuccessiveHalving"]], "smac.intensifier.successive_halving.SuccessiveHalving": [[60, 2, 1, "", "calculate_budgets"], [60, 2, 1, "", "get_target_function_budgets"], [60, 2, 1, "", "get_target_function_instances"], [60, 2, 1, "", "get_target_function_seeds"], [60, 3, 1, "", "meta"], [60, 3, 1, "", "uses_budgets"], [60, 3, 1, "", "uses_instances"]], "smac.intensifier.successive_halving_worker": [[61, 1, 1, "", "SuccessiveHalvingWorker"]], "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker": [[61, 2, 1, "", "get_next_trial"], [61, 2, 1, "", "get_target_function_budgets"], [61, 2, 1, "", "get_target_function_instances"], [61, 2, 1, "", "get_target_function_seeds"], [61, 2, 1, "", "process_results"], [61, 3, 1, "", "stage"], [61, 3, 1, "", "uses_budgets"], [61, 3, 1, "", "uses_instances"], [61, 3, 1, "", "uses_seeds"]], "smac.main": [[62, 1, 1, "", "BaseSMBO"], [62, 1, 1, "", "SMBO"], [63, 0, 0, "-", "base_smbo"], [64, 0, 0, "-", "boing"], [65, 0, 0, "-", "smbo"], [66, 0, 0, "-", "turbo"]], "smac.main.BaseSMBO": [[62, 2, 1, "", "ask"], [62, 2, 1, "", "get_next_configurations"], [62, 3, 1, "", "incumbent"], [62, 2, 1, "", "optimize"], [62, 3, 1, "", "runhistory"], [62, 2, 1, "", "save"], [62, 3, 1, "", "stats"], [62, 2, 1, "", "tell"], [62, 2, 1, "", "update_acquisition_function"], [62, 2, 1, "", "update_model"], [62, 2, 1, "", "validate"]], "smac.main.SMBO": [[62, 2, 1, "", "ask"], [62, 2, 1, "", "get_next_configurations"], [62, 2, 1, "", "tell"]], "smac.main.base_smbo": [[63, 1, 1, "", "BaseSMBO"]], "smac.main.base_smbo.BaseSMBO": [[63, 2, 1, "", "ask"], [63, 2, 1, "", "get_next_configurations"], [63, 3, 1, "", "incumbent"], [63, 2, 1, "", "optimize"], [63, 3, 1, "", "runhistory"], [63, 2, 1, "", "save"], [63, 3, 1, "", "stats"], [63, 2, 1, "", "tell"], [63, 2, 1, "", "update_acquisition_function"], [63, 2, 1, "", "update_model"], [63, 2, 1, "", "validate"]], "smac.main.smbo": [[65, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[65, 2, 1, "", "ask"], [65, 2, 1, "", "get_next_configurations"], [65, 2, 1, "", "tell"]], "smac.model": [[67, 1, 1, "", "AbstractModel"], [67, 1, 1, "", "MultiObjectiveModel"], [67, 1, 1, "", "RandomModel"], [68, 0, 0, "-", "abstract_model"], [69, 0, 0, "-", "gaussian_process"], [86, 0, 0, "-", "multi_objective_model"], [87, 0, 0, "-", "random_forest"], [90, 0, 0, "-", "random_model"]], "smac.model.AbstractModel": [[67, 3, 1, "", "meta"], [67, 2, 1, "", "predict"], [67, 2, 1, "", "predict_marginalized"], [67, 2, 1, "", "train"]], "smac.model.MultiObjectiveModel": [[67, 3, 1, "", "models"], [67, 2, 1, "", "predict_marginalized"]], "smac.model.abstract_model": [[68, 1, 1, "", "AbstractModel"]], "smac.model.abstract_model.AbstractModel": [[68, 3, 1, "", "meta"], [68, 2, 1, "", "predict"], [68, 2, 1, "", "predict_marginalized"], [68, 2, 1, "", "train"]], "smac.model.gaussian_process": [[69, 1, 1, "", "AbstractGaussianProcess"], [69, 1, 1, "", "GaussianProcess"], [69, 1, 1, "", "MCMCGaussianProcess"], [70, 0, 0, "-", "abstract_gaussian_process"], [71, 0, 0, "-", "gaussian_process"], [72, 0, 0, "-", "gpytorch_gaussian_process"], [73, 0, 0, "-", "kernels"], [79, 0, 0, "-", "mcmc_gaussian_process"], [80, 0, 0, "-", "priors"]], "smac.model.gaussian_process.AbstractGaussianProcess": [[69, 3, 1, "", "meta"]], "smac.model.gaussian_process.GaussianProcess": [[69, 3, 1, "", "meta"], [69, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.MCMCGaussianProcess": [[69, 3, 1, "", "meta"], [69, 3, 1, "", "models"]], "smac.model.gaussian_process.abstract_gaussian_process": [[70, 1, 1, "", "AbstractGaussianProcess"]], "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess": [[70, 3, 1, "", "meta"]], "smac.model.gaussian_process.gaussian_process": [[71, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[71, 3, 1, "", "meta"], [71, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.kernels": [[73, 1, 1, "", "AbstractKernel"], [73, 1, 1, "", "ConstantKernel"], [73, 1, 1, "", "HammingKernel"], [73, 1, 1, "", "MaternKernel"], [73, 1, 1, "", "ProductKernel"], [73, 1, 1, "", "RBFKernel"], [73, 1, 1, "", "SumKernel"], [73, 1, 1, "", "WhiteKernel"], [74, 0, 0, "-", "base_kernels"], [75, 0, 0, "-", "hamming_kernel"], [76, 0, 0, "-", "matern_kernel"], [77, 0, 0, "-", "rbf_kernel"], [78, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.AbstractKernel": [[73, 2, 1, "", "__call__"], [73, 2, 1, "", "get_params"], [73, 4, 1, "", "has_conditions"], [73, 3, 1, "", "hyperparameters"], [73, 3, 1, "", "meta"], [73, 3, 1, "", "n_dims"], [73, 4, 1, "", "operate_on"], [73, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[73, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.HammingKernel": [[73, 3, 1, "", "hyperparameter_length_scale"], [73, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[73, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.SumKernel": [[73, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels": [[74, 1, 1, "", "AbstractKernel"], [74, 1, 1, "", "ConstantKernel"], [74, 1, 1, "", "ProductKernel"], [74, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel": [[74, 2, 1, "", "__call__"], [74, 2, 1, "", "get_params"], [74, 4, 1, "", "has_conditions"], [74, 3, 1, "", "hyperparameters"], [74, 3, 1, "", "meta"], [74, 3, 1, "", "n_dims"], [74, 4, 1, "", "operate_on"], [74, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[74, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[74, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[74, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[75, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[75, 3, 1, "", "hyperparameter_length_scale"], [75, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.matern_kernel": [[76, 1, 1, "", "MaternKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[77, 1, 1, "", "RBFKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[78, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[79, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess": [[79, 3, 1, "", "meta"], [79, 3, 1, "", "models"]], "smac.model.gaussian_process.priors": [[80, 1, 1, "", "GammaPrior"], [80, 1, 1, "", "HorseshoePrior"], [80, 1, 1, "", "LogNormalPrior"], [80, 1, 1, "", "SoftTopHatPrior"], [80, 1, 1, "", "TophatPrior"], [81, 0, 0, "-", "abstract_prior"], [82, 0, 0, "-", "gamma_prior"], [83, 0, 0, "-", "horseshoe_prior"], [84, 0, 0, "-", "log_normal_prior"], [85, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.GammaPrior": [[80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.HorseshoePrior": [[80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.LogNormalPrior": [[80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.SoftTopHatPrior": [[80, 2, 1, "", "get_gradient"], [80, 2, 1, "", "get_log_probability"], [80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.TophatPrior": [[80, 2, 1, "", "get_gradient"], [80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.abstract_prior": [[81, 1, 1, "", "AbstractPrior"]], "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior": [[81, 2, 1, "", "get_gradient"], [81, 2, 1, "", "get_log_probability"], [81, 3, 1, "", "meta"], [81, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[82, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.gamma_prior.GammaPrior": [[82, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[83, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior": [[83, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[84, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior": [[84, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[85, 1, 1, "", "SoftTopHatPrior"], [85, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[85, 2, 1, "", "get_gradient"], [85, 2, 1, "", "get_log_probability"], [85, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[85, 2, 1, "", "get_gradient"], [85, 3, 1, "", "meta"]], "smac.model.multi_objective_model": [[86, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[86, 3, 1, "", "models"], [86, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest": [[87, 1, 1, "", "AbstractRandomForest"], [87, 1, 1, "", "RandomForest"], [88, 0, 0, "-", "abstract_random_forest"], [89, 0, 0, "-", "random_forest"]], "smac.model.random_forest.RandomForest": [[87, 3, 1, "", "meta"], [87, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest.abstract_random_forest": [[88, 1, 1, "", "AbstractRandomForest"]], "smac.model.random_forest.random_forest": [[89, 1, 1, "", "RandomForest"]], "smac.model.random_forest.random_forest.RandomForest": [[89, 3, 1, "", "meta"], [89, 2, 1, "", "predict_marginalized"]], "smac.model.random_model": [[90, 1, 1, "", "RandomModel"]], "smac.multi_objective": [[91, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [91, 1, 1, "", "MeanAggregationStrategy"], [91, 1, 1, "", "ParEGO"], [92, 0, 0, "-", "abstract_multi_objective_algorithm"], [93, 0, 0, "-", "aggregation_strategy"], [94, 0, 0, "-", "parego"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[91, 2, 1, "", "__call__"], [91, 3, 1, "", "meta"], [91, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.MeanAggregationStrategy": [[91, 2, 1, "", "__call__"], [91, 3, 1, "", "meta"]], "smac.multi_objective.ParEGO": [[91, 2, 1, "", "__call__"], [91, 3, 1, "", "meta"], [91, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[92, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[92, 2, 1, "", "__call__"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.aggregation_strategy": [[93, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[93, 2, 1, "", "__call__"], [93, 3, 1, "", "meta"]], "smac.multi_objective.parego": [[94, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[94, 2, 1, "", "__call__"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "update_on_iteration_start"]], "smac.random_design": [[95, 1, 1, "", "AbstractRandomDesign"], [95, 1, 1, "", "CosineAnnealingRandomDesign"], [95, 1, 1, "", "DynamicModulusRandomDesign"], [95, 1, 1, "", "DynamicProbabilityRandomDesign"], [95, 1, 1, "", "ModulusRandomDesign"], [95, 1, 1, "", "ProbabilityRandomDesign"], [96, 0, 0, "-", "abstract_random_design"], [97, 0, 0, "-", "annealing_design"], [98, 0, 0, "-", "modulus_design"], [99, 0, 0, "-", "probability_design"]], "smac.random_design.AbstractRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "next_iteration"]], "smac.random_design.CosineAnnealingRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicModulusRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicProbabilityRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "next_iteration"]], "smac.random_design.ModulusRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"]], "smac.random_design.ProbabilityRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"]], "smac.random_design.abstract_random_design": [[96, 1, 1, "", "AbstractRandomDesign"]], "smac.random_design.abstract_random_design.AbstractRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.annealing_design": [[97, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.annealing_design.CosineAnnealingRandomDesign": [[97, 2, 1, "", "check"], [97, 3, 1, "", "meta"], [97, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[98, 1, 1, "", "DynamicModulusRandomDesign"], [98, 1, 1, "", "ModulusRandomDesign"]], "smac.random_design.modulus_design.DynamicModulusRandomDesign": [[98, 2, 1, "", "check"], [98, 3, 1, "", "meta"], [98, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.ModulusRandomDesign": [[98, 2, 1, "", "check"], [98, 3, 1, "", "meta"]], "smac.random_design.probability_design": [[99, 1, 1, "", "DynamicProbabilityRandomDesign"], [99, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.DynamicProbabilityRandomDesign": [[99, 2, 1, "", "check"], [99, 3, 1, "", "meta"], [99, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[99, 2, 1, "", "check"], [99, 3, 1, "", "meta"]], "smac.runhistory": [[100, 1, 1, "", "DataOrigin"], [100, 1, 1, "", "InstanceSeedBudgetKey"], [100, 1, 1, "", "InstanceSeedKey"], [100, 1, 1, "", "RunHistory"], [100, 1, 1, "", "StatusType"], [100, 1, 1, "", "TrialInfo"], [100, 1, 1, "", "TrialInfoIntent"], [100, 1, 1, "", "TrialKey"], [100, 1, 1, "", "TrialValue"], [101, 0, 0, "-", "dataclasses"], [102, 0, 0, "-", "encoder"], [112, 0, 0, "-", "enumerations"], [113, 0, 0, "-", "runhistory"]], "smac.runhistory.RunHistory": [[100, 2, 1, "", "__contains__"], [100, 2, 1, "", "__eq__"], [100, 2, 1, "", "__getitem__"], [100, 2, 1, "", "__iter__"], [100, 2, 1, "", "__len__"], [100, 2, 1, "", "add"], [100, 2, 1, "", "average_cost"], [100, 3, 1, "", "config_ids"], [100, 2, 1, "", "empty"], [100, 2, 1, "", "get_config"], [100, 2, 1, "", "get_configs"], [100, 2, 1, "", "get_configs_per_budget"], [100, 2, 1, "", "get_cost"], [100, 2, 1, "", "get_incumbent"], [100, 2, 1, "", "get_min_cost"], [100, 2, 1, "", "get_pareto_front"], [100, 2, 1, "", "get_trials"], [100, 3, 1, "", "ids_config"], [100, 2, 1, "", "incremental_update_cost"], [100, 2, 1, "", "load_json"], [100, 2, 1, "", "min_cost"], [100, 3, 1, "", "multi_objective_algorithm"], [100, 3, 1, "", "objective_bounds"], [100, 2, 1, "", "reset"], [100, 2, 1, "", "save_json"], [100, 2, 1, "", "sum_cost"], [100, 2, 1, "", "update"], [100, 2, 1, "", "update_cost"], [100, 2, 1, "", "update_costs"], [100, 2, 1, "", "update_from_json"]], "smac.runhistory.dataclasses": [[101, 1, 1, "", "InstanceSeedBudgetKey"], [101, 1, 1, "", "InstanceSeedKey"], [101, 1, 1, "", "TrajectoryItem"], [101, 1, 1, "", "TrialInfo"], [101, 1, 1, "", "TrialKey"], [101, 1, 1, "", "TrialValue"]], "smac.runhistory.encoder": [[102, 1, 1, "", "AbstractRunHistoryEncoder"], [102, 1, 1, "", "RunHistoryEIPSEncoder"], [102, 1, 1, "", "RunHistoryEncoder"], [102, 1, 1, "", "RunHistoryInverseScaledEncoder"], [102, 1, 1, "", "RunHistoryLogEncoder"], [102, 1, 1, "", "RunHistoryLogScaledEncoder"], [102, 1, 1, "", "RunHistoryRawEncoder"], [102, 1, 1, "", "RunHistoryRawScaledEncoder"], [102, 1, 1, "", "RunHistoryScaledEncoder"], [102, 1, 1, "", "RunHistorySqrtScaledEncoder"], [103, 0, 0, "-", "abstract_encoder"], [104, 0, 0, "-", "boing_encoder"], [105, 0, 0, "-", "eips_encoder"], [106, 0, 0, "-", "encoder"], [107, 0, 0, "-", "inverse_scaled_encoder"], [108, 0, 0, "-", "log_encoder"], [109, 0, 0, "-", "log_scaled_encoder"], [110, 0, 0, "-", "scaled_encoder"], [111, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[102, 2, 1, "", "get_configurations"], [102, 3, 1, "", "meta"], [102, 3, 1, "", "multi_objective_algorithm"], [102, 2, 1, "", "transform"], [102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryRawEncoder": [[102, 2, 1, "", "transform_raw_values"], [102, 2, 1, "", "transform_response_values"], [102, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.RunHistoryRawScaledEncoder": [[102, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[103, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[103, 2, 1, "", "get_configurations"], [103, 3, 1, "", "meta"], [103, 3, 1, "", "multi_objective_algorithm"], [103, 2, 1, "", "transform"], [103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[104, 1, 1, "", "RunHistoryRawEncoder"], [104, 1, 1, "", "RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder": [[104, 2, 1, "", "transform_raw_values"], [104, 2, 1, "", "transform_response_values"], [104, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder": [[104, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.eips_encoder": [[105, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[105, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[106, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[106, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[107, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder": [[107, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[108, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[108, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[109, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[109, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[110, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[110, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[111, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[111, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[112, 1, 1, "", "DataOrigin"], [112, 1, 1, "", "StatusType"], [112, 1, 1, "", "TrialInfoIntent"]], "smac.runhistory.runhistory": [[113, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[113, 2, 1, "", "__contains__"], [113, 2, 1, "", "__eq__"], [113, 2, 1, "", "__getitem__"], [113, 2, 1, "", "__iter__"], [113, 2, 1, "", "__len__"], [113, 2, 1, "", "add"], [113, 2, 1, "", "average_cost"], [113, 3, 1, "", "config_ids"], [113, 2, 1, "", "empty"], [113, 2, 1, "", "get_config"], [113, 2, 1, "", "get_configs"], [113, 2, 1, "", "get_configs_per_budget"], [113, 2, 1, "", "get_cost"], [113, 2, 1, "", "get_incumbent"], [113, 2, 1, "", "get_min_cost"], [113, 2, 1, "", "get_pareto_front"], [113, 2, 1, "", "get_trials"], [113, 3, 1, "", "ids_config"], [113, 2, 1, "", "incremental_update_cost"], [113, 2, 1, "", "load_json"], [113, 2, 1, "", "min_cost"], [113, 3, 1, "", "multi_objective_algorithm"], [113, 3, 1, "", "objective_bounds"], [113, 2, 1, "", "reset"], [113, 2, 1, "", "save_json"], [113, 2, 1, "", "sum_cost"], [113, 2, 1, "", "update"], [113, 2, 1, "", "update_cost"], [113, 2, 1, "", "update_costs"], [113, 2, 1, "", "update_from_json"]], "smac.runner": [[114, 1, 1, "", "AbstractRunner"], [114, 1, 1, "", "DaskParallelRunner"], [114, 5, 1, "", "FirstRunCrashedException"], [114, 5, 1, "", "TargetAlgorithmAbortException"], [114, 1, 1, "", "TargetFunctionRunner"], [115, 0, 0, "-", "abstract_runner"], [116, 0, 0, "-", "dask_runner"], [117, 0, 0, "-", "exceptions"], [118, 0, 0, "-", "serial_runner"], [119, 0, 0, "-", "target_function_runner"], [120, 0, 0, "-", "target_function_script_runner"]], "smac.runner.AbstractRunner": [[114, 2, 1, "", "count_available_workers"], [114, 2, 1, "", "is_running"], [114, 2, 1, "", "iter_results"], [114, 3, 1, "", "meta"], [114, 2, 1, "", "run"], [114, 2, 1, "", "run_wrapper"], [114, 2, 1, "", "submit_trial"], [114, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[114, 2, 1, "", "__del__"], [114, 2, 1, "", "close"], [114, 2, 1, "", "count_available_workers"], [114, 2, 1, "", "is_running"], [114, 2, 1, "", "iter_results"], [114, 2, 1, "", "run"], [114, 2, 1, "", "submit_trial"], [114, 2, 1, "", "wait"]], "smac.runner.TargetFunctionRunner": [[114, 2, 1, "", "__call__"], [114, 3, 1, "", "meta"], [114, 2, 1, "", "run"]], "smac.runner.abstract_runner": [[115, 1, 1, "", "AbstractRunner"]], "smac.runner.abstract_runner.AbstractRunner": [[115, 2, 1, "", "count_available_workers"], [115, 2, 1, "", "is_running"], [115, 2, 1, "", "iter_results"], [115, 3, 1, "", "meta"], [115, 2, 1, "", "run"], [115, 2, 1, "", "run_wrapper"], [115, 2, 1, "", "submit_trial"], [115, 2, 1, "", "wait"]], "smac.runner.dask_runner": [[116, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[116, 2, 1, "", "__del__"], [116, 2, 1, "", "close"], [116, 2, 1, "", "count_available_workers"], [116, 2, 1, "", "is_running"], [116, 2, 1, "", "iter_results"], [116, 2, 1, "", "run"], [116, 2, 1, "", "submit_trial"], [116, 2, 1, "", "wait"]], "smac.runner.exceptions": [[117, 5, 1, "", "FirstRunCrashedException"], [117, 5, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.serial_runner": [[118, 1, 1, "", "SerialRunner"]], "smac.runner.serial_runner.SerialRunner": [[118, 2, 1, "", "count_available_workers"], [118, 2, 1, "", "is_running"], [118, 2, 1, "", "iter_results"], [118, 2, 1, "", "submit_trial"], [118, 2, 1, "", "wait"]], "smac.runner.target_function_runner": [[119, 1, 1, "", "TargetFunctionRunner"]], "smac.runner.target_function_runner.TargetFunctionRunner": [[119, 2, 1, "", "__call__"], [119, 3, 1, "", "meta"], [119, 2, 1, "", "run"]], "smac.runner.target_function_script_runner": [[120, 1, 1, "", "TargetFunctionScriptRunner"]], "smac.runner.target_function_script_runner.TargetFunctionScriptRunner": [[120, 2, 1, "", "__call__"], [120, 3, 1, "", "meta"], [120, 2, 1, "", "run"]], "smac.scenario": [[121, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[121, 2, 1, "", "__post_init__"], [121, 2, 1, "", "count_instance_features"], [121, 2, 1, "", "count_objectives"], [121, 2, 1, "", "load"], [121, 2, 1, "", "make_serializable"], [121, 3, 1, "", "meta"], [121, 2, 1, "", "save"]], "smac.utils": [[123, 0, 0, "-", "configspace"], [124, 0, 0, "-", "data_structures"], [125, 0, 0, "-", "logging"], [126, 0, 0, "-", "multi_objective"], [127, 0, 0, "-", "subspaces"]], "smac.utils.configspace": [[123, 6, 1, "", "convert_configurations_to_array"], [123, 6, 1, "", "get_conditional_hyperparameters"], [123, 6, 1, "", "get_types"]], "smac.utils.data_structures": [[124, 6, 1, "", "recursively_compare_dicts"]], "smac.utils.logging": [[125, 6, 1, "", "format_array"], [125, 6, 1, "", "get_logger"], [125, 6, 1, "", "setup_logging"]], "smac.utils.multi_objective": [[126, 6, 1, "", "normalize_costs"]], "smac.utils.subspaces": [[128, 0, 0, "-", "boing_subspace"], [129, 0, 0, "-", "turbo_subspace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "requir": 0, "anaconda": 0, "conda": 0, "forg": 0, "packag": 1, "overview": 1, "featur": 1, "comparison": 1, "get": 2, "start": [2, 15], "configur": 2, "space": 2, "target": [2, 15, 145], "function": [2, 10, 15, 21, 22, 23, 24, 25, 26, 27, 28, 123, 124, 125, 126, 130, 141, 145], "scenario": [2, 121], "facad": [2, 37, 38, 39, 40, 41, 42, 43, 44, 45], "minim": 3, "exampl": [3, 148], "api": 4, "refer": [4, 5], "glossari": 6, "f": 7, "A": 7, "q": 7, "licens": 8, "stop": 9, "criteria": 9, "termin": 9, "cost": 9, "threshold": 9, "compon": 10, "surrog": 10, "model": [10, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "acquisit": [10, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35], "maximi": 10, "initi": 10, "design": 10, "random": 10, "intensifi": [10, 53, 54, 55, 56, 57, 58, 59, 60, 61], "multi": [10, 11, 12, 137, 139, 143, 148], "object": [10, 12, 141, 143, 148], "algorithm": 10, "runhistori": [10, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113], "encod": [10, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "callback": [10, 36, 133], "fidel": [11, 139, 148], "optim": [11, 12, 13, 15], "across": 13, "instanc": [13, 139, 148], "ask": [14, 132], "tell": [14, 132], "interfac": [14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 146, 148], "call": [14, 15, 145], "without": 14, "multipl": [14, 137, 138], "command": [15, 146, 148], "line": [15, 146, 148], "return": 15, "parallel": 16, "continu": 17, "run": 17, "reproduc": 18, "advanc": 19, "usag": 19, "navig": 19, "smac": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "modul": [20, 21, 29, 37, 46, 53, 62, 67, 69, 73, 80, 87, 91, 95, 100, 102, 114, 122, 127], "abstract_acquisition_funct": 22, "class": [22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 68, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 120, 121], "confidence_bound": 23, "expected_improv": 24, "integrated_acquisition_funct": 25, "prior_acqusition_funct": 26, "probability_improv": 27, "thompson": 28, "maxim": [29, 30, 31, 32, 33, 34, 35], "abstract_acqusition_maxim": 30, "differential_evolut": 31, "helper": 32, "local_and_random_search": 33, "local_search": 34, "random_search": 35, "abstract_facad": 38, "algorithm_configuration_facad": 39, "blackbox_facad": 40, "boing_facad": 41, "hyperband_facad": 42, "hyperparameter_optimization_facad": 43, "multi_fidelity_facad": 44, "random_facad": 45, "initial_design": [46, 47, 48, 49, 50, 51, 52], "abstract_initial_design": 47, "default_design": 48, "factorial_design": 49, "latin_hypercube_design": 50, "random_design": [51, 95, 96, 97, 98, 99], "sobol_design": 52, "abstract_intensifi": 54, "abstract_parallel_intensifi": 55, "hyperband": 56, "hyperband_work": 57, "stage": 59, "successive_halv": 60, "successive_halving_work": 61, "main": [62, 63, 64, 65, 66], "base_smbo": 63, "bo": 64, "smbo": 65, "turbo": 66, "abstract_model": 68, "gaussian_process": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "abstract_gaussian_process": 70, "gpytorch_gaussian_process": 72, "kernel": [73, 74, 75, 76, 77, 78], "base_kernel": 74, "hamming_kernel": 75, "matern_kernel": 76, "rbf_kernel": 77, "white_kernel": 78, "mcmc_gaussian_process": 79, "prior": [80, 81, 82, 83, 84, 85, 134], "abstract_prior": 81, "gamma_prior": 82, "horseshoe_prior": 83, "log_normal_prior": 84, "tophat_prior": 85, "multi_objective_model": 86, "random_forest": [87, 88, 89], "abstract_random_forest": 88, "random_model": 90, "multi_object": [91, 92, 93, 94, 126], "abstract_multi_objective_algorithm": 92, "aggregation_strategi": 93, "parego": [94, 142], "abstract_random_design": 96, "annealing_design": 97, "modulus_design": 98, "probability_design": 99, "dataclass": 101, "abstract_encod": 103, "boing_encod": 104, "eips_encod": 105, "inverse_scaled_encod": 107, "log_encod": 108, "log_scaled_encod": 109, "scaled_encod": 110, "sqrt_scaled_encod": 111, "enumer": 112, "runner": [114, 115, 116, 117, 118, 119, 120], "abstract_runn": 115, "dask_runn": 116, "except": 117, "serial_runn": 118, "target_function_runn": 119, "target_function_script_runn": 120, "util": [122, 123, 124, 125, 126, 127, 128, 129], "configspac": 123, "data_structur": 124, "log": 125, "subspac": [127, 128, 129], "boing_subspac": 128, "turbo_subspac": 129, "synthet": 130, "support": 131, "vector": 131, "machin": 131, "cross": 131, "valid": 131, "custom": 133, "user": 134, "over": 134, "optimum": 134, "basic": [135, 148], "comput": [136, 140, 144, 147], "time": [136, 140, 144, 147], "layer": 137, "perceptron": 137, "us": 137, "epoch": 137, "stochast": 138, "gradient": 138, "descent": 138, "On": 138, "dataset": 138, "2d": 141, "schaffer": 141, "weight": 141, "from": 145, "script": 145, "home": 149, "contact": 149}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Installation": [[0, "installation"]], "Requirements": [[0, "requirements"]], "Anaconda": [[0, "anaconda"]], "Conda-forge": [[0, "conda-forge"]], "Package Overview": [[1, "package-overview"]], "Features": [[1, "features"]], "Comparison": [[1, "comparison"]], "Getting Started": [[2, "getting-started"]], "Configuration Space": [[2, "configuration-space"]], "Target Function": [[2, "target-function"]], "Scenario": [[2, "scenario"]], "Facade": [[2, "facade"]], "Minimal Example": [[3, "minimal-example"]], "API References": [[4, "api-references"]], "References": [[5, "references"]], "Glossary": [[6, "glossary"]], "F.A.Q.": [[7, "f-a-q"]], "License": [[8, "license"]], "Stopping Criteria": [[9, "stopping-criteria"]], "Termination Cost Threshold": [[9, "termination-cost-threshold"]], "Components": [[10, "components"]], "Surrogate Model": [[10, "surrogate-model"]], "Acquisition Function": [[10, "acquisition-function"]], "Acquisition Maximier": [[10, "acquisition-maximier"]], "Initial Design": [[10, "initial-design"]], "Random Design": [[10, "random-design"]], "Intensifier": [[10, "intensifier"]], "Multi-Objective Algorithm": [[10, "multi-objective-algorithm"]], "RunHistory": [[10, "runhistory"]], "RunHistory Encoder": [[10, "runhistory-encoder"]], "Callback": [[10, "callback"]], "Multi-Fidelity Optimization": [[11, "multi-fidelity-optimization"]], "Multi-Objective Optimization": [[12, "multi-objective-optimization"]], "Optimization across Instances": [[13, "optimization-across-instances"]], "Ask-and-Tell Interface": [[14, "ask-and-tell-interface"]], "Calling Tell without Ask": [[14, "calling-tell-without-ask"]], "Calling Multiple Tells": [[14, "calling-multiple-tells"]], "Command-Line Interface": [[15, "command-line-interface"], [146, "command-line-interface"], [148, "command-line-interface"]], "Call of the Target Function": [[15, "call-of-the-target-function"]], "Return of the Target Function": [[15, "return-of-the-target-function"]], "Start the Optimization": [[15, "start-the-optimization"]], "Parallelism": [[16, "parallelism"]], "Continue a Run": [[17, "continue-a-run"]], "Reproducability": [[18, "reproducability"]], "Advanced Usage": [[19, "advanced-usage"]], "Navigation": [[19, "navigation"]], "smac.acquisition": [[20, "module-smac.acquisition"]], "Interfaces": [[20, "interfaces"], [21, "interfaces"], [22, "interfaces"], [23, "interfaces"], [24, "interfaces"], [25, "interfaces"], [26, "interfaces"], [27, "interfaces"], [28, "interfaces"], [29, "interfaces"], [30, "interfaces"], [31, "interfaces"], [32, "interfaces"], [33, "interfaces"], [34, "interfaces"], [35, "interfaces"], [36, "interfaces"], [37, "interfaces"], [38, "interfaces"], [39, "interfaces"], [40, "interfaces"], [41, "interfaces"], [42, "interfaces"], [43, "interfaces"], [44, "interfaces"], [45, "interfaces"], [46, "interfaces"], [47, "interfaces"], [48, "interfaces"], [49, "interfaces"], [50, "interfaces"], [51, "interfaces"], [52, "interfaces"], [53, "interfaces"], [54, "interfaces"], [55, "interfaces"], [56, "interfaces"], [57, "interfaces"], [58, "interfaces"], [59, "interfaces"], [60, "interfaces"], [61, "interfaces"], [62, "interfaces"], [63, "interfaces"], [64, "interfaces"], [65, "interfaces"], [66, "interfaces"], [67, "interfaces"], [68, "interfaces"], [69, "interfaces"], [70, "interfaces"], [71, "interfaces"], [72, "interfaces"], [73, "interfaces"], [74, "interfaces"], [75, "interfaces"], [76, "interfaces"], [77, "interfaces"], [78, "interfaces"], [79, "interfaces"], [80, "interfaces"], [81, "interfaces"], [82, "interfaces"], [83, "interfaces"], [84, "interfaces"], [85, "interfaces"], [86, "interfaces"], [87, "interfaces"], [88, "interfaces"], [89, "interfaces"], [90, "interfaces"], [91, "interfaces"], [92, "interfaces"], [93, "interfaces"], [94, "interfaces"], [95, "interfaces"], [96, "interfaces"], [97, "interfaces"], [98, "interfaces"], [99, "interfaces"], [100, "interfaces"], [101, "interfaces"], [102, "interfaces"], [103, "interfaces"], [104, "interfaces"], [105, "interfaces"], [106, "interfaces"], [107, "interfaces"], [108, "interfaces"], [109, "interfaces"], [110, "interfaces"], [111, "interfaces"], [112, "interfaces"], [113, "interfaces"], [114, "interfaces"], [115, "interfaces"], [116, "interfaces"], [117, "interfaces"], [118, "interfaces"], [119, "interfaces"], [120, "interfaces"], [121, "interfaces"], [122, "interfaces"], [123, "interfaces"], [124, "interfaces"], [125, "interfaces"], [126, "interfaces"], [127, "interfaces"], [128, "interfaces"], [129, "interfaces"]], "Modules": [[20, "modules"], [21, "modules"], [29, "modules"], [37, "modules"], [46, "modules"], [53, "modules"], [62, "modules"], [67, "modules"], [69, "modules"], [73, "modules"], [80, "modules"], [87, "modules"], [91, "modules"], [95, "modules"], [100, "modules"], [102, "modules"], [114, "modules"], [122, "modules"], [127, "modules"]], "smac.acquisition.function": [[21, "module-smac.acquisition.function"]], "smac.acquisition.function.abstract_acquisition_function": [[22, "module-smac.acquisition.function.abstract_acquisition_function"]], "Classes": [[22, "classes"], [23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [30, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [38, "classes"], [39, "classes"], [40, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [63, "classes"], [65, "classes"], [68, "classes"], [70, "classes"], [71, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [88, "classes"], [89, "classes"], [90, "classes"], [92, "classes"], [93, "classes"], [94, "classes"], [96, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [101, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [115, "classes"], [116, "classes"], [118, "classes"], [119, "classes"], [120, "classes"], [121, "classes"]], "smac.acquisition.function.confidence_bound": [[23, "module-smac.acquisition.function.confidence_bound"]], "smac.acquisition.function.expected_improvement": [[24, "module-smac.acquisition.function.expected_improvement"]], "smac.acquisition.function.integrated_acquisition_function": [[25, "module-smac.acquisition.function.integrated_acquisition_function"]], "smac.acquisition.function.prior_acqusition_function": [[26, "module-smac.acquisition.function.prior_acqusition_function"]], "smac.acquisition.function.probability_improvement": [[27, "module-smac.acquisition.function.probability_improvement"]], "smac.acquisition.function.thompson": [[28, "module-smac.acquisition.function.thompson"]], "smac.acquisition.maximizer": [[29, "module-smac.acquisition.maximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[30, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "smac.acquisition.maximizer.differential_evolution": [[31, "module-smac.acquisition.maximizer.differential_evolution"]], "smac.acquisition.maximizer.helpers": [[32, "module-smac.acquisition.maximizer.helpers"]], "smac.acquisition.maximizer.local_and_random_search": [[33, "module-smac.acquisition.maximizer.local_and_random_search"]], "smac.acquisition.maximizer.local_search": [[34, "module-smac.acquisition.maximizer.local_search"]], "smac.acquisition.maximizer.random_search": [[35, "module-smac.acquisition.maximizer.random_search"]], "smac.callback": [[36, "module-smac.callback"]], "smac.facade": [[37, "module-smac.facade"]], "smac.facade.abstract_facade": [[38, "module-smac.facade.abstract_facade"]], "smac.facade.algorithm_configuration_facade": [[39, "module-smac.facade.algorithm_configuration_facade"]], "smac.facade.blackbox_facade": [[40, "module-smac.facade.blackbox_facade"]], "smac.facade.boing_facade": [[41, "module-smac.facade.boing_facade"]], "smac.facade.hyperband_facade": [[42, "module-smac.facade.hyperband_facade"]], "smac.facade.hyperparameter_optimization_facade": [[43, "module-smac.facade.hyperparameter_optimization_facade"]], "smac.facade.multi_fidelity_facade": [[44, "module-smac.facade.multi_fidelity_facade"]], "smac.facade.random_facade": [[45, "module-smac.facade.random_facade"]], "smac.initial_design": [[46, "module-smac.initial_design"]], "smac.initial_design.abstract_initial_design": [[47, "module-smac.initial_design.abstract_initial_design"]], "smac.initial_design.default_design": [[48, "module-smac.initial_design.default_design"]], "smac.initial_design.factorial_design": [[49, "module-smac.initial_design.factorial_design"]], "smac.initial_design.latin_hypercube_design": [[50, "module-smac.initial_design.latin_hypercube_design"]], "smac.initial_design.random_design": [[51, "module-smac.initial_design.random_design"]], "smac.initial_design.sobol_design": [[52, "module-smac.initial_design.sobol_design"]], "smac.intensifier": [[53, "module-smac.intensifier"]], "smac.intensifier.abstract_intensifier": [[54, "module-smac.intensifier.abstract_intensifier"]], "smac.intensifier.abstract_parallel_intensifier": [[55, "module-smac.intensifier.abstract_parallel_intensifier"]], "smac.intensifier.hyperband": [[56, "module-smac.intensifier.hyperband"]], "smac.intensifier.hyperband_worker": [[57, "module-smac.intensifier.hyperband_worker"]], "smac.intensifier.intensifier": [[58, "module-smac.intensifier.intensifier"]], "smac.intensifier.stages": [[59, "module-smac.intensifier.stages"]], "smac.intensifier.successive_halving": [[60, "module-smac.intensifier.successive_halving"]], "smac.intensifier.successive_halving_worker": [[61, "module-smac.intensifier.successive_halving_worker"]], "smac.main": [[62, "module-smac.main"]], "smac.main.base_smbo": [[63, "module-smac.main.base_smbo"]], "smac.main.boing": [[64, "module-smac.main.boing"]], "smac.main.smbo": [[65, "module-smac.main.smbo"]], "smac.main.turbo": [[66, "module-smac.main.turbo"]], "smac.model": [[67, "module-smac.model"]], "smac.model.abstract_model": [[68, "module-smac.model.abstract_model"]], "smac.model.gaussian_process": [[69, "module-smac.model.gaussian_process"]], "smac.model.gaussian_process.abstract_gaussian_process": [[70, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "smac.model.gaussian_process.gaussian_process": [[71, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[72, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "smac.model.gaussian_process.kernels": [[73, "module-smac.model.gaussian_process.kernels"]], "smac.model.gaussian_process.kernels.base_kernels": [[74, "module-smac.model.gaussian_process.kernels.base_kernels"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[75, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[76, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[77, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[78, "module-smac.model.gaussian_process.kernels.white_kernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[79, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "smac.model.gaussian_process.priors": [[80, "module-smac.model.gaussian_process.priors"]], "smac.model.gaussian_process.priors.abstract_prior": [[81, "module-smac.model.gaussian_process.priors.abstract_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[82, "module-smac.model.gaussian_process.priors.gamma_prior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[83, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[84, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[85, "module-smac.model.gaussian_process.priors.tophat_prior"]], "smac.model.multi_objective_model": [[86, "module-smac.model.multi_objective_model"]], "smac.model.random_forest": [[87, "module-smac.model.random_forest"]], "smac.model.random_forest.abstract_random_forest": [[88, "module-smac.model.random_forest.abstract_random_forest"]], "smac.model.random_forest.random_forest": [[89, "module-smac.model.random_forest.random_forest"]], "smac.model.random_model": [[90, "module-smac.model.random_model"]], "smac.multi_objective": [[91, "module-smac.multi_objective"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[92, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "smac.multi_objective.aggregation_strategy": [[93, "module-smac.multi_objective.aggregation_strategy"]], "smac.multi_objective.parego": [[94, "module-smac.multi_objective.parego"]], "smac.random_design": [[95, "module-smac.random_design"]], "smac.random_design.abstract_random_design": [[96, "module-smac.random_design.abstract_random_design"]], "smac.random_design.annealing_design": [[97, "module-smac.random_design.annealing_design"]], "smac.random_design.modulus_design": [[98, "module-smac.random_design.modulus_design"]], "smac.random_design.probability_design": [[99, "module-smac.random_design.probability_design"]], "smac.runhistory": [[100, "module-smac.runhistory"]], "smac.runhistory.dataclasses": [[101, "module-smac.runhistory.dataclasses"]], "smac.runhistory.encoder": [[102, "module-smac.runhistory.encoder"]], "smac.runhistory.encoder.abstract_encoder": [[103, "module-smac.runhistory.encoder.abstract_encoder"]], "smac.runhistory.encoder.boing_encoder": [[104, "module-smac.runhistory.encoder.boing_encoder"]], "smac.runhistory.encoder.eips_encoder": [[105, "module-smac.runhistory.encoder.eips_encoder"]], "smac.runhistory.encoder.encoder": [[106, "module-smac.runhistory.encoder.encoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[107, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "smac.runhistory.encoder.log_encoder": [[108, "module-smac.runhistory.encoder.log_encoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[109, "module-smac.runhistory.encoder.log_scaled_encoder"]], "smac.runhistory.encoder.scaled_encoder": [[110, "module-smac.runhistory.encoder.scaled_encoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[111, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "smac.runhistory.enumerations": [[112, "module-smac.runhistory.enumerations"]], "smac.runhistory.runhistory": [[113, "module-smac.runhistory.runhistory"]], "smac.runner": [[114, "module-smac.runner"]], "smac.runner.abstract_runner": [[115, "module-smac.runner.abstract_runner"]], "smac.runner.dask_runner": [[116, "module-smac.runner.dask_runner"]], "smac.runner.exceptions": [[117, "module-smac.runner.exceptions"]], "Exceptions": [[117, "exceptions"]], "smac.runner.serial_runner": [[118, "module-smac.runner.serial_runner"]], "smac.runner.target_function_runner": [[119, "module-smac.runner.target_function_runner"]], "smac.runner.target_function_script_runner": [[120, "module-smac.runner.target_function_script_runner"]], "smac.scenario": [[121, "module-smac.scenario"]], "smac.utils": [[122, "module-smac.utils"]], "smac.utils.configspace": [[123, "module-smac.utils.configspace"]], "Functions": [[123, "functions"], [124, "functions"], [125, "functions"], [126, "functions"]], "smac.utils.data_structures": [[124, "module-smac.utils.data_structures"]], "smac.utils.logging": [[125, "module-smac.utils.logging"]], "smac.utils.multi_objective": [[126, "module-smac.utils.multi_objective"]], "smac.utils.subspaces": [[127, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[128, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[129, "module-smac.utils.subspaces.turbo_subspace"]], "Synthetic Function": [[130, "synthetic-function"]], "Support Vector Machine with Cross-Validation": [[131, "support-vector-machine-with-cross-validation"]], "Ask-and-Tell": [[132, "ask-and-tell"]], "Custom Callback": [[133, "custom-callback"]], "User Priors over the Optimum": [[134, "user-priors-over-the-optimum"]], "Basics": [[135, "basics"], [148, "basics"]], "Computation times": [[136, "computation-times"], [140, "computation-times"], [144, "computation-times"], [147, "computation-times"]], "Multi-Layer Perceptron Using Multiple Epochs": [[137, "multi-layer-perceptron-using-multiple-epochs"]], "Stochastic Gradient Descent On Multiple Datasets": [[138, "stochastic-gradient-descent-on-multiple-datasets"]], "Multi-Fidelity and Multi-Instances": [[139, "multi-fidelity-and-multi-instances"], [148, "multi-fidelity-and-multi-instances"]], "2D Schaffer Function with Objective Weights": [[141, "d-schaffer-function-with-objective-weights"]], "ParEGO": [[142, "parego"]], "Multi-Objective": [[143, "multi-objective"], [148, "multi-objective"]], "Call Target Function From Script": [[145, "call-target-function-from-script"]], "Examples": [[148, "examples"]], "Home": [[149, "home"]], "Contact": [[149, "contact"]]}, "indexentries": {"bb": [[6, "term-BB"]], "bo": [[6, "term-BO"]], "bohb": [[6, "term-BOHB"]], "bayesian optimization": [[6, "term-Bayesian-Optimization"]], "black-box": [[6, "term-Black-Box"]], "budget": [[6, "term-Budget"]], "cli": [[6, "term-CLI"]], "cv": [[6, "term-CV"]], "gp": [[6, "term-GP"]], "gp-mcmc": [[6, "term-GP-MCMC"]], "hb": [[6, "term-HB"]], "hp": [[6, "term-HP"]], "hyperband": [[6, "term-Hyperband"]], "incumbent": [[6, "term-Incumbent"]], "instances": [[6, "term-Instances"]], "intensification": [[6, "term-Intensification"]], "mf": [[6, "term-MF"]], "multi-fidelity": [[6, "term-Multi-Fidelity"]], "multi-objective": [[6, "term-Multi-Objective"]], "objective": [[6, "term-Objective"]], "rf": [[6, "term-RF"]], "roar": [[6, "term-ROAR"]], "random online adaptive racing": [[6, "term-Random-Online-Adaptive-Racing"]], "smac": [[6, "term-SMAC"]], "target function": [[6, "term-Target-Function"]], "trial": [[6, "term-Trial"]], "module": [[20, "module-smac.acquisition"], [21, "module-smac.acquisition.function"], [22, "module-smac.acquisition.function.abstract_acquisition_function"], [23, "module-smac.acquisition.function.confidence_bound"], [24, "module-smac.acquisition.function.expected_improvement"], [25, "module-smac.acquisition.function.integrated_acquisition_function"], [26, "module-smac.acquisition.function.prior_acqusition_function"], [27, "module-smac.acquisition.function.probability_improvement"], [28, "module-smac.acquisition.function.thompson"], [29, "module-smac.acquisition.maximizer"], [30, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"], [31, "module-smac.acquisition.maximizer.differential_evolution"], [32, "module-smac.acquisition.maximizer.helpers"], [33, "module-smac.acquisition.maximizer.local_and_random_search"], [34, "module-smac.acquisition.maximizer.local_search"], [35, "module-smac.acquisition.maximizer.random_search"], [36, "module-smac.callback"], [37, "module-smac.facade"], [38, "module-smac.facade.abstract_facade"], [39, "module-smac.facade.algorithm_configuration_facade"], [40, "module-smac.facade.blackbox_facade"], [41, "module-smac.facade.boing_facade"], [42, "module-smac.facade.hyperband_facade"], [43, "module-smac.facade.hyperparameter_optimization_facade"], [44, "module-smac.facade.multi_fidelity_facade"], [45, "module-smac.facade.random_facade"], [46, "module-smac.initial_design"], [47, "module-smac.initial_design.abstract_initial_design"], [48, "module-smac.initial_design.default_design"], [49, "module-smac.initial_design.factorial_design"], [50, "module-smac.initial_design.latin_hypercube_design"], [51, "module-smac.initial_design.random_design"], [52, "module-smac.initial_design.sobol_design"], [53, "module-smac.intensifier"], [54, "module-smac.intensifier.abstract_intensifier"], [55, "module-smac.intensifier.abstract_parallel_intensifier"], [56, "module-smac.intensifier.hyperband"], [57, "module-smac.intensifier.hyperband_worker"], [58, "module-smac.intensifier.intensifier"], [59, "module-smac.intensifier.stages"], [60, "module-smac.intensifier.successive_halving"], [61, "module-smac.intensifier.successive_halving_worker"], [62, "module-smac.main"], [63, "module-smac.main.base_smbo"], [64, "module-smac.main.boing"], [65, "module-smac.main.smbo"], [66, "module-smac.main.turbo"], [67, "module-smac.model"], [68, "module-smac.model.abstract_model"], [69, "module-smac.model.gaussian_process"], [70, "module-smac.model.gaussian_process.abstract_gaussian_process"], [71, "module-smac.model.gaussian_process.gaussian_process"], [72, "module-smac.model.gaussian_process.gpytorch_gaussian_process"], [73, "module-smac.model.gaussian_process.kernels"], [74, "module-smac.model.gaussian_process.kernels.base_kernels"], [75, "module-smac.model.gaussian_process.kernels.hamming_kernel"], [76, "module-smac.model.gaussian_process.kernels.matern_kernel"], [77, "module-smac.model.gaussian_process.kernels.rbf_kernel"], [78, "module-smac.model.gaussian_process.kernels.white_kernel"], [79, "module-smac.model.gaussian_process.mcmc_gaussian_process"], [80, "module-smac.model.gaussian_process.priors"], [81, "module-smac.model.gaussian_process.priors.abstract_prior"], [82, "module-smac.model.gaussian_process.priors.gamma_prior"], [83, "module-smac.model.gaussian_process.priors.horseshoe_prior"], [84, "module-smac.model.gaussian_process.priors.log_normal_prior"], [85, "module-smac.model.gaussian_process.priors.tophat_prior"], [86, "module-smac.model.multi_objective_model"], [87, "module-smac.model.random_forest"], [88, "module-smac.model.random_forest.abstract_random_forest"], [89, "module-smac.model.random_forest.random_forest"], [90, "module-smac.model.random_model"], [91, "module-smac.multi_objective"], [92, "module-smac.multi_objective.abstract_multi_objective_algorithm"], [93, "module-smac.multi_objective.aggregation_strategy"], [94, "module-smac.multi_objective.parego"], [95, "module-smac.random_design"], [96, "module-smac.random_design.abstract_random_design"], [97, "module-smac.random_design.annealing_design"], [98, "module-smac.random_design.modulus_design"], [99, "module-smac.random_design.probability_design"], [100, "module-smac.runhistory"], [101, "module-smac.runhistory.dataclasses"], [102, "module-smac.runhistory.encoder"], [103, "module-smac.runhistory.encoder.abstract_encoder"], [104, "module-smac.runhistory.encoder.boing_encoder"], [105, "module-smac.runhistory.encoder.eips_encoder"], [106, "module-smac.runhistory.encoder.encoder"], [107, "module-smac.runhistory.encoder.inverse_scaled_encoder"], [108, "module-smac.runhistory.encoder.log_encoder"], [109, "module-smac.runhistory.encoder.log_scaled_encoder"], [110, "module-smac.runhistory.encoder.scaled_encoder"], [111, "module-smac.runhistory.encoder.sqrt_scaled_encoder"], [112, "module-smac.runhistory.enumerations"], [113, "module-smac.runhistory.runhistory"], [114, "module-smac.runner"], [115, "module-smac.runner.abstract_runner"], [116, "module-smac.runner.dask_runner"], [117, "module-smac.runner.exceptions"], [118, "module-smac.runner.serial_runner"], [119, "module-smac.runner.target_function_runner"], [120, "module-smac.runner.target_function_script_runner"], [121, "module-smac.scenario"], [122, "module-smac.utils"], [123, "module-smac.utils.configspace"], [124, "module-smac.utils.data_structures"], [125, "module-smac.utils.logging"], [126, "module-smac.utils.multi_objective"], [127, "module-smac.utils.subspaces"], [128, "module-smac.utils.subspaces.boing_subspace"], [129, "module-smac.utils.subspaces.turbo_subspace"]], "smac.acquisition": [[20, "module-smac.acquisition"]], "abstractacquisitionfunction (class in smac.acquisition.function)": [[21, "smac.acquisition.function.AbstractAcquisitionFunction"]], "ei (class in smac.acquisition.function)": [[21, "smac.acquisition.function.EI"]], "eips (class in smac.acquisition.function)": [[21, "smac.acquisition.function.EIPS"]], "integratedacquisitionfunction (class in smac.acquisition.function)": [[21, "smac.acquisition.function.IntegratedAcquisitionFunction"]], "lcb (class in smac.acquisition.function)": [[21, "smac.acquisition.function.LCB"]], "pi (class in smac.acquisition.function)": [[21, "smac.acquisition.function.PI"]], "prioracquisitionfunction (class in smac.acquisition.function)": [[21, "smac.acquisition.function.PriorAcquisitionFunction"]], "ts (class in smac.acquisition.function)": [[21, "smac.acquisition.function.TS"]], "__call__() (smac.acquisition.function.abstractacquisitionfunction method)": [[21, "smac.acquisition.function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstractacquisitionfunction property)": [[21, "smac.acquisition.function.AbstractAcquisitionFunction.meta"]], "meta (smac.acquisition.function.ei property)": [[21, "smac.acquisition.function.EI.meta"]], "meta (smac.acquisition.function.integratedacquisitionfunction property)": [[21, "smac.acquisition.function.IntegratedAcquisitionFunction.meta"]], "meta (smac.acquisition.function.lcb property)": [[21, "smac.acquisition.function.LCB.meta"]], "meta (smac.acquisition.function.pi property)": [[21, "smac.acquisition.function.PI.meta"]], "meta (smac.acquisition.function.prioracquisitionfunction property)": [[21, "smac.acquisition.function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstractacquisitionfunction property)": [[21, "smac.acquisition.function.AbstractAcquisitionFunction.model"]], "model (smac.acquisition.function.prioracquisitionfunction property)": [[21, "smac.acquisition.function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.abstractacquisitionfunction property)": [[21, "smac.acquisition.function.AbstractAcquisitionFunction.name"]], "name (smac.acquisition.function.ei property)": [[21, "smac.acquisition.function.EI.name"]], "name (smac.acquisition.function.eips property)": [[21, "smac.acquisition.function.EIPS.name"]], "name (smac.acquisition.function.integratedacquisitionfunction property)": [[21, "smac.acquisition.function.IntegratedAcquisitionFunction.name"]], "name (smac.acquisition.function.lcb property)": [[21, "smac.acquisition.function.LCB.name"]], "name (smac.acquisition.function.pi property)": [[21, "smac.acquisition.function.PI.name"]], "name (smac.acquisition.function.prioracquisitionfunction property)": [[21, "smac.acquisition.function.PriorAcquisitionFunction.name"]], "name (smac.acquisition.function.ts property)": [[21, "smac.acquisition.function.TS.name"]], "smac.acquisition.function": [[21, "module-smac.acquisition.function"]], "update() (smac.acquisition.function.abstractacquisitionfunction method)": [[21, "smac.acquisition.function.AbstractAcquisitionFunction.update"]], "abstractacquisitionfunction (class in smac.acquisition.function.abstract_acquisition_function)": [[22, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction"]], "__call__() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[22, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.model"]], "name (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.name"]], "smac.acquisition.function.abstract_acquisition_function": [[22, "module-smac.acquisition.function.abstract_acquisition_function"]], "update() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[22, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.update"]], "lcb (class in smac.acquisition.function.confidence_bound)": [[23, "smac.acquisition.function.confidence_bound.LCB"]], "meta (smac.acquisition.function.confidence_bound.lcb property)": [[23, "smac.acquisition.function.confidence_bound.LCB.meta"]], "name (smac.acquisition.function.confidence_bound.lcb property)": [[23, "smac.acquisition.function.confidence_bound.LCB.name"]], "smac.acquisition.function.confidence_bound": [[23, "module-smac.acquisition.function.confidence_bound"]], "ei (class in smac.acquisition.function.expected_improvement)": [[24, "smac.acquisition.function.expected_improvement.EI"]], "eips (class in smac.acquisition.function.expected_improvement)": [[24, "smac.acquisition.function.expected_improvement.EIPS"]], "meta (smac.acquisition.function.expected_improvement.ei property)": [[24, "smac.acquisition.function.expected_improvement.EI.meta"]], "name (smac.acquisition.function.expected_improvement.ei property)": [[24, "smac.acquisition.function.expected_improvement.EI.name"]], "name (smac.acquisition.function.expected_improvement.eips property)": [[24, "smac.acquisition.function.expected_improvement.EIPS.name"]], "smac.acquisition.function.expected_improvement": [[24, "module-smac.acquisition.function.expected_improvement"]], "integratedacquisitionfunction (class in smac.acquisition.function.integrated_acquisition_function)": [[25, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction"]], "meta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[25, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.meta"]], "name (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[25, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.name"]], "smac.acquisition.function.integrated_acquisition_function": [[25, "module-smac.acquisition.function.integrated_acquisition_function"]], "prioracquisitionfunction (class in smac.acquisition.function.prior_acqusition_function)": [[26, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction"]], "meta (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[26, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[26, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[26, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.name"]], "smac.acquisition.function.prior_acqusition_function": [[26, "module-smac.acquisition.function.prior_acqusition_function"]], "pi (class in smac.acquisition.function.probability_improvement)": [[27, "smac.acquisition.function.probability_improvement.PI"]], "meta (smac.acquisition.function.probability_improvement.pi property)": [[27, "smac.acquisition.function.probability_improvement.PI.meta"]], "name (smac.acquisition.function.probability_improvement.pi property)": [[27, "smac.acquisition.function.probability_improvement.PI.name"]], "smac.acquisition.function.probability_improvement": [[27, "module-smac.acquisition.function.probability_improvement"]], "ts (class in smac.acquisition.function.thompson)": [[28, "smac.acquisition.function.thompson.TS"]], "name (smac.acquisition.function.thompson.ts property)": [[28, "smac.acquisition.function.thompson.TS.name"]], "smac.acquisition.function.thompson": [[28, "module-smac.acquisition.function.thompson"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer)": [[29, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer"]], "differentialevolution (class in smac.acquisition.maximizer)": [[29, "smac.acquisition.maximizer.DifferentialEvolution"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer)": [[29, "smac.acquisition.maximizer.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer)": [[29, "smac.acquisition.maximizer.LocalAndSortedRandomSearch"]], "localsearch (class in smac.acquisition.maximizer)": [[29, "smac.acquisition.maximizer.LocalSearch"]], "randomsearch (class in smac.acquisition.maximizer)": [[29, "smac.acquisition.maximizer.RandomSearch"]], "acquisition_function (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[29, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "acquisition_function (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[29, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstractacquisitionmaximizer method)": [[29, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[29, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.meta"]], "meta (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[29, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.meta"]], "meta (smac.acquisition.maximizer.localsearch property)": [[29, "smac.acquisition.maximizer.LocalSearch.meta"]], "smac.acquisition.maximizer": [[29, "module-smac.acquisition.maximizer"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer.abstract_acqusition_maximizer)": [[30, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer"]], "acquisition_function (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[30, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer method)": [[30, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[30, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[30, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "differentialevolution (class in smac.acquisition.maximizer.differential_evolution)": [[31, "smac.acquisition.maximizer.differential_evolution.DifferentialEvolution"]], "smac.acquisition.maximizer.differential_evolution": [[31, "module-smac.acquisition.maximizer.differential_evolution"]], "challengerlist (class in smac.acquisition.maximizer.helpers)": [[32, "smac.acquisition.maximizer.helpers.ChallengerList"]], "smac.acquisition.maximizer.helpers": [[32, "module-smac.acquisition.maximizer.helpers"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[33, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[33, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch"]], "acquisition_function (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[33, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.acquisition_function"]], "meta (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[33, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.meta"]], "smac.acquisition.maximizer.local_and_random_search": [[33, "module-smac.acquisition.maximizer.local_and_random_search"]], "localsearch (class in smac.acquisition.maximizer.local_search)": [[34, "smac.acquisition.maximizer.local_search.LocalSearch"]], "meta (smac.acquisition.maximizer.local_search.localsearch property)": [[34, "smac.acquisition.maximizer.local_search.LocalSearch.meta"]], "smac.acquisition.maximizer.local_search": [[34, "module-smac.acquisition.maximizer.local_search"]], "randomsearch (class in smac.acquisition.maximizer.random_search)": [[35, "smac.acquisition.maximizer.random_search.RandomSearch"]], "smac.acquisition.maximizer.random_search": [[35, "module-smac.acquisition.maximizer.random_search"]], "callback (class in smac.callback)": [[36, "smac.callback.Callback"]], "on_ask_end() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_start"]], "on_tell_end() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback method)": [[36, "smac.callback.Callback.on_tell_start"]], "smac.callback": [[36, "module-smac.callback"]], "abstractfacade (class in smac.facade)": [[37, "smac.facade.AbstractFacade"]], "algorithmconfigurationfacade (class in smac.facade)": [[37, "smac.facade.AlgorithmConfigurationFacade"]], "blackboxfacade (class in smac.facade)": [[37, "smac.facade.BlackBoxFacade"]], "hyperbandfacade (class in smac.facade)": [[37, "smac.facade.HyperbandFacade"]], "hyperparameteroptimizationfacade (class in smac.facade)": [[37, "smac.facade.HyperparameterOptimizationFacade"]], "multifidelityfacade (class in smac.facade)": [[37, "smac.facade.MultiFidelityFacade"]], "randomfacade (class in smac.facade)": [[37, "smac.facade.RandomFacade"]], "ask() (smac.facade.abstractfacade method)": [[37, "smac.facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstractfacade static method)": [[37, "smac.facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.hyperparameteroptimizationfacade static method)": [[37, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.randomfacade static method)": [[37, "smac.facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstractfacade static method)": [[37, "smac.facade.AbstractFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.hyperparameteroptimizationfacade static method)": [[37, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.randomfacade static method)": [[37, "smac.facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.abstractfacade static method)": [[37, "smac.facade.AbstractFacade.get_initial_design"]], "get_initial_design() (smac.facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_initial_design() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_initial_design"]], "get_initial_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[37, "smac.facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_initial_design() (smac.facade.multifidelityfacade static method)": [[37, "smac.facade.MultiFidelityFacade.get_initial_design"]], "get_initial_design() (smac.facade.randomfacade static method)": [[37, "smac.facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstractfacade static method)": [[37, "smac.facade.AbstractFacade.get_intensifier"]], "get_intensifier() (smac.facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_intensifier() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperbandfacade static method)": [[37, "smac.facade.HyperbandFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperparameteroptimizationfacade static method)": [[37, "smac.facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_intensifier() (smac.facade.multifidelityfacade static method)": [[37, "smac.facade.MultiFidelityFacade.get_intensifier"]], "get_intensifier() (smac.facade.randomfacade static method)": [[37, "smac.facade.RandomFacade.get_intensifier"]], "get_kernel() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.abstractfacade static method)": [[37, "smac.facade.AbstractFacade.get_model"]], "get_model() (smac.facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.AlgorithmConfigurationFacade.get_model"]], "get_model() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_model"]], "get_model() (smac.facade.hyperparameteroptimizationfacade static method)": [[37, "smac.facade.HyperparameterOptimizationFacade.get_model"]], "get_model() (smac.facade.randomfacade static method)": [[37, "smac.facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstractfacade static method)": [[37, "smac.facade.AbstractFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.hyperparameteroptimizationfacade static method)": [[37, "smac.facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.randomfacade static method)": [[37, "smac.facade.RandomFacade.get_multi_objective_algorithm"]], "get_next_configurations() (smac.facade.abstractfacade method)": [[37, "smac.facade.AbstractFacade.get_next_configurations"]], "get_random_design() (smac.facade.abstractfacade static method)": [[37, "smac.facade.AbstractFacade.get_random_design"]], "get_random_design() (smac.facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.AlgorithmConfigurationFacade.get_random_design"]], "get_random_design() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_random_design"]], "get_random_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[37, "smac.facade.HyperparameterOptimizationFacade.get_random_design"]], "get_random_design() (smac.facade.randomfacade static method)": [[37, "smac.facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstractfacade static method)": [[37, "smac.facade.AbstractFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.algorithmconfigurationfacade static method)": [[37, "smac.facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.blackboxfacade static method)": [[37, "smac.facade.BlackBoxFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.hyperparameteroptimizationfacade static method)": [[37, "smac.facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.randomfacade static method)": [[37, "smac.facade.RandomFacade.get_runhistory_encoder"]], "get_target_function_budgets() (smac.facade.abstractfacade method)": [[37, "smac.facade.AbstractFacade.get_target_function_budgets"]], "get_target_function_instances() (smac.facade.abstractfacade method)": [[37, "smac.facade.AbstractFacade.get_target_function_instances"]], "get_target_function_seeds() (smac.facade.abstractfacade method)": [[37, "smac.facade.AbstractFacade.get_target_function_seeds"]], "incumbent (smac.facade.abstractfacade property)": [[37, "smac.facade.AbstractFacade.incumbent"]], "meta (smac.facade.abstractfacade property)": [[37, "smac.facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstractfacade method)": [[37, "smac.facade.AbstractFacade.optimize"]], "runhistory (smac.facade.abstractfacade property)": [[37, "smac.facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstractfacade property)": [[37, "smac.facade.AbstractFacade.scenario"]], "smac.facade": [[37, "module-smac.facade"]], "stats (smac.facade.abstractfacade property)": [[37, "smac.facade.AbstractFacade.stats"]], "tell() (smac.facade.abstractfacade method)": [[37, "smac.facade.AbstractFacade.tell"]], "validate() (smac.facade.abstractfacade method)": [[37, "smac.facade.AbstractFacade.validate"]], "abstractfacade (class in smac.facade.abstract_facade)": [[38, "smac.facade.abstract_facade.AbstractFacade"]], "ask() (smac.facade.abstract_facade.abstractfacade method)": [[38, "smac.facade.abstract_facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstract_facade.abstractfacade static method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstract_facade.abstractfacade static method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.abstract_facade.abstractfacade static method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstract_facade.abstractfacade static method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_intensifier"]], "get_model() (smac.facade.abstract_facade.abstractfacade static method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstract_facade.abstractfacade static method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_multi_objective_algorithm"]], "get_next_configurations() (smac.facade.abstract_facade.abstractfacade method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_next_configurations"]], "get_random_design() (smac.facade.abstract_facade.abstractfacade static method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstract_facade.abstractfacade static method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_runhistory_encoder"]], "get_target_function_budgets() (smac.facade.abstract_facade.abstractfacade method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_target_function_budgets"]], "get_target_function_instances() (smac.facade.abstract_facade.abstractfacade method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_target_function_instances"]], "get_target_function_seeds() (smac.facade.abstract_facade.abstractfacade method)": [[38, "smac.facade.abstract_facade.AbstractFacade.get_target_function_seeds"]], "incumbent (smac.facade.abstract_facade.abstractfacade property)": [[38, "smac.facade.abstract_facade.AbstractFacade.incumbent"]], "meta (smac.facade.abstract_facade.abstractfacade property)": [[38, "smac.facade.abstract_facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstract_facade.abstractfacade method)": [[38, "smac.facade.abstract_facade.AbstractFacade.optimize"]], "runhistory (smac.facade.abstract_facade.abstractfacade property)": [[38, "smac.facade.abstract_facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstract_facade.abstractfacade property)": [[38, "smac.facade.abstract_facade.AbstractFacade.scenario"]], "smac.facade.abstract_facade": [[38, "module-smac.facade.abstract_facade"]], "stats (smac.facade.abstract_facade.abstractfacade property)": [[38, "smac.facade.abstract_facade.AbstractFacade.stats"]], "tell() (smac.facade.abstract_facade.abstractfacade method)": [[38, "smac.facade.abstract_facade.AbstractFacade.tell"]], "validate() (smac.facade.abstract_facade.abstractfacade method)": [[38, "smac.facade.abstract_facade.AbstractFacade.validate"]], "algorithmconfigurationfacade (class in smac.facade.algorithm_configuration_facade)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade"]], "get_acquisition_function() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_intensifier() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_model() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[39, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "smac.facade.algorithm_configuration_facade": [[39, "module-smac.facade.algorithm_configuration_facade"]], "blackboxfacade (class in smac.facade.blackbox_facade)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade"]], "get_acquisition_function() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_initial_design"]], "get_intensifier() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_intensifier"]], "get_kernel() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.blackbox_facade.blackboxfacade static method)": [[40, "smac.facade.blackbox_facade.BlackBoxFacade.get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[40, "module-smac.facade.blackbox_facade"]], "smac.facade.boing_facade": [[41, "module-smac.facade.boing_facade"]], "hyperbandfacade (class in smac.facade.hyperband_facade)": [[42, "smac.facade.hyperband_facade.HyperbandFacade"]], "get_intensifier() (smac.facade.hyperband_facade.hyperbandfacade static method)": [[42, "smac.facade.hyperband_facade.HyperbandFacade.get_intensifier"]], "smac.facade.hyperband_facade": [[42, "module-smac.facade.hyperband_facade"]], "hyperparameteroptimizationfacade (class in smac.facade.hyperparameter_optimization_facade)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade"]], "get_acquisition_function() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_intensifier() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_model() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[43, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "smac.facade.hyperparameter_optimization_facade": [[43, "module-smac.facade.hyperparameter_optimization_facade"]], "multifidelityfacade (class in smac.facade.multi_fidelity_facade)": [[44, "smac.facade.multi_fidelity_facade.MultiFidelityFacade"]], "get_initial_design() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[44, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_initial_design"]], "get_intensifier() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[44, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_intensifier"]], "smac.facade.multi_fidelity_facade": [[44, "module-smac.facade.multi_fidelity_facade"]], "randomfacade (class in smac.facade.random_facade)": [[45, "smac.facade.random_facade.RandomFacade"]], "get_acquisition_function() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_intensifier"]], "get_model() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.random_facade.randomfacade static method)": [[45, "smac.facade.random_facade.RandomFacade.get_runhistory_encoder"]], "smac.facade.random_facade": [[45, "module-smac.facade.random_facade"]], "abstractinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.AbstractInitialDesign"]], "defaultinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.DefaultInitialDesign"]], "factorialinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.FactorialInitialDesign"]], "latinhypercubeinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.LatinHypercubeInitialDesign"]], "randominitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.RandomInitialDesign"]], "sobolinitialdesign (class in smac.initial_design)": [[46, "smac.initial_design.SobolInitialDesign"]], "meta (smac.initial_design.abstractinitialdesign property)": [[46, "smac.initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstractinitialdesign method)": [[46, "smac.initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design": [[46, "module-smac.initial_design"]], "abstractinitialdesign (class in smac.initial_design.abstract_initial_design)": [[47, "smac.initial_design.abstract_initial_design.AbstractInitialDesign"]], "meta (smac.initial_design.abstract_initial_design.abstractinitialdesign property)": [[47, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstract_initial_design.abstractinitialdesign method)": [[47, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design.abstract_initial_design": [[47, "module-smac.initial_design.abstract_initial_design"]], "defaultinitialdesign (class in smac.initial_design.default_design)": [[48, "smac.initial_design.default_design.DefaultInitialDesign"]], "smac.initial_design.default_design": [[48, "module-smac.initial_design.default_design"]], "factorialinitialdesign (class in smac.initial_design.factorial_design)": [[49, "smac.initial_design.factorial_design.FactorialInitialDesign"]], "smac.initial_design.factorial_design": [[49, "module-smac.initial_design.factorial_design"]], "latinhypercubeinitialdesign (class in smac.initial_design.latin_hypercube_design)": [[50, "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[50, "module-smac.initial_design.latin_hypercube_design"]], "randominitialdesign (class in smac.initial_design.random_design)": [[51, "smac.initial_design.random_design.RandomInitialDesign"]], "smac.initial_design.random_design": [[51, "module-smac.initial_design.random_design"]], "sobolinitialdesign (class in smac.initial_design.sobol_design)": [[52, "smac.initial_design.sobol_design.SobolInitialDesign"]], "smac.initial_design.sobol_design": [[52, "module-smac.initial_design.sobol_design"]], "abstractintensifier (class in smac.intensifier)": [[53, "smac.intensifier.AbstractIntensifier"]], "abstractparallelintensifier (class in smac.intensifier)": [[53, "smac.intensifier.AbstractParallelIntensifier"]], "hyperband (class in smac.intensifier)": [[53, "smac.intensifier.Hyperband"]], "intensifier (class in smac.intensifier)": [[53, "smac.intensifier.Intensifier"]], "successivehalving (class in smac.intensifier)": [[53, "smac.intensifier.SuccessiveHalving"]], "calculate_budgets() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.calculate_budgets"]], "get_next_challenger() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.get_next_challenger"]], "get_next_trial() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_next_trial"]], "get_next_trial() (smac.intensifier.abstractparallelintensifier method)": [[53, "smac.intensifier.AbstractParallelIntensifier.get_next_trial"]], "get_next_trial() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_target_function_budgets"]], "get_target_function_budgets() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.get_target_function_budgets"]], "get_target_function_budgets() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_target_function_instances"]], "get_target_function_instances() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.get_target_function_instances"]], "get_target_function_instances() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.get_target_function_seeds"]], "get_target_function_seeds() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.get_target_function_seeds"]], "get_target_function_seeds() (smac.intensifier.successivehalving method)": [[53, "smac.intensifier.SuccessiveHalving.get_target_function_seeds"]], "intensify_percentage (smac.intensifier.intensifier property)": [[53, "smac.intensifier.Intensifier.intensify_percentage"]], "iteration_done (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.iteration_done"]], "meta (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.meta"]], "meta (smac.intensifier.intensifier property)": [[53, "smac.intensifier.Intensifier.meta"]], "meta (smac.intensifier.successivehalving property)": [[53, "smac.intensifier.SuccessiveHalving.meta"]], "num_trials (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.num_trials"]], "process_results() (smac.intensifier.abstractintensifier method)": [[53, "smac.intensifier.AbstractIntensifier.process_results"]], "process_results() (smac.intensifier.abstractparallelintensifier method)": [[53, "smac.intensifier.AbstractParallelIntensifier.process_results"]], "process_results() (smac.intensifier.intensifier method)": [[53, "smac.intensifier.Intensifier.process_results"]], "repeat_configs (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.repeat_configs"]], "smac.intensifier": [[53, "module-smac.intensifier"]], "uses_budgets (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.uses_budgets"]], "uses_budgets (smac.intensifier.intensifier property)": [[53, "smac.intensifier.Intensifier.uses_budgets"]], "uses_budgets (smac.intensifier.successivehalving property)": [[53, "smac.intensifier.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.uses_instances"]], "uses_instances (smac.intensifier.intensifier property)": [[53, "smac.intensifier.Intensifier.uses_instances"]], "uses_instances (smac.intensifier.successivehalving property)": [[53, "smac.intensifier.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.abstractintensifier property)": [[53, "smac.intensifier.AbstractIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.abstractparallelintensifier property)": [[53, "smac.intensifier.AbstractParallelIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.intensifier property)": [[53, "smac.intensifier.Intensifier.uses_seeds"]], "abstractintensifier (class in smac.intensifier.abstract_intensifier)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier"]], "get_next_trial() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_seeds"]], "iteration_done (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.iteration_done"]], "meta (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.meta"]], "num_trials (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.num_trials"]], "process_results() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.process_results"]], "repeat_configs (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.repeat_configs"]], "smac.intensifier.abstract_intensifier": [[54, "module-smac.intensifier.abstract_intensifier"]], "uses_budgets (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_budgets"]], "uses_instances (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_instances"]], "uses_seeds (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[54, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_seeds"]], "abstractparallelintensifier (class in smac.intensifier.abstract_parallel_intensifier)": [[55, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier"]], "get_next_trial() (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier method)": [[55, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.get_next_trial"]], "process_results() (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier method)": [[55, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.process_results"]], "smac.intensifier.abstract_parallel_intensifier": [[55, "module-smac.intensifier.abstract_parallel_intensifier"]], "uses_seeds (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier property)": [[55, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.uses_seeds"]], "hyperband (class in smac.intensifier.hyperband)": [[56, "smac.intensifier.hyperband.Hyperband"]], "smac.intensifier.hyperband": [[56, "module-smac.intensifier.hyperband"]], "hyperbandworker (class in smac.intensifier.hyperband_worker)": [[57, "smac.intensifier.hyperband_worker.HyperbandWorker"]], "get_next_trial() (smac.intensifier.hyperband_worker.hyperbandworker method)": [[57, "smac.intensifier.hyperband_worker.HyperbandWorker.get_next_trial"]], "process_results() (smac.intensifier.hyperband_worker.hyperbandworker method)": [[57, "smac.intensifier.hyperband_worker.HyperbandWorker.process_results"]], "smac.intensifier.hyperband_worker": [[57, "module-smac.intensifier.hyperband_worker"]], "uses_budgets (smac.intensifier.hyperband_worker.hyperbandworker property)": [[57, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_budgets"]], "uses_instances (smac.intensifier.hyperband_worker.hyperbandworker property)": [[57, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_instances"]], "uses_seeds (smac.intensifier.hyperband_worker.hyperbandworker property)": [[57, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_seeds"]], "intensifier (class in smac.intensifier.intensifier)": [[58, "smac.intensifier.intensifier.Intensifier"]], "get_next_challenger() (smac.intensifier.intensifier.intensifier method)": [[58, "smac.intensifier.intensifier.Intensifier.get_next_challenger"]], "get_next_trial() (smac.intensifier.intensifier.intensifier method)": [[58, "smac.intensifier.intensifier.Intensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.intensifier.intensifier method)": [[58, "smac.intensifier.intensifier.Intensifier.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.intensifier.intensifier method)": [[58, "smac.intensifier.intensifier.Intensifier.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.intensifier.intensifier method)": [[58, "smac.intensifier.intensifier.Intensifier.get_target_function_seeds"]], "intensify_percentage (smac.intensifier.intensifier.intensifier property)": [[58, "smac.intensifier.intensifier.Intensifier.intensify_percentage"]], "meta (smac.intensifier.intensifier.intensifier property)": [[58, "smac.intensifier.intensifier.Intensifier.meta"]], "process_results() (smac.intensifier.intensifier.intensifier method)": [[58, "smac.intensifier.intensifier.Intensifier.process_results"]], "smac.intensifier.intensifier": [[58, "module-smac.intensifier.intensifier"]], "uses_budgets (smac.intensifier.intensifier.intensifier property)": [[58, "smac.intensifier.intensifier.Intensifier.uses_budgets"]], "uses_instances (smac.intensifier.intensifier.intensifier property)": [[58, "smac.intensifier.intensifier.Intensifier.uses_instances"]], "uses_seeds (smac.intensifier.intensifier.intensifier property)": [[58, "smac.intensifier.intensifier.Intensifier.uses_seeds"]], "intensifierstage (class in smac.intensifier.stages)": [[59, "smac.intensifier.stages.IntensifierStage"]], "smac.intensifier.stages": [[59, "module-smac.intensifier.stages"]], "successivehalving (class in smac.intensifier.successive_halving)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving"]], "calculate_budgets() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.calculate_budgets"]], "get_target_function_budgets() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_seeds"]], "meta (smac.intensifier.successive_halving.successivehalving property)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.meta"]], "smac.intensifier.successive_halving": [[60, "module-smac.intensifier.successive_halving"]], "uses_budgets (smac.intensifier.successive_halving.successivehalving property)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving.successivehalving property)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.uses_instances"]], "successivehalvingworker (class in smac.intensifier.successive_halving_worker)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker"]], "get_next_trial() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_seeds"]], "process_results() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.process_results"]], "smac.intensifier.successive_halving_worker": [[61, "module-smac.intensifier.successive_halving_worker"]], "stage (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.stage"]], "uses_budgets (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_instances"]], "uses_seeds (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[61, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_seeds"]], "basesmbo (class in smac.main)": [[62, "smac.main.BaseSMBO"]], "smbo (class in smac.main)": [[62, "smac.main.SMBO"]], "ask() (smac.main.basesmbo method)": [[62, "smac.main.BaseSMBO.ask"]], "ask() (smac.main.smbo method)": [[62, "smac.main.SMBO.ask"]], "get_next_configurations() (smac.main.basesmbo method)": [[62, "smac.main.BaseSMBO.get_next_configurations"]], "get_next_configurations() (smac.main.smbo method)": [[62, "smac.main.SMBO.get_next_configurations"]], "incumbent (smac.main.basesmbo property)": [[62, "smac.main.BaseSMBO.incumbent"]], "optimize() (smac.main.basesmbo method)": [[62, "smac.main.BaseSMBO.optimize"]], "runhistory (smac.main.basesmbo property)": [[62, "smac.main.BaseSMBO.runhistory"]], "save() (smac.main.basesmbo method)": [[62, "smac.main.BaseSMBO.save"]], "smac.main": [[62, "module-smac.main"]], "stats (smac.main.basesmbo property)": [[62, "smac.main.BaseSMBO.stats"]], "tell() (smac.main.basesmbo method)": [[62, "smac.main.BaseSMBO.tell"]], "tell() (smac.main.smbo method)": [[62, "smac.main.SMBO.tell"]], "update_acquisition_function() (smac.main.basesmbo method)": [[62, "smac.main.BaseSMBO.update_acquisition_function"]], "update_model() (smac.main.basesmbo method)": [[62, "smac.main.BaseSMBO.update_model"]], "validate() (smac.main.basesmbo method)": [[62, "smac.main.BaseSMBO.validate"]], "basesmbo (class in smac.main.base_smbo)": [[63, "smac.main.base_smbo.BaseSMBO"]], "ask() (smac.main.base_smbo.basesmbo method)": [[63, "smac.main.base_smbo.BaseSMBO.ask"]], "get_next_configurations() (smac.main.base_smbo.basesmbo method)": [[63, "smac.main.base_smbo.BaseSMBO.get_next_configurations"]], "incumbent (smac.main.base_smbo.basesmbo property)": [[63, "smac.main.base_smbo.BaseSMBO.incumbent"]], "optimize() (smac.main.base_smbo.basesmbo method)": [[63, "smac.main.base_smbo.BaseSMBO.optimize"]], "runhistory (smac.main.base_smbo.basesmbo property)": [[63, "smac.main.base_smbo.BaseSMBO.runhistory"]], "save() (smac.main.base_smbo.basesmbo method)": [[63, "smac.main.base_smbo.BaseSMBO.save"]], "smac.main.base_smbo": [[63, "module-smac.main.base_smbo"]], "stats (smac.main.base_smbo.basesmbo property)": [[63, "smac.main.base_smbo.BaseSMBO.stats"]], "tell() (smac.main.base_smbo.basesmbo method)": [[63, "smac.main.base_smbo.BaseSMBO.tell"]], "update_acquisition_function() (smac.main.base_smbo.basesmbo method)": [[63, "smac.main.base_smbo.BaseSMBO.update_acquisition_function"]], "update_model() (smac.main.base_smbo.basesmbo method)": [[63, "smac.main.base_smbo.BaseSMBO.update_model"]], "validate() (smac.main.base_smbo.basesmbo method)": [[63, "smac.main.base_smbo.BaseSMBO.validate"]], "smac.main.boing": [[64, "module-smac.main.boing"]], "smbo (class in smac.main.smbo)": [[65, "smac.main.smbo.SMBO"]], "ask() (smac.main.smbo.smbo method)": [[65, "smac.main.smbo.SMBO.ask"]], "get_next_configurations() (smac.main.smbo.smbo method)": [[65, "smac.main.smbo.SMBO.get_next_configurations"]], "smac.main.smbo": [[65, "module-smac.main.smbo"]], "tell() (smac.main.smbo.smbo method)": [[65, "smac.main.smbo.SMBO.tell"]], "smac.main.turbo": [[66, "module-smac.main.turbo"]], "abstractmodel (class in smac.model)": [[67, "smac.model.AbstractModel"]], "multiobjectivemodel (class in smac.model)": [[67, "smac.model.MultiObjectiveModel"]], "randommodel (class in smac.model)": [[67, "smac.model.RandomModel"]], "meta (smac.model.abstractmodel property)": [[67, "smac.model.AbstractModel.meta"]], "models (smac.model.multiobjectivemodel property)": [[67, "smac.model.MultiObjectiveModel.models"]], "predict() (smac.model.abstractmodel method)": [[67, "smac.model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstractmodel method)": [[67, "smac.model.AbstractModel.predict_marginalized"]], "predict_marginalized() (smac.model.multiobjectivemodel method)": [[67, "smac.model.MultiObjectiveModel.predict_marginalized"]], "smac.model": [[67, "module-smac.model"]], "train() (smac.model.abstractmodel method)": [[67, "smac.model.AbstractModel.train"]], "abstractmodel (class in smac.model.abstract_model)": [[68, "smac.model.abstract_model.AbstractModel"]], "meta (smac.model.abstract_model.abstractmodel property)": [[68, "smac.model.abstract_model.AbstractModel.meta"]], "predict() (smac.model.abstract_model.abstractmodel method)": [[68, "smac.model.abstract_model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstract_model.abstractmodel method)": [[68, "smac.model.abstract_model.AbstractModel.predict_marginalized"]], "smac.model.abstract_model": [[68, "module-smac.model.abstract_model"]], "train() (smac.model.abstract_model.abstractmodel method)": [[68, "smac.model.abstract_model.AbstractModel.train"]], "abstractgaussianprocess (class in smac.model.gaussian_process)": [[69, "smac.model.gaussian_process.AbstractGaussianProcess"]], "gaussianprocess (class in smac.model.gaussian_process)": [[69, "smac.model.gaussian_process.GaussianProcess"]], "mcmcgaussianprocess (class in smac.model.gaussian_process)": [[69, "smac.model.gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.abstractgaussianprocess property)": [[69, "smac.model.gaussian_process.AbstractGaussianProcess.meta"]], "meta (smac.model.gaussian_process.gaussianprocess property)": [[69, "smac.model.gaussian_process.GaussianProcess.meta"]], "meta (smac.model.gaussian_process.mcmcgaussianprocess property)": [[69, "smac.model.gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmcgaussianprocess property)": [[69, "smac.model.gaussian_process.MCMCGaussianProcess.models"]], "sample_functions() (smac.model.gaussian_process.gaussianprocess method)": [[69, "smac.model.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process": [[69, "module-smac.model.gaussian_process"]], "abstractgaussianprocess (class in smac.model.gaussian_process.abstract_gaussian_process)": [[70, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess"]], "meta (smac.model.gaussian_process.abstract_gaussian_process.abstractgaussianprocess property)": [[70, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess.meta"]], "smac.model.gaussian_process.abstract_gaussian_process": [[70, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "gaussianprocess (class in smac.model.gaussian_process.gaussian_process)": [[71, "smac.model.gaussian_process.gaussian_process.GaussianProcess"]], "meta (smac.model.gaussian_process.gaussian_process.gaussianprocess property)": [[71, "smac.model.gaussian_process.gaussian_process.GaussianProcess.meta"]], "sample_functions() (smac.model.gaussian_process.gaussian_process.gaussianprocess method)": [[71, "smac.model.gaussian_process.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[71, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[72, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "abstractkernel (class in smac.model.gaussian_process.kernels)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels)": [[73, "smac.model.gaussian_process.kernels.ConstantKernel"]], "hammingkernel (class in smac.model.gaussian_process.kernels)": [[73, "smac.model.gaussian_process.kernels.HammingKernel"]], "maternkernel (class in smac.model.gaussian_process.kernels)": [[73, "smac.model.gaussian_process.kernels.MaternKernel"]], "productkernel (class in smac.model.gaussian_process.kernels)": [[73, "smac.model.gaussian_process.kernels.ProductKernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels)": [[73, "smac.model.gaussian_process.kernels.RBFKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels)": [[73, "smac.model.gaussian_process.kernels.SumKernel"]], "whitekernel (class in smac.model.gaussian_process.kernels)": [[73, "smac.model.gaussian_process.kernels.WhiteKernel"]], "__call__() (smac.model.gaussian_process.kernels.abstractkernel method)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.constantkernel method)": [[73, "smac.model.gaussian_process.kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.productkernel method)": [[73, "smac.model.gaussian_process.kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.sumkernel method)": [[73, "smac.model.gaussian_process.kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.abstractkernel method)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel.has_conditions"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hammingkernel property)": [[73, "smac.model.gaussian_process.kernels.HammingKernel.hyperparameter_length_scale"]], "hyperparameters (smac.model.gaussian_process.kernels.abstractkernel property)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.abstractkernel property)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel.meta"]], "meta (smac.model.gaussian_process.kernels.hammingkernel property)": [[73, "smac.model.gaussian_process.kernels.HammingKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.abstractkernel property)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[73, "smac.model.gaussian_process.kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels": [[73, "module-smac.model.gaussian_process.kernels"]], "abstractkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[74, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel"]], "productkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[74, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[74, "smac.model.gaussian_process.kernels.base_kernels.SumKernel"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.constantkernel method)": [[74, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.productkernel method)": [[74, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.sumkernel method)": [[74, "smac.model.gaussian_process.kernels.base_kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.has_conditions"]], "hyperparameters (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[74, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels.base_kernels": [[74, "module-smac.model.gaussian_process.kernels.base_kernels"]], "hammingkernel (class in smac.model.gaussian_process.kernels.hamming_kernel)": [[75, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[75, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.hyperparameter_length_scale"]], "meta (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[75, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[75, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "maternkernel (class in smac.model.gaussian_process.kernels.matern_kernel)": [[76, "smac.model.gaussian_process.kernels.matern_kernel.MaternKernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[76, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels.rbf_kernel)": [[77, "smac.model.gaussian_process.kernels.rbf_kernel.RBFKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[77, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "whitekernel (class in smac.model.gaussian_process.kernels.white_kernel)": [[78, "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[78, "module-smac.model.gaussian_process.kernels.white_kernel"]], "mcmcgaussianprocess (class in smac.model.gaussian_process.mcmc_gaussian_process)": [[79, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[79, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[79, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.models"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[79, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "gammaprior (class in smac.model.gaussian_process.priors)": [[80, "smac.model.gaussian_process.priors.GammaPrior"]], "horseshoeprior (class in smac.model.gaussian_process.priors)": [[80, "smac.model.gaussian_process.priors.HorseshoePrior"]], "lognormalprior (class in smac.model.gaussian_process.priors)": [[80, "smac.model.gaussian_process.priors.LogNormalPrior"]], "softtophatprior (class in smac.model.gaussian_process.priors)": [[80, "smac.model.gaussian_process.priors.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors)": [[80, "smac.model.gaussian_process.priors.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.softtophatprior method)": [[80, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophatprior method)": [[80, "smac.model.gaussian_process.priors.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.softtophatprior method)": [[80, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.gammaprior property)": [[80, "smac.model.gaussian_process.priors.GammaPrior.meta"]], "meta (smac.model.gaussian_process.priors.horseshoeprior property)": [[80, "smac.model.gaussian_process.priors.HorseshoePrior.meta"]], "meta (smac.model.gaussian_process.priors.lognormalprior property)": [[80, "smac.model.gaussian_process.priors.LogNormalPrior.meta"]], "meta (smac.model.gaussian_process.priors.softtophatprior property)": [[80, "smac.model.gaussian_process.priors.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophatprior property)": [[80, "smac.model.gaussian_process.priors.TophatPrior.meta"]], "smac.model.gaussian_process.priors": [[80, "module-smac.model.gaussian_process.priors"]], "abstractprior (class in smac.model.gaussian_process.priors.abstract_prior)": [[81, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior"]], "get_gradient() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[81, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[81, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.abstract_prior.abstractprior property)": [[81, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.meta"]], "sample_from_prior() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[81, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.sample_from_prior"]], "smac.model.gaussian_process.priors.abstract_prior": [[81, "module-smac.model.gaussian_process.priors.abstract_prior"]], "gammaprior (class in smac.model.gaussian_process.priors.gamma_prior)": [[82, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior"]], "meta (smac.model.gaussian_process.priors.gamma_prior.gammaprior property)": [[82, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior.meta"]], "smac.model.gaussian_process.priors.gamma_prior": [[82, "module-smac.model.gaussian_process.priors.gamma_prior"]], "horseshoeprior (class in smac.model.gaussian_process.priors.horseshoe_prior)": [[83, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior"]], "meta (smac.model.gaussian_process.priors.horseshoe_prior.horseshoeprior property)": [[83, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior.meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[83, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "lognormalprior (class in smac.model.gaussian_process.priors.log_normal_prior)": [[84, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior"]], "meta (smac.model.gaussian_process.priors.log_normal_prior.lognormalprior property)": [[84, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior.meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[84, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "softtophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[85, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[85, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[85, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.tophatprior method)": [[85, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[85, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.tophat_prior.softtophatprior property)": [[85, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophat_prior.tophatprior property)": [[85, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[85, "module-smac.model.gaussian_process.priors.tophat_prior"]], "multiobjectivemodel (class in smac.model.multi_objective_model)": [[86, "smac.model.multi_objective_model.MultiObjectiveModel"]], "models (smac.model.multi_objective_model.multiobjectivemodel property)": [[86, "smac.model.multi_objective_model.MultiObjectiveModel.models"]], "predict_marginalized() (smac.model.multi_objective_model.multiobjectivemodel method)": [[86, "smac.model.multi_objective_model.MultiObjectiveModel.predict_marginalized"]], "smac.model.multi_objective_model": [[86, "module-smac.model.multi_objective_model"]], "abstractrandomforest (class in smac.model.random_forest)": [[87, "smac.model.random_forest.AbstractRandomForest"]], "randomforest (class in smac.model.random_forest)": [[87, "smac.model.random_forest.RandomForest"]], "meta (smac.model.random_forest.randomforest property)": [[87, "smac.model.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.randomforest method)": [[87, "smac.model.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest": [[87, "module-smac.model.random_forest"]], "abstractrandomforest (class in smac.model.random_forest.abstract_random_forest)": [[88, "smac.model.random_forest.abstract_random_forest.AbstractRandomForest"]], "smac.model.random_forest.abstract_random_forest": [[88, "module-smac.model.random_forest.abstract_random_forest"]], "randomforest (class in smac.model.random_forest.random_forest)": [[89, "smac.model.random_forest.random_forest.RandomForest"]], "meta (smac.model.random_forest.random_forest.randomforest property)": [[89, "smac.model.random_forest.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.random_forest.randomforest method)": [[89, "smac.model.random_forest.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest.random_forest": [[89, "module-smac.model.random_forest.random_forest"]], "randommodel (class in smac.model.random_model)": [[90, "smac.model.random_model.RandomModel"]], "smac.model.random_model": [[90, "module-smac.model.random_model"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective)": [[91, "smac.multi_objective.AbstractMultiObjectiveAlgorithm"]], "meanaggregationstrategy (class in smac.multi_objective)": [[91, "smac.multi_objective.MeanAggregationStrategy"]], "parego (class in smac.multi_objective)": [[91, "smac.multi_objective.ParEGO"]], "__call__() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[91, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.__call__"]], "__call__() (smac.multi_objective.meanaggregationstrategy method)": [[91, "smac.multi_objective.MeanAggregationStrategy.__call__"]], "__call__() (smac.multi_objective.parego method)": [[91, "smac.multi_objective.ParEGO.__call__"]], "meta (smac.multi_objective.abstractmultiobjectivealgorithm property)": [[91, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.meta"]], "meta (smac.multi_objective.meanaggregationstrategy property)": [[91, "smac.multi_objective.MeanAggregationStrategy.meta"]], "meta (smac.multi_objective.parego property)": [[91, "smac.multi_objective.ParEGO.meta"]], "smac.multi_objective": [[91, "module-smac.multi_objective"]], "update_on_iteration_start() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[91, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "update_on_iteration_start() (smac.multi_objective.parego method)": [[91, "smac.multi_objective.ParEGO.update_on_iteration_start"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective.abstract_multi_objective_algorithm)": [[92, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm"]], "__call__() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[92, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.__call__"]], "meta (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm property)": [[92, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[92, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "update_on_iteration_start() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[92, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "meanaggregationstrategy (class in smac.multi_objective.aggregation_strategy)": [[93, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy"]], "__call__() (smac.multi_objective.aggregation_strategy.meanaggregationstrategy method)": [[93, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.__call__"]], "meta (smac.multi_objective.aggregation_strategy.meanaggregationstrategy property)": [[93, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.meta"]], "smac.multi_objective.aggregation_strategy": [[93, "module-smac.multi_objective.aggregation_strategy"]], "parego (class in smac.multi_objective.parego)": [[94, "smac.multi_objective.parego.ParEGO"]], "__call__() (smac.multi_objective.parego.parego method)": [[94, "smac.multi_objective.parego.ParEGO.__call__"]], "meta (smac.multi_objective.parego.parego property)": [[94, "smac.multi_objective.parego.ParEGO.meta"]], "smac.multi_objective.parego": [[94, "module-smac.multi_objective.parego"]], "update_on_iteration_start() (smac.multi_objective.parego.parego method)": [[94, "smac.multi_objective.parego.ParEGO.update_on_iteration_start"]], "abstractrandomdesign (class in smac.random_design)": [[95, "smac.random_design.AbstractRandomDesign"]], "cosineannealingrandomdesign (class in smac.random_design)": [[95, "smac.random_design.CosineAnnealingRandomDesign"]], "dynamicmodulusrandomdesign (class in smac.random_design)": [[95, "smac.random_design.DynamicModulusRandomDesign"]], "dynamicprobabilityrandomdesign (class in smac.random_design)": [[95, "smac.random_design.DynamicProbabilityRandomDesign"]], "modulusrandomdesign (class in smac.random_design)": [[95, "smac.random_design.ModulusRandomDesign"]], "probabilityrandomdesign (class in smac.random_design)": [[95, "smac.random_design.ProbabilityRandomDesign"]], "check() (smac.random_design.abstractrandomdesign method)": [[95, "smac.random_design.AbstractRandomDesign.check"]], "check() (smac.random_design.cosineannealingrandomdesign method)": [[95, "smac.random_design.CosineAnnealingRandomDesign.check"]], "check() (smac.random_design.dynamicmodulusrandomdesign method)": [[95, "smac.random_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.dynamicprobabilityrandomdesign method)": [[95, "smac.random_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.modulusrandomdesign method)": [[95, "smac.random_design.ModulusRandomDesign.check"]], "check() (smac.random_design.probabilityrandomdesign method)": [[95, "smac.random_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.abstractrandomdesign property)": [[95, "smac.random_design.AbstractRandomDesign.meta"]], "meta (smac.random_design.cosineannealingrandomdesign property)": [[95, "smac.random_design.CosineAnnealingRandomDesign.meta"]], "meta (smac.random_design.dynamicmodulusrandomdesign property)": [[95, "smac.random_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.dynamicprobabilityrandomdesign property)": [[95, "smac.random_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.modulusrandomdesign property)": [[95, "smac.random_design.ModulusRandomDesign.meta"]], "meta (smac.random_design.probabilityrandomdesign property)": [[95, "smac.random_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.abstractrandomdesign method)": [[95, "smac.random_design.AbstractRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.cosineannealingrandomdesign method)": [[95, "smac.random_design.CosineAnnealingRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicmodulusrandomdesign method)": [[95, "smac.random_design.DynamicModulusRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicprobabilityrandomdesign method)": [[95, "smac.random_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design": [[95, "module-smac.random_design"]], "abstractrandomdesign (class in smac.random_design.abstract_random_design)": [[96, "smac.random_design.abstract_random_design.AbstractRandomDesign"]], "check() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[96, "smac.random_design.abstract_random_design.AbstractRandomDesign.check"]], "meta (smac.random_design.abstract_random_design.abstractrandomdesign property)": [[96, "smac.random_design.abstract_random_design.AbstractRandomDesign.meta"]], "next_iteration() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[96, "smac.random_design.abstract_random_design.AbstractRandomDesign.next_iteration"]], "smac.random_design.abstract_random_design": [[96, "module-smac.random_design.abstract_random_design"]], "cosineannealingrandomdesign (class in smac.random_design.annealing_design)": [[97, "smac.random_design.annealing_design.CosineAnnealingRandomDesign"]], "check() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[97, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.check"]], "meta (smac.random_design.annealing_design.cosineannealingrandomdesign property)": [[97, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.meta"]], "next_iteration() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[97, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.next_iteration"]], "smac.random_design.annealing_design": [[97, "module-smac.random_design.annealing_design"]], "dynamicmodulusrandomdesign (class in smac.random_design.modulus_design)": [[98, "smac.random_design.modulus_design.DynamicModulusRandomDesign"]], "modulusrandomdesign (class in smac.random_design.modulus_design)": [[98, "smac.random_design.modulus_design.ModulusRandomDesign"]], "check() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[98, "smac.random_design.modulus_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.modulus_design.modulusrandomdesign method)": [[98, "smac.random_design.modulus_design.ModulusRandomDesign.check"]], "meta (smac.random_design.modulus_design.dynamicmodulusrandomdesign property)": [[98, "smac.random_design.modulus_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.modulus_design.modulusrandomdesign property)": [[98, "smac.random_design.modulus_design.ModulusRandomDesign.meta"]], "next_iteration() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[98, "smac.random_design.modulus_design.DynamicModulusRandomDesign.next_iteration"]], "smac.random_design.modulus_design": [[98, "module-smac.random_design.modulus_design"]], "dynamicprobabilityrandomdesign (class in smac.random_design.probability_design)": [[99, "smac.random_design.probability_design.DynamicProbabilityRandomDesign"]], "probabilityrandomdesign (class in smac.random_design.probability_design)": [[99, "smac.random_design.probability_design.ProbabilityRandomDesign"]], "check() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[99, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.probability_design.probabilityrandomdesign method)": [[99, "smac.random_design.probability_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.probability_design.dynamicprobabilityrandomdesign property)": [[99, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.probability_design.probabilityrandomdesign property)": [[99, "smac.random_design.probability_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[99, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design.probability_design": [[99, "module-smac.random_design.probability_design"]], "dataorigin (class in smac.runhistory)": [[100, "smac.runhistory.DataOrigin"]], "instanceseedbudgetkey (class in smac.runhistory)": [[100, "smac.runhistory.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory)": [[100, "smac.runhistory.InstanceSeedKey"]], "runhistory (class in smac.runhistory)": [[100, "smac.runhistory.RunHistory"]], "statustype (class in smac.runhistory)": [[100, "smac.runhistory.StatusType"]], "trialinfo (class in smac.runhistory)": [[100, "smac.runhistory.TrialInfo"]], "trialinfointent (class in smac.runhistory)": [[100, "smac.runhistory.TrialInfoIntent"]], "trialkey (class in smac.runhistory)": [[100, "smac.runhistory.TrialKey"]], "trialvalue (class in smac.runhistory)": [[100, "smac.runhistory.TrialValue"]], "__contains__() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.add"]], "average_cost() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory property)": [[100, "smac.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.empty"]], "get_config() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.get_config"]], "get_configs() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.get_cost"]], "get_incumbent() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.get_incumbent"]], "get_min_cost() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.get_min_cost"]], "get_pareto_front() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.get_pareto_front"]], "get_trials() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory property)": [[100, "smac.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.incremental_update_cost"]], "load_json() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.load_json"]], "min_cost() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory property)": [[100, "smac.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory property)": [[100, "smac.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.reset"]], "save_json() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.save_json"]], "smac.runhistory": [[100, "module-smac.runhistory"]], "sum_cost() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory method)": [[100, "smac.runhistory.RunHistory.update_from_json"]], "instanceseedbudgetkey (class in smac.runhistory.dataclasses)": [[101, "smac.runhistory.dataclasses.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory.dataclasses)": [[101, "smac.runhistory.dataclasses.InstanceSeedKey"]], "trajectoryitem (class in smac.runhistory.dataclasses)": [[101, "smac.runhistory.dataclasses.TrajectoryItem"]], "trialinfo (class in smac.runhistory.dataclasses)": [[101, "smac.runhistory.dataclasses.TrialInfo"]], "trialkey (class in smac.runhistory.dataclasses)": [[101, "smac.runhistory.dataclasses.TrialKey"]], "trialvalue (class in smac.runhistory.dataclasses)": [[101, "smac.runhistory.dataclasses.TrialValue"]], "smac.runhistory.dataclasses": [[101, "module-smac.runhistory.dataclasses"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.AbstractRunHistoryEncoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistoryEIPSEncoder"]], "runhistoryencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistoryEncoder"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder"]], "runhistorylogencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistoryLogEncoder"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistoryLogScaledEncoder"]], "runhistoryrawencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistoryRawEncoder"]], "runhistoryrawscaledencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistoryRawScaledEncoder"]], "runhistoryscaledencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistoryScaledEncoder"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder)": [[102, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder"]], "get_configurations() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[102, "smac.runhistory.encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[102, "smac.runhistory.encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[102, "smac.runhistory.encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "smac.runhistory.encoder": [[102, "module-smac.runhistory.encoder"]], "transform() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[102, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform"]], "transform_raw_values() (smac.runhistory.encoder.runhistoryrawencoder method)": [[102, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_raw_values"]], "transform_raw_values() (smac.runhistory.encoder.runhistoryrawscaledencoder method)": [[102, "smac.runhistory.encoder.RunHistoryRawScaledEncoder.transform_raw_values"]], "transform_response_values() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[102, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryeipsencoder method)": [[102, "smac.runhistory.encoder.RunHistoryEIPSEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryencoder method)": [[102, "smac.runhistory.encoder.RunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryinversescaledencoder method)": [[102, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogencoder method)": [[102, "smac.runhistory.encoder.RunHistoryLogEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogscaledencoder method)": [[102, "smac.runhistory.encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryrawencoder method)": [[102, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryscaledencoder method)": [[102, "smac.runhistory.encoder.RunHistoryScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorysqrtscaledencoder method)": [[102, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "transform_with_raw() (smac.runhistory.encoder.runhistoryrawencoder method)": [[102, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_with_raw"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder.abstract_encoder)": [[103, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder"]], "get_configurations() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[103, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[103, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[103, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "smac.runhistory.encoder.abstract_encoder": [[103, "module-smac.runhistory.encoder.abstract_encoder"]], "transform() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[103, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[103, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform_response_values"]], "runhistoryrawencoder (class in smac.runhistory.encoder.boing_encoder)": [[104, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder"]], "runhistoryrawscaledencoder (class in smac.runhistory.encoder.boing_encoder)": [[104, "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder": [[104, "module-smac.runhistory.encoder.boing_encoder"]], "transform_raw_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[104, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_raw_values"]], "transform_raw_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawscaledencoder method)": [[104, "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder.transform_raw_values"]], "transform_response_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[104, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_response_values"]], "transform_with_raw() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[104, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_with_raw"]], "runhistoryeipsencoder (class in smac.runhistory.encoder.eips_encoder)": [[105, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder": [[105, "module-smac.runhistory.encoder.eips_encoder"]], "transform_response_values() (smac.runhistory.encoder.eips_encoder.runhistoryeipsencoder method)": [[105, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder.transform_response_values"]], "runhistoryencoder (class in smac.runhistory.encoder.encoder)": [[106, "smac.runhistory.encoder.encoder.RunHistoryEncoder"]], "smac.runhistory.encoder.encoder": [[106, "module-smac.runhistory.encoder.encoder"]], "transform_response_values() (smac.runhistory.encoder.encoder.runhistoryencoder method)": [[106, "smac.runhistory.encoder.encoder.RunHistoryEncoder.transform_response_values"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder.inverse_scaled_encoder)": [[107, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[107, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.inverse_scaled_encoder.runhistoryinversescaledencoder method)": [[107, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "runhistorylogencoder (class in smac.runhistory.encoder.log_encoder)": [[108, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder": [[108, "module-smac.runhistory.encoder.log_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_encoder.runhistorylogencoder method)": [[108, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder.transform_response_values"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder.log_scaled_encoder)": [[109, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[109, "module-smac.runhistory.encoder.log_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_scaled_encoder.runhistorylogscaledencoder method)": [[109, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "runhistoryscaledencoder (class in smac.runhistory.encoder.scaled_encoder)": [[110, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder": [[110, "module-smac.runhistory.encoder.scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.scaled_encoder.runhistoryscaledencoder method)": [[110, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder.transform_response_values"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder.sqrt_scaled_encoder)": [[111, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[111, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.sqrt_scaled_encoder.runhistorysqrtscaledencoder method)": [[111, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "dataorigin (class in smac.runhistory.enumerations)": [[112, "smac.runhistory.enumerations.DataOrigin"]], "statustype (class in smac.runhistory.enumerations)": [[112, "smac.runhistory.enumerations.StatusType"]], "trialinfointent (class in smac.runhistory.enumerations)": [[112, "smac.runhistory.enumerations.TrialInfoIntent"]], "smac.runhistory.enumerations": [[112, "module-smac.runhistory.enumerations"]], "runhistory (class in smac.runhistory.runhistory)": [[113, "smac.runhistory.runhistory.RunHistory"]], "__contains__() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.add"]], "average_cost() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory.runhistory property)": [[113, "smac.runhistory.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.empty"]], "get_config() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.get_config"]], "get_configs() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.get_cost"]], "get_incumbent() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.get_incumbent"]], "get_min_cost() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.get_min_cost"]], "get_pareto_front() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.get_pareto_front"]], "get_trials() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory.runhistory property)": [[113, "smac.runhistory.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.incremental_update_cost"]], "load_json() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.load_json"]], "min_cost() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory.runhistory property)": [[113, "smac.runhistory.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory.runhistory property)": [[113, "smac.runhistory.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.reset"]], "save_json() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.save_json"]], "smac.runhistory.runhistory": [[113, "module-smac.runhistory.runhistory"]], "sum_cost() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory.runhistory method)": [[113, "smac.runhistory.runhistory.RunHistory.update_from_json"]], "abstractrunner (class in smac.runner)": [[114, "smac.runner.AbstractRunner"]], "daskparallelrunner (class in smac.runner)": [[114, "smac.runner.DaskParallelRunner"]], "firstruncrashedexception": [[114, "smac.runner.FirstRunCrashedException"], [117, "smac.runner.exceptions.FirstRunCrashedException"]], "targetalgorithmabortexception": [[114, "smac.runner.TargetAlgorithmAbortException"], [117, "smac.runner.exceptions.TargetAlgorithmAbortException"]], "targetfunctionrunner (class in smac.runner)": [[114, "smac.runner.TargetFunctionRunner"]], "__call__() (smac.runner.targetfunctionrunner method)": [[114, "smac.runner.TargetFunctionRunner.__call__"]], "__del__() (smac.runner.daskparallelrunner method)": [[114, "smac.runner.DaskParallelRunner.__del__"]], "close() (smac.runner.daskparallelrunner method)": [[114, "smac.runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.abstractrunner method)": [[114, "smac.runner.AbstractRunner.count_available_workers"]], "count_available_workers() (smac.runner.daskparallelrunner method)": [[114, "smac.runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.abstractrunner method)": [[114, "smac.runner.AbstractRunner.is_running"]], "is_running() (smac.runner.daskparallelrunner method)": [[114, "smac.runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.abstractrunner method)": [[114, "smac.runner.AbstractRunner.iter_results"]], "iter_results() (smac.runner.daskparallelrunner method)": [[114, "smac.runner.DaskParallelRunner.iter_results"]], "meta (smac.runner.abstractrunner property)": [[114, "smac.runner.AbstractRunner.meta"]], "meta (smac.runner.targetfunctionrunner property)": [[114, "smac.runner.TargetFunctionRunner.meta"]], "run() (smac.runner.abstractrunner method)": [[114, "smac.runner.AbstractRunner.run"]], "run() (smac.runner.daskparallelrunner method)": [[114, "smac.runner.DaskParallelRunner.run"]], "run() (smac.runner.targetfunctionrunner method)": [[114, "smac.runner.TargetFunctionRunner.run"]], "run_wrapper() (smac.runner.abstractrunner method)": [[114, "smac.runner.AbstractRunner.run_wrapper"]], "smac.runner": [[114, "module-smac.runner"]], "submit_trial() (smac.runner.abstractrunner method)": [[114, "smac.runner.AbstractRunner.submit_trial"]], "submit_trial() (smac.runner.daskparallelrunner method)": [[114, "smac.runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.abstractrunner method)": [[114, "smac.runner.AbstractRunner.wait"]], "wait() (smac.runner.daskparallelrunner method)": [[114, "smac.runner.DaskParallelRunner.wait"]], "abstractrunner (class in smac.runner.abstract_runner)": [[115, "smac.runner.abstract_runner.AbstractRunner"]], "count_available_workers() (smac.runner.abstract_runner.abstractrunner method)": [[115, "smac.runner.abstract_runner.AbstractRunner.count_available_workers"]], "is_running() (smac.runner.abstract_runner.abstractrunner method)": [[115, "smac.runner.abstract_runner.AbstractRunner.is_running"]], "iter_results() (smac.runner.abstract_runner.abstractrunner method)": [[115, "smac.runner.abstract_runner.AbstractRunner.iter_results"]], "meta (smac.runner.abstract_runner.abstractrunner property)": [[115, "smac.runner.abstract_runner.AbstractRunner.meta"]], "run() (smac.runner.abstract_runner.abstractrunner method)": [[115, "smac.runner.abstract_runner.AbstractRunner.run"]], "run_wrapper() (smac.runner.abstract_runner.abstractrunner method)": [[115, "smac.runner.abstract_runner.AbstractRunner.run_wrapper"]], "smac.runner.abstract_runner": [[115, "module-smac.runner.abstract_runner"]], "submit_trial() (smac.runner.abstract_runner.abstractrunner method)": [[115, "smac.runner.abstract_runner.AbstractRunner.submit_trial"]], "wait() (smac.runner.abstract_runner.abstractrunner method)": [[115, "smac.runner.abstract_runner.AbstractRunner.wait"]], "daskparallelrunner (class in smac.runner.dask_runner)": [[116, "smac.runner.dask_runner.DaskParallelRunner"]], "__del__() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.__del__"]], "close() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.iter_results"]], "run() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.run"]], "smac.runner.dask_runner": [[116, "module-smac.runner.dask_runner"]], "submit_trial() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.dask_runner.daskparallelrunner method)": [[116, "smac.runner.dask_runner.DaskParallelRunner.wait"]], "smac.runner.exceptions": [[117, "module-smac.runner.exceptions"]], "serialrunner (class in smac.runner.serial_runner)": [[118, "smac.runner.serial_runner.SerialRunner"]], "count_available_workers() (smac.runner.serial_runner.serialrunner method)": [[118, "smac.runner.serial_runner.SerialRunner.count_available_workers"]], "is_running() (smac.runner.serial_runner.serialrunner method)": [[118, "smac.runner.serial_runner.SerialRunner.is_running"]], "iter_results() (smac.runner.serial_runner.serialrunner method)": [[118, "smac.runner.serial_runner.SerialRunner.iter_results"]], "smac.runner.serial_runner": [[118, "module-smac.runner.serial_runner"]], "submit_trial() (smac.runner.serial_runner.serialrunner method)": [[118, "smac.runner.serial_runner.SerialRunner.submit_trial"]], "wait() (smac.runner.serial_runner.serialrunner method)": [[118, "smac.runner.serial_runner.SerialRunner.wait"]], "targetfunctionrunner (class in smac.runner.target_function_runner)": [[119, "smac.runner.target_function_runner.TargetFunctionRunner"]], "__call__() (smac.runner.target_function_runner.targetfunctionrunner method)": [[119, "smac.runner.target_function_runner.TargetFunctionRunner.__call__"]], "meta (smac.runner.target_function_runner.targetfunctionrunner property)": [[119, "smac.runner.target_function_runner.TargetFunctionRunner.meta"]], "run() (smac.runner.target_function_runner.targetfunctionrunner method)": [[119, "smac.runner.target_function_runner.TargetFunctionRunner.run"]], "smac.runner.target_function_runner": [[119, "module-smac.runner.target_function_runner"]], "targetfunctionscriptrunner (class in smac.runner.target_function_script_runner)": [[120, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner"]], "__call__() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[120, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.__call__"]], "meta (smac.runner.target_function_script_runner.targetfunctionscriptrunner property)": [[120, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.meta"]], "run() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[120, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.run"]], "smac.runner.target_function_script_runner": [[120, "module-smac.runner.target_function_script_runner"]], "scenario (class in smac.scenario)": [[121, "smac.scenario.Scenario"]], "__post_init__() (smac.scenario.scenario method)": [[121, "smac.scenario.Scenario.__post_init__"]], "count_instance_features() (smac.scenario.scenario method)": [[121, "smac.scenario.Scenario.count_instance_features"]], "count_objectives() (smac.scenario.scenario method)": [[121, "smac.scenario.Scenario.count_objectives"]], "load() (smac.scenario.scenario static method)": [[121, "smac.scenario.Scenario.load"]], "make_serializable() (smac.scenario.scenario static method)": [[121, "smac.scenario.Scenario.make_serializable"]], "meta (smac.scenario.scenario property)": [[121, "smac.scenario.Scenario.meta"]], "save() (smac.scenario.scenario method)": [[121, "smac.scenario.Scenario.save"]], "smac.scenario": [[121, "module-smac.scenario"]], "smac.utils": [[122, "module-smac.utils"]], "convert_configurations_to_array() (in module smac.utils.configspace)": [[123, "smac.utils.configspace.convert_configurations_to_array"]], "get_conditional_hyperparameters() (in module smac.utils.configspace)": [[123, "smac.utils.configspace.get_conditional_hyperparameters"]], "get_types() (in module smac.utils.configspace)": [[123, "smac.utils.configspace.get_types"]], "smac.utils.configspace": [[123, "module-smac.utils.configspace"]], "recursively_compare_dicts() (in module smac.utils.data_structures)": [[124, "smac.utils.data_structures.recursively_compare_dicts"]], "smac.utils.data_structures": [[124, "module-smac.utils.data_structures"]], "format_array() (in module smac.utils.logging)": [[125, "smac.utils.logging.format_array"]], "get_logger() (in module smac.utils.logging)": [[125, "smac.utils.logging.get_logger"]], "setup_logging() (in module smac.utils.logging)": [[125, "smac.utils.logging.setup_logging"]], "smac.utils.logging": [[125, "module-smac.utils.logging"]], "normalize_costs() (in module smac.utils.multi_objective)": [[126, "smac.utils.multi_objective.normalize_costs"]], "smac.utils.multi_objective": [[126, "module-smac.utils.multi_objective"]], "smac.utils.subspaces": [[127, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[128, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[129, "module-smac.utils.subspaces.turbo_subspace"]]}})