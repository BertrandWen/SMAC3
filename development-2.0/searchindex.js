Search.setIndex({"docnames": ["advanced_usage/callbacks", "advanced_usage/index", "advanced_usage/resumption", "api", "api/smac.acquisition", "api/smac.acquisition.abstract_acqusition_optimizer", "api/smac.acquisition.differential_evolution", "api/smac.acquisition.functions", "api/smac.acquisition.functions.abstract_acquisition_function", "api/smac.acquisition.functions.confidence_bound", "api/smac.acquisition.functions.expected_improvement", "api/smac.acquisition.functions.integrated", "api/smac.acquisition.functions.prior", "api/smac.acquisition.functions.probability_improvement", "api/smac.acquisition.functions.thompson", "api/smac.acquisition.local_and_random_search", "api/smac.acquisition.local_search", "api/smac.acquisition.random_search", "api/smac.callback", "api/smac.configspace", "api/smac.configspace.util", "api/smac.constants", "api/smac.facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.boing_facade", "api/smac.facade.facade", "api/smac.facade.hyperparameter_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.initial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensification", "api/smac.intensification.abstract_intensifier", "api/smac.intensification.hyperband", "api/smac.intensification.hyperband_worker", "api/smac.intensification.intensification", "api/smac.intensification.parallel_scheduling", "api/smac.intensification.simple_intensifier", "api/smac.intensification.stages", "api/smac.intensification.successive_halving", "api/smac.intensification.successive_halving_worker", "api/smac.main", "api/smac.main.base_smbo", "api/smac.main.boing", "api/smac.main.smbo", "api/smac.main.turbo", "api/smac.model", "api/smac.model.base_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.base_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.boing", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.utils", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.imputer", "api/smac.model.imputer.abstract_imputer", "api/smac.model.imputer.random_forest_imputer", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.base_random_forest", "api/smac.model.random_forest.multi_objective_random_forest", "api/smac.model.random_forest.random_forest_with_instances", "api/smac.model.random_model", "api/smac.model.utils", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.multi_objective.utils", "api/smac.random_design", "api/smac.random_design.cosine_annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.random_design.random_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inversed_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.runner", "api/smac.runner.serial_runner", "api/smac.runner.target_algorithm_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.stats", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "conventions", "examples/1_basics/1_synthetic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_evaluated_configs", "examples/1_basics/4_full_customization", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/4_commandline/index", "examples/index", "faq", "getting_started", "glossary", "index", "installation", "license", "minimal_example", "package_overview"], "filenames": ["advanced_usage/callbacks.rst", "advanced_usage/index.rst", "advanced_usage/resumption.rst", "api.rst", "api/smac.acquisition.rst", "api/smac.acquisition.abstract_acqusition_optimizer.rst", "api/smac.acquisition.differential_evolution.rst", "api/smac.acquisition.functions.rst", "api/smac.acquisition.functions.abstract_acquisition_function.rst", "api/smac.acquisition.functions.confidence_bound.rst", "api/smac.acquisition.functions.expected_improvement.rst", "api/smac.acquisition.functions.integrated.rst", "api/smac.acquisition.functions.prior.rst", "api/smac.acquisition.functions.probability_improvement.rst", "api/smac.acquisition.functions.thompson.rst", "api/smac.acquisition.local_and_random_search.rst", "api/smac.acquisition.local_search.rst", "api/smac.acquisition.random_search.rst", "api/smac.callback.rst", "api/smac.configspace.rst", "api/smac.configspace.util.rst", "api/smac.constants.rst", "api/smac.facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.boing_facade.rst", "api/smac.facade.facade.rst", "api/smac.facade.hyperparameter_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.initial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensification.rst", "api/smac.intensification.abstract_intensifier.rst", "api/smac.intensification.hyperband.rst", "api/smac.intensification.hyperband_worker.rst", "api/smac.intensification.intensification.rst", "api/smac.intensification.parallel_scheduling.rst", "api/smac.intensification.simple_intensifier.rst", "api/smac.intensification.stages.rst", "api/smac.intensification.successive_halving.rst", "api/smac.intensification.successive_halving_worker.rst", "api/smac.main.rst", "api/smac.main.base_smbo.rst", "api/smac.main.boing.rst", "api/smac.main.smbo.rst", "api/smac.main.turbo.rst", "api/smac.model.rst", "api/smac.model.base_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.base_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.boing.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.utils.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.imputer.rst", "api/smac.model.imputer.abstract_imputer.rst", "api/smac.model.imputer.random_forest_imputer.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.base_random_forest.rst", "api/smac.model.random_forest.multi_objective_random_forest.rst", "api/smac.model.random_forest.random_forest_with_instances.rst", "api/smac.model.random_model.rst", "api/smac.model.utils.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.multi_objective.utils.rst", "api/smac.random_design.rst", "api/smac.random_design.cosine_annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.random_design.random_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inversed_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.runner.rst", "api/smac.runner.serial_runner.rst", "api/smac.runner.target_algorithm_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.stats.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "conventions.rst", "examples/1_basics/1_synthetic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_evaluated_configs.rst", "examples/1_basics/4_full_customization.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/4_commandline/index.rst", "examples/index.rst", "faq.rst", "getting_started.rst", "glossary.rst", "index.rst", "installation.rst", "license.rst", "minimal_example.rst", "package_overview.rst"], "titles": ["Callbacks", "Advanced Usage", "Resumption", "API References", "smac.acquisition", "smac.acquisition.abstract_acqusition_optimizer", "smac.acquisition.differential_evolution", "smac.acquisition.functions", "smac.acquisition.functions.abstract_acquisition_function", "smac.acquisition.functions.confidence_bound", "smac.acquisition.functions.expected_improvement", "smac.acquisition.functions.integrated", "smac.acquisition.functions.prior", "smac.acquisition.functions.probability_improvement", "smac.acquisition.functions.thompson", "smac.acquisition.local_and_random_search", "smac.acquisition.local_search", "smac.acquisition.random_search", "smac.callback", "smac.configspace", "smac.configspace.util", "smac.constants", "smac.facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.boing_facade", "smac.facade.facade", "smac.facade.hyperparameter_facade", "smac.facade.multi_fidelity_facade", "smac.initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.initial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensification", "smac.intensification.abstract_intensifier", "smac.intensification.hyperband", "smac.intensification.hyperband_worker", "smac.intensification.intensification", "smac.intensification.parallel_scheduling", "smac.intensification.simple_intensifier", "smac.intensification.stages", "smac.intensification.successive_halving", "smac.intensification.successive_halving_worker", "smac.main", "smac.main.base_smbo", "smac.main.boing", "smac.main.smbo", "smac.main.turbo", "smac.model", "smac.model.base_model", "smac.model.gaussian_process", "smac.model.gaussian_process.base_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.boing", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.utils", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.imputer", "smac.model.imputer.abstract_imputer", "smac.model.imputer.random_forest_imputer", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.base_random_forest", "smac.model.random_forest.multi_objective_random_forest", "smac.model.random_forest.random_forest_with_instances", "smac.model.random_model", "smac.model.utils", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.multi_objective.utils", "smac.random_design", "smac.random_design.cosine_annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.random_design.random_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inversed_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.runhistory", "smac.runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.runner", "smac.runner.serial_runner", "smac.runner.target_algorithm_runner", "smac.scenario", "smac.utils", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.stats", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "&lt;no title&gt;", "Synthetic Function", "Support Vector Machine with Cross-Validation", "Start with Pre-Evaluated Configurations", "Full Customization", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function", "Multi-Objective", "Computation times", "Commandline", "Examples", "F.A.Q.", "Getting Started", "Glossary", "Home", "Installation", "License", "Minimal Example", "Package Overview"], "terms": {"provid": [0, 5, 29, 32, 36, 44, 45, 92, 104, 106, 107, 121, 122, 127, 128, 131, 135, 136, 137, 142, 143], "abil": 0, "easili": [0, 112], "execut": [0, 36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 94, 95, 106, 107, 109, 111, 126, 127, 128, 130, 133, 136, 143], "code": [0, 2, 4, 15, 53, 54, 55, 65, 106, 107, 116, 121, 122, 123, 124, 127, 128, 131, 135, 136, 142], "befor": [0, 4, 7, 8, 15, 16, 22, 26, 36, 38, 39, 40, 41, 44, 45, 53, 65, 87, 89, 94, 95, 96, 106, 107, 109, 110, 115, 127, 136], "insid": [0, 25, 48, 81, 118, 140], "after": [0, 7, 8, 36, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 74, 76, 79, 87, 89, 94, 95, 127], "bayesian": [0, 7, 11, 12, 22, 25, 26, 36, 42, 46, 47, 48, 49, 50, 53, 54, 55, 65, 70, 87, 89, 117, 119, 138, 139, 143], "optim": [0, 4, 7, 9, 11, 12, 14, 15, 19, 22, 25, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 65, 70, 82, 83, 84, 87, 89, 92, 94, 95, 104, 112, 117, 118, 119, 121, 122, 123, 127, 128, 131, 136, 137, 138, 139, 142, 143], "loop": [0, 22, 25, 26, 36, 40, 42, 46, 47, 48, 106, 109], "To": [0, 2, 36, 38, 40, 41, 106, 107, 127, 136, 140], "add": [0, 19, 45, 92, 105, 117, 119, 122, 123, 127, 128, 136, 140], "you": [0, 2, 53, 65, 106, 107, 112, 122, 136, 137, 139, 140, 141, 143], "have": [0, 4, 15, 19, 25, 36, 41, 48, 51, 52, 53, 54, 55, 56, 59, 65, 75, 76, 78, 79, 80, 92, 104, 105, 106, 107, 109, 122, 128, 136, 140, 141], "inherit": 0, "from": [0, 2, 4, 5, 15, 19, 22, 25, 26, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 65, 70, 72, 73, 74, 75, 76, 78, 79, 80, 92, 105, 106, 107, 109, 112, 116, 117, 121, 122, 123, 127, 128, 131, 136, 137, 138, 140, 142, 143], "smac": [0, 1, 2, 121, 122, 123, 127, 128, 131, 135, 136, 137, 138, 139, 140, 142, 143], "overwrit": [0, 22, 23, 24, 26, 27, 28, 76, 79, 92, 105, 121, 122, 123, 127, 128, 131], "abstract": [0, 4, 5, 7, 8, 22, 26, 36, 37, 46, 47, 51, 52, 70, 73, 75, 82, 83, 84, 87, 91, 94, 95, 106, 107, 109, 119], "method": [0, 4, 5, 7, 8, 11, 19, 22, 26, 36, 37, 38, 39, 40, 44, 45, 46, 47, 49, 70, 76, 79, 92, 105, 106, 107, 109, 110, 127, 128], "afterward": 0, "can": [0, 4, 5, 7, 14, 16, 19, 22, 26, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 49, 51, 52, 53, 65, 75, 76, 78, 82, 83, 84, 92, 94, 96, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 121, 122, 127, 136, 138, 139, 140, 141, 143], "pass": [0, 22, 26, 29, 31, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 59, 65, 73, 75, 76, 78, 79, 80, 86, 106, 107, 109, 110, 111, 112, 117, 122, 127, 128, 136], "ani": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 26, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 75, 76, 78, 79, 82, 83, 85, 87, 88, 89, 90, 91, 94, 95, 106, 107, 109, 110, 111, 117, 136, 141, 143], "facad": [0, 112, 121, 122, 123, 127, 128, 131, 136, 142, 143], "import": [0, 72, 73, 74, 121, 122, 123, 127, 128, 131, 136, 137, 142], "multifidelityfacad": [0, 22, 28, 127, 128, 137], "class": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128], "customcallback": 0, "def": [0, 73, 74, 121, 122, 123, 127, 128, 131, 137, 142], "on_start": 0, "self": [0, 4, 5, 36, 40, 48, 51, 52, 53, 65, 70, 73, 74, 75, 76, 78, 82, 83, 87, 88, 92, 105, 106, 107, 109, 110, 111, 117, 121, 122, 123, 127, 128], "smbo": [0, 22, 26, 36, 40, 41, 46, 47, 48, 50, 87, 88, 89, 90, 91, 92, 104, 106, 107, 109, 110, 138], "none": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 118, 119, 122, 123, 127, 128, 131], "abstractmethod": [0, 73], "on_end": 0, "on_iteration_start": 0, "on_iteration_end": 0, "info": [0, 36, 37, 92, 105, 106, 109, 116, 121, 122, 123, 127, 128, 131], "runinfo": [0, 36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 92, 93, 104, 106, 107, 109, 110], "valu": [0, 7, 8, 9, 10, 11, 12, 13, 14, 19, 25, 36, 38, 39, 41, 43, 44, 45, 48, 50, 51, 52, 53, 54, 55, 56, 59, 65, 70, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 115, 117, 119, 121, 122, 123, 127, 137], "runvalu": [0, 36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 92, 93, 105, 106, 107, 109, 110], "bool": [0, 7, 10, 12, 19, 22, 25, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 53, 54, 55, 65, 76, 79, 81, 87, 88, 89, 90, 91, 92, 94, 95, 105, 106, 107, 109, 110, 112, 115, 116, 117], "we": [0, 4, 5, 7, 14, 25, 36, 37, 39, 40, 41, 42, 45, 48, 51, 52, 53, 54, 55, 56, 59, 65, 70, 74, 75, 76, 78, 79, 80, 94, 95, 106, 107, 109, 116, 117, 118, 119, 121, 122, 123, 127, 128, 135, 136, 137, 139, 140], "just": 0, "do": [0, 2, 7, 14, 25, 36, 37, 40, 41, 44, 45, 48, 106, 107, 109, 110, 122], "simpl": [0, 92, 104, 122, 131, 138], "print": [0, 115, 116, 121, 122, 123, 127, 128], "here": [0, 7, 14, 36, 44, 56, 87, 88, 89, 90, 91, 117, 121, 122, 123, 124, 127, 128, 131, 136, 139], "thi": [1, 4, 5, 7, 8, 11, 15, 19, 22, 25, 26, 29, 32, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 65, 70, 74, 76, 79, 87, 89, 92, 94, 96, 105, 106, 107, 108, 109, 110, 112, 117, 118, 119, 123, 127, 128, 136, 137, 139, 141, 143], "chapter": [1, 138], "give": [1, 19, 36, 41, 92, 104, 106, 109, 112, 118], "more": [1, 36, 37, 38, 40, 41, 48, 81, 106, 107, 109, 137, 140, 142, 143], "detail": [1, 7, 11, 12, 25, 36, 38, 40, 48, 119, 136, 137, 138, 140, 143], "singl": [1, 19, 36, 39, 44, 45, 76, 79, 82, 84, 85, 92, 105, 106, 107, 109, 110, 122, 138, 142], "compon": [1, 22, 25, 26, 51, 52, 53, 54, 55, 65, 75, 76, 79, 80, 137], "automat": [2, 106, 107], "resum": 2, "where": [2, 4, 7, 8, 12, 15, 19, 36, 40, 48, 51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 81, 106, 107, 109, 117, 128, 136, 137, 138], "left": [2, 7, 10, 46, 47, 49], "off": [2, 7, 9, 10, 13, 14, 76, 79, 137], "wa": [2, 19, 36, 37, 39, 40, 41, 42, 45, 92, 104, 106, 107], "interrupt": 2, "so": [2, 7, 9, 13, 14, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 106, 107, 109, 110, 115, 116, 127], "read": [2, 36, 42, 92, 105, 138, 140], "file": [2, 22, 26, 50, 92, 105, 106, 109, 112, 116, 126, 130, 133, 136, 138, 141, 143], "derivid": 2, "scenario": [2, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 74, 94, 95, 96, 97, 98, 100, 101, 102, 106, 109, 110, 116, 121, 122, 123, 127, 128, 131, 136, 142], "": [2, 4, 15, 16, 25, 36, 37, 40, 51, 52, 53, 54, 55, 65, 70, 74, 75, 76, 78, 79, 80, 106, 107, 109, 110, 112, 115, 121, 123, 127, 128, 136, 138, 143], "name": [2, 19, 22, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 75, 76, 78, 92, 105, 106, 109, 112], "output_directori": [2, 106, 107, 112, 137], "seed": [2, 4, 5, 6, 15, 16, 17, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112, 121, 122, 123, 127, 128, 131, 136, 138], "set": [2, 7, 11, 19, 25, 36, 38, 39, 40, 41, 44, 45, 51, 52, 53, 54, 55, 56, 65, 74, 75, 76, 79, 80, 86, 87, 88, 90, 92, 94, 95, 96, 104, 105, 106, 107, 111, 112, 116, 118, 119, 127, 128, 136, 138, 140, 143], "intern": [2, 19, 36, 37, 38, 41, 44, 45, 92, 104, 105, 106, 107, 109, 110, 112, 127, 143], "state": [2, 29, 32, 36, 37, 40, 46, 47, 49, 87, 88, 89, 90, 91, 94, 95, 117, 136], "If": [2, 4, 5, 7, 12, 25, 29, 32, 36, 37, 39, 41, 44, 45, 48, 50, 51, 52, 56, 76, 79, 86, 87, 89, 92, 94, 95, 105, 106, 107, 112, 115, 117, 122, 128, 136, 139, 140, 141], "chang": [2, 19, 36, 37, 39, 40, 41, 42, 45, 74, 92, 105, 121, 122, 123, 127, 128, 131], "specifi": [2, 4, 5, 15, 22, 26, 51, 52, 53, 54, 55, 56, 65, 75, 76, 78, 79, 80, 112, 115, 127, 128, 137], "ask": [2, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50], "whether": [2, 7, 10, 12, 22, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 92, 104, 105, 106, 107, 109, 110, 112, 116], "still": [2, 92, 104, 106, 107, 109, 110, 136], "want": [2, 7, 14, 25, 48, 122, 123, 127, 128, 136, 137, 139], "delet": [2, 106, 107], "old": [2, 92, 105], "run": [2, 22, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 73, 74, 92, 94, 95, 104, 105, 106, 107, 108, 109, 110, 111, 112, 116, 121, 122, 123, 124, 127, 128, 131, 136, 137, 138], "complet": [2, 36, 41, 46, 47, 49, 106, 107, 109, 110], "gener": [2, 5, 19, 22, 26, 29, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 59, 70, 82, 83, 92, 104, 106, 107, 109, 110, 112, 117, 122, 123, 136, 138, 139], "new": [2, 5, 19, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 59, 73, 74, 92, 105, 117, 118, 119, 121, 122, 131, 136, 138], "i": [2, 4, 5, 7, 11, 12, 15, 19, 22, 25, 26, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 65, 70, 74, 75, 76, 78, 79, 80, 81, 86, 87, 88, 89, 90, 92, 94, 95, 96, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 121, 122, 123, 127, 128, 131, 136, 137, 138, 139, 140, 141, 143], "affect": 2, "abstractacquisitionoptim": [4, 5, 6, 15, 16, 17, 48], "configspac": [4, 5, 6, 15, 16, 17, 29, 32, 51, 52, 53, 54, 55, 56, 65, 75, 76, 77, 78, 79, 80, 81, 92, 105, 112, 121, 122, 123, 127, 128, 131, 137, 142], "acquisition_funct": [4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 22, 23, 24, 26, 27, 28, 46, 47], "challeng": [4, 5, 6, 15, 16, 17, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 87, 91, 106, 109, 117, 121, 122, 123, 127, 128, 131], "5000": [4, 5, 6, 15, 16, 17, 50, 119, 128], "0": [4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 105, 106, 107, 109, 110, 111, 112, 119, 121, 122, 123, 124, 126, 127, 128, 130, 131, 133, 136], "sourc": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 131, 135], "base": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 122, 123, 128, 136, 137, 138, 139], "object": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 26, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 70, 76, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 105, 106, 107, 109, 110, 112, 116, 118, 121, 122, 123, 127, 128, 131, 138, 142, 143], "maxim": [4, 5, 7, 8, 9, 14, 16, 25, 29, 32, 48, 50, 92, 105, 118, 119], "In": [4, 5, 19, 22, 26, 36, 40, 53, 54, 55, 65, 70, 92, 105, 106, 107, 109, 110, 112, 128, 137, 139], "order": [4, 5, 19, 36, 38, 39, 41, 44, 45, 94, 95, 112], "us": [4, 5, 7, 8, 11, 14, 15, 19, 22, 25, 26, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 65, 70, 74, 75, 76, 79, 80, 87, 88, 89, 90, 91, 92, 94, 95, 99, 100, 101, 103, 104, 105, 106, 107, 109, 111, 112, 115, 116, 117, 118, 119, 121, 122, 123, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 143], "ha": [4, 5, 46, 47, 49, 51, 52, 117, 119, 140, 143], "subclass": [4, 5, 22, 26, 94, 95], "_maxim": [4, 5], "must": [4, 5, 19, 29, 32, 51, 52, 70, 106, 107, 112, 140], "implement": [4, 5, 7, 8, 11, 15, 16, 19, 25, 36, 38, 39, 44, 45, 46, 47, 51, 52, 53, 54, 55, 65, 73, 76, 79, 106, 107, 109, 110, 111, 118, 127, 136], "paramet": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 25, 26, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 65, 66, 70, 71, 75, 76, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 115, 116, 117, 118, 119, 121, 122, 123, 127, 128, 137, 138, 139], "configurationspac": [4, 5, 15, 16, 19, 29, 32, 51, 52, 75, 76, 78, 80, 117, 121, 122, 123, 127, 128, 131, 138, 142, 143], "abstractacquisitionfunct": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 25, 46, 47, 48, 117], "int": [4, 5, 7, 9, 14, 15, 16, 19, 22, 25, 26, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 65, 70, 74, 75, 76, 78, 79, 80, 81, 87, 88, 89, 90, 91, 92, 94, 95, 105, 106, 107, 109, 110, 111, 112, 116, 117, 119, 122, 123, 127, 128], "default": [4, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 20, 22, 26, 29, 30, 32, 36, 37, 38, 39, 41, 44, 45, 86, 92, 105, 106, 107, 109, 110, 112, 115, 121, 122, 123, 127, 128, 136, 137], "get_meta": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 22, 26, 29, 32, 34, 36, 37, 38, 40, 41, 42, 44, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 76, 79, 82, 83, 85, 87, 88, 89, 90, 91, 94, 95, 106, 107, 109, 112], "return": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 25, 26, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 121, 122, 123, 127, 128, 131, 137, 138, 142], "meta": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 26, 29, 32, 34, 36, 37, 38, 40, 41, 42, 44, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 76, 79, 82, 83, 85, 87, 88, 89, 90, 91, 94, 95, 106, 107, 109, 112, 142], "data": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 26, 29, 32, 34, 36, 37, 38, 40, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 74, 76, 79, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 95, 104, 105, 106, 107, 109, 110, 112, 117, 119, 122, 123, 127, 128, 131, 138, 142], "creat": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 74, 76, 79, 82, 83, 85, 87, 88, 89, 90, 91, 94, 95, 106, 107, 109, 118, 122, 123, 127, 128, 136, 140], "type": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 122, 127, 128, 131], "dict": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 25, 26, 29, 32, 34, 36, 37, 38, 40, 41, 42, 44, 46, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 75, 76, 78, 79, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 95, 105, 106, 107, 109, 110, 111, 112, 117, 118, 128, 131], "str": [4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 26, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 74, 75, 76, 78, 79, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 95, 105, 106, 107, 109, 110, 111, 112, 128, 131], "previous_config": [4, 5], "num_point": [4, 5], "random_design": [4, 5, 22, 23, 24, 26, 27, 28, 46, 47], "function": [4, 5, 15, 19, 20, 25, 36, 40, 42, 46, 47, 48, 49, 50, 53, 54, 55, 56, 59, 63, 65, 81, 82, 83, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 114, 115, 117, 118, 119, 125, 126, 128, 132, 133, 135, 137, 142, 143], "list": [4, 5, 7, 8, 19, 20, 22, 26, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 91, 92, 94, 95, 96, 105, 106, 107, 109, 110, 111, 112, 115, 117, 128, 131, 136], "configur": [4, 5, 7, 8, 15, 17, 19, 20, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 66, 70, 71, 75, 76, 78, 79, 80, 87, 88, 89, 90, 91, 92, 94, 95, 96, 104, 105, 106, 107, 109, 110, 111, 112, 116, 117, 119, 121, 122, 125, 126, 127, 128, 131, 135, 136, 138, 139, 142, 143], "previou": [4, 5, 15, 22, 26, 48, 136], "evalu": [4, 5, 7, 8, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 48, 87, 88, 89, 90, 91, 92, 94, 95, 96, 105, 106, 111, 119, 121, 122, 125, 126, 127, 128, 131, 135, 136, 138, 142, 143], "number": [4, 5, 7, 9, 12, 14, 15, 16, 19, 25, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 65, 70, 74, 75, 76, 78, 79, 80, 81, 87, 89, 92, 94, 95, 104, 105, 106, 107, 109, 110, 112, 116, 117, 119, 122, 127, 128, 138, 142, 143], "point": [4, 5, 7, 9, 14, 15, 48, 50, 51, 52, 53, 54, 55, 56, 74, 76, 79, 81, 118, 119, 131], "sampl": [4, 5, 7, 14, 15, 17, 19, 25, 36, 37, 40, 42, 46, 47, 48, 51, 52, 53, 54, 55, 56, 65, 70, 112, 121, 122, 131, 137, 143], "randomconfigurationchoos": [4, 5], "option": [4, 5, 19, 22, 25, 26, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 73, 74, 75, 80, 81, 86, 92, 94, 95, 105, 106, 107, 108, 118, 136], "part": [4, 5, 19], "challengerlist": [4, 5], "interleav": [4, 5, 15, 87, 88, 89, 90, 91], "random": [4, 5, 7, 12, 15, 17, 19, 25, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 70, 74, 76, 78, 79, 80, 87, 88, 89, 90, 91, 92, 94, 95, 105, 106, 109, 110, 112, 117, 122, 123, 127, 137, 138, 139, 140, 142, 143], "scheme": [4, 5, 106, 109], "defin": [4, 5, 7, 12, 15, 19, 22, 26, 43, 53, 54, 55, 70, 74, 92, 104, 105, 106, 109, 112, 121, 122, 123, 127, 128, 137, 142], "next_iter": [4, 5, 87, 88, 89, 90, 91], "call": [4, 5, 7, 8, 11, 16, 36, 37, 40, 51, 52, 70, 80, 82, 83, 106, 107, 109, 110, 111, 115, 121, 122, 123, 127, 136], "end": [4, 5, 19, 36, 40, 92, 105], "an": [4, 5, 7, 8, 11, 19, 20, 22, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 51, 52, 53, 54, 55, 56, 59, 65, 75, 76, 78, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 94, 95, 105, 106, 107, 108, 109, 110, 121, 122, 123, 127, 128, 136, 137, 138, 139, 140, 143], "iter": [4, 5, 15, 16, 19, 29, 32, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 74, 87, 88, 89, 90, 91, 92, 105, 106, 109, 117, 122, 127, 128, 138], "consist": [4, 5, 7, 14, 51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 127, 128, 139], "differentialevolut": [4, 6], "get": [4, 6, 17, 19, 36, 41, 106, 107, 128, 140], "candid": [4, 6, 17, 46, 47, 48, 49, 50, 119], "solut": [4, 6, 17, 46, 47, 48, 49, 50, 136], "via": [4, 6, 17, 36, 37, 46, 47, 49, 50, 51, 75, 76, 78, 106, 107, 109, 110, 119, 140], "differentialevolutionsolv": [4, 6], "localandsortedpriorrandomsearch": [4, 15], "uniform_configspac": [4, 15], "max_step": [4, 15, 16], "n_steps_plateau_walk": [4, 15, 16], "10": [4, 7, 12, 15, 16, 29, 30, 31, 32, 33, 34, 35, 36, 40, 53, 54, 55, 56, 74, 76, 79, 121, 122, 123, 127, 131, 140, 142], "local_search_iter": [4, 15], "prior_sampling_fract": [4, 15], "5": [4, 15, 19, 25, 36, 37, 38, 39, 40, 41, 44, 45, 48, 57, 61, 94, 95, 96, 97, 98, 100, 101, 102, 106, 107, 121, 122, 123, 127, 128, 131, 139, 142], "perform": [4, 15, 16, 25, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 52, 76, 79, 92, 94, 95, 105, 106, 109, 112, 117, 119, 128, 136, 137, 138, 139, 142, 143], "local": [4, 15, 16, 25, 36, 41, 48, 50, 94, 96, 106, 107, 117, 119], "search": [4, 7, 11, 12, 15, 16, 19, 25, 48, 59, 121, 137], "best": [4, 7, 9, 10, 13, 14, 15, 22, 25, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 121, 122, 128, 137, 138], "accord": [4, 15, 25, 87, 88, 90, 119], "sort": [4, 15], "randomli": [4, 15, 48], "ar": [4, 5, 7, 8, 10, 15, 19, 22, 25, 26, 29, 32, 36, 37, 38, 39, 40, 44, 45, 51, 53, 54, 55, 56, 65, 70, 74, 75, 76, 78, 79, 81, 86, 92, 94, 95, 105, 106, 107, 109, 110, 111, 112, 115, 117, 121, 123, 127, 128, 136, 137, 138], "main": [4, 15, 106, 107, 139], "The": [4, 7, 8, 15, 19, 25, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 65, 66, 70, 71, 75, 76, 78, 79, 80, 87, 89, 92, 94, 96, 105, 106, 107, 109, 110, 111, 112, 115, 117, 119, 121, 122, 127, 128, 131, 136, 137, 139, 140, 142, 143], "retriev": [4, 15, 19, 51, 52, 121, 122, 127, 128, 131], "two": [4, 15, 19, 25, 36, 44, 45, 76, 79, 123, 128, 136, 137, 139], "differ": [4, 15, 22, 25, 26, 36, 37, 38, 40, 43, 48, 51, 52, 53, 54, 55, 65, 74, 75, 76, 78, 79, 80, 82, 83, 92, 104, 106, 109, 112, 127, 128, 136, 137, 138], "one": [4, 5, 15, 19, 36, 40, 44, 45, 46, 47, 51, 53, 65, 75, 92, 94, 99, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 115, 128, 136, 143], "which": [4, 5, 7, 8, 15, 19, 22, 26, 36, 38, 39, 40, 41, 42, 45, 46, 47, 49, 51, 56, 80, 81, 82, 84, 87, 88, 90, 92, 104, 106, 107, 109, 111, 112, 115, 117, 122, 123, 127, 128, 136, 137, 138, 139], "prior": [4, 7, 15, 19, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64], "e": [4, 7, 10, 11, 15, 19, 36, 38, 39, 41, 44, 45, 46, 47, 74, 106, 109, 128, 140, 143], "g": [4, 7, 11, 15, 74, 128, 143], "normalfloathp": [4, 15], "user": [4, 7, 12, 15, 22, 26, 36, 38, 39, 41, 44, 45, 106, 107], "uniform": [4, 15, 19], "version": [4, 15, 136, 140], "same": [4, 15, 19, 25, 36, 40, 48, 56, 59, 73, 74, 76, 79, 86, 92, 104, 105, 117, 136], "space": [4, 7, 9, 10, 12, 15, 19, 25, 29, 32, 48, 51, 52, 59, 66, 70, 71, 75, 76, 78, 80, 92, 94, 95, 105, 112, 117, 119, 121, 122, 123, 127, 128, 143], "remov": [4, 7, 12, 15, 19, 92, 105], "origin": [4, 15, 19, 36, 41, 70, 92, 105, 116, 117, 136, 139], "A": [4, 15, 19, 25, 36, 37, 39, 40, 41, 42, 45, 51, 53, 54, 55, 56, 59, 65, 70, 75, 76, 78, 82, 83, 84, 94, 96, 106, 107, 109, 110, 117, 131, 138, 139, 141], "all": [4, 7, 12, 15, 19, 22, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 65, 70, 73, 74, 75, 76, 78, 79, 92, 94, 95, 96, 105, 106, 107, 108, 109, 110, 112, 116, 117, 121, 122, 123, 127, 128, 135, 136], "weight": [4, 7, 12, 15, 19], "case": [4, 7, 12, 15, 19, 22, 26, 36, 39, 40, 92, 105, 106, 107, 109, 110, 112, 128, 135, 143], "categor": [4, 15, 48, 51, 52, 53, 54, 55, 56, 59, 65, 75, 76, 78, 79, 80, 81, 117, 122, 123, 127, 128, 143], "hyperparamet": [4, 7, 11, 12, 15, 19, 20, 22, 25, 26, 36, 38, 39, 44, 45, 48, 51, 53, 54, 55, 57, 59, 60, 63, 65, 66, 70, 71, 75, 76, 78, 79, 81, 117, 119, 121, 122, 123, 127, 137, 138, 139, 142, 143], "localsearch": [4, 15, 16], "maximum": [4, 15, 16, 25, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 74, 76, 79, 87, 88, 89, 112], "step": [4, 15, 16, 53, 65, 106, 110, 115, 127, 128], "dure": [4, 15, 16, 36, 40, 76, 79, 92, 104, 106, 109, 116, 136], "plateau": [4, 15, 16], "walk": [4, 15, 16], "termin": [4, 15, 16, 106, 107], "float": [4, 7, 9, 10, 11, 12, 13, 14, 15, 19, 25, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 66, 70, 71, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 105, 106, 107, 109, 110, 111, 112, 115, 116, 117, 119, 121, 122, 123, 127, 128, 131, 137, 142], "ratio": [4, 15, 76, 79], "taken": [4, 15, 94, 95], "oppos": [4, 15], "prior_random_search": [4, 15], "over": [4, 7, 9, 11, 12, 13, 14, 15, 19, 36, 37, 40, 41, 51, 52, 53, 65, 75, 76, 79, 87, 89, 90, 92, 105, 106, 110], "randomsearch": [4, 7, 14, 15, 17], "uniform_random_search": [4, 15], "ov": [4, 15], "rthe": [4, 15], "normal": [4, 7, 13, 15, 36, 40, 53, 54, 55, 65, 82, 84, 85, 86, 92, 105, 117], "local_search": [4, 15], "localandsortedrandomsearch": [4, 7, 14, 15], "defaut": [4, 15], "random_search": [4, 7, 14, 15], "vectorization_min_obtain": [4, 16], "2": [4, 7, 9, 16, 36, 40, 48, 50, 51, 52, 53, 54, 55, 56, 65, 74, 75, 76, 78, 79, 80, 87, 89, 94, 95, 96, 97, 98, 100, 101, 102, 106, 107, 117, 119, 121, 122, 123, 127, 128, 131, 138, 142], "vectorization_max_obtain": [4, 16], "64": [4, 16, 140], "minim": [4, 16, 36, 37, 38, 39, 40, 41, 44, 45, 48, 87, 88, 92, 105, 119, 137], "neighbor": [4, 16, 19], "obtain": [4, 16, 46, 47, 49, 53, 54, 55, 70], "onc": [4, 16, 36, 38, 39, 41, 44, 45, 127, 140], "each": [4, 5, 7, 11, 12, 16, 19, 36, 37, 38, 39, 40, 41, 44, 45, 51, 53, 54, 55, 56, 65, 75, 87, 90, 92, 105, 106, 107, 112, 118, 137, 138], "vector": [4, 16, 19, 51, 52, 94, 95, 96, 117, 119, 125, 126, 135], "tune": [4, 16, 36, 40, 51, 52, 53, 65, 75, 76, 78, 80], "reduc": [4, 5, 16, 51, 52, 53, 54, 55, 65, 75, 76, 79, 80, 106, 107], "overhead": [4, 16], "modul": [4, 7, 19, 22, 29, 36, 46, 51, 53, 56, 57, 66, 72, 76, 82, 87, 92, 94, 105, 106, 113, 117], "challenger_callback": 5, "configuration_spac": [5, 19], "modulus_design": 5, "nocooldownrandomdesign": [5, 87, 89], "helper": [5, 87, 91], "second": [5, 25, 46, 47, 49, 51, 52, 53, 54, 55, 59, 65, 75, 76, 78, 79, 80, 106, 107, 111, 112, 121, 122, 123, 124, 127, 128, 131], "time": [5, 29, 32, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 59, 74, 87, 89, 90, 92, 93, 94, 95, 96, 105, 106, 109, 110, 112, 115, 116, 118, 121, 122, 123, 124, 127, 128, 131, 136, 137], "necessari": [5, 19, 20, 36, 37, 39, 40, 106, 107, 109, 110], "doe": [5, 7, 14, 36, 40, 87, 89, 90, 106, 107, 118, 136], "need": [5, 22, 26, 36, 40, 41, 44, 56, 59, 81, 106, 107, 109, 110, 111, 128, 137], "sever": [5, 135, 143], "hundr": 5, "never": [5, 74], "look": [5, 19, 136], "callabl": [5, 22, 26, 106, 109], "callback": [5, 22, 23, 24, 26, 27, 28], "without": [5, 19, 36, 42, 74, 106, 111, 141, 143], "closur": 5, "http": [5, 7, 9, 11, 12, 25, 29, 35, 36, 44, 45, 50, 119, 139, 140, 141], "www": 5, "programiz": 5, "com": [5, 139, 140], "python": [5, 53, 54, 55, 65, 70, 106, 111, 121, 122, 123, 124, 127, 128, 131, 135, 136, 139, 140, 143], "program": [5, 92, 104, 106, 107, 141], "fixedset": 5, "model": [7, 8, 9, 10, 11, 12, 13, 14, 19, 22, 23, 24, 25, 26, 27, 28, 46, 47, 48, 49, 106, 107, 112, 117, 118, 119, 121, 122, 128, 136, 137, 138, 139, 142, 143], "basemodel": [7, 8, 9, 10, 13, 14, 22, 25, 26, 48, 51, 52, 53, 54, 74, 75, 76, 77, 80], "__call__": [7, 8, 82, 83, 84, 85, 106, 111], "comput": [7, 8, 9, 10, 11, 13, 19, 29, 32, 46, 47, 56, 59, 66, 70, 71, 92, 105, 115], "given": [7, 8, 9, 10, 13, 14, 19, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 48, 50, 51, 52, 56, 59, 81, 86, 87, 88, 90, 92, 105, 106, 107, 109, 111, 117, 121, 123, 128, 131, 138, 142], "x": [7, 8, 9, 10, 11, 13, 14, 29, 32, 48, 50, 51, 52, 56, 59, 63, 74, 75, 76, 79, 81, 94, 95, 96, 117, 119, 121, 131], "should": [7, 8, 19, 22, 26, 36, 37, 39, 40, 46, 47, 49, 74, 87, 88, 89, 90, 91, 92, 94, 95, 104, 105, 106, 110, 112, 121, 136, 141], "np": [7, 8, 10, 19, 20, 29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 59, 65, 66, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 112, 115, 117, 119, 122, 123, 127, 128, 131, 142], "ndarrai": [7, 8, 19, 20, 45, 48, 51, 52, 53, 54, 55, 56, 59, 63, 65, 70, 73, 74, 75, 76, 79, 80, 81, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 115, 117, 119, 128], "n": [7, 8, 14, 36, 40, 48, 53, 54, 55, 56, 59, 65, 70, 73, 74, 81, 106, 107, 117, 119, 140], "1": [7, 8, 9, 10, 12, 13, 19, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 73, 74, 76, 79, 86, 94, 95, 96, 97, 98, 100, 101, 102, 106, 107, 109, 112, 119, 121, 122, 123, 127, 128, 131, 137, 142], "updat": [7, 8, 9, 10, 11, 12, 13, 14, 36, 37, 39, 40, 41, 42, 45, 56, 92, 105, 116, 117, 121, 122, 123, 131, 140], "kwarg": [7, 8, 9, 10, 11, 12, 13, 14, 25, 46, 48, 49, 50, 51, 56, 59, 75, 76, 78, 94, 99, 103, 106, 111], "attribut": [7, 8, 9, 10, 11, 12, 13, 14, 56, 115, 116], "requir": [7, 8, 9, 10, 12, 13, 14, 19, 25, 36, 44, 45, 48, 50, 51, 52, 53, 54, 55, 65, 75, 76, 79, 80, 106, 107, 112, 118, 119, 128, 136], "calcul": [7, 8, 9, 10, 12, 13, 14, 36, 41, 44, 45, 92, 105, 128], "fit": [7, 8, 19, 25, 48, 51, 80, 117, 137, 141, 142], "As": [7, 8, 19, 36, 42, 106, 110], "exampl": [7, 8, 22, 26, 36, 37, 44, 92, 104, 106, 109, 112, 121, 122, 123, 124, 127, 128, 131, 136, 137, 138], "ei": [7, 8, 10, 11, 25, 48, 117, 118, 143], "current": [7, 8, 10, 11, 12, 13, 19, 22, 26, 36, 37, 39, 40, 41, 42, 45, 46, 47, 53, 54, 55, 56, 74, 87, 90, 92, 94, 95, 104, 105, 116, 138, 140], "fmin": [7, 8, 11], "onli": [7, 8, 14, 25, 29, 30, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 51, 52, 56, 59, 74, 75, 76, 78, 79, 92, 94, 95, 104, 105, 106, 107, 112, 115, 117, 122, 123, 127, 128, 136, 138, 143], "acqusit": [7, 8, 137], "alreadi": [7, 8, 36, 40, 92, 105, 123, 136], "present": [7, 8, 25], "xi": [7, 10, 13], "log": [7, 9, 10, 22, 26, 36, 37, 39, 40, 41, 42, 45, 53, 54, 55, 66, 70, 71, 74, 76, 79, 94, 97, 100, 101, 116, 122, 123, 127, 128], "fals": [7, 10, 12, 19, 22, 23, 24, 25, 26, 27, 28, 36, 37, 39, 40, 41, 42, 45, 48, 53, 57, 58, 59, 60, 61, 62, 64, 65, 76, 79, 81, 92, 105, 112, 117, 122, 123, 136], "expect": [7, 10, 22, 26, 45, 76, 79, 106, 109, 110, 136, 143], "improv": [7, 10, 13, 137, 143], "mathbb": [7, 10], "max": [7, 10, 74, 86, 122, 123, 127, 128, 142], "f": [7, 10, 13, 53, 54, 55, 56, 65, 70, 74, 121, 122, 123, 127, 128, 139], "mathbf": [7, 9, 10, 13, 14], "f_": [7, 10, 13], "t": [7, 9, 10, 13, 14, 19, 29, 31, 33, 35, 119, 136, 140, 143], "right": [7, 10, 19], "locat": [7, 10, 136], "control": [7, 9, 10, 13, 36, 44, 45, 122], "balanc": [7, 9, 10, 13], "between": [7, 9, 10, 13, 19, 25, 48, 51, 52, 74, 76, 79, 94, 99, 101, 102, 103], "explor": [7, 9, 10, 13, 14, 137, 138], "exploit": [7, 9, 10, 13, 14, 48, 137, 138], "long_nam": [7, 9, 10, 11, 13, 14], "trade": [7, 9, 10, 13, 14, 137], "eta": [7, 10, 11, 12, 13, 36, 38, 39, 41, 44, 45, 127, 128], "incumb": [7, 10, 11, 12, 13, 22, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 92, 105, 116, 117, 121, 122, 123, 127, 128, 131, 138], "eip": [7, 10], "frac": [7, 10, 13], "r": [7, 10, 36, 40, 74], "runtim": [7, 10, 36, 37, 38, 39, 40, 44, 45, 92, 94, 95, 97, 105, 106, 109, 110, 116, 142, 143], "integratedacquisitionfunct": [7, 11], "margin": [7, 11, 51, 52, 53, 54, 55, 75, 76, 79], "integr": [7, 53, 65, 143], "see": [7, 11, 12, 22, 26, 29, 35, 92, 105, 136, 137, 138, 141, 143], "practic": [7, 11, 135], "machin": [7, 11, 125, 126, 135, 139, 140], "learn": [7, 11, 19, 74, 127, 137, 139], "algorithm": [7, 11, 19, 22, 26, 29, 32, 36, 40, 44, 45, 46, 47, 92, 94, 95, 105, 106, 108, 109, 110, 111, 112, 116, 121, 122, 123, 127, 128, 136, 138, 139, 143], "jasper": [7, 11], "snoek": [7, 11, 53, 65], "et": [7, 11, 12, 25, 36, 38, 39, 44, 45, 50, 53, 65, 119, 136], "al": [7, 11, 12, 25, 36, 38, 39, 44, 45, 50, 53, 65, 119, 136], "paper": [7, 11, 50, 119, 139], "nip": [7, 11, 50, 53, 54, 55, 65, 70], "cc": [7, 11, 50, 119], "4522": [7, 11], "pdf": [7, 9, 11, 12, 36, 44, 45, 50], "further": [7, 11, 12, 29, 35, 48, 87, 89, 92, 105, 106, 108, 109, 110, 112, 139], "entropi": [7, 11], "its": [7, 11, 19, 81, 117, 121, 122, 138], "approxim": [7, 11], "p": [7, 11, 13], "x_min": [7, 11], "respect": [7, 11, 36, 41, 44, 45, 59, 66, 70, 71], "keyword": [7, 11, 12], "argument": [7, 11, 12, 29, 32, 36, 41, 44, 45, 46, 47, 48, 50, 51, 59, 75, 112, 117, 128, 137], "lcb": [7, 9, 143], "beta": [7, 9], "lower": [7, 9, 19, 51, 52, 53, 54, 55, 65, 74, 75, 76, 78, 79, 80, 143], "confid": [7, 9, 36, 40, 143], "bound": [7, 9, 19, 48, 51, 52, 53, 54, 55, 56, 65, 74, 75, 76, 77, 78, 79, 80, 81, 86, 92, 105, 117, 118, 119, 143], "far": [7, 9, 13, 14, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 74], "mu": [7, 9, 13, 14], "sqrt": [7, 9, 74, 131], "beta_t": [7, 9], "sigma": [7, 9, 13, 14, 66, 69], "_": [7, 128], "d": [7, 9, 29, 32, 48, 50, 53, 54, 55, 56, 59, 74, 81, 117, 119], "text": [7, 9, 115, 139], "input": [7, 9, 19, 36, 39, 42, 45, 51, 52, 53, 54, 55, 56, 59, 65, 70, 75, 76, 78, 79, 80, 94, 95, 96, 98, 115, 117, 121, 138, 142, 143], "dimens": [7, 9, 48, 51, 52, 53, 54, 55, 56, 59, 65, 75, 76, 78, 79, 80, 81, 117, 119, 121, 122], "tradeoff": [7, 9], "refer": [7, 9, 12, 25, 29, 35, 36, 38, 44, 45, 48, 135, 136, 138, 139], "gp": [7, 9, 53, 54, 55, 56, 59, 65, 70, 138], "ucb": [7, 9], "arxiv": [7, 9, 12, 25, 139], "org": [7, 9, 12, 25, 73, 74, 121, 122, 123, 127, 128, 131, 139, 141], "0912": [7, 9], "3995": [7, 9], "num_data": [7, 9, 14], "pi": [7, 13, 143], "probabl": [7, 13, 46, 47, 48, 70, 71, 74, 87, 88, 90, 143], "geq": [7, 13], "phi": [7, 13], "cdf": [7, 13], "standard": [7, 13, 19, 51, 52], "par": [7, 13, 14], "prioracquisitionfunct": [7, 12], "decay_beta": [7, 12], "prior_floor": [7, 12], "1e": [7, 12, 57, 58, 60, 61, 62, 64, 76, 79, 137], "12": [7, 12, 36, 40], "discret": [7, 12], "discrete_bins_factor": [7, 12], "optimum": [7, 12, 25, 94, 95], "pibo": [7, 12], "augment": [7, 12, 56], "belief": [7, 12], "carl": [7, 12], "hvarfner": [7, 12], "2022": [7, 12, 73, 74], "2204": [7, 12], "11051": [7, 12], "decai": [7, 12], "factor": [7, 12, 36, 38, 39, 41, 44, 45, 87, 90], "n_iter": [7, 12], "specif": [7, 12, 22, 26, 36, 37, 38, 39, 40, 41, 42, 44, 45, 76, 79, 106, 109, 110, 128, 136], "otherwis": [7, 12, 19, 29, 31, 33, 35, 36, 40, 56, 92, 105, 106, 107, 112, 117, 119], "lowest": [7, 12, 92, 105], "possibl": [7, 12, 36, 38, 74, 112, 128, 143], "ensur": [7, 12, 112, 119, 136], "non": [7, 12, 19, 36, 40, 73, 74, 127, 128, 136], "neg": [7, 12], "bin": [7, 12], "densiti": [7, 12], "contin": [7, 12], "trigger": [7, 12, 36, 40, 106, 108], "forest": [7, 12, 25, 74, 76, 78, 79, 122, 138, 139, 140, 142, 143], "avoid": [7, 12], "patholog": [7, 12], "rf": [7, 12, 25, 48, 76, 79, 138], "surrog": [7, 12, 25, 46, 47, 49, 51, 75, 112, 117, 121, 122, 137, 138, 143], "piecewis": [7, 12], "constant": [7, 12, 56, 87, 89, 127, 128], "well": [7, 12, 36, 37, 106, 109, 121, 122, 143], "behav": [7, 12, 136], "multipl": [7, 12, 29, 32, 36, 38, 39, 44, 45, 51, 75, 76, 78, 92, 105, 112, 129, 130, 135, 136, 137, 138, 143], "allow": [7, 12, 19, 29, 32, 36, 37, 38, 39, 41, 44, 45, 59, 92, 105, 112], "addit": [7, 12, 46, 47, 48, 50, 59, 92, 94, 96, 105, 106, 109, 110, 111, 117], "thompson": [7, 119, 143], "togeth": [7, 14], "pleas": [7, 14, 25, 36, 38, 48, 74, 136, 137, 139, 140, 141, 143], "local_and_random_search": [7, 14], "math": [7, 14, 70], "mathcal": [7, 14], "make": [7, 14, 48, 53, 54, 55, 65, 87, 89, 106, 107, 109, 110, 112, 127, 128, 136, 138], "other": [7, 14, 19, 36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 51, 75, 76, 78, 92, 105, 143], "allow_inactive_with_valu": 19, "config_id": [19, 92, 93, 105, 131], "map": [19, 36, 37, 38, 39, 40, 41, 42, 44, 45, 92, 105], "__eq__": [19, 92, 105], "overrid": 19, "equal": [19, 36, 40, 51, 75, 76, 78, 92, 105], "behavior": 19, "__hash__": 19, "hash": [19, 22, 26, 112, 119], "id": [19, 36, 37, 38, 39, 40, 41, 42, 44, 45, 92, 105], "__ne__": 19, "test": [19, 51, 52, 53, 54, 55, 56, 92, 105, 139, 140], "item": [19, 59, 115], "doesn": 19, "exist": [19, 92, 105, 122], "desir": [19, 106, 110], "get_arrai": 19, "represent": [19, 92, 94, 95, 96, 105], "continu": [19, 22, 26, 48, 51, 52, 53, 54, 55, 56, 59, 65, 75, 76, 78, 79, 80, 81, 92, 105, 116, 117, 121, 122, 123, 127, 139, 143], "scale": [19, 36, 38, 39, 44, 45, 51, 52, 57, 59, 60, 66, 67, 68, 70, 74, 94, 95, 99, 101, 102, 103, 119, 122], "zero": [19, 53, 54, 55, 65, 74, 94, 99, 101, 102, 103, 121], "numpi": [19, 73, 74, 94, 95, 96, 115, 122, 123, 127, 128, 131, 142], "get_dictionari": [19, 122, 123], "dictionari": [19, 92, 105, 106, 111, 115, 116], "form": [19, 59], "is_valid_configur": 19, "check": [19, 36, 40, 46, 47, 49, 81, 87, 88, 89, 90, 91, 92, 105, 106, 107, 109, 112, 116, 117, 140], "valid": [19, 112, 115, 119, 123, 125, 126, 127, 128, 135, 136, 137, 138, 142], "rais": [19, 36, 38, 39, 41, 44, 45, 50, 94, 95, 127, 136], "error": [19, 136], "kei": [19, 92, 105, 131], "cach": [19, 59, 92, 105], "speed": [19, 136, 143], "up": [19, 36, 41, 45, 92, 105, 121, 127, 128, 136, 143], "process": [19, 25, 36, 37, 40, 46, 47, 48, 49, 51, 52, 53, 54, 55, 65, 92, 104, 106, 109, 112, 121, 136, 137, 138, 143], "__iter__": [19, 92, 105], "hopefulli": 19, "add_condit": [19, 122, 123, 127], "condit": [19, 63, 122, 123, 127, 128, 138], "ad": [19, 92, 105, 117, 123, 127, 140], "legal": [19, 137], "parent": [19, 106, 107, 122, 123, 127], "statement": 19, "cycl": 19, "arrai": [19, 46, 47, 51, 53, 54, 55, 56, 66, 71, 73, 74, 75, 76, 78, 115, 117], "keep": [19, 51, 52, 53, 54, 55, 56, 65, 75, 76, 79, 80, 106, 107, 109, 110], "track": [19, 36, 40], "edg": 19, "digraph": 19, "don": [19, 29, 31, 33, 35, 136], "except": [19, 22, 26, 36, 38, 39, 40, 41, 44, 45, 106, 107, 110, 115, 127], "final": [19, 87, 88, 121, 122, 123, 127, 128, 131], "thei": [19, 36, 44, 45], "take": [19, 51, 52, 76, 79, 106, 107, 127, 136, 137], "collect": [19, 92, 105, 106, 107, 109, 110, 116], "add_configuration_spac": 19, "prefix": 19, "delimit": 19, "parent_hyperparamet": 19, "combin": [19, 36, 40, 44, 45, 82, 84, 85, 94, 95, 112, 122, 123, 127, 128, 138, 139], "content": 19, "renam": 19, "old_nam": 19, "forbidden": [19, 117], "claus": [19, 73, 74, 121, 122, 123, 127, 128, 131, 141], "activ": [19, 29, 32, 36, 38, 39, 41, 44, 45, 106, 107, 109, 117, 127, 136, 140], "mean": [19, 51, 52, 53, 54, 55, 56, 59, 65, 66, 69, 74, 75, 76, 78, 79, 82, 84, 92, 105, 112, 117, 122, 123, 127, 128, 136], "when": [19, 22, 26, 36, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 59, 65, 75, 76, 79, 80, 106, 107, 112, 117, 127, 136, 137, 138], "add_forbidden_claus": 19, "add_hyperparamet": [19, 121, 122, 123, 127, 128, 142], "check_configur": 19, "check_configuration_vector_represent": 19, "estimate_s": 19, "estim": [19, 51, 52, 75, 76, 78, 79, 94, 95, 121, 122, 123, 127, 128, 131], "size": [19, 36, 40, 59, 112, 127, 137, 138, 142], "uniqu": 19, "inf": [19, 87, 89, 112], "uniformfloathyperparamet": 19, "product": [19, 57, 58], "correctli": 19, "guess": 19, "upper": [19, 74], "generate_grid": 19, "union": [19, 81, 92, 105, 106, 111, 119], "generate_all_continuous_from_bound": 19, "contain": [19, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 59, 65, 75, 76, 79, 80, 81, 92, 94, 95, 96, 105, 106, 107, 109, 110], "tupl": [19, 36, 37, 39, 40, 41, 42, 44, 45, 48, 51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 81, 86, 92, 94, 95, 96, 105, 106, 107, 109, 110, 111, 117, 128, 131], "element": [19, 106, 111, 115], "get_active_hyperparamet": 19, "get_all_conditional_hyperparamet": 19, "get_all_unconditional_hyperparamet": 19, "uncondit": 19, "get_child_conditions_of": 19, "children": 19, "referenc": 19, "request": [19, 36, 41, 46, 47, 49, 92, 104], "get_children_of": 19, "get_condit": 19, "get_default_configur": [19, 121, 122, 123, 127, 128], "get_forbidden": 19, "get_hyperparamet": 19, "get_hyperparameter_by_idx": 19, "idx": 19, "get_hyperparameter_nam": 19, "store": [19, 36, 37, 39, 40, 41, 42, 45, 92, 105, 106, 107, 127], "get_hyperparameters_dict": 19, "ordereddict": [19, 92, 105], "get_idx_by_hyperparameter_nam": 19, "get_parent_conditions_of": 19, "either": [19, 22, 26, 29, 32, 53, 65, 92, 105, 106, 111, 136, 140], "get_parents_of": 19, "keysview": 19, "remove_hyperparameter_prior": 19, "produc": [19, 36, 37, 106, 107, 109, 110], "hyperpararmet": 19, "replac": [19, 74, 116, 117, 127], "ones": [19, 39], "categoricalhyperparamet": 19, "result": [19, 22, 26, 36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 92, 105, 106, 107, 109, 110, 112, 115, 117, 137, 143], "sample_configur": [19, 123], "els": [19, 36, 40, 74, 122, 123, 127], "static": [19, 25, 112, 117], "substitute_hyperparameters_in_condit": 19, "new_configspac": 19, "structur": [19, 92, 105], "namesak": 19, "remain": 19, "unchang": 19, "includ": [19, 25, 48, 81, 92, 105, 117, 119, 128, 138, 139], "match": [19, 51, 52], "those": 19, "adjust": [19, 87, 89, 119], "conditioncompon": 19, "substitute_hyperparameters_in_forbidden": 19, "abstractforbiddencompon": [19, 117], "forbiddenvalueerror": 19, "valueerror": [19, 50], "convert_configurations_to_arrai": [19, 20], "config": [19, 20, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 46, 47, 49, 51, 52, 75, 76, 79, 92, 93, 94, 95, 105, 106, 107, 109, 110, 111, 112, 121, 122, 123, 127, 128, 131, 137, 138, 140, 142], "imput": [19, 20, 94, 95, 96], "inact": [19, 20], "appli": [19, 20, 51, 52, 56, 59, 70, 82, 83, 94, 96, 121], "epm": [19, 20, 36, 40, 42, 46, 47, 48, 49, 50, 51, 52, 76, 79, 80, 92, 94, 95, 104, 118, 138], "get_one_exchange_neighbourhood": 19, "exchang": 19, "neighborhood": 19, "frank": [19, 139], "hutter": [19, 53, 54, 55, 65, 70, 136, 139], "holger": 19, "h": [19, 46, 47, 139], "hoo": [19, 139], "kevin": 19, "leyton": [19, 139], "brown": [19, 139], "sequenti": [19, 136, 138, 139], "proceed": [19, 36, 44, 45, 119, 139], "confer": [19, 139], "intellig": [19, 139], "lion": [19, 139], "num_neighbor": 19, "fix": 19, "neighbourhood": 19, "stdev": 19, "deviat": [19, 51, 52], "determin": [19, 22, 26, 36, 37, 39, 41, 42, 44, 45, 48, 53, 59, 65, 106, 110, 115, 123, 136, 143], "neigbour": 19, "uniformintegerhyperparamet": [19, 142], "It": [19, 29, 32, 36, 40, 44, 45, 59, 82, 83, 92, 104, 106, 110, 121, 122, 138, 143], "being": [19, 36, 40, 41, 44, 106, 111, 138, 143], "situat": 19, "around": [19, 106, 109], "algorithmconfigurationfacad": [22, 23, 137], "target_algorithm": [22, 23, 24, 25, 26, 27, 28, 106, 109, 110, 111, 131, 137], "acquisition_optim": [22, 23, 24, 26, 27, 28, 46, 47], "initial_design": [22, 23, 24, 26, 27, 28, 46, 47, 121, 122, 123, 127, 128, 131], "intensifi": [22, 23, 24, 26, 27, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 92, 104, 105, 106, 107, 109, 110, 112, 116, 123], "multi_objective_algorithm": [22, 23, 24, 26, 27, 28, 94, 95, 131], "runhistori": [22, 23, 24, 26, 27, 28, 36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 50, 118, 123, 131], "runhistory_encod": [22, 23, 24, 26, 27, 28, 46, 47], "logging_level": [22, 23, 24, 26, 27, 28], "blackboxfacad": [22, 24, 121, 137], "top": [22, 26, 36, 39, 44, 45, 123], "backend": [22, 26], "organ": [22, 26], "separ": [22, 26], "manner": [22, 26], "suit": [22, 26], "variou": [22, 26], "pipelin": [22, 26, 137], "With": [22, 26], "aacquisition_funct": [22, 26], "explicitli": [22, 26, 106, 107], "get_": [22, 26], "bo": [22, 25, 26, 36, 42, 94, 96, 117, 118, 138, 143], "instanti": [22, 25, 26, 36, 41, 44, 48, 138], "them": [22, 25, 26, 48, 74, 94, 99, 101, 102, 103, 106, 107, 127, 138], "For": [22, 25, 26, 106, 109, 110, 112, 127, 136, 137, 139], "latter": [22, 26], "svm_cv": [22, 26], "py": [22, 26, 36, 44, 121, 122, 123, 124, 126, 127, 128, 130, 131, 133], "abstractrunn": [22, 26, 46, 47, 106, 107, 109, 110], "acquisitionfunct": [22, 26, 46, 47], "acquisitionoptim": [22, 26], "initialdesign": [22, 26, 29, 30, 31, 32, 33, 34, 35, 46, 47], "randomdesign": [22, 26, 46, 47, 87, 88, 89, 90, 91], "multiobjectivealgorithm": [22, 26, 94, 95], "runhistoryencod": [22, 26, 94, 96, 98, 99, 100, 101, 102, 103], "path": [22, 26, 112, 137], "level": [22, 26, 127], "yaml": [22, 26], "yml": [22, 26], "true": [22, 26, 36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 53, 54, 55, 56, 59, 65, 74, 76, 79, 92, 94, 95, 105, 112, 115, 116, 117, 121, 122, 123, 127, 128, 131], "stat": [22, 26, 29, 35, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 49, 74, 106, 107, 109, 110], "found": [22, 25, 26, 36, 44, 46, 47, 87, 89, 123, 136, 139], "inconsist": [22, 26], "setup": [22, 26, 136], "prompt": [22, 26], "exact": [22, 26, 56], "behaviour": [22, 26], "hyperparameterfacad": [22, 25, 27, 28, 122, 123, 131, 137], "boingfacad": 25, "model_loc": [25, 48, 117, 118, 119], "gaussian_process": [25, 48, 117, 118, 119], "gpytorch": [25, 48, 117, 118, 119], "globallyaugmentedlocalgaussianprocess": [25, 48, 56, 117, 118], "model_local_kwarg": [25, 48, 117, 118, 119], "acquisition_func_loc": [25, 48], "acquisit": [25, 36, 42, 46, 47, 48, 49, 50, 53, 65, 117, 118, 119, 143], "expected_improv": [25, 48, 117, 118], "acquisition_func_local_kwarg": [25, 48], "acq_optimizer_loc": [25, 48, 118], "acq_optimizer_local_kwarg": [25, 48, 118], "max_configs_local_frac": [25, 48], "min_configs_loc": [25, 48], "do_switch": [25, 48], "turbo_kwarg": [25, 48], "wrapper": [25, 51, 75, 76, 78, 106, 107, 109, 110], "grove": 25, "deng": [25, 139], "lindauer": [25, 139], "ab": [25, 74, 139], "2111": 25, "05834": 25, "stage": [25, 36, 37, 39, 40, 41, 42, 45], "first": [25, 36, 39, 40, 45, 51, 52, 53, 54, 55, 59, 65, 74, 75, 76, 78, 79, 80, 106, 108, 111, 121, 122, 123, 127, 128, 131, 136, 137], "global": [25, 48, 50, 59, 117, 119, 143], "extract": [25, 48], "Then": [25, 106, 107, 122, 123], "construct": [25, 48, 51, 59, 75, 76, 78, 106, 107, 117, 119], "vicin": 25, "suggest": [25, 46, 47, 48, 49, 50, 106, 108, 118, 119], "Its": [25, 59, 139], "follow": [25, 36, 40, 44, 59, 76, 79, 106, 107, 109, 111, 119, 136, 137, 140, 142, 143], "smac_bb_facad": [25, 142], "smac4bb": [25, 142], "chosen": [25, 127, 135], "gaussian": [25, 51, 52, 53, 54, 55, 65, 121, 138, 143], "likelihood": [25, 53, 54, 55, 56, 59], "toward": 25, "assess": 25, "impact": 25, "own": 25, "dso": 25, "workshop": [25, 53, 54, 55, 65, 70], "2019": [25, 50, 70, 119], "1908": 25, "06674": 25, "empir": [25, 36, 37, 39, 40, 41, 42, 45, 46, 47, 48, 92, 105, 138], "subspac": [25, 48, 50, 59, 81], "sinc": [25, 48, 59, 74, 121, 123, 127, 128, 131, 136], "might": [25, 48, 59, 106, 107, 109, 110, 136, 137], "amount": [25, 48, 87, 89, 106, 107], "compar": [25, 48, 138], "under": [25, 48, 119, 138, 141], "initi": [25, 29, 30, 31, 32, 34, 36, 40, 41, 44, 45, 46, 47, 48, 50, 51, 59, 75, 76, 78, 87, 88, 89, 90, 91, 106, 107, 112, 119, 121, 122, 123, 127, 128, 131, 137], "acquisitionfunctionmaxim": [25, 46, 47, 118], "abov": [25, 48], "fraction": [25, 48, 87, 89], "greater": [25, 48, 112], "than": [25, 36, 38, 39, 40, 41, 44, 45, 48, 50, 51, 52, 53, 54, 55, 65, 70, 74, 75, 76, 78, 79, 80, 81, 112, 119, 121, 122, 123, 127, 128, 131], "n_min_config_inn": [25, 48], "crop": [25, 48], "minimum": [25, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 76, 79, 92, 105, 112, 138], "inner": [25, 48], "switch": [25, 48], "turbo": [25, 48, 119], "pure": [25, 48], "build": [25, 46, 47, 48, 92, 104, 122, 123, 127, 128, 140], "util": [25, 74, 82, 84], "get_lgpga_local_compon": 25, "could": [25, 36, 40, 92, 105, 106, 108, 112, 115, 119, 128, 136, 137], "lgpga": 25, "defaultinitialdesign": [29, 30], "n_config": [29, 30, 31, 32, 33, 34, 35, 116, 121, 122, 123, 127, 128, 131], "n_configs_per_hyperparamet": [29, 30, 31, 32, 33, 34, 35, 121, 123, 128, 131], "max_config_ratio": [29, 30, 31, 32, 33, 34, 35], "25": [29, 30, 31, 32, 33, 34, 35, 127], "design": [29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 47, 50, 106, 107, 117, 119, 121, 122, 123, 127, 128, 131, 137], "factorialinitialdesign": [29, 31], "factori": [29, 31, 33, 35], "constructor": [29, 31, 33, 35, 51, 52], "overwritten": [29, 31, 33, 35, 92, 105], "strategi": [29, 32, 82, 83], "rng": [29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 70, 74, 76, 79, 94, 95, 117, 118, 119], "randomst": [29, 32, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 70, 74, 76, 79, 94, 95, 117], "n_run": [29, 32], "target": [29, 32, 36, 40, 44, 45, 46, 47, 51, 52, 73, 74, 75, 76, 78, 79, 92, 105, 106, 108, 109, 110, 111, 112, 116, 117, 121, 122, 123, 127, 128, 136, 138], "disabl": [29, 32, 94, 95, 96, 112, 123], "how": [29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 49, 50, 92, 104, 105, 106, 107, 109, 112, 116, 119, 123, 131, 135, 136, 137, 138], "mani": [29, 32, 36, 44, 45, 50, 116, 119, 137, 138, 143], "most": [29, 32, 50, 92, 105, 119, 127, 137], "budget": [29, 32, 36, 37, 38, 39, 41, 44, 45, 46, 47, 92, 93, 94, 95, 96, 105, 106, 107, 109, 110, 111, 112, 116, 121, 122, 127, 128, 137, 138, 143], "Not": [29, 32], "limit": [29, 32, 36, 40, 74, 92, 105, 106, 109, 110, 111, 136, 137, 142], "both": [29, 32, 36, 40, 48, 92, 94, 96, 104, 106, 110], "dynam": [29, 32, 106, 107], "select_configur": [29, 32], "select": [29, 32, 36, 37, 38, 39, 41, 42, 44, 45, 48, 92, 105, 106, 109, 138], "latinhypercubeinitialdesign": [29, 33], "latin": [29, 33], "hypercub": [29, 33], "randominitialdesign": [29, 34], "sobolinitialdesign": [29, 35, 122], "sobol": [29, 35], "sequenc": [29, 35, 36, 40], "scrambl": [29, 35], "scipi": [29, 35, 74], "github": [29, 35, 136, 139, 140], "io": [29, 35], "devdoc": [29, 35], "qmc": [29, 35], "html": [29, 35, 119], "inform": [29, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 92, 104, 105, 106, 107, 109, 110, 111, 115, 122, 123, 136], "abstractintensifi": [36, 37, 40, 41, 42, 45], "min_config_cal": [36, 37, 40], "max_config_cal": [36, 37, 40, 123], "2000": [36, 37, 40], "min_challeng": [36, 37, 38, 39, 40, 41, 44, 45], "intensify_percentag": [36, 37, 38, 39, 40, 41, 44, 45], "race": [36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 127, 138, 139, 143], "output": [36, 37, 51, 52, 53, 54, 55, 59, 65, 106, 107, 112, 138, 143], "enough": [36, 37, 106, 109, 138], "instanc": [36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 59, 65, 75, 76, 79, 80, 81, 92, 93, 94, 95, 96, 104, 105, 106, 107, 109, 110, 111, 112, 128, 136, 137, 138, 143], "pair": [36, 37, 40, 92, 105, 106, 110], "associ": [36, 37, 112], "resourc": [36, 37, 106, 107, 111], "worker": [36, 37, 38, 39, 40, 41, 42, 44, 45, 106, 107, 109, 110, 112, 127, 128, 137], "prepar": [36, 37], "next": [36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 87, 89, 90, 91, 106, 109, 122, 123], "note": [36, 37, 51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80], "directli": [36, 37, 122, 140], "instance_specif": [36, 37, 38, 39, 40, 41, 42, 44, 45], "string": [36, 37, 38, 39, 40, 41, 42, 44, 45, 92, 105, 115], "algorithm_walltime_limit": [36, 37, 38, 39, 40, 41, 42, 44, 45, 74], "ta": [36, 37, 38, 39, 40, 41, 42, 44, 45, 92, 105, 106, 107, 116], "determinist": [36, 37, 38, 39, 40, 41, 42, 44, 45, 112, 127, 128, 136], "per": [36, 37, 40, 76, 79, 92, 105, 116, 123], "sum": [36, 37, 40, 57, 58, 74, 92, 105], "intensifii": [36, 37, 40], "consid": [36, 37, 38, 39, 40, 41, 44, 45, 76, 79, 94, 95, 96, 106, 110, 127, 128], "even": [36, 37, 38, 39, 40, 41, 44, 45, 141], "time_bound": [36, 37, 38, 39, 40, 41, 42, 44, 45], "exhaust": [36, 37, 38, 39, 40, 41, 44, 45, 116], "earlier": [36, 37, 38, 39, 40, 41, 44, 45], "much": [36, 37, 46, 47, 49, 106, 107], "percentag": [36, 37], "higher": [36, 37, 74, 122], "get_next_run": [36, 37, 39, 40, 41, 42, 45], "repeat_config": [36, 37, 39, 40, 41, 42, 45], "n_worker": [36, 37, 39, 40, 41, 42, 45, 106, 107, 112, 137], "choos": [36, 37, 39, 45, 46, 47, 48, 49, 50, 53, 65, 127], "across": [36, 37, 38, 39, 41, 44, 45, 92, 105, 128, 136, 137, 138, 143], "_next_challeng": [36, 37], "avail": [36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 76, 79, 92, 105, 106, 107, 109, 110], "issu": [36, 37, 136, 139], "skip": [36, 37, 40, 92, 94, 95, 96, 104, 123], "runinfoint": [36, 37, 39, 40, 41, 42, 45, 92, 104], "promis": [36, 37, 39, 40, 41, 42, 45, 137, 138], "chooser": [36, 37, 39, 40, 41, 42, 45, 46, 47, 87, 89], "epm_configuration_choos": [36, 37, 39, 40, 41, 42, 45], "epmchoos": [36, 37, 39, 40, 41, 42, 45, 46, 47, 82, 83], "ran": [36, 37, 39, 40, 41, 42, 45], "again": [36, 37, 39, 40, 41, 42, 45], "run_info": [36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 92, 104, 106, 107, 109, 110], "encapsul": [36, 37, 39, 40, 41, 42, 45, 106, 109], "intent": [36, 37, 39, 40, 41, 42, 45], "indic": [36, 37, 39, 41, 42, 45, 48, 81, 87, 91, 92, 104, 106, 108, 117, 119, 128], "consum": [36, 37, 39, 41, 42, 45, 46, 47, 49], "process_result": [36, 37, 39, 40, 41, 42, 45], "run_valu": [36, 37, 39, 40, 41, 42, 45, 46, 47, 49], "log_trajectori": [36, 37, 39, 40, 41, 42, 45], "statu": [36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 92, 93, 104, 105, 106, 109, 110, 123], "also": [36, 37, 39, 40, 41, 42, 45, 46, 47, 49, 51, 52, 53, 65, 86, 92, 105, 106, 107, 109, 122, 127, 136, 143], "seen": [36, 37, 39, 41, 42, 45], "sec": [36, 37, 39, 40, 41, 42, 45], "methadata": [36, 37, 39, 40, 41, 42, 45], "exercis": [36, 37, 39, 40, 41, 42, 45, 106, 107, 109, 110], "trajectori": [36, 37, 39, 40, 41, 42, 45], "mayb": [36, 37, 39, 40, 41, 42, 45], "inc_perf": [36, 37, 39, 40, 41, 42, 45], "hyperband": [36, 39, 41, 44, 45, 127, 128, 138, 143], "instance_seed_pair": [36, 38, 39, 41, 44, 45], "instance_ord": [36, 38, 39, 41, 44, 45, 112], "shuffle_onc": [36, 38, 39, 41, 44, 45, 112], "incumbent_select": [36, 38, 39, 41, 44, 45], "highest_executed_budget": [36, 38, 39, 41, 44, 45], "3": [36, 38, 39, 40, 41, 44, 45, 50, 51, 52, 53, 54, 55, 65, 73, 74, 75, 76, 78, 79, 80, 87, 89, 94, 95, 96, 97, 98, 100, 101, 102, 106, 107, 119, 121, 122, 123, 127, 128, 131, 137, 138, 139, 140, 141], "n_seed": [36, 38, 39, 41, 44, 45, 112, 127, 128], "parallelschedul": [36, 38, 41, 44], "against": [36, 38, 39, 40, 44, 45, 46, 47, 136, 138], "bohb": [36, 38, 39, 44, 45, 127, 136, 138], "robust": [36, 38, 39, 44, 45, 53, 54, 55, 65, 70, 143], "effici": [36, 38, 39, 44, 45, 92, 105, 139, 143], "falkner": [36, 38, 39, 44, 45, 53, 54, 55, 65, 70], "2018": [36, 38, 39, 44, 45], "extens": [36, 38, 138], "success": [36, 38, 39, 41, 44, 45, 50, 92, 94, 95, 96, 97, 98, 100, 101, 102, 105, 119, 123, 127, 128, 138, 143], "halv": [36, 38, 39, 41, 44, 45, 127, 128, 138, 143], "successivehalv": [36, 38, 44, 45], "document": [36, 38, 51, 75, 76, 78, 135, 137, 140], "about": [36, 38, 106, 109, 122, 123, 136], "wai": [36, 38, 137], "handl": [36, 38, 74, 92, 105, 106, 109, 110], "_hyperband": [36, 38, 39], "privat": [36, 38, 39], "actual": [36, 38, 39, 44, 45, 53, 65, 74, 106, 109], "logic": [36, 38, 39, 44, 45], "parallel": [36, 38, 39, 41, 45, 106, 107, 109, 110, 112, 143], "idl": [36, 38, 41, 44], "min_budget": [36, 38, 39, 41, 44, 45, 112, 127, 128], "max_budget": [36, 38, 39, 41, 44, 45, 112, 127, 128], "shuffl": [36, 38, 39, 41, 44, 45, 112, 127, 128], "sh": [36, 38, 39, 41, 44, 45], "everi": [36, 38, 39, 41, 44, 45, 59, 87, 88, 89, 137], "larger": [36, 38, 39, 41, 44, 45], "real": [36, 38, 39, 41, 44, 45, 106, 109, 110, 127], "highest_budget": [36, 38, 39, 41, 44, 45], "any_budget": [36, 38, 39, 41, 44, 45], "highest": [36, 38, 39, 41, 44, 45, 74, 92, 105], "regardless": [36, 38, 39, 41, 44, 45], "race_against": [36, 40], "run_limit": [36, 40], "2147483647": [36, 40], "use_target_algorithm_time_bound": [36, 40], "procedur": [36, 40, 41, 106, 107], "\u03b8_new": [36, 40], "\u03b8_inc": [36, 40], "m": [36, 40, 59, 73, 74], "t_intensifi": [36, 40], "\u03c0": [36, 40], "c\u02c6": [36, 40], "\u03b8": [36, 40], "denot": [36, 40, 117], "cost": [36, 40, 50, 82, 84, 85, 86, 92, 93, 94, 95, 96, 105, 106, 109, 110, 112, 116, 121, 122, 123, 127, 128, 131, 138, 142], "subset": [36, 40, 92, 105, 112, 117, 128, 137, 138], "length": [36, 40, 50, 51, 53, 57, 59, 60, 65, 75, 81, 117, 119], "run_incumb": [36, 40], "less": [36, 40, 74, 117], "4": [36, 40, 50, 51, 52, 119, 121, 123, 127, 128, 131, 140], "uniformli": [36, 40, 138], "6": [36, 40, 50, 94, 95, 96, 97, 98, 100, 101, 102, 119, 128], "drawn": [36, 40, 53, 54, 55, 56, 70, 87, 90], "7": [36, 40, 51, 52, 139], "executerun": [36, 40], "8": [36, 40, 50, 119, 122, 123, 127, 137, 139, 140], "run_challeng": [36, 40], "9": [36, 40, 121, 128, 139, 140], "while": [36, 39, 40, 45, 74, 106, 109], "s_miss": [36, 40], "11": [36, 40], "s_torun": [36, 40], "min": [36, 40, 86, 128], "foreach": [36, 40], "13": [36, 40], "14": [36, 40, 128], "\u03c0_common": [36, 40], "previous": [36, 39, 40, 45, 138], "15": [36, 40, 128], "break": [36, 40, 74], "16": [36, 40, 70], "17": [36, 40], "18": [36, 40], "spent": [36, 40], "exce": [36, 40], "19": [36, 40], "alwai": [36, 40, 74, 121, 136, 137], "sometim": [36, 40], "prevent": [36, 40, 41, 44], "trust": [36, 40, 138], "report": [36, 40, 136], "instead": [36, 40, 46, 47, 76, 79, 116], "measur": [36, 40, 92, 105, 142], "wallclock": [36, 40, 116], "get_next_challeng": [36, 40], "though": [36, 40], "line": [36, 40, 135, 138], "popul": [36, 40, 106, 107, 109, 110], "configs_to_run": [36, 40], "pool": [36, 40], "racer": [36, 40, 41], "within": [36, 40, 106, 107, 136, 143], "regist": [36, 40], "to_run": [36, 40], "brand": [36, 40], "_next_iter": [36, 40], "mark": [36, 40, 94, 95], "transit": [36, 40], "flag": [36, 40, 136], "tell": [36, 40, 46, 47, 49], "newli": [36, 40, 117], "charg": [36, 40], "compli": [36, 40, 106, 107], "job": [36, 40, 46, 47, 49, 106, 107, 110], "nevertheless": [36, 40, 106, 107, 136], "happen": [36, 40, 74, 136], "becaus": [36, 40, 92, 105, 106, 108, 109, 121], "try": [36, 40, 128, 136, 137], "circumv": [36, 40], "No": [36, 40, 121, 122, 131], "particular": [36, 40, 141], "what": [36, 40, 51, 52, 92, 105, 106, 107, 109, 110, 123, 136], "cap": [36, 40, 92, 105, 106, 107, 109], "post": [36, 40], "intensifierstag": [36, 40, 43], "process_incumbent_run": [36, 40], "process_first_config_run": [36, 40], "At": [36, 40], "done": [36, 40, 41, 106, 107, 109, 110], "move": [36, 40, 46, 47, 49, 92, 105], "1st": [36, 40], "common": [36, 41, 106, 107, 109], "schedul": [36, 41, 87, 88], "fashion": [36, 41, 106, 107, 110], "basi": [36, 41, 44], "n_initial_challeng": [36, 41, 44, 45], "decid": [36, 41, 106, 109, 139], "pick": [36, 39, 41, 45], "wait": [36, 41, 106, 107, 109, 110], "send": [36, 41], "redirect": [36, 41], "histori": [36, 41, 92, 105], "reli": [36, 41], "choic": [36, 41, 51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 127], "That": [36, 41], "go": [36, 41, 74], "simpleintensifi": [36, 42], "tradit": [36, 42], "descript": [36, 44, 136], "supplementari": [36, 44, 45, 119], "mlr": [36, 44, 45], "press": [36, 44, 45], "v80": [36, 44, 45], "falkner18a": [36, 44, 45], "supp": [36, 44, 45], "oper": [36, 44, 45, 115], "kind": [36, 44, 45, 46, 47], "criterion": [36, 44, 45, 46, 47], "total": [36, 44, 45, 76, 79, 106, 107, 110, 121, 122, 123, 124, 126, 127, 128, 130, 131, 133], "qualiti": [36, 44, 45, 106, 109, 110, 138, 142, 143], "posit": [36, 44, 45, 56, 106, 109, 110], "anyth": [36, 44, 45, 115], "eg": [36, 44, 45], "epoch": [36, 44, 45, 112, 129, 130, 135, 137, 138], "train": [36, 44, 45, 46, 48, 49, 50, 51, 52, 56, 74, 76, 79, 94, 95, 112, 121, 122, 123, 127, 128, 137, 138, 142], "neural": [36, 44, 45, 127, 137], "network": [36, 44, 45, 127, 137], "spear_qcp": [36, 44], "smac4ac_sh_spear_qcp": [36, 44], "smac4mf_sgd_inst": [36, 44], "smac4mf_mlp": [36, 44], "_successivehalv": [36, 44, 45], "li": [36, 44], "hyperbandwork": 39, "identifi": [39, 45, 112], "successivehalvingwork": [39, 45], "meant": 39, "reason": 39, "interfac": [39, 45, 46, 47, 48, 49, 50, 53, 54, 55, 70, 82, 83, 106, 107, 109, 110, 138], "wherea": 39, "later": [39, 45, 56, 74], "enum": [43, 92, 104], "_all_budget": 45, "_n_configs_in_stag": 45, "yet": [45, 136, 140], "smac4mf": 45, "hb": [45, 138], "subrout": 45, "numer": [45, 121], "debug": [45, 74, 116, 136], "tag": 45, "logger": [45, 74, 76, 79, 94, 95, 115], "messag": [45, 115], "properli": [45, 106, 110, 119], "basesmbo": [46, 47, 49], "runner": [46, 47, 136], "statist": [46, 47, 106, 109, 116], "abstractrunhistory_encod": [46, 47], "convert": [46, 47, 106, 110], "intensif": [46, 47, 49, 121, 122, 123, 131, 138, 143], "some": [46, 47, 94, 95], "baseepm": [46, 47, 51, 52, 74, 75, 76, 78, 117], "infil": [46, 47], "restore_incumb": [46, 47], "start": [46, 47, 51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 92, 105, 106, 107, 116, 125, 126, 127, 135], "restor": [46, 47, 136], "executor": [46, 47], "choosernocooldown": [46, 47], "modulu": [46, 47, 87, 89], "chooserlinearcooldown": [46, 47], "start_modulu": [46, 47, 87, 89], "modulus_incr": [46, 47, 87, 89], "end_modulu": [46, 47, 87, 89], "predict_x_best": [46, 47, 117], "x_best": [46, 47], "observ": [46, 47, 92, 105, 117, 119, 138], "min_samples_model": [46, 47], "configuration_chooser_kwarg": [46, 47], "config_spac": [46, 47, 117, 118, 119], "initial_design_config": [46, 47], "depend": [46, 47, 49, 51, 52, 82, 83, 92, 105, 106, 108, 112, 122, 123, 136, 140, 143], "save": [46, 47, 49, 92, 104, 105, 112, 116, 137], "time_left": [46, 47, 49], "submit": [46, 47, 49, 106, 107, 109, 110, 116], "relev": [46, 47, 49, 116], "incorpor": [46, 47, 49, 112, 123], "advanc": [46, 47, 49], "task": [46, 47, 49, 106, 107, 110, 112, 137], "addition": [46, 47, 49, 94, 95, 117], "side": [46, 47, 49], "effect": [46, 47, 49], "describ": [46, 47, 49, 106, 109], "regard": [46, 47, 49], "arg": [46, 48, 49, 50, 106, 111], "boingsmbo": 48, "gradual": 48, "increas": [48, 87, 88, 89, 127, 128], "anoth": [48, 92, 104, 138], "cannot": [48, 136], "Or": [48, 140], "find": [48, 121, 122, 137, 138, 143], "restart_turbo": 48, "y": [48, 51, 52, 63, 73, 74, 76, 79, 94, 95, 96, 117, 119], "y_raw": [48, 94, 96], "train_model": 48, "restart": [48, 50, 53, 54, 55, 87, 88, 119], "20": [48, 53, 65, 121, 142], "least": [48, 127], "largest": 48, "volum": 48, "param": [48, 51, 59, 75, 76, 78, 81, 119], "transform": [48, 70, 76, 79, 82, 84, 85, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 115, 117, 128], "rh2epm": [48, 82, 83], "raw": [48, 94, 96, 117], "retrain": 48, "subspace_extract": 48, "num_min": 48, "num_max": 48, "cat_dim": [48, 59, 81], "cont_dim": [48, 59, 81], "would": [48, 137], "grow": 48, "randomforestwithinst": [48, 74, 76, 79], "entir": [48, 117], "d_cat": [48, 81], "d_cont": [48, 81, 117], "union_bounds_cont": 48, "subregion": [48, 81, 118, 119], "union_bounds_cat": 48, "in_ss_dim": 48, "lie": 48, "turbosmbo": 50, "length_init": [50, 119], "length_min": [50, 119], "00390625": 50, "length_max": [50, 119], "success_tol": [50, 119], "failure_tol_min": [50, 119], "n_init_x_param": [50, 119], "n_candidate_max": [50, 119], "eriksson": [50, 119], "scalabl": [50, 119], "6c990b7aca7bc7058f5e98ea909e924b": [50, 119], "smaller": [50, 74, 119, 137], "becom": 50, "expand": [50, 81, 112, 119], "failur": 50, "fail": [50, 74, 106, 107, 108, 112], "shrink": [50, 119, 122, 123], "incumbent_valu": [50, 121, 122, 123, 127], "infer": [50, 56], "predict": [50, 51, 52, 74, 75, 76, 78, 79, 117, 137, 138], "empti": [50, 74, 92, 94, 95, 105, 106, 107, 109, 110, 123], "instance_featur": [51, 52, 53, 54, 55, 56, 65, 75, 76, 77, 78, 79, 80, 81, 94, 95, 112, 128], "pca_compon": [51, 52, 53, 54, 55, 56, 65, 75, 76, 77, 78, 79, 80], "api": [51, 52, 73], "dimension": [51, 52, 53, 54, 55, 65, 75, 76, 79, 80, 121, 143], "n_object": [51, 52, 75, 106, 109], "concret": [51, 52], "th": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 87, 89], "entri": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 123], "correspond": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 86, 117], "let": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80], "sai": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80], "count": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80, 112], "uppper": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80], "dim": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80], "n_cat": [51, 52, 53, 54, 55, 65, 75, 76, 78, 79, 80], "nan": [51, 52, 53, 54, 55, 65, 74, 75, 76, 78, 79, 80], "librari": [51, 52, 76, 79, 80], "k": [51, 52, 53, 54, 55, 65, 75, 76, 79, 80, 92, 105, 139], "featur": [51, 52, 53, 54, 55, 65, 73, 74, 75, 76, 79, 80, 81, 92, 94, 95, 96, 104, 112, 117, 119, 128, 136], "pca": [51, 52, 53, 54, 55, 65, 75, 76, 79, 80], "n_feat": [51, 52, 53, 54, 55, 65, 75, 76, 79, 80, 94, 95], "pca_dim": [51, 52, 53, 54, 55, 65, 75, 76, 79, 80], "sklearn": [51, 52, 122, 123, 127, 128, 142], "decomposit": [51, 52], "n_param": [51, 52, 94, 95], "been": [51, 52, 92, 105, 136, 140], "scaler": [51, 52], "withing": [51, 52], "preprocess": [51, 52, 94, 95], "minmaxscal": [51, 52], "var_threshold": [51, 52, 74], "vor": [51, 52], "varianc": [51, 52, 53, 54, 55, 56, 65, 74, 75, 76, 79, 128], "cat": [51, 52], "const": [51, 52], "get_configspac": [51, 52], "cov_return_typ": [51, 52], "diagonal_cov": [51, 52], "shape": [51, 52, 73, 74, 75, 76, 79], "n_sampl": [51, 52, 70, 75, 76, 79], "n_featur": [51, 52, 75, 76, 79], "along": [51, 52, 141], "now": [51, 52, 121, 122, 123, 140], "diagonal_std": [51, 52], "full_cov": [51, 52], "diagon": [51, 52], "covari": [51, 52, 56], "matrix": [51, 52, 56], "whole": [51, 52], "var": [51, 52, 75, 76, 79, 112, 128], "predict_marginalized_over_inst": [51, 52, 75, 76, 79], "marginalis": [51, 52, 75, 76, 79], "multiobjectivemodel": [51, 75, 76, 78], "target_nam": [51, 75, 76, 78, 128], "model_kwarg": [51, 75, 76, 78], "underli": [51, 75, 76, 78], "mandatori": [51, 75, 76, 78], "consult": [51, 75, 76, 78], "num_target": [51, 75, 76, 78], "construct_estim": [51, 75, 76, 78], "randommodel": [51, 80], "basegaussianprocess": [53, 54, 55, 56, 65], "kernel": [53, 54, 55, 56, 65, 122, 123], "gaussianprocess": [53, 54, 55], "normalize_i": [53, 54, 55, 56, 65], "n_opt_restart": [53, 54, 55, 56], "hyperparameter\u015d": [53, 54, 55], "robo": [53, 54, 55, 65, 70], "klein": [53, 54, 55, 65, 70], "mansur": [53, 54, 55, 65, 70], "flexibl": [53, 54, 55, 65, 70, 92, 104, 143], "framework": [53, 54, 55, 65, 70, 137, 138, 143], "2017": [53, 54, 55, 65, 70], "georg": [53, 54, 55, 65], "sure": [53, 54, 55, 65, 87, 89, 106, 107, 108, 109, 136], "unit": [53, 54, 55, 65], "sample_funct": [53, 54, 55, 56], "x_test": [53, 54, 55, 56], "n_func": [53, 54, 55, 56], "posterior": [53, 54, 55, 56, 59], "function_sampl": [53, 54, 55, 56], "mcmcgaussianprocess": [53, 65], "n_mcmc_walker": [53, 65], "chain_length": [53, 65], "50": [53, 65, 122], "burnin_step": [53, 65], "mcmc_sampler": [53, 65], "emce": [53, 65], "average_sampl": [53, 65], "out": [53, 65, 106, 111, 115], "markow": [53, 65], "chain": [53, 65, 138], "mont": [53, 65, 138], "carlo": [53, 65, 138], "mcmc": [53, 65, 138], "propos": [53, 65], "walker": [53, 65], "last": [53, 65, 74], "burnin": [53, 65], "sampler": [53, 65], "nut": [53, 65], "augmentedlocalgaussianprocess": 56, "x_in": 56, "y_in": 56, "x_out": [56, 59], "y_out": [56, 59], "base_covar_kernel": 56, "exactgp": 56, "forward": [56, 59], "optimize_kernel_hp": 56, "phase": 56, "degener": 56, "vanilla": 56, "zeromean": 56, "base_covar": 56, "partial": 56, "spars": 56, "multivariatenorm": 56, "set_augment_modul": 56, "x_induc": [56, 59], "torch": [56, 59], "tensor": [56, 59], "n_induc": 56, "induc": 56, "exactgpmodel": 56, "train_x": 56, "train_i": 56, "serv": [56, 59, 121], "backbon": 56, "gaussianprocessgpytorch": 56, "gpytorchgaussianprocess": [56, 119], "bounds_cont": [56, 81], "bounds_cat": [56, 81], "num_inducing_point": 56, "update_attribut": 56, "variationalgaussianprocess": 56, "approximategp": 56, "variat": 56, "constantkernel": [57, 58], "constant_valu": [57, 58], "constant_value_bound": [57, 58], "05": [57, 58, 60, 61, 62, 64, 82, 85], "100000": [57, 58, 60, 61, 62, 64], "operate_on": [57, 58, 60, 61, 62, 64], "has_condit": [57, 58, 60, 61, 62, 64], "magicmixinkernel": [57, 58, 60, 61, 62, 64], "hammingkernel": [57, 60], "length_scal": [57, 60, 61, 62], "length_scale_bound": [57, 60, 61, 62], "stationarykernelmixin": [57, 60], "normalizedkernelmixin": [57, 60], "properti": [57, 60, 121, 122, 123, 127, 128], "hyperparameter_length_scal": [57, 60], "matern": [57, 59, 61], "nu": [57, 61], "productkernel": [57, 58, 59], "k1": [57, 58], "k2": [57, 58], "rbf": [57, 59, 62, 122, 123], "sumkernel": [57, 58], "whitekernel": [57, 64], "noise_level": [57, 64], "noise_level_bound": [57, 64], "fitckernel": 59, "base_kernel": 59, "active_dim": 59, "x1": [59, 121], "x2": [59, 121], "diag": 59, "lazytensor": 59, "num_outputs_per_input": 59, "re": [59, 92, 105], "posterior_mean": 59, "fitc": 59, "dens": 59, "n_input": 59, "fitcmean": 59, "covar_modul": 59, "batch_shap": 59, "n_xin": 59, "mixedkernel": 59, "cont_kernel": 59, "cat_kernel": 59, "special": 59, "compos": 59, "work": [59, 106, 107, 117, 121, 136, 138], "cont_onli": 59, "omit": 59, "construct_gp_kernel": 59, "kernel_kwarg": 59, "init": 59, "problem": [59, 106, 109, 110, 121, 136, 138, 143], "reconstruct": 59, "cont_kernel_kwarg": 59, "constraint": [59, 112, 128], "cat_kernel_kwarg": 59, "scale_kernel": 59, "scale_kernel_kwarg": 59, "sklkernel": 59, "get_conditional_hyperparamet": 63, "gammaprior": [66, 67], "loc": [66, 67, 74], "horseshoeprior": [66, 68], "lognormalprior": [66, 69], "tophatprior": [66, 71], "lower_bound": [66, 71], "upper_bound": [66, 71], "gradient": [66, 70, 71, 129, 130, 135], "theta": [66, 70, 71], "adapt": [70, 127, 128, 138], "04": [70, 126], "whenev": 70, "lnprob": [70, 71], "scalar": [70, 94, 95, 143], "rather": [70, 81], "exponenti": 70, "_lnprob": 70, "sample_from_prior": 70, "_sample_from_prior": 70, "softtophatprior": 71, "expon": 71, "abstract_imput": 72, "abstractimput": [72, 73, 74], "random_forest_imput": 72, "randomforestimput": [72, 74], "__all__": 72, "__future__": [73, 74, 128, 131], "annot": [73, 74, 128, 131], "abc": [73, 82, 83, 106, 109, 117], "__copyright__": [73, 74, 121, 122, 123, 127, 128, 131], "copyright": [73, 74, 121, 122, 123, 127, 128, 131], "automl": [73, 74, 121, 122, 123, 127, 128, 131, 136, 139, 140], "__license__": [73, 74, 121, 122, 123, 127, 128, 131], "bsd": [73, 74, 121, 122, 123, 127, 128, 131, 141], "__init__": [73, 74, 128], "censored_x": [73, 74], "censored_i": [73, 74], "uncensored_x": [73, 74], "uncensored_i": [73, 74], "censor": [73, 74, 94, 95, 96], "imputed_i": [73, 74], "warn": [74, 92, 105, 127, 128], "truncnorm": 74, "base_model": 74, "get_logg": 74, "__name__": [74, 121, 122, 123, 127, 128, 131, 142], "imputor": 74, "pyrfr": [74, 136], "regressor": 74, "Will": [74, 92, 104, 106, 107], "draw": 74, "runn": 74, "threshold": [74, 112], "parx": 74, "change_threshold": 74, "stop": [74, 112, 127], "max_it": [74, 127, 128], "01": [74, 122, 123, 126, 128, 130, 133], "super": 74, "critic": 74, "noth": [74, 87, 89, 90], "flatten": 74, "variabl": [74, 112, 127, 137], "y_mean": 74, "y_var": 74, "assert": 74, "mypi": 74, "y_stdev": 74, "ignor": [74, 92, 105, 106, 107, 121, 123, 127, 128, 131], "appropri": 74, "catch_warn": [74, 127, 128], "filterwarn": [74, 127, 128], "invalid": 74, "encount": 74, "subtract": [74, 116], "true_divid": 74, "power": 74, "divid": 74, "b": 74, "moment": 74, "isfinit": 74, "n_nan": 74, "perf": 74, "captim": 74, "axi": 74, "calc": 74, "assum": [74, 106, 108, 121, 122, 127, 128, 131, 136], "concaten": 74, "uncensor": 74, "last_chang": 74, "par10": 74, "dtype": 74, "finit": 74, "reshap": 74, "baserandomforest": [76, 77, 79], "multiobjectiverandomforest": [76, 78], "log_i": [76, 79], "num_tre": [76, 79], "do_bootstrap": [76, 79], "n_points_per_tre": [76, 79], "ratio_featur": [76, 79], "8333333333333334": [76, 79], "min_samples_split": [76, 79], "min_samples_leaf": [76, 79], "max_depth": [76, 79, 142], "1048576": [76, 79], "eps_pur": [76, 79], "08": [76, 79], "max_num_nod": [76, 79], "account": [76, 79, 94, 95, 127], "random_forest_run": [76, 79], "tree": [76, 79], "turn": [76, 79], "bootstrap": [76, 79], "_train": [76, 79], "split": [76, 79, 127, 128], "leaf": [76, 79], "depth": [76, 79, 142], "maxmimum": [76, 79], "node": [76, 79, 106, 107], "rf_opt": [76, 79], "regress": [76, 79, 138], "binary_rss_forest": [76, 79], "hyper": [76, 79], "unlog_i": [76, 79], "base_epm": [76, 79], "abstractepm": [76, 79], "smac2": [76, 79, 136], "distribut": [76, 79, 106, 107, 141], "assumpt": [76, 79], "uncertainti": [76, 79], "check_subspace_point": 81, "expand_bound": 81, "place": 81, "repres": [81, 92, 105, 106, 109, 110, 128, 139], "indices_in_ss": [81, 117, 119], "get_typ": 81, "abstractmultiobjectivealgorithm": [82, 83, 84], "multi": [82, 83, 84, 85, 92, 94, 95, 105, 106, 109, 112, 128, 130, 131, 137, 138, 143], "aggregationstrategi": [82, 84, 85], "aggreg": [82, 84], "loss": [82, 84, 85, 106, 111, 128], "meanaggregationstrategi": [82, 84, 131], "parego": 82, "rho": [82, 85], "normalize_cost": 86, "By": [86, 127, 143], "unnorm": 86, "normalized_cost": 86, "cosineannealingrandomdesign": [87, 88], "min_prob": [87, 88], "max_prob": [87, 88], "restart_iter": [87, 88], "decreas": [87, 88, 89, 90], "cosin": [87, 88], "anneal": [87, 88], "integ": [87, 88, 89, 90, 91, 122, 123, 127], "relat": [87, 88, 89, 90, 91], "ith": [87, 88, 89, 90, 91], "counter": [87, 88], "linearcooldownrandomdesign": [87, 89], "ever": [87, 89], "reach": [87, 89], "probabilitycooldownrandomdesign": [87, 90], "prob": [87, 90], "probil": [87, 90], "multipli": [87, 90], "cool_down_fac": [87, 90], "probabilityrandomdesign": [87, 90], "begin": [87, 91], "dataorigin": [92, 104, 105], "definit": [92, 104], "gather": [92, 104], "disk": [92, 104, 105], "external_same_inst": [92, 104, 105], "extern": [92, 104, 105], "psmac": [92, 104], "external_different_inst": [92, 104], "due": [92, 104], "instanceseedbudgetkei": [92, 93], "instanceseedkei": [92, 93], "overwrite_existing_run": [92, 105], "runkei": [92, 93, 105, 131], "importantli": [92, 105], "full": [92, 105, 121, 122, 123, 125, 126, 127, 128, 131, 135], "averag": [92, 105, 116, 127], "theoret": [92, 105], "neither": [92, 105], "nor": [92, 105], "guarante": [92, 105], "picklabl": [92, 105], "were": [92, 105, 135], "ids_config": [92, 105, 131], "num_runs_per_config": [92, 105], "__contains__": [92, 105], "semant": [92, 105], "enabl": [92, 105, 140], "__getitem__": [92, 105], "v": [92, 105, 106, 107, 128], "__len__": [92, 105], "len": [92, 105], "starttim": [92, 93, 105], "endtim": [92, 93, 105], "additional_info": [92, 93, 105, 106, 109, 110], "force_upd": [92, 105], "timeout": [92, 94, 95, 96, 97, 98, 100, 101, 102, 105], "crash": [92, 94, 95, 96, 97, 98, 100, 101, 102, 105, 106, 108, 109, 136], "abort": [92, 105, 106, 108], "memout": [92, 105], "cutoff": [92, 94, 95, 96, 105], "timestamp": [92, 105], "field": [92, 105], "host_id": [92, 105], "forc": [92, 105], "average_cost": [92, 105], "instance_seed_budget_kei": [92, 105], "run_histori": [92, 105], "queri": [92, 105], "wrt": [92, 105], "compute_all_cost": [92, 105], "scratch": [92, 105], "cost_perf_config": [92, 105], "runs_per_config": [92, 105], "accordingli": [92, 105], "merge_foreign_data": [92, 105], "get_config": [92, 105], "get_configs_per_budget": [92, 105], "budget_subset": [92, 94, 95, 96, 105], "get_cost": [92, 105], "docstr": [92, 105], "get_incumb": [92, 105], "get_min_cost": [92, 105], "min_cost": [92, 105], "get_runs_for_config": [92, 105], "only_max_observed_budget": [92, 105], "instance_seed_budget_pair": [92, 105], "incremental_update_cost": [92, 105], "increment": [92, 105], "load_json": [92, 105], "filenam": [92, 105], "load": [92, 105, 112, 116, 122, 123], "json": [92, 105, 116], "fidel": [92, 105, 112, 122, 127, 128, 137, 138, 143], "save_json": [92, 105], "save_extern": [92, 105], "sum_cost": [92, 105], "individu": [92, 105], "external_ful": [92, 105], "_config_id_to_inst_seed_budget": [92, 105], "through": [92, 105], "update_cost": [92, 105], "cost_per_config": [92, 105], "update_from_json": [92, 105], "fn": [92, 105], "c": [92, 105, 121, 122, 123, 127, 128, 131, 137, 139, 142], "statustyp": [92, 94, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 109, 110, 111, 123], "intenum": [92, 104], "abstractrunhistoryencod": [94, 95, 97, 98], "success_st": [94, 95, 96, 97, 98, 100, 101, 102], "memoryout": [94, 95, 96, 97, 98, 100, 101, 102], "donotadv": [94, 95, 96, 97, 98, 100, 101, 102], "consider_for_higher_budgets_st": [94, 95, 96, 97, 98, 100, 101, 102], "scale_percentag": [94, 95, 96, 97, 98, 100, 101, 102], "typeerror": [94, 95], "impute_censored_data": [94, 95], "base_imput": [94, 95], "impute_st": [94, 95], "cutoff_tim": [94, 95], "percentil": [94, 95], "distanc": [94, 95], "abstractrunhistory2epm": [94, 95], "reshuffl": [94, 95], "receiv": [94, 95, 106, 107, 141], "get_configur": [94, 95], "append": [94, 95, 115, 131], "transform_response_valu": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "respons": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "runhistoryeipsencod": [94, 97], "todo": [94, 97, 98, 99, 100, 101, 102, 103], "runhistoryinversescaledencod": [94, 99], "linearli": [94, 99, 101, 102, 103], "invers": [94, 99], "runhistorylogencod": [94, 100], "runhistorylogscaledencod": [94, 96, 101], "runhistoryrawencod": [94, 96], "runhistroi": [94, 96], "approach": [94, 96, 122], "transform_raw_valu": [94, 96], "transform_with_raw": [94, 96], "runhistoryrawscaledencod": [94, 96], "runhistoryscaledencod": [94, 102], "runhistorysqrtscaledencod": [94, 103], "squar": [94, 103, 131], "root": [94, 103, 136], "interact": [106, 109], "complex": [106, 109, 143], "perspect": [106, 109], "launch": [106, 107, 109, 110], "submit_run": [106, 107, 109, 110], "run_wrapp": [106, 107, 109], "among": [106, 109], "realli": [106, 109], "translat": [106, 109], "get_finished_run": [106, 107, 109, 110], "finish": [106, 107, 109, 110, 127, 128], "offer": [106, 109, 143], "mechan": [106, 109, 127, 138, 139], "decis": [106, 107, 109, 110], "abl": [106, 109, 122], "until": [106, 107, 109, 110], "crash_cost": [106, 107, 109, 112], "get_finish": [106, 107, 109, 110], "pai": [106, 109], "num_work": [106, 107, 109, 110], "pending_run": [106, 107, 109, 110], "serial": [106, 107, 109, 110], "instantli": [106, 107, 109, 110], "On": [106, 107, 109, 110, 129, 130, 135], "pend": [106, 107, 109, 110], "arbitrari": [106, 109, 110, 121, 139], "regret": [106, 109, 110], "etc": [106, 109, 110, 112], "took": [106, 109, 110], "exec": [106, 109], "simplifi": [106, 109], "isol": [106, 109], "embed": [106, 107, 109], "eventu": [106, 109], "fifo": [106, 109], "dictat": [106, 107, 109, 110], "child": [106, 107, 109, 122, 123, 127, 136], "submiss": [106, 109], "endeavor": [106, 109], "daskparallelrunn": [106, 107], "single_work": [106, 107], "patienc": [106, 107], "dask_client": [106, 107], "intend": [106, 107], "bridg": [106, 107], "pattern": [106, 107], "wrap": [106, 107, 136], "baserunn": [106, 107], "capabl": [106, 107, 143], "dask": [106, 107, 112], "precis": [106, 107], "tae_runn": [106, 107, 142], "pickl": [106, 107], "come": [106, 107], "Such": [106, 107], "futur": [106, 107], "manag": [106, 107, 112], "client": [106, 107], "directori": [106, 107, 112, 136], "server": [106, 107], "cluster": [106, 107], "attach": [106, 107], "close": [106, 107, 136], "manual": [106, 107], "upon": [106, 107], "replic": [106, 107], "temporari": [106, 107], "run_obj": [106, 107, 142], "par_factor": [106, 107], "abort_i_first_run_crash": [106, 107], "__del__": [106, 107], "alloc": [106, 107], "like": [106, 107, 122, 137], "firstruncrashedexcept": [106, 108], "targetalgorithmabortexcept": [106, 108], "serialrunn": [106, 110, 111], "extend": [106, 110, 138], "fill": [106, 110, 117], "immedi": [106, 110], "usual": [106, 108], "targetalgorithmrunn": [106, 111], "signatur": [106, 111], "executetafuncdict": [106, 111], "inspect": [106, 111], "figur": [106, 111, 131, 143], "correct": [106, 111], "algorithm_kwarg": [106, 111], "pynish": [106, 111, 112, 136], "walltim": [106, 111], "memori": [106, 111, 112, 136], "posixpath": 112, "smac3_output": 112, "termination_cost_threshold": 112, "walltime_limit": [112, 127, 128, 137], "cputime_limit": 112, "trial_walltime_limit": 112, "trial_memory_limit": 112, "n_trial": [112, 121, 122, 123, 127, 128, 131], "100": [112, 121, 123, 127, 142, 143], "environ": [112, 127, 137, 140], "therefor": [112, 122, 127, 137, 138, 140], "context": 112, "frame": 112, "your": [112, 127, 128, 136, 138, 140, 142, 143], "trial": [112, 122, 123, 127, 138], "cross": [112, 123, 125, 126, 127, 128, 135, 138], "cpu": 112, "enforc": [112, 136], "spawn": 112, "mb": [112, 126, 130, 133], "dataset": [112, 122, 123, 127, 129, 130, 135, 136, 143], "reproduc": [112, 136], "greather": 112, "__post_init__": 112, "count_instance_featur": 112, "count_object": 112, "customformatt": 115, "fmt": 115, "datefmt": 115, "style": 115, "formatt": 115, "format": 115, "record": 115, "operand": 115, "yield": 115, "coupl": 115, "preparatori": 115, "carri": 115, "logrecord": 115, "getmessag": 115, "usestim": 115, "formattim": 115, "event": 115, "formatexcept": 115, "format_arrai": 115, "format_v": 115, "hold": [115, 122, 123], "serializ": 115, "get_remaing_walltim": 116, "get_remaining_cputim": 116, "get_remaining_tri": 116, "get_used_walltim": 116, "is_budget_exhaust": 116, "ta_budget": 116, "start_tim": [116, 123], "timer": 116, "substract": 116, "update_average_configs_per_intensifi": 116, "trajectoryitem": 116, "walltime_us": 116, "target_algorithm_walltime_us": 116, "target_algorithm_run": 116, "trajentri": 116, "challengerlistloc": 117, "cs_local": 117, "cs_global": 117, "config_origin": 117, "incumbent_arrai": [117, 118, 119], "localsubspac": [117, 118, 119], "hps_type": [117, 118, 119], "bounds_ss_cont": [117, 118, 119], "bounds_ss_cat": [117, 118, 119], "acq_func_loc": [117, 118, 119], "acq_func_local_kwarg": [117, 118, 119], "initial_data": [117, 118, 119], "activate_dim": [117, 118, 119], "equival": 117, "support": [117, 125, 126, 127, 128, 135, 137, 143], "miss": 117, "notic": 117, "preserv": 117, "complementari": 117, "add_new_observ": [117, 119], "fit_forbidden_to_ss": 117, "exactli": 117, "forbidden_ss": 117, "generate_challeng": 117, "optimizer_kwarg": 117, "_generate_challeng": 117, "normalize_input": 117, "x_normal": 117, "update_incumbent_arrai": 117, "new_incumb": 117, "update_model": 117, "acquir": 117, "boingsubspac": 118, "unlik": 118, "epm_choos": 118, "turbosubspac": 119, "0078125": 119, "neurip": 119, "illustr": [119, 127], "meanwhil": 119, "adjust_length": 119, "new_observ": 119, "latest": [119, 136], "click": [121, 122, 123, 124, 127, 128, 131], "download": [121, 122, 123, 124, 127, 128, 131, 135], "2d": [121, 132, 133, 135], "rosenbrock": 121, "black": [121, 137, 138, 143], "box": [121, 137, 138, 143], "larg": 121, "1000": [121, 122, 123], "16916": 121, "92": [121, 123, 128, 131], "base_smbo": [121, 122, 123, 127, 128, 131], "143": [121, 122, 127, 128, 131], "181": [121, 122, 127, 128, 131], "244": [121, 122, 131], "443": [121, 122, 131], "603": [121, 122, 123, 131], "1102": 121, "7878": 121, "abstract_intensifi": [121, 122, 123, 127, 128, 131], "333": [121, 122, 123, 128, 131], "4656": 121, "better": [121, 122, 123, 127, 128, 131, 137, 139, 142], "353": [121, 122, 123, 127, 128, 131], "356": [121, 122, 123, 127, 128, 131], "x0": 121, "9968221839517355": 121, "03135360777378082": 121, "30847043171525": 121, "21179260686039925": 121, "9344": 121, "1521441831066923": 121, "991027821936083": 121, "348": [121, 122, 123, 127, 128, 131], "349": [121, 122, 123, 127, 128, 131], "934388186264153": 121, "93": 121, "2021": [121, 122, 123, 127, 128, 131, 136, 139], "freiburg": [121, 122, 123, 127, 128, 131], "hannov": [121, 122, 123, 127, 128, 131], "rosenbrock2d": 121, "toi": 121, "know": 121, "commun": 121, "often": [121, 136], "minimium": 121, "x_i": 121, "domain": 121, "interv": 121, "__main__": [121, 122, 123, 127, 128, 131, 142], "default_valu": [121, 122, 123, 127], "round": [121, 122, 123, 127, 128], "script": [121, 122, 123, 124, 127, 128, 131], "minut": [121, 122, 123, 124, 127, 128, 131, 137], "036": [121, 126], "1_synthetic_funct": [121, 126], "jupyt": [121, 122, 123, 124, 127, 128, 131, 135], "notebook": [121, 122, 123, 124, 127, 128, 131, 135], "ipynb": [121, 122, 123, 124, 127, 128, 131], "iri": [122, 123], "benchmark": [122, 123, 138], "mix": 122, "natur": 122, "03": [122, 123, 127], "0667": 122, "0133": [122, 123], "03992740880515713": 122, "2760639488343621": 122, "linear": [122, 123], "013333333333333308": [122, 123], "incondit": [122, 123, 127], "svm": [122, 123], "model_select": [122, 123, 127, 128], "cross_val_scor": [122, 123, 127, 128], "wide": [122, 123], "load_iri": [122, 123], "rang": [122, 123, 127, 128, 137], "our": [122, 123, 127, 128, 136, 139], "poli": [122, 123], "sigmoid": [122, 123], "001": [122, 123, 127], "degre": [122, 123], "coef": [122, 123], "coef0": [122, 123], "gamma": [122, 123], "auto": [122, 123], "gamma_valu": [122, 123], "0001": [122, 123, 127], "use_degre": [122, 123], "use_coef": [122, 123], "use_gamma": [122, 123], "use_gamma_valu": [122, 123], "config_dict": [122, 123], "pop": [122, 123], "classifi": [122, 123, 127, 128], "svc": [122, 123], "random_st": [122, 123, 127, 128], "score": [122, 123, 127, 128, 142], "cv": [122, 123, 127, 128, 138], "default_config": [122, 123, 127], "five": [122, 127], "get_initial_design": [122, 127], "943": [122, 126], "2_svm_cv": [122, 126], "show": [123, 131, 135, 136], "151": 123, "158": 123, "02": [123, 126], "135997393839888": 123, "4256053822493198": 123, "16521255145781252": 123, "325448240647653": 123, "copi": [123, 141], "99": 123, "deepcopi": 123, "train_tim": 123, "get_intensifi": 123, "578": [123, 126], "3_evaluated_config": [123, 126], "000": [124, 126], "4_full_custom": [124, 126], "synthet": [125, 126, 135], "pre": [125, 126, 135, 143], "custom": [125, 126, 135], "00": [126, 127, 128, 130, 133], "557": 126, "examples_1_bas": 126, "mlp": [127, 128], "advantag": [127, 136], "good": 127, "aggress": [127, 139, 143], "deep": 127, "digit": [127, 128], "accuraci": [127, 137, 142], "fold": 127, "closest": 127, "38": 127, "parallel_schedul": [127, 128], "153": [127, 128], "howev": [127, 128, 136, 137], "system": [127, 128, 140], "successive_halving_work": [127, 128], "152": [127, 128], "277": [127, 128], "hyperband_work": [127, 128], "252": [127, 128], "582": [127, 128], "822": 127, "0495": 127, "0568": 127, "3333": 127, "batch_siz": 127, "155": 127, "learning_rate_init": 127, "006677306766018313": 127, "n_layer": 127, "n_neuron": 127, "123": 127, "56": 127, "solver": 127, "lbfg": 127, "adam": 127, "423": [127, 128], "33": 127, "0345": 127, "0406": 127, "0000": 127, "tanh": 127, "relu": 127, "117": 127, "learning_r": [127, 128, 137], "008282754423021153": 127, "52": 127, "sgd": [127, 128], "0189": 127, "91": 127, "006390670908394775": 127, "183": 127, "01892138656762621": 127, "basicconfig": 127, "equalscondit": 127, "load_digit": [127, 128], "convergencewarn": 127, "stratifiedkfold": [127, 128], "neural_network": 127, "mlpclassifi": 127, "256": 127, "logist": 127, "30": [127, 128], "300": 127, "200": 127, "invscal": [127, 128], "restrict": 127, "rate": [127, 137], "use_lr": 127, "use_lr_init": 127, "batch": 127, "use_batch_s": 127, "deactiv": 127, "accept": [127, 136, 137], "placehold": 127, "lr": 127, "lr_init": 127, "categori": 127, "hidden_layer_s": 127, "ceil": 127, "n_split": [127, 128], "error_scor": 127, "40": [127, 128], "48": [127, 128, 130], "463": [127, 130], "1_mlp_epoch": [127, 130], "layer": [128, 129, 130, 135], "perceptron": [128, 129, 130, 135], "altern": [128, 140, 142], "had": 128, "binari": 128, "longer": 128, "45": 128, "0027": 128, "011": 128, "alpha": [128, 131], "5488135039273248": 128, "6027633760716439": 128, "eta0": 128, "0006273927602293597": 128, "03077201812975574": 128, "l1_ratio": 128, "317983179393976": 128, "06414749634878436": 128, "67": 128, "27": 128, "006249006102246613": 128, "itertool": 128, "linear_model": 128, "sgdclassifi": 128, "digitsdataset": 128, "_data": 128, "get_inst": 128, "classa": 128, "classb": 128, "get_instance_featur": 128, "get_instance_data": 128, "logical_or": 128, "few": [128, 143], "00001": 128, "clf": 128, "penalti": 128, "elasticnet": 128, "early_stop": 128, "lot": 128, "default_cost": 128, "incumbent_cost": 128, "050": [128, 130], "2_sgd_dataset": [128, 130], "stochast": [129, 130, 135], "descent": [129, 130, 135], "36": 130, "513": 130, "examples_2_multi_fidel": 130, "shown": 131, "3059": 131, "3062": 131, "9324859157204628": 131, "8640956835343081": 131, "2866": 131, "8640174051851504": 131, "8639784171134841": 131, "8621703607018727": 131, "2865": 131, "8613802024158463": 131, "8607574654896779": 131, "86057300810144": 131, "8602103898606681": 131, "859905318504627": 131, "8598739916684282": 131, "8597295956781026": 131, "859520085979836": 131, "8593199836090943": 131, "8587705866744733": 131, "8574074961764109": 131, "8571993851749746": 131, "8569651981964457": 131, "856959899407526": 131, "8567608637383648": 131, "8562151402955451": 131, "2864": 131, "8557358664458059": 131, "2527": 131, "2558": 131, "0849066921609452": 131, "25271859054525136": 131, "matplotlib": 131, "pyplot": 131, "plt": 131, "multi_object": 131, "aggregation_strategi": 131, "f1": 131, "f2": 131, "metric1": 131, "metric2": 131, "plot": 131, "all_x": 131, "scatter": 131, "blue": 131, "zorder": 131, "3000": 131, "vline": 131, "linestyl": 131, "dash": 131, "color": 131, "red": 131, "hline": 131, "plot_from_smac": 131, "rh": 131, "150": 131, "634": [131, 133], "1_schaffer": [131, 133], "schaffer": [132, 133, 135], "examples_3_multi_object": 133, "varieti": 135, "command": [135, 138, 140], "examples_python": 135, "zip": 135, "examples_jupyt": 135, "smac3": [136, 139, 140], "reimplement": 136, "tool": [136, 139, 143], "slightli": 136, "comparison": 136, "stabl": 136, "releas": 136, "v2": 136, "java": 136, "maintain": 136, "recommend": [136, 140], "applic": 136, "instal": 136, "cryptic": 136, "gcc": 136, "compil": 136, "link": 136, "anaconda": 136, "my": 136, "commandlin": [136, 143], "verbos": 136, "tri": [136, 137], "ye": 136, "hpbandster": [136, 143], "smac4hpo": 136, "discov": 136, "bug": 136, "open": 136, "hasn": 136, "tracker": 136, "u": 136, "help": 136, "resolv": 136, "packag": [136, 139], "feel": 136, "free": [136, 138, 141], "screenshot": 136, "contribut": [136, 139], "discuss": 136, "idea": [136, 139], "care": 136, "question": 136, "feedback": 136, "prefer": 136, "ongo": 136, "guid": 136, "thu": 136, "realiz": 136, "tae": [136, 138], "signific": 136, "necessarili": 136, "wors": 136, "discard": [136, 143], "earli": [136, 143], "lead": 136, "why": 136, "colab": 136, "mac": [136, 140], "mai": 136, "overcom": 136, "limit_resourc": 136, "core": [137, 139], "four": 137, "explain": 137, "page": [137, 139], "tunabl": 137, "potenti": 137, "multilayerperceptron": 137, "120": 137, "eight": 137, "satisfi": 137, "hyperbandfacad": 137, "region": 137, "hyperparamt": 137, "emphas": 137, "highli": 137, "modular": 137, "weigh": 138, "novel": 138, "bandit": 138, "roar": 138, "onlin": 138, "bb": 138, "mf": 138, "therebi": 138, "prematur": 138, "markov": 138, "metric": [138, 142], "word": 138, "pc": 138, "written": [138, 139, 140], "character": 138, "These": 138, "unseen": 138, "untest": 138, "analyz": 138, "govern": 138, "known": 138, "cli": [138, 143], "python3": [139, 140], "mention": 139, "cite": 139, "jmlr": 139, "inproceed": 139, "arxiv21a": 139, "author": 139, "mariu": 139, "katharina": 139, "eggensperg": 139, "matthia": 139, "feurer": 139, "andr\u00e9": 139, "biedenkapp": 139, "difan": 139, "carolin": 139, "benjamin": 139, "tim": 139, "ruhkopf": 139, "ren\u00e9": 139, "sass": 139, "titl": 139, "versatil": 139, "booktitl": 139, "2109": 139, "09831": 139, "year": 139, "url": 139, "develop": 139, "visit": 139, "guidelin": 139, "furthermor": 140, "swig": 140, "linux": 140, "apt": 140, "intel": 140, "haven": 140, "gxx_linux": 140, "gcc_linux": 140, "pypi": 140, "pip": 140, "clone": 140, "git": 140, "cd": 140, "dev": 140, "channel": 140, "achiev": 140, "channel_prior": 140, "strict": 140, "instruct": 140, "offici": 140, "feedstock": 140, "softwar": 141, "redistribut": 141, "modifi": 141, "term": 141, "hope": 141, "warranti": 141, "impli": 141, "merchant": 141, "FOR": 141, "purpos": 141, "opensourc": 141, "ensembl": 142, "randomforestclassifi": 142, "x_train": 142, "y_train": 142, "randint": 142, "x_val": 142, "y_val": 142, "train_random_forest": 142, "deriv": 142, "runcount": 142, "best_found_config": 142, "typic": 143, "solv": 143, "low": 143, "artifici": 143, "characterist": 143, "awar": 143, "agnost": 143, "hierarch": 143, "oject": 143, "judg": 143, "unsuit": 143, "massiv": 143, "consequ": 143, "languag": 143, "tabl": 143, "hypermapp": 143, "optuna": 143, "hyperopt": 143, "botorch": 143, "openbox": 143}, "objects": {"smac": [[4, 0, 0, "-", "acquisition"], [18, 0, 0, "-", "callback"], [19, 0, 0, "-", "configspace"], [21, 0, 0, "-", "constants"], [22, 0, 0, "-", "facade"], [29, 0, 0, "-", "initial_design"], [36, 0, 0, "-", "intensification"], [46, 0, 0, "-", "main"], [51, 0, 0, "-", "model"], [82, 0, 0, "-", "multi_objective"], [87, 0, 0, "-", "random_design"], [92, 0, 0, "-", "runhistory"], [106, 0, 0, "-", "runner"], [112, 0, 0, "-", "scenario"], [113, 0, 0, "-", "utils"]], "smac.acquisition": [[4, 1, 1, "", "AbstractAcquisitionOptimizer"], [4, 1, 1, "", "DifferentialEvolution"], [4, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [4, 1, 1, "", "LocalAndSortedRandomSearch"], [4, 1, 1, "", "LocalSearch"], [4, 1, 1, "", "RandomSearch"], [5, 0, 0, "-", "abstract_acqusition_optimizer"], [6, 0, 0, "-", "differential_evolution"], [7, 0, 0, "-", "functions"], [15, 0, 0, "-", "local_and_random_search"], [16, 0, 0, "-", "local_search"], [17, 0, 0, "-", "random_search"]], "smac.acquisition.AbstractAcquisitionOptimizer": [[4, 2, 1, "", "get_meta"], [4, 2, 1, "", "maximize"]], "smac.acquisition.LocalAndSortedPriorRandomSearch": [[4, 3, 1, "", "local_search"], [4, 3, 1, "", "local_search_iterations"], [4, 3, 1, "", "prior_random_search"], [4, 3, 1, "", "prior_sampling_fraction"], [4, 3, 1, "", "uniform_random_search"]], "smac.acquisition.LocalAndSortedRandomSearch": [[4, 2, 1, "", "get_meta"], [4, 3, 1, "", "local_search"], [4, 3, 1, "", "local_search_iterations"], [4, 3, 1, "", "random_search"]], "smac.acquisition.LocalSearch": [[4, 2, 1, "", "get_meta"], [4, 3, 1, "", "max_steps"], [4, 3, 1, "", "n_steps_plateau_walk"], [4, 3, 1, "", "vectorization_max_obtain"], [4, 3, 1, "", "vectorization_min_obtain"]], "smac.acquisition.abstract_acqusition_optimizer": [[5, 1, 1, "", "AbstractAcquisitionOptimizer"], [5, 1, 1, "", "ChallengerList"], [5, 1, 1, "", "FixedSet"]], "smac.acquisition.abstract_acqusition_optimizer.AbstractAcquisitionOptimizer": [[5, 2, 1, "", "get_meta"], [5, 2, 1, "", "maximize"]], "smac.acquisition.differential_evolution": [[6, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.functions": [[7, 1, 1, "", "AbstractAcquisitionFunction"], [7, 1, 1, "", "EI"], [7, 1, 1, "", "EIPS"], [7, 1, 1, "", "IntegratedAcquisitionFunction"], [7, 1, 1, "", "LCB"], [7, 1, 1, "", "PI"], [7, 1, 1, "", "PriorAcquisitionFunction"], [7, 1, 1, "", "TS"], [8, 0, 0, "-", "abstract_acquisition_function"], [9, 0, 0, "-", "confidence_bound"], [10, 0, 0, "-", "expected_improvement"], [11, 0, 0, "-", "integrated"], [12, 0, 0, "-", "prior"], [13, 0, 0, "-", "probability_improvement"], [14, 0, 0, "-", "thompson"]], "smac.acquisition.functions.AbstractAcquisitionFunction": [[7, 2, 1, "", "__call__"], [7, 2, 1, "", "get_meta"], [7, 3, 1, "", "model"], [7, 2, 1, "", "update"]], "smac.acquisition.functions.EI": [[7, 3, 1, "", "eta"], [7, 2, 1, "", "get_meta"], [7, 3, 1, "", "log"], [7, 3, 1, "", "long_name"], [7, 2, 1, "", "update"], [7, 3, 1, "", "xi"]], "smac.acquisition.functions.EIPS": [[7, 3, 1, "", "long_name"], [7, 3, 1, "", "xi"]], "smac.acquisition.functions.IntegratedAcquisitionFunction": [[7, 2, 1, "", "get_meta"], [7, 2, 1, "", "update"]], "smac.acquisition.functions.LCB": [[7, 3, 1, "", "beta"], [7, 2, 1, "", "get_meta"], [7, 3, 1, "", "long_name"], [7, 3, 1, "", "num_data"], [7, 2, 1, "", "update"]], "smac.acquisition.functions.PI": [[7, 3, 1, "", "eta"], [7, 2, 1, "", "get_meta"], [7, 3, 1, "", "long_name"], [7, 2, 1, "", "update"], [7, 3, 1, "", "xi"]], "smac.acquisition.functions.PriorAcquisitionFunction": [[7, 2, 1, "", "get_meta"], [7, 2, 1, "", "update"]], "smac.acquisition.functions.TS": [[7, 2, 1, "", "get_meta"], [7, 3, 1, "", "long_name"], [7, 3, 1, "", "num_data"], [7, 3, 1, "", "par"], [7, 2, 1, "", "update"]], "smac.acquisition.functions.abstract_acquisition_function": [[8, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.functions.abstract_acquisition_function.AbstractAcquisitionFunction": [[8, 2, 1, "", "__call__"], [8, 2, 1, "", "get_meta"], [8, 3, 1, "", "model"], [8, 2, 1, "", "update"]], "smac.acquisition.functions.confidence_bound": [[9, 1, 1, "", "LCB"]], "smac.acquisition.functions.confidence_bound.LCB": [[9, 3, 1, "", "beta"], [9, 2, 1, "", "get_meta"], [9, 3, 1, "", "long_name"], [9, 3, 1, "", "num_data"], [9, 2, 1, "", "update"]], "smac.acquisition.functions.expected_improvement": [[10, 1, 1, "", "EI"], [10, 1, 1, "", "EIPS"]], "smac.acquisition.functions.expected_improvement.EI": [[10, 3, 1, "", "eta"], [10, 2, 1, "", "get_meta"], [10, 3, 1, "", "log"], [10, 3, 1, "", "long_name"], [10, 2, 1, "", "update"], [10, 3, 1, "", "xi"]], "smac.acquisition.functions.expected_improvement.EIPS": [[10, 3, 1, "", "long_name"], [10, 3, 1, "", "xi"]], "smac.acquisition.functions.integrated": [[11, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.functions.integrated.IntegratedAcquisitionFunction": [[11, 2, 1, "", "get_meta"], [11, 2, 1, "", "update"]], "smac.acquisition.functions.prior": [[12, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.functions.prior.PriorAcquisitionFunction": [[12, 2, 1, "", "get_meta"], [12, 2, 1, "", "update"]], "smac.acquisition.functions.probability_improvement": [[13, 1, 1, "", "PI"]], "smac.acquisition.functions.probability_improvement.PI": [[13, 3, 1, "", "eta"], [13, 2, 1, "", "get_meta"], [13, 3, 1, "", "long_name"], [13, 2, 1, "", "update"], [13, 3, 1, "", "xi"]], "smac.acquisition.functions.thompson": [[14, 1, 1, "", "TS"]], "smac.acquisition.functions.thompson.TS": [[14, 2, 1, "", "get_meta"], [14, 3, 1, "", "long_name"], [14, 3, 1, "", "num_data"], [14, 3, 1, "", "par"], [14, 2, 1, "", "update"]], "smac.acquisition.local_and_random_search": [[15, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [15, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.local_and_random_search.LocalAndSortedPriorRandomSearch": [[15, 3, 1, "", "local_search"], [15, 3, 1, "", "local_search_iterations"], [15, 3, 1, "", "prior_random_search"], [15, 3, 1, "", "prior_sampling_fraction"], [15, 3, 1, "", "uniform_random_search"]], "smac.acquisition.local_and_random_search.LocalAndSortedRandomSearch": [[15, 2, 1, "", "get_meta"], [15, 3, 1, "", "local_search"], [15, 3, 1, "", "local_search_iterations"], [15, 3, 1, "", "random_search"]], "smac.acquisition.local_search": [[16, 1, 1, "", "LocalSearch"]], "smac.acquisition.local_search.LocalSearch": [[16, 2, 1, "", "get_meta"], [16, 3, 1, "", "max_steps"], [16, 3, 1, "", "n_steps_plateau_walk"], [16, 3, 1, "", "vectorization_max_obtain"], [16, 3, 1, "", "vectorization_min_obtain"]], "smac.acquisition.random_search": [[17, 1, 1, "", "RandomSearch"]], "smac.configspace": [[19, 1, 1, "", "Configuration"], [19, 1, 1, "", "ConfigurationSpace"], [19, 4, 1, "", "ForbiddenValueError"], [19, 5, 1, "", "convert_configurations_to_array"], [19, 5, 1, "", "get_one_exchange_neighbourhood"], [20, 0, 0, "-", "util"]], "smac.configspace.Configuration": [[19, 2, 1, "", "__eq__"], [19, 2, 1, "", "__hash__"], [19, 2, 1, "", "__ne__"], [19, 2, 1, "", "get"], [19, 2, 1, "", "get_array"], [19, 2, 1, "", "get_dictionary"], [19, 2, 1, "", "is_valid_configuration"], [19, 2, 1, "", "keys"]], "smac.configspace.ConfigurationSpace": [[19, 2, 1, "", "__eq__"], [19, 2, 1, "", "__hash__"], [19, 2, 1, "", "__iter__"], [19, 2, 1, "", "__ne__"], [19, 2, 1, "", "add_condition"], [19, 2, 1, "", "add_conditions"], [19, 2, 1, "", "add_configuration_space"], [19, 2, 1, "", "add_forbidden_clause"], [19, 2, 1, "", "add_forbidden_clauses"], [19, 2, 1, "", "add_hyperparameter"], [19, 2, 1, "", "add_hyperparameters"], [19, 2, 1, "", "check_configuration"], [19, 2, 1, "", "check_configuration_vector_representation"], [19, 2, 1, "", "estimate_size"], [19, 2, 1, "", "generate_all_continuous_from_bounds"], [19, 2, 1, "", "get_active_hyperparameters"], [19, 2, 1, "", "get_all_conditional_hyperparameters"], [19, 2, 1, "", "get_all_unconditional_hyperparameters"], [19, 2, 1, "", "get_child_conditions_of"], [19, 2, 1, "", "get_children_of"], [19, 2, 1, "", "get_conditions"], [19, 2, 1, "", "get_default_configuration"], [19, 2, 1, "", "get_forbiddens"], [19, 2, 1, "", "get_hyperparameter"], [19, 2, 1, "", "get_hyperparameter_by_idx"], [19, 2, 1, "", "get_hyperparameter_names"], [19, 2, 1, "", "get_hyperparameters"], [19, 2, 1, "", "get_hyperparameters_dict"], [19, 2, 1, "", "get_idx_by_hyperparameter_name"], [19, 2, 1, "", "get_parent_conditions_of"], [19, 2, 1, "", "get_parents_of"], [19, 2, 1, "", "keys"], [19, 2, 1, "", "remove_hyperparameter_priors"], [19, 2, 1, "", "sample_configuration"], [19, 2, 1, "", "seed"], [19, 2, 1, "", "substitute_hyperparameters_in_conditions"], [19, 2, 1, "", "substitute_hyperparameters_in_forbiddens"]], "smac.configspace.util": [[20, 5, 1, "", "convert_configurations_to_array"]], "smac.facade": [[22, 1, 1, "", "AlgorithmConfigurationFacade"], [22, 1, 1, "", "BlackBoxFacade"], [22, 1, 1, "", "Facade"], [22, 1, 1, "", "HyperparameterFacade"], [22, 1, 1, "", "MultiFidelityFacade"], [23, 0, 0, "-", "algorithm_configuration_facade"], [24, 0, 0, "-", "blackbox_facade"], [25, 0, 0, "-", "boing_facade"], [26, 0, 0, "-", "facade"], [27, 0, 0, "-", "hyperparameter_facade"], [28, 0, 0, "-", "multi_fidelity_facade"]], "smac.facade.Facade": [[22, 2, 1, "", "get_meta"], [22, 2, 1, "", "optimize"]], "smac.facade.algorithm_configuration_facade": [[23, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.blackbox_facade": [[24, 1, 1, "", "BlackBoxFacade"]], "smac.facade.boing_facade": [[25, 1, 1, "", "BOinGFacade"]], "smac.facade.boing_facade.BOinGFacade": [[25, 2, 1, "", "get_lgpga_local_components"]], "smac.facade.facade": [[26, 1, 1, "", "Facade"]], "smac.facade.facade.Facade": [[26, 2, 1, "", "get_meta"], [26, 2, 1, "", "optimize"]], "smac.facade.hyperparameter_facade": [[27, 1, 1, "", "HyperparameterFacade"]], "smac.facade.multi_fidelity_facade": [[28, 1, 1, "", "MultiFidelityFacade"]], "smac.initial_design": [[29, 1, 1, "", "DefaultInitialDesign"], [29, 1, 1, "", "FactorialInitialDesign"], [29, 1, 1, "", "InitialDesign"], [29, 1, 1, "", "LatinHypercubeInitialDesign"], [29, 1, 1, "", "RandomInitialDesign"], [29, 1, 1, "", "SobolInitialDesign"], [30, 0, 0, "-", "default_design"], [31, 0, 0, "-", "factorial_design"], [32, 0, 0, "-", "initial_design"], [33, 0, 0, "-", "latin_hypercube_design"], [34, 0, 0, "-", "random_design"], [35, 0, 0, "-", "sobol_design"]], "smac.initial_design.FactorialInitialDesign": [[29, 3, 1, "", "configs"]], "smac.initial_design.InitialDesign": [[29, 3, 1, "", "configs"], [29, 3, 1, "", "configspace"], [29, 2, 1, "", "get_meta"], [29, 3, 1, "", "n_configs"], [29, 3, 1, "", "rng"], [29, 3, 1, "", "seed"], [29, 2, 1, "", "select_configurations"]], "smac.initial_design.LatinHypercubeInitialDesign": [[29, 3, 1, "", "configs"]], "smac.initial_design.RandomInitialDesign": [[29, 2, 1, "", "get_meta"]], "smac.initial_design.SobolInitialDesign": [[29, 3, 1, "", "configs"]], "smac.initial_design.default_design": [[30, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[31, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.factorial_design.FactorialInitialDesign": [[31, 3, 1, "", "configs"]], "smac.initial_design.initial_design": [[32, 1, 1, "", "InitialDesign"]], "smac.initial_design.initial_design.InitialDesign": [[32, 3, 1, "", "configs"], [32, 3, 1, "", "configspace"], [32, 2, 1, "", "get_meta"], [32, 3, 1, "", "n_configs"], [32, 3, 1, "", "rng"], [32, 3, 1, "", "seed"], [32, 2, 1, "", "select_configurations"]], "smac.initial_design.latin_hypercube_design": [[33, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign": [[33, 3, 1, "", "configs"]], "smac.initial_design.random_design": [[34, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.random_design.RandomInitialDesign": [[34, 2, 1, "", "get_meta"]], "smac.initial_design.sobol_design": [[35, 1, 1, "", "SobolInitialDesign"]], "smac.initial_design.sobol_design.SobolInitialDesign": [[35, 3, 1, "", "configs"]], "smac.intensification": [[36, 1, 1, "", "AbstractIntensifier"], [36, 1, 1, "", "Hyperband"], [36, 1, 1, "", "Intensifier"], [36, 1, 1, "", "ParallelScheduler"], [36, 1, 1, "", "SimpleIntensifier"], [36, 1, 1, "", "SuccessiveHalving"], [37, 0, 0, "-", "abstract_intensifier"], [38, 0, 0, "-", "hyperband"], [39, 0, 0, "-", "hyperband_worker"], [40, 0, 0, "-", "intensification"], [41, 0, 0, "-", "parallel_scheduling"], [42, 0, 0, "-", "simple_intensifier"], [43, 0, 0, "-", "stages"], [44, 0, 0, "-", "successive_halving"], [45, 0, 0, "-", "successive_halving_worker"]], "smac.intensification.AbstractIntensifier": [[36, 2, 1, "", "get_meta"], [36, 2, 1, "", "get_next_run"], [36, 2, 1, "", "process_results"]], "smac.intensification.Hyperband": [[36, 2, 1, "", "get_meta"]], "smac.intensification.Intensifier": [[36, 2, 1, "", "get_meta"], [36, 2, 1, "", "get_next_challenger"], [36, 2, 1, "", "get_next_run"], [36, 2, 1, "", "process_results"]], "smac.intensification.ParallelScheduler": [[36, 2, 1, "", "get_meta"], [36, 2, 1, "", "get_next_run"], [36, 2, 1, "", "process_results"]], "smac.intensification.SimpleIntensifier": [[36, 2, 1, "", "get_meta"], [36, 2, 1, "", "get_next_run"], [36, 2, 1, "", "process_results"]], "smac.intensification.SuccessiveHalving": [[36, 2, 1, "", "get_meta"]], "smac.intensification.abstract_intensifier": [[37, 1, 1, "", "AbstractIntensifier"]], "smac.intensification.abstract_intensifier.AbstractIntensifier": [[37, 2, 1, "", "get_meta"], [37, 2, 1, "", "get_next_run"], [37, 2, 1, "", "process_results"]], "smac.intensification.hyperband": [[38, 1, 1, "", "Hyperband"]], "smac.intensification.hyperband.Hyperband": [[38, 2, 1, "", "get_meta"]], "smac.intensification.hyperband_worker": [[39, 1, 1, "", "HyperbandWorker"]], "smac.intensification.hyperband_worker.HyperbandWorker": [[39, 2, 1, "", "get_next_run"], [39, 2, 1, "", "process_results"]], "smac.intensification.intensification": [[40, 1, 1, "", "Intensifier"]], "smac.intensification.intensification.Intensifier": [[40, 2, 1, "", "get_meta"], [40, 2, 1, "", "get_next_challenger"], [40, 2, 1, "", "get_next_run"], [40, 2, 1, "", "process_results"]], "smac.intensification.parallel_scheduling": [[41, 1, 1, "", "ParallelScheduler"]], "smac.intensification.parallel_scheduling.ParallelScheduler": [[41, 2, 1, "", "get_meta"], [41, 2, 1, "", "get_next_run"], [41, 2, 1, "", "process_results"]], "smac.intensification.simple_intensifier": [[42, 1, 1, "", "SimpleIntensifier"]], "smac.intensification.simple_intensifier.SimpleIntensifier": [[42, 2, 1, "", "get_meta"], [42, 2, 1, "", "get_next_run"], [42, 2, 1, "", "process_results"]], "smac.intensification.stages": [[43, 1, 1, "", "IntensifierStage"]], "smac.intensification.successive_halving": [[44, 1, 1, "", "SuccessiveHalving"]], "smac.intensification.successive_halving.SuccessiveHalving": [[44, 2, 1, "", "get_meta"]], "smac.intensification.successive_halving_worker": [[45, 1, 1, "", "SuccessiveHalvingWorker"]], "smac.intensification.successive_halving_worker.SuccessiveHalvingWorker": [[45, 2, 1, "", "get_next_run"], [45, 2, 1, "", "process_results"]], "smac.main": [[46, 1, 1, "", "BaseSMBO"], [46, 1, 1, "", "SMBO"], [47, 0, 0, "-", "base_smbo"], [48, 0, 0, "-", "boing"], [49, 0, 0, "-", "smbo"], [50, 0, 0, "-", "turbo"]], "smac.main.BaseSMBO": [[46, 2, 1, "", "ask"], [46, 3, 1, "", "config"], [46, 3, 1, "", "config_space"], [46, 3, 1, "", "incumbent"], [46, 3, 1, "", "initial_design"], [46, 3, 1, "", "initial_design_configs"], [46, 3, 1, "", "intensifier"], [46, 3, 1, "", "rng"], [46, 2, 1, "", "run"], [46, 3, 1, "", "runhistory"], [46, 3, 1, "", "runner"], [46, 2, 1, "", "save"], [46, 3, 1, "", "stats"], [46, 2, 1, "", "tell"]], "smac.main.SMBO": [[46, 2, 1, "", "ask"], [46, 2, 1, "", "tell"]], "smac.main.base_smbo": [[47, 1, 1, "", "BaseSMBO"]], "smac.main.base_smbo.BaseSMBO": [[47, 2, 1, "", "ask"], [47, 3, 1, "", "config"], [47, 3, 1, "", "config_space"], [47, 3, 1, "", "incumbent"], [47, 3, 1, "", "initial_design"], [47, 3, 1, "", "initial_design_configs"], [47, 3, 1, "", "intensifier"], [47, 3, 1, "", "rng"], [47, 2, 1, "", "run"], [47, 3, 1, "", "runhistory"], [47, 3, 1, "", "runner"], [47, 2, 1, "", "save"], [47, 3, 1, "", "stats"], [47, 2, 1, "", "tell"]], "smac.main.boing": [[48, 1, 1, "", "BOinGSMBO"], [48, 5, 1, "", "subspace_extraction"]], "smac.main.boing.BOinGSMBO": [[48, 2, 1, "", "ask"], [48, 2, 1, "", "restart_TuRBOinG"]], "smac.main.smbo": [[49, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[49, 2, 1, "", "ask"], [49, 2, 1, "", "tell"]], "smac.main.turbo": [[50, 1, 1, "", "TurBOSMBO"]], "smac.main.turbo.TurBOSMBO": [[50, 2, 1, "", "ask"]], "smac.model": [[51, 1, 1, "", "BaseModel"], [51, 1, 1, "", "MultiObjectiveModel"], [51, 1, 1, "", "RandomModel"], [52, 0, 0, "-", "base_model"], [53, 0, 0, "-", "gaussian_process"], [72, 0, 0, "-", "imputer"], [75, 0, 0, "-", "multi_objective_model"], [76, 0, 0, "-", "random_forest"], [80, 0, 0, "-", "random_model"], [81, 0, 0, "-", "utils"]], "smac.model.BaseModel": [[51, 2, 1, "", "get_configspace"], [51, 2, 1, "", "get_meta"], [51, 3, 1, "", "instance_features"], [51, 3, 1, "", "n_feats"], [51, 3, 1, "", "n_params"], [51, 3, 1, "", "pca"], [51, 3, 1, "", "pca_components"], [51, 2, 1, "", "predict"], [51, 2, 1, "", "predict_marginalized_over_instances"], [51, 3, 1, "", "scaler"], [51, 2, 1, "", "train"], [51, 3, 1, "", "types"], [51, 3, 1, "", "var_threshold"]], "smac.model.MultiObjectiveModel": [[51, 2, 1, "", "construct_estimators"], [51, 3, 1, "", "estimators"], [51, 3, 1, "", "num_targets"], [51, 2, 1, "", "predict_marginalized_over_instances"], [51, 3, 1, "", "target_names"]], "smac.model.base_model": [[52, 1, 1, "", "BaseModel"]], "smac.model.base_model.BaseModel": [[52, 2, 1, "", "get_configspace"], [52, 2, 1, "", "get_meta"], [52, 3, 1, "", "instance_features"], [52, 3, 1, "", "n_feats"], [52, 3, 1, "", "n_params"], [52, 3, 1, "", "pca"], [52, 3, 1, "", "pca_components"], [52, 2, 1, "", "predict"], [52, 2, 1, "", "predict_marginalized_over_instances"], [52, 3, 1, "", "scaler"], [52, 2, 1, "", "train"], [52, 3, 1, "", "types"], [52, 3, 1, "", "var_threshold"]], "smac.model.gaussian_process": [[53, 1, 1, "", "BaseGaussianProcess"], [53, 1, 1, "", "GaussianProcess"], [53, 1, 1, "", "MCMCGaussianProcess"], [54, 0, 0, "-", "base_gaussian_process"], [55, 0, 0, "-", "gaussian_process"], [56, 0, 0, "-", "gpytorch"], [57, 0, 0, "-", "kernels"], [65, 0, 0, "-", "mcmc_gaussian_process"], [66, 0, 0, "-", "priors"]], "smac.model.gaussian_process.GaussianProcess": [[53, 2, 1, "", "get_meta"], [53, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.base_gaussian_process": [[54, 1, 1, "", "BaseGaussianProcess"], [54, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.base_gaussian_process.GaussianProcess": [[54, 2, 1, "", "get_meta"], [54, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[55, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[55, 2, 1, "", "get_meta"], [55, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.gpytorch": [[56, 1, 1, "", "AugmentedLocalGaussianProcess"], [56, 1, 1, "", "ExactGPModel"], [56, 1, 1, "", "GPyTorchGaussianProcess"], [56, 1, 1, "", "GloballyAugmentedLocalGaussianProcess"], [56, 1, 1, "", "VariationalGaussianProcess"]], "smac.model.gaussian_process.gpytorch.AugmentedLocalGaussianProcess": [[56, 2, 1, "", "forward"], [56, 2, 1, "", "set_augment_module"]], "smac.model.gaussian_process.gpytorch.ExactGPModel": [[56, 2, 1, "", "forward"]], "smac.model.gaussian_process.gpytorch.GPyTorchGaussianProcess": [[56, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.gpytorch.GloballyAugmentedLocalGaussianProcess": [[56, 2, 1, "", "update_attribute"]], "smac.model.gaussian_process.gpytorch.VariationalGaussianProcess": [[56, 2, 1, "", "forward"]], "smac.model.gaussian_process.kernels": [[57, 1, 1, "", "ConstantKernel"], [57, 1, 1, "", "HammingKernel"], [57, 1, 1, "", "Matern"], [57, 1, 1, "", "ProductKernel"], [57, 1, 1, "", "RBF"], [57, 1, 1, "", "SumKernel"], [57, 1, 1, "", "WhiteKernel"], [58, 0, 0, "-", "base_kernels"], [59, 0, 0, "-", "boing"], [60, 0, 0, "-", "hamming_kernel"], [61, 0, 0, "-", "matern_kernel"], [62, 0, 0, "-", "rbf_kernel"], [63, 0, 0, "-", "utils"], [64, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[57, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.HammingKernel": [[57, 2, 1, "", "get_meta"], [57, 6, 1, "", "hyperparameter_length_scale"]], "smac.model.gaussian_process.kernels.Matern": [[57, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[57, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.RBF": [[57, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.SumKernel": [[57, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.WhiteKernel": [[57, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.base_kernels": [[58, 1, 1, "", "ConstantKernel"], [58, 1, 1, "", "ProductKernel"], [58, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[58, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[58, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[58, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.boing": [[59, 1, 1, "", "FITCKernel"], [59, 1, 1, "", "FITCMean"], [59, 1, 1, "", "MixedKernel"], [59, 5, 1, "", "construct_gp_kernel"]], "smac.model.gaussian_process.kernels.boing.FITCKernel": [[59, 2, 1, "", "forward"], [59, 2, 1, "", "num_outputs_per_input"], [59, 2, 1, "", "posterior_mean"]], "smac.model.gaussian_process.kernels.boing.FITCMean": [[59, 2, 1, "", "forward"]], "smac.model.gaussian_process.kernels.boing.MixedKernel": [[59, 2, 1, "", "forward"], [59, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[60, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[60, 2, 1, "", "get_meta"], [60, 6, 1, "", "hyperparameter_length_scale"]], "smac.model.gaussian_process.kernels.matern_kernel": [[61, 1, 1, "", "Matern"]], "smac.model.gaussian_process.kernels.matern_kernel.Matern": [[61, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[62, 1, 1, "", "RBF"]], "smac.model.gaussian_process.kernels.rbf_kernel.RBF": [[62, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.kernels.utils": [[63, 5, 1, "", "get_conditional_hyperparameters"]], "smac.model.gaussian_process.kernels.white_kernel": [[64, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel": [[64, 2, 1, "", "get_meta"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[65, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.priors": [[66, 1, 1, "", "GammaPrior"], [66, 1, 1, "", "HorseshoePrior"], [66, 1, 1, "", "LogNormalPrior"], [66, 1, 1, "", "TophatPrior"], [67, 0, 0, "-", "gamma_prior"], [68, 0, 0, "-", "horseshoe_prior"], [69, 0, 0, "-", "log_normal_prior"], [70, 0, 0, "-", "prior"], [71, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.TophatPrior": [[66, 2, 1, "", "gradient"]], "smac.model.gaussian_process.priors.gamma_prior": [[67, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[68, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[69, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.prior": [[70, 1, 1, "", "Prior"]], "smac.model.gaussian_process.priors.prior.Prior": [[70, 2, 1, "", "gradient"], [70, 2, 1, "", "lnprob"], [70, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[71, 1, 1, "", "SoftTopHatPrior"], [71, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[71, 2, 1, "", "gradient"], [71, 2, 1, "", "lnprob"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[71, 2, 1, "", "gradient"]], "smac.model.imputer": [[73, 0, 0, "-", "abstract_imputer"], [74, 0, 0, "-", "random_forest_imputer"]], "smac.model.multi_objective_model": [[75, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[75, 2, 1, "", "construct_estimators"], [75, 3, 1, "", "estimators"], [75, 3, 1, "", "num_targets"], [75, 2, 1, "", "predict_marginalized_over_instances"], [75, 3, 1, "", "target_names"]], "smac.model.random_forest": [[76, 1, 1, "", "BaseRandomForest"], [76, 1, 1, "", "MultiObjectiveRandomForest"], [76, 1, 1, "", "RandomForestWithInstances"], [77, 0, 0, "-", "base_random_forest"], [78, 0, 0, "-", "multi_objective_random_forest"], [79, 0, 0, "-", "random_forest_with_instances"]], "smac.model.random_forest.MultiObjectiveRandomForest": [[76, 2, 1, "", "construct_estimators"]], "smac.model.random_forest.RandomForestWithInstances": [[76, 3, 1, "", "bounds"], [76, 2, 1, "", "get_meta"], [76, 3, 1, "", "hypers"], [76, 3, 1, "", "logger"], [76, 3, 1, "", "n_points_per_tree"], [76, 2, 1, "", "predict_marginalized_over_instances"], [76, 3, 1, "", "rf"], [76, 3, 1, "", "rf_opts"], [76, 3, 1, "", "rng"], [76, 3, 1, "", "seed"], [76, 3, 1, "", "types"], [76, 3, 1, "", "unlog_y"]], "smac.model.random_forest.base_random_forest": [[77, 1, 1, "", "BaseRandomForest"]], "smac.model.random_forest.multi_objective_random_forest": [[78, 1, 1, "", "MultiObjectiveRandomForest"]], "smac.model.random_forest.multi_objective_random_forest.MultiObjectiveRandomForest": [[78, 2, 1, "", "construct_estimators"]], "smac.model.random_forest.random_forest_with_instances": [[79, 1, 1, "", "RandomForestWithInstances"]], "smac.model.random_forest.random_forest_with_instances.RandomForestWithInstances": [[79, 3, 1, "", "bounds"], [79, 2, 1, "", "get_meta"], [79, 3, 1, "", "hypers"], [79, 3, 1, "", "logger"], [79, 3, 1, "", "n_points_per_tree"], [79, 2, 1, "", "predict_marginalized_over_instances"], [79, 3, 1, "", "rf"], [79, 3, 1, "", "rf_opts"], [79, 3, 1, "", "rng"], [79, 3, 1, "", "seed"], [79, 3, 1, "", "types"], [79, 3, 1, "", "unlog_y"]], "smac.model.random_model": [[80, 1, 1, "", "RandomModel"]], "smac.model.utils": [[81, 5, 1, "", "check_subspace_points"], [81, 5, 1, "", "get_types"]], "smac.multi_objective": [[82, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [82, 1, 1, "", "AggregationStrategy"], [82, 1, 1, "", "MeanAggregationStrategy"], [82, 1, 1, "", "ParEGO"], [83, 0, 0, "-", "abstract_multi_objective_algorithm"], [84, 0, 0, "-", "aggregation_strategy"], [85, 0, 0, "-", "parego"], [86, 0, 0, "-", "utils"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[82, 2, 1, "", "__call__"], [82, 2, 1, "", "get_meta"]], "smac.multi_objective.AggregationStrategy": [[82, 2, 1, "", "__call__"]], "smac.multi_objective.MeanAggregationStrategy": [[82, 2, 1, "", "__call__"]], "smac.multi_objective.ParEGO": [[82, 2, 1, "", "__call__"], [82, 2, 1, "", "get_meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[83, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[83, 2, 1, "", "__call__"], [83, 2, 1, "", "get_meta"]], "smac.multi_objective.aggregation_strategy": [[84, 1, 1, "", "AggregationStrategy"], [84, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.AggregationStrategy": [[84, 2, 1, "", "__call__"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[84, 2, 1, "", "__call__"]], "smac.multi_objective.parego": [[85, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[85, 2, 1, "", "__call__"], [85, 2, 1, "", "get_meta"]], "smac.multi_objective.utils": [[86, 5, 1, "", "normalize_costs"]], "smac.random_design": [[87, 1, 1, "", "CosineAnnealingRandomDesign"], [87, 1, 1, "", "LinearCoolDownRandomDesign"], [87, 1, 1, "", "NoCoolDownRandomDesign"], [87, 1, 1, "", "ProbabilityCoolDownRandomDesign"], [87, 1, 1, "", "ProbabilityRandomDesign"], [87, 1, 1, "", "RandomDesign"], [88, 0, 0, "-", "cosine_annealing_design"], [89, 0, 0, "-", "modulus_design"], [90, 0, 0, "-", "probability_design"], [91, 0, 0, "-", "random_design"]], "smac.random_design.CosineAnnealingRandomDesign": [[87, 2, 1, "", "check"], [87, 2, 1, "", "get_meta"], [87, 2, 1, "", "next_iteration"]], "smac.random_design.LinearCoolDownRandomDesign": [[87, 2, 1, "", "check"], [87, 2, 1, "", "get_meta"], [87, 2, 1, "", "next_iteration"]], "smac.random_design.NoCoolDownRandomDesign": [[87, 2, 1, "", "check"], [87, 2, 1, "", "get_meta"], [87, 2, 1, "", "next_iteration"]], "smac.random_design.ProbabilityCoolDownRandomDesign": [[87, 2, 1, "", "check"], [87, 2, 1, "", "get_meta"], [87, 2, 1, "", "next_iteration"]], "smac.random_design.ProbabilityRandomDesign": [[87, 2, 1, "", "check"], [87, 2, 1, "", "get_meta"], [87, 2, 1, "", "next_iteration"]], "smac.random_design.RandomDesign": [[87, 2, 1, "", "check"], [87, 2, 1, "", "get_meta"], [87, 2, 1, "", "next_iteration"]], "smac.random_design.cosine_annealing_design": [[88, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.cosine_annealing_design.CosineAnnealingRandomDesign": [[88, 2, 1, "", "check"], [88, 2, 1, "", "get_meta"], [88, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[89, 1, 1, "", "LinearCoolDownRandomDesign"], [89, 1, 1, "", "NoCoolDownRandomDesign"]], "smac.random_design.modulus_design.LinearCoolDownRandomDesign": [[89, 2, 1, "", "check"], [89, 2, 1, "", "get_meta"], [89, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.NoCoolDownRandomDesign": [[89, 2, 1, "", "check"], [89, 2, 1, "", "get_meta"], [89, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design": [[90, 1, 1, "", "ProbabilityCoolDownRandomDesign"], [90, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.ProbabilityCoolDownRandomDesign": [[90, 2, 1, "", "check"], [90, 2, 1, "", "get_meta"], [90, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[90, 2, 1, "", "check"], [90, 2, 1, "", "get_meta"], [90, 2, 1, "", "next_iteration"]], "smac.random_design.random_design": [[91, 1, 1, "", "RandomDesign"]], "smac.random_design.random_design.RandomDesign": [[91, 2, 1, "", "check"], [91, 2, 1, "", "get_meta"], [91, 2, 1, "", "next_iteration"]], "smac.runhistory": [[92, 1, 1, "", "DataOrigin"], [92, 1, 1, "", "InstanceSeedBudgetKey"], [92, 1, 1, "", "InstanceSeedKey"], [92, 1, 1, "", "RunHistory"], [92, 1, 1, "", "RunInfo"], [92, 1, 1, "", "RunInfoIntent"], [92, 1, 1, "", "RunKey"], [92, 1, 1, "", "RunValue"], [92, 1, 1, "", "StatusType"], [93, 0, 0, "-", "dataclasses"], [94, 0, 0, "-", "encoder"], [104, 0, 0, "-", "enumerations"], [105, 0, 0, "-", "runhistory"]], "smac.runhistory.RunHistory": [[92, 2, 1, "", "__contains__"], [92, 2, 1, "", "__eq__"], [92, 2, 1, "", "__getitem__"], [92, 2, 1, "", "__iter__"], [92, 2, 1, "", "__len__"], [92, 2, 1, "", "add"], [92, 2, 1, "", "average_cost"], [92, 2, 1, "", "compute_all_costs"], [92, 3, 1, "", "config_ids"], [92, 3, 1, "", "data"], [92, 2, 1, "", "empty"], [92, 2, 1, "", "get_configs"], [92, 2, 1, "", "get_configs_per_budget"], [92, 2, 1, "", "get_cost"], [92, 2, 1, "", "get_incumbent"], [92, 2, 1, "", "get_min_cost"], [92, 2, 1, "", "get_runs_for_config"], [92, 3, 1, "", "ids_config"], [92, 2, 1, "", "incremental_update_cost"], [92, 2, 1, "", "load_json"], [92, 2, 1, "", "min_cost"], [92, 3, 1, "", "num_runs_per_config"], [92, 2, 1, "", "save_json"], [92, 2, 1, "", "sum_cost"], [92, 2, 1, "", "update"], [92, 2, 1, "", "update_cost"], [92, 2, 1, "", "update_from_json"]], "smac.runhistory.dataclasses": [[93, 1, 1, "", "InstanceSeedBudgetKey"], [93, 1, 1, "", "InstanceSeedKey"], [93, 1, 1, "", "RunInfo"], [93, 1, 1, "", "RunKey"], [93, 1, 1, "", "RunValue"]], "smac.runhistory.encoder": [[94, 1, 1, "", "AbstractRunHistoryEncoder"], [94, 1, 1, "", "RunHistoryEIPSEncoder"], [94, 1, 1, "", "RunHistoryEncoder"], [94, 1, 1, "", "RunHistoryInverseScaledEncoder"], [94, 1, 1, "", "RunHistoryLogEncoder"], [94, 1, 1, "", "RunHistoryLogScaledEncoder"], [94, 1, 1, "", "RunHistoryRawEncoder"], [94, 1, 1, "", "RunHistoryRawScaledEncoder"], [94, 1, 1, "", "RunHistoryScaledEncoder"], [94, 1, 1, "", "RunHistorySqrtScaledEncoder"], [95, 0, 0, "-", "abstract_encoder"], [96, 0, 0, "-", "boing_encoder"], [97, 0, 0, "-", "eips_encoder"], [98, 0, 0, "-", "encoder"], [99, 0, 0, "-", "inversed_scaled_encoder"], [100, 0, 0, "-", "log_encoder"], [101, 0, 0, "-", "log_scaled_encoder"], [102, 0, 0, "-", "scaled_encoder"], [103, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[94, 3, 1, "", "config"], [94, 3, 1, "", "cutoff_time"], [94, 2, 1, "", "get_configurations"], [94, 2, 1, "", "get_meta"], [94, 3, 1, "", "impute_censored_data"], [94, 3, 1, "", "impute_state"], [94, 3, 1, "", "imputer"], [94, 3, 1, "", "instance_features"], [94, 3, 1, "", "logger"], [94, 3, 1, "", "n_feats"], [94, 3, 1, "id0", "n_params"], [94, 3, 1, "", "rng"], [94, 3, 1, "", "success_states"], [94, 2, 1, "", "transform"], [94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryRawEncoder": [[94, 2, 1, "", "transform_raw_values"], [94, 2, 1, "", "transform_response_values"], [94, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.RunHistoryRawScaledEncoder": [[94, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[94, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[95, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[95, 3, 1, "", "config"], [95, 3, 1, "", "cutoff_time"], [95, 2, 1, "", "get_configurations"], [95, 2, 1, "", "get_meta"], [95, 3, 1, "", "impute_censored_data"], [95, 3, 1, "", "impute_state"], [95, 3, 1, "", "imputer"], [95, 3, 1, "", "instance_features"], [95, 3, 1, "", "logger"], [95, 3, 1, "", "n_feats"], [95, 3, 1, "id0", "n_params"], [95, 3, 1, "", "rng"], [95, 3, 1, "", "success_states"], [95, 2, 1, "", "transform"], [95, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[96, 1, 1, "", "RunHistoryRawEncoder"], [96, 1, 1, "", "RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder": [[96, 2, 1, "", "transform_raw_values"], [96, 2, 1, "", "transform_response_values"], [96, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder": [[96, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.eips_encoder": [[97, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[97, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[98, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[98, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inversed_scaled_encoder": [[99, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inversed_scaled_encoder.RunHistoryInverseScaledEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[100, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[101, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[101, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[102, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[103, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[104, 1, 1, "", "DataOrigin"], [104, 1, 1, "", "RunInfoIntent"], [104, 1, 1, "", "StatusType"]], "smac.runhistory.runhistory": [[105, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[105, 2, 1, "", "__contains__"], [105, 2, 1, "", "__eq__"], [105, 2, 1, "", "__getitem__"], [105, 2, 1, "", "__iter__"], [105, 2, 1, "", "__len__"], [105, 2, 1, "", "add"], [105, 2, 1, "", "average_cost"], [105, 2, 1, "", "compute_all_costs"], [105, 3, 1, "", "config_ids"], [105, 3, 1, "", "data"], [105, 2, 1, "", "empty"], [105, 2, 1, "", "get_configs"], [105, 2, 1, "", "get_configs_per_budget"], [105, 2, 1, "", "get_cost"], [105, 2, 1, "", "get_incumbent"], [105, 2, 1, "", "get_min_cost"], [105, 2, 1, "", "get_runs_for_config"], [105, 3, 1, "", "ids_config"], [105, 2, 1, "", "incremental_update_cost"], [105, 2, 1, "", "load_json"], [105, 2, 1, "", "min_cost"], [105, 3, 1, "", "num_runs_per_config"], [105, 2, 1, "", "save_json"], [105, 2, 1, "", "sum_cost"], [105, 2, 1, "", "update"], [105, 2, 1, "", "update_cost"], [105, 2, 1, "", "update_from_json"]], "smac.runner": [[106, 1, 1, "", "AbstractRunner"], [106, 1, 1, "", "DaskParallelRunner"], [106, 4, 1, "", "FirstRunCrashedException"], [106, 1, 1, "", "SerialRunner"], [106, 4, 1, "", "TargetAlgorithmAbortException"], [106, 1, 1, "", "TargetAlgorithmRunner"], [107, 0, 0, "-", "dask_runner"], [108, 0, 0, "-", "exceptions"], [109, 0, 0, "-", "runner"], [110, 0, 0, "-", "serial_runner"], [111, 0, 0, "-", "target_algorithm_runner"]], "smac.runner.AbstractRunner": [[106, 3, 1, "", "crash_cost"], [106, 2, 1, "", "get_finished_runs"], [106, 2, 1, "", "get_meta"], [106, 3, 1, "", "n_objectives"], [106, 2, 1, "", "num_workers"], [106, 3, 1, "", "objectives"], [106, 2, 1, "", "pending_runs"], [106, 3, 1, "", "results"], [106, 2, 1, "", "run"], [106, 2, 1, "", "run_wrapper"], [106, 3, 1, "", "scenario"], [106, 3, 1, "", "stats"], [106, 2, 1, "", "submit_run"], [106, 3, 1, "", "target_algorithm"], [106, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[106, 2, 1, "", "__del__"], [106, 3, 1, "", "abort_i_first_run_crash"], [106, 3, 1, "", "client"], [106, 3, 1, "", "crash_cost"], [106, 3, 1, "", "futures"], [106, 2, 1, "", "get_finished_runs"], [106, 2, 1, "", "get_meta"], [106, 3, 1, "", "n_workers"], [106, 2, 1, "", "num_workers"], [106, 3, 1, "", "output_directory"], [106, 3, 1, "", "par_factor"], [106, 3, 1, "", "patience"], [106, 2, 1, "", "pending_runs"], [106, 3, 1, "", "results"], [106, 2, 1, "", "run"], [106, 3, 1, "", "run_obj"], [106, 3, 1, "", "single_worker"], [106, 3, 1, "", "stats"], [106, 2, 1, "", "submit_run"], [106, 3, 1, "", "ta"], [106, 2, 1, "", "wait"]], "smac.runner.SerialRunner": [[106, 2, 1, "", "get_finished_runs"], [106, 2, 1, "", "num_workers"], [106, 2, 1, "", "pending_runs"], [106, 2, 1, "", "run"], [106, 2, 1, "", "submit_run"], [106, 2, 1, "", "wait"]], "smac.runner.TargetAlgorithmRunner": [[106, 2, 1, "", "__call__"], [106, 2, 1, "", "run"]], "smac.runner.dask_runner": [[107, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[107, 2, 1, "", "__del__"], [107, 3, 1, "", "abort_i_first_run_crash"], [107, 3, 1, "", "client"], [107, 3, 1, "", "crash_cost"], [107, 3, 1, "", "futures"], [107, 2, 1, "", "get_finished_runs"], [107, 2, 1, "", "get_meta"], [107, 3, 1, "", "n_workers"], [107, 2, 1, "", "num_workers"], [107, 3, 1, "", "output_directory"], [107, 3, 1, "", "par_factor"], [107, 3, 1, "", "patience"], [107, 2, 1, "", "pending_runs"], [107, 3, 1, "", "results"], [107, 2, 1, "", "run"], [107, 3, 1, "", "run_obj"], [107, 3, 1, "", "single_worker"], [107, 3, 1, "", "stats"], [107, 2, 1, "", "submit_run"], [107, 3, 1, "", "ta"], [107, 2, 1, "", "wait"]], "smac.runner.exceptions": [[108, 4, 1, "", "FirstRunCrashedException"], [108, 4, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.runner": [[109, 1, 1, "", "AbstractRunner"]], "smac.runner.runner.AbstractRunner": [[109, 3, 1, "", "crash_cost"], [109, 2, 1, "", "get_finished_runs"], [109, 2, 1, "", "get_meta"], [109, 3, 1, "", "n_objectives"], [109, 2, 1, "", "num_workers"], [109, 3, 1, "", "objectives"], [109, 2, 1, "", "pending_runs"], [109, 3, 1, "", "results"], [109, 2, 1, "", "run"], [109, 2, 1, "", "run_wrapper"], [109, 3, 1, "", "scenario"], [109, 3, 1, "", "stats"], [109, 2, 1, "", "submit_run"], [109, 3, 1, "", "target_algorithm"], [109, 2, 1, "", "wait"]], "smac.runner.serial_runner": [[110, 1, 1, "", "SerialRunner"]], "smac.runner.serial_runner.SerialRunner": [[110, 2, 1, "", "get_finished_runs"], [110, 2, 1, "", "num_workers"], [110, 2, 1, "", "pending_runs"], [110, 2, 1, "", "run"], [110, 2, 1, "", "submit_run"], [110, 2, 1, "", "wait"]], "smac.runner.target_algorithm_runner": [[111, 1, 1, "", "TargetAlgorithmRunner"]], "smac.runner.target_algorithm_runner.TargetAlgorithmRunner": [[111, 2, 1, "", "__call__"], [111, 2, 1, "", "run"]], "smac.scenario": [[112, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[112, 2, 1, "", "__post_init__"], [112, 2, 1, "", "count_instance_features"], [112, 2, 1, "", "count_objectives"], [112, 2, 1, "", "get_meta"], [112, 2, 1, "", "load"], [112, 2, 1, "", "save"]], "smac.utils": [[114, 0, 0, "-", "data_structures"], [115, 0, 0, "-", "logging"], [116, 0, 0, "-", "stats"], [117, 0, 0, "-", "subspaces"]], "smac.utils.logging": [[115, 1, 1, "", "CustomFormatter"], [115, 5, 1, "", "format_array"]], "smac.utils.logging.CustomFormatter": [[115, 2, 1, "", "format"]], "smac.utils.stats": [[116, 1, 1, "", "Stats"], [116, 1, 1, "", "TrajectoryItem"]], "smac.utils.stats.Stats": [[116, 2, 1, "", "get_remaing_walltime"], [116, 2, 1, "", "get_remaining_cputime"], [116, 2, 1, "", "get_remaining_trials"], [116, 2, 1, "", "get_used_walltime"], [116, 2, 1, "", "is_budget_exhausted"], [116, 2, 1, "", "load"], [116, 2, 1, "", "print"], [116, 2, 1, "", "save"], [116, 2, 1, "", "start_timing"], [116, 2, 1, "", "update_average_configs_per_intensify"]], "smac.utils.subspaces": [[117, 1, 1, "", "ChallengerListLocal"], [117, 1, 1, "", "LocalSubspace"], [118, 0, 0, "-", "boing_subspace"], [119, 0, 0, "-", "turbo_subspace"]], "smac.utils.subspaces.LocalSubspace": [[117, 2, 1, "", "add_new_observations"], [117, 2, 1, "", "fit_forbidden_to_ss"], [117, 2, 1, "", "generate_challengers"], [117, 2, 1, "", "normalize_input"], [117, 2, 1, "", "update_incumbent_array"], [117, 2, 1, "", "update_model"]], "smac.utils.subspaces.boing_subspace": [[118, 1, 1, "", "BOinGSubspace"]], "smac.utils.subspaces.turbo_subspace": [[119, 1, 1, "", "TuRBOSubSpace"]], "smac.utils.subspaces.turbo_subspace.TuRBOSubSpace": [[119, 2, 1, "", "add_new_observations"], [119, 2, 1, "", "adjust_length"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"callback": [0, 18], "exampl": [0, 135, 142], "advanc": 1, "usag": 1, "resumpt": 2, "api": 3, "refer": 3, "smac": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "acquisit": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "abstract_acqusition_optim": 5, "differential_evolut": 6, "function": [7, 8, 9, 10, 11, 12, 13, 14, 121, 131], "abstract_acquisition_funct": 8, "confidence_bound": 9, "expected_improv": 10, "integr": 11, "prior": [12, 66, 67, 68, 69, 70, 71], "probability_improv": 13, "thompson": 14, "local_and_random_search": 15, "local_search": 16, "random_search": 17, "configspac": [19, 20], "util": [20, 63, 81, 86, 113, 114, 115, 116, 117, 118, 119], "constant": 21, "facad": [22, 23, 24, 25, 26, 27, 28, 137], "algorithm_configuration_facad": 23, "blackbox_facad": 24, "boing_facad": 25, "hyperparameter_facad": 27, "multi_fidelity_facad": 28, "initial_design": [29, 30, 31, 32, 33, 34, 35], "default_design": 30, "factorial_design": 31, "latin_hypercube_design": 33, "random_design": [34, 87, 88, 89, 90, 91], "sobol_design": 35, "intensif": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45], "abstract_intensifi": 37, "hyperband": 38, "hyperband_work": 39, "parallel_schedul": 41, "simple_intensifi": 42, "stage": 43, "successive_halv": 44, "successive_halving_work": 45, "main": [46, 47, 48, 49, 50], "base_smbo": 47, "bo": [48, 59], "smbo": 49, "turbo": 50, "model": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "base_model": 52, "gaussian_process": [53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "base_gaussian_process": 54, "gpytorch": 56, "kernel": [57, 58, 59, 60, 61, 62, 63, 64], "base_kernel": 58, "hamming_kernel": 60, "matern_kernel": 61, "rbf_kernel": 62, "white_kernel": 64, "mcmc_gaussian_process": 65, "gamma_prior": 67, "horseshoe_prior": 68, "log_normal_prior": 69, "tophat_prior": 71, "imput": [72, 73, 74], "abstract_imput": 73, "random_forest_imput": 74, "multi_objective_model": 75, "random_forest": [76, 77, 78, 79], "base_random_forest": 77, "multi_objective_random_forest": 78, "random_forest_with_inst": 79, "random_model": 80, "multi_object": [82, 83, 84, 85, 86], "abstract_multi_objective_algorithm": 83, "aggregation_strategi": 84, "parego": 85, "cosine_annealing_design": 88, "modulus_design": 89, "probability_design": 90, "runhistori": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "dataclass": 93, "encod": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "abstract_encod": 95, "boing_encod": 96, "eips_encod": 97, "inversed_scaled_encod": 99, "log_encod": 100, "log_scaled_encod": 101, "scaled_encod": 102, "sqrt_scaled_encod": 103, "enumer": 104, "runner": [106, 107, 108, 109, 110, 111], "dask_runn": 107, "except": 108, "serial_runn": 110, "target_algorithm_runn": 111, "scenario": [112, 137], "data_structur": 114, "log": 115, "stat": 116, "subspac": [117, 118, 119], "boing_subspac": 118, "turbo_subspac": 119, "synthet": 121, "support": 122, "vector": 122, "machin": 122, "cross": 122, "valid": 122, "start": [123, 137], "pre": 123, "evalu": 123, "configur": [123, 137], "full": 124, "custom": 124, "basic": [125, 135], "comput": [126, 130, 133], "time": [126, 130, 133], "multi": [127, 129, 132, 135], "layer": 127, "perceptron": 127, "us": 127, "multipl": [127, 128], "epoch": 127, "stochast": 128, "gradient": 128, "descent": 128, "On": 128, "dataset": 128, "fidel": [129, 135], "instanc": [129, 135], "2d": 131, "schaffer": 131, "object": [132, 135], "commandlin": [134, 135], "f": 136, "A": 136, "q": 136, "get": 137, "space": 137, "target": 137, "algorithm": 137, "glossari": 138, "home": 139, "contact": 139, "instal": 140, "requir": 140, "anaconda": 140, "conda": 140, "forg": 140, "licens": 141, "minim": 142, "packag": 143, "overview": 143, "featur": 143, "compon": 143, "comparison": 143}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})