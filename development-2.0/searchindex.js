Search.setIndex({"docnames": ["1_installation", "2_package_overview", "3_getting_started", "4_minimal_example", "5_api", "6_references", "7_glossary", "8_faq", "9_license", "advanced_usage/10_continue", "advanced_usage/11_reproducability", "advanced_usage/1_components", "advanced_usage/2_multi_fidelity", "advanced_usage/3_multi_objective", "advanced_usage/4_instances", "advanced_usage/5_ask_and_tell", "advanced_usage/6_commandline", "advanced_usage/7_stopping_criteria", "advanced_usage/8_logging", "advanced_usage/9_parallelism", "advanced_usage/index", "api/smac.acquisition", "api/smac.acquisition.function", "api/smac.acquisition.function.abstract_acquisition_function", "api/smac.acquisition.function.confidence_bound", "api/smac.acquisition.function.expected_improvement", "api/smac.acquisition.function.integrated_acquisition_function", "api/smac.acquisition.function.prior_acqusition_function", "api/smac.acquisition.function.probability_improvement", "api/smac.acquisition.function.thompson", "api/smac.acquisition.maximizer", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer", "api/smac.acquisition.maximizer.differential_evolution", "api/smac.acquisition.maximizer.helpers", "api/smac.acquisition.maximizer.local_and_random_search", "api/smac.acquisition.maximizer.local_search", "api/smac.acquisition.maximizer.random_search", "api/smac.callback", "api/smac.facade", "api/smac.facade.abstract_facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.boing_facade", "api/smac.facade.hyperband_facade", "api/smac.facade.hyperparameter_optimization_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.facade.random_facade", "api/smac.initial_design", "api/smac.initial_design.abstract_initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensifier", "api/smac.intensifier.abstract_intensifier", "api/smac.intensifier.abstract_parallel_intensifier", "api/smac.intensifier.hyperband", "api/smac.intensifier.hyperband_worker", "api/smac.intensifier.intensifier", "api/smac.intensifier.stages", "api/smac.intensifier.successive_halving", "api/smac.intensifier.successive_halving_worker", "api/smac.main", "api/smac.main.base_smbo", "api/smac.main.boing", "api/smac.main.smbo", "api/smac.main.turbo", "api/smac.model", "api/smac.model.abstract_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.abstract_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch_gaussian_process", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.abstract_prior", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.abstract_random_forest", "api/smac.model.random_forest.random_forest", "api/smac.model.random_model", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.random_design", "api/smac.random_design.abstract_random_design", "api/smac.random_design.annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inverse_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.abstract_runner", "api/smac.runner.abstract_serial_runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.target_function_runner", "api/smac.runner.target_function_script_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.configspace", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.multi_objective", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "examples/1_basics/1_synthetic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_ask_and_tell", "examples/1_basics/4_callback", "examples/1_basics/5_priors", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/2_parego", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/5_commandline/1_call_target_function_script", "examples/5_commandline/index", "examples/5_commandline/sg_execution_times", "examples/index", "index"], "filenames": ["1_installation.rst", "2_package_overview.rst", "3_getting_started.rst", "4_minimal_example.rst", "5_api.rst", "6_references.rst", "7_glossary.rst", "8_faq.rst", "9_license.rst", "advanced_usage/10_continue.rst", "advanced_usage/11_reproducability.rst", "advanced_usage/1_components.rst", "advanced_usage/2_multi_fidelity.rst", "advanced_usage/3_multi_objective.rst", "advanced_usage/4_instances.rst", "advanced_usage/5_ask_and_tell.rst", "advanced_usage/6_commandline.rst", "advanced_usage/7_stopping_criteria.rst", "advanced_usage/8_logging.rst", "advanced_usage/9_parallelism.rst", "advanced_usage/index.rst", "api/smac.acquisition.rst", "api/smac.acquisition.function.rst", "api/smac.acquisition.function.abstract_acquisition_function.rst", "api/smac.acquisition.function.confidence_bound.rst", "api/smac.acquisition.function.expected_improvement.rst", "api/smac.acquisition.function.integrated_acquisition_function.rst", "api/smac.acquisition.function.prior_acqusition_function.rst", "api/smac.acquisition.function.probability_improvement.rst", "api/smac.acquisition.function.thompson.rst", "api/smac.acquisition.maximizer.rst", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer.rst", "api/smac.acquisition.maximizer.differential_evolution.rst", "api/smac.acquisition.maximizer.helpers.rst", "api/smac.acquisition.maximizer.local_and_random_search.rst", "api/smac.acquisition.maximizer.local_search.rst", "api/smac.acquisition.maximizer.random_search.rst", "api/smac.callback.rst", "api/smac.facade.rst", "api/smac.facade.abstract_facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.boing_facade.rst", "api/smac.facade.hyperband_facade.rst", "api/smac.facade.hyperparameter_optimization_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.facade.random_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.abstract_initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensifier.rst", "api/smac.intensifier.abstract_intensifier.rst", "api/smac.intensifier.abstract_parallel_intensifier.rst", "api/smac.intensifier.hyperband.rst", "api/smac.intensifier.hyperband_worker.rst", "api/smac.intensifier.intensifier.rst", "api/smac.intensifier.stages.rst", "api/smac.intensifier.successive_halving.rst", "api/smac.intensifier.successive_halving_worker.rst", "api/smac.main.rst", "api/smac.main.base_smbo.rst", "api/smac.main.boing.rst", "api/smac.main.smbo.rst", "api/smac.main.turbo.rst", "api/smac.model.rst", "api/smac.model.abstract_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.abstract_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch_gaussian_process.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.abstract_prior.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.abstract_random_forest.rst", "api/smac.model.random_forest.random_forest.rst", "api/smac.model.random_model.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.random_design.rst", "api/smac.random_design.abstract_random_design.rst", "api/smac.random_design.annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inverse_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.abstract_runner.rst", "api/smac.runner.abstract_serial_runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.target_function_runner.rst", "api/smac.runner.target_function_script_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.configspace.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.multi_objective.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "examples/1_basics/1_synthetic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_ask_and_tell.rst", "examples/1_basics/4_callback.rst", "examples/1_basics/5_priors.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/2_parego.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/5_commandline/1_call_target_function_script.rst", "examples/5_commandline/index.rst", "examples/5_commandline/sg_execution_times.rst", "examples/index.rst", "index.rst"], "titles": ["Installation", "Package Overview", "Getting Started", "Minimal Example", "API References", "References", "Glossary", "F.A.Q.", "License", "Continue a Run", "Reproducability", "Components", "Multi-Fidelity Optimization", "Multi-Objective Optimization", "Optimization across Instances", "Ask-and-Tell Interface", "Command-Line Interface", "Stopping Criteria", "Logging", "Parallelism", "Advanced Usage", "smac.acquisition", "smac.acquisition.function", "smac.acquisition.function.abstract_acquisition_function", "smac.acquisition.function.confidence_bound", "smac.acquisition.function.expected_improvement", "smac.acquisition.function.integrated_acquisition_function", "smac.acquisition.function.prior_acqusition_function", "smac.acquisition.function.probability_improvement", "smac.acquisition.function.thompson", "smac.acquisition.maximizer", "smac.acquisition.maximizer.abstract_acqusition_maximizer", "smac.acquisition.maximizer.differential_evolution", "smac.acquisition.maximizer.helpers", "smac.acquisition.maximizer.local_and_random_search", "smac.acquisition.maximizer.local_search", "smac.acquisition.maximizer.random_search", "smac.callback", "smac.facade", "smac.facade.abstract_facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.boing_facade", "smac.facade.hyperband_facade", "smac.facade.hyperparameter_optimization_facade", "smac.facade.multi_fidelity_facade", "smac.facade.random_facade", "smac.initial_design", "smac.initial_design.abstract_initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensifier", "smac.intensifier.abstract_intensifier", "smac.intensifier.abstract_parallel_intensifier", "smac.intensifier.hyperband", "smac.intensifier.hyperband_worker", "smac.intensifier.intensifier", "smac.intensifier.stages", "smac.intensifier.successive_halving", "smac.intensifier.successive_halving_worker", "smac.main", "smac.main.base_smbo", "smac.main.boing", "smac.main.smbo", "smac.main.turbo", "smac.model", "smac.model.abstract_model", "smac.model.gaussian_process", "smac.model.gaussian_process.abstract_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch_gaussian_process", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.abstract_prior", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.abstract_random_forest", "smac.model.random_forest.random_forest", "smac.model.random_model", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.random_design", "smac.random_design.abstract_random_design", "smac.random_design.annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inverse_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.runhistory", "smac.runner", "smac.runner.abstract_runner", "smac.runner.abstract_serial_runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.target_function_runner", "smac.runner.target_function_script_runner", "smac.scenario", "smac.utils", "smac.utils.configspace", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.multi_objective", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "Synthetic Function", "Support Vector Machine with Cross-Validation", "Ask-and-Tell", "Custom Callback", "User Priors over the Optimum", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function with Objective Weights", "ParEGO", "Multi-Objective", "Computation times", "Call Target Function From Script", "Command-Line Interface", "Computation times", "Examples", "Home"], "terms": {"smac": [0, 1, 2, 3, 6, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149, 150], "i": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 27, 30, 31, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 80, 81, 82, 84, 87, 88, 90, 96, 97, 98, 99, 100, 101, 102, 103, 105, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149, 150], "written": [0, 150], "python3": [0, 150], "therefor": [0, 2, 6, 11, 13, 14, 15, 38, 46, 74, 75, 122, 138, 143], "an": [0, 1, 2, 6, 7, 11, 12, 13, 14, 15, 16, 22, 23, 30, 31, 33, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 61, 62, 70, 80, 92, 94, 101, 114, 115, 116, 117, 118, 119, 120, 121, 126, 131, 132, 135, 138, 139, 143, 150], "environ": [0, 2, 3, 122, 131, 134, 135, 138, 143, 146], "python": [0, 1, 7, 16, 33, 70, 72, 80, 82, 115, 120, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149, 150], "3": [0, 6, 8, 11, 13, 38, 40, 41, 43, 44, 45, 46, 54, 57, 59, 61, 88, 90, 96, 99, 103, 104, 105, 106, 107, 109, 110, 111, 115, 118, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 150], "8": [0, 2, 11, 54, 59, 88, 90, 132, 135, 138, 143, 150], "furthermor": [0, 134], "random": [0, 2, 6, 20, 22, 27, 30, 31, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 52, 54, 59, 63, 64, 68, 69, 88, 89, 90, 91, 96, 97, 98, 99, 100, 101, 114, 122, 132, 135, 138, 143, 150], "forest": [0, 2, 6, 11, 22, 27, 38, 40, 44, 68, 69, 88, 89, 90, 132, 135, 150], "us": [0, 1, 2, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 27, 29, 30, 31, 33, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 80, 81, 82, 84, 86, 87, 88, 90, 96, 98, 99, 101, 102, 103, 104, 108, 109, 110, 112, 113, 114, 115, 116, 118, 121, 122, 124, 125, 126, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 146, 147, 149, 150], "swig": 0, "build": [0, 101, 113, 132, 135, 138, 139], "depend": [0, 1, 2, 7, 10, 11, 13, 16, 20, 38, 39, 41, 63, 64, 66, 68, 69, 92, 93, 101, 114, 115, 119, 122, 132], "either": [0, 2, 7, 38, 39, 70, 80, 101, 114, 115, 120], "your": [0, 1, 6, 7, 13, 14, 16, 18, 20, 122, 138, 139], "system": [0, 138, 139], "directli": [0, 11, 12, 16, 115, 120], "The": [0, 1, 2, 3, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 22, 23, 26, 30, 31, 34, 38, 39, 40, 41, 43, 44, 45, 46, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 80, 81, 82, 83, 86, 87, 88, 90, 96, 99, 101, 103, 104, 105, 114, 115, 116, 117, 118, 120, 121, 122, 124, 131, 133, 138, 139, 142, 143, 150], "command": [0, 1, 6, 20], "linux": 0, "machin": [0, 3, 22, 26, 136, 137, 149, 150], "follow": [0, 1, 2, 3, 7, 11, 13, 14, 16, 18, 38, 45, 46, 54, 59, 61, 88, 90, 115, 116, 118, 121, 146], "apt": 0, "get": [0, 11, 13, 30, 32, 36, 54, 56, 74, 75, 101, 114, 115, 118, 126, 131, 132, 133, 135, 138, 139, 143, 146], "test": [0, 16, 68, 69, 70, 72, 101, 114, 121, 150], "mac": [0, 7], "9": [0, 54, 59, 131, 139, 143, 150], "10": [0, 2, 6, 18, 22, 27, 30, 34, 35, 38, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 54, 59, 70, 72, 88, 90, 131, 132, 133, 134, 135, 138, 142, 143, 146, 150], "we": [0, 2, 6, 7, 11, 13, 14, 16, 20, 22, 29, 30, 31, 38, 46, 54, 56, 59, 70, 80, 82, 115, 116, 131, 132, 133, 134, 135, 138, 139, 143, 146, 149, 150], "recommend": [0, 7, 11, 16, 20], "creat": [0, 7, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 47, 48, 54, 55, 56, 57, 59, 61, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 115, 116, 118, 120, 121, 132, 135, 138, 139, 143], "activ": [0, 7, 54, 57, 61, 74, 75, 115, 118, 135, 138, 143], "n": [0, 5, 22, 23, 29, 54, 59, 63, 64, 66, 70, 72, 80, 82, 115, 118, 143], "If": [0, 2, 7, 8, 9, 11, 14, 16, 17, 20, 22, 27, 30, 31, 38, 39, 44, 46, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 70, 74, 75, 80, 87, 88, 90, 96, 99, 101, 103, 104, 114, 115, 118, 121, 122, 126, 127, 132, 139, 150], "you": [0, 1, 2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 38, 44, 46, 70, 80, 101, 114, 115, 118, 122, 132, 135, 147, 149, 150], "haven": 0, "t": [0, 2, 7, 22, 24, 25, 28, 29, 74, 75], "yet": [0, 7, 9, 15, 38, 45], "can": [0, 1, 2, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 29, 30, 31, 35, 38, 39, 45, 54, 55, 56, 57, 59, 61, 63, 64, 70, 80, 101, 103, 105, 113, 114, 115, 116, 117, 118, 120, 122, 126, 131, 132, 133, 135, 138, 143, 147, 149, 150], "insid": [0, 11, 134], "gxx_linux": 0, "64": [0, 30, 35], "gcc_linux": 0, "now": [0, 13, 38, 45, 131, 132, 133, 134, 139, 146], "via": [0, 11, 13, 30, 32, 36, 54, 55, 115, 116, 118], "pypi": 0, "pip": 0, "Or": 0, "altern": [0, 13, 132, 139], "clone": 0, "from": [0, 1, 2, 3, 7, 9, 11, 15, 16, 17, 18, 30, 32, 34, 38, 39, 45, 46, 47, 48, 54, 56, 57, 58, 59, 61, 62, 63, 64, 66, 70, 72, 74, 75, 82, 101, 102, 114, 115, 116, 118, 121, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 147, 148, 149], "github": [0, 7, 47, 53, 150], "git": 0, "http": [0, 5, 8, 22, 26, 33, 47, 53, 54, 61, 92, 95, 150], "com": [0, 33, 150], "automl": [0, 7, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 150], "smac3": [0, 7, 150], "cd": 0, "e": [0, 1, 6, 11, 13, 16, 22, 25, 30, 34, 38, 39, 54, 57, 61, 63, 64, 81, 83, 115, 116, 139], "dev": 0, "channel": 0, "achiev": [0, 2], "ad": [0, 37, 74, 75, 101, 114, 124, 138], "config": [0, 2, 3, 6, 11, 38, 39, 40, 41, 44, 47, 48, 54, 55, 56, 59, 63, 64, 66, 101, 102, 114, 115, 116, 118, 120, 121, 122, 124, 131, 132, 133, 134, 135, 138, 139, 142, 143], "add": [0, 7, 11, 14, 38, 39, 40, 41, 44, 45, 46, 47, 48, 58, 62, 63, 64, 66, 101, 114, 132, 135, 138, 139, 143], "set": [0, 1, 5, 7, 9, 11, 16, 17, 38, 39, 41, 44, 45, 46, 47, 48, 54, 57, 58, 59, 61, 62, 63, 64, 96, 98, 100, 101, 103, 105, 113, 114, 115, 120, 122, 126, 127, 135, 138, 139, 143, 146], "channel_prior": 0, "strict": 0, "must": [0, 2, 16, 30, 31, 33, 38, 40, 41, 44, 46, 68, 69, 74, 75, 81, 82, 83, 86, 87, 92, 94, 121, 122, 138], "have": [0, 6, 7, 8, 9, 11, 12, 15, 16, 30, 34, 38, 39, 45, 46, 54, 55, 56, 63, 64, 101, 113, 114, 115, 116, 117, 118, 135, 139, 143], "4": [0, 1, 11, 16, 38, 40, 54, 59, 121, 131, 133, 134, 135, 138, 139, 142, 143], "To": [0, 7, 9, 11, 14, 54, 56, 57, 59, 115, 118, 135, 138], "updat": [0, 11, 13, 16, 22, 23, 37, 38, 39, 45, 46, 54, 55, 56, 58, 59, 62, 63, 64, 66, 92, 93, 95, 101, 114, 131, 132, 133, 135, 142, 143, 146], "check": [0, 11, 15, 54, 59, 96, 97, 98, 99, 100, 101, 114, 115, 116, 122], "current": [0, 6, 22, 23, 38, 39, 46, 54, 55, 56, 58, 59, 62, 63, 64, 70, 72, 96, 100, 101, 103, 104, 113, 114, 134], "version": [0, 2, 7, 11, 17, 18, 30, 34], "pleas": [0, 1, 2, 7, 8, 11, 12, 15, 16, 22, 29, 38, 46, 54, 57, 150], "instruct": 0, "offici": 0, "document": [0, 2, 5, 54, 57], "onc": [0, 30, 35, 38, 46, 54, 57, 61, 135, 138, 143], "ha": [0, 1, 11, 17, 30, 31, 47, 48, 74, 75], "been": [0, 1, 7, 11, 17, 38, 39, 54, 55, 63, 64, 101, 114, 115, 116, 117, 118], "enabl": [0, 16, 38, 40, 44, 88, 90, 101, 114], "read": [0, 9, 20, 101, 114], "feedstock": 0, "more": [0, 2, 6, 11, 15, 17, 20, 38, 40, 41, 44, 54, 55, 56, 57, 59, 115, 116, 118], "detail": [0, 2, 6, 11, 22, 26, 27, 54, 57, 59, 138], "support": [1, 2, 3, 11, 15, 19, 38, 43, 45, 74, 75, 136, 137, 138, 139, 149], "determin": [1, 7, 10, 11, 12, 38, 39, 54, 55, 56, 58, 61, 62, 70, 74, 75, 80, 117], "well": [1, 11, 22, 27, 54, 55, 115, 116, 131, 132, 133, 135], "perform": [1, 2, 6, 7, 11, 12, 16, 30, 34, 35, 38, 39, 40, 44, 45, 46, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 88, 90, 101, 114, 115, 116, 122, 139, 150], "hyperparamet": [1, 2, 3, 5, 6, 11, 16, 22, 26, 27, 30, 34, 38, 39, 41, 44, 45, 47, 48, 54, 57, 61, 63, 64, 68, 69, 70, 72, 74, 75, 76, 80, 81, 82, 86, 87, 88, 90, 124, 131, 132, 133, 134, 135, 138, 143, 146, 150], "configur": [1, 3, 6, 7, 10, 11, 13, 15, 16, 22, 23, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 62, 63, 64, 66, 81, 82, 86, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 126, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 150], "algorithm": [1, 2, 5, 6, 7, 12, 13, 20, 22, 26, 38, 39, 40, 41, 43, 44, 46, 101, 103, 104, 114, 115, 116, 120, 121, 139, 150], "By": [1, 127, 138], "being": [1, 6, 15, 54, 56, 61, 74, 75, 115, 120], "robust": [1, 54, 57, 61, 70, 72, 80, 82], "flexibl": [1, 70, 72, 80, 82, 101, 113], "framework": [1, 2, 6, 70, 72, 80, 82], "bayesian": [1, 5, 6, 11, 22, 26, 27, 38, 39, 63, 64, 66, 70, 72, 80, 82, 96, 99, 134, 150], "optim": [1, 2, 3, 5, 6, 7, 10, 11, 15, 17, 18, 20, 22, 24, 26, 27, 29, 30, 34, 37, 38, 39, 45, 46, 54, 57, 61, 63, 64, 66, 70, 72, 80, 82, 92, 93, 96, 99, 101, 113, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149, 150], "improv": [1, 2, 11, 22, 25, 28, 38, 40, 41, 44], "within": [1, 54, 59, 115, 118], "few": [1, 6, 38, 46, 139], "function": [1, 5, 6, 7, 12, 13, 14, 20, 30, 31, 33, 34, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 70, 72, 74, 75, 80, 101, 103, 104, 105, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 133, 135, 136, 137, 138, 139, 144, 145, 147, 148, 149], "evalu": [1, 2, 6, 7, 11, 12, 15, 17, 22, 23, 30, 31, 38, 39, 40, 41, 44, 47, 48, 49, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64, 74, 75, 96, 97, 98, 99, 100, 101, 103, 105, 114, 115, 120, 131, 132, 133, 134, 138, 139, 142, 143], "It": [1, 6, 11, 38, 45, 54, 59, 61, 88, 90, 101, 113, 115, 118, 131, 132, 133], "offer": [1, 2, 13, 115, 116], "sever": [1, 33, 37, 149], "entri": [1, 2], "point": [1, 2, 11, 22, 24, 30, 31, 34, 38, 40, 44, 68, 69, 70, 72, 87, 88, 90, 142], "pre": [1, 14, 15], "typic": 1, "case": [1, 2, 12, 13, 22, 27, 30, 34, 38, 39, 46, 54, 59, 63, 64, 101, 114, 115, 116, 117, 118, 122, 139, 149], "solv": 1, "low": [1, 2, 11, 38, 46], "dimension": [1, 11, 38, 40, 68, 69, 70, 71, 72, 80, 88, 90, 131, 133], "continu": [1, 11, 20, 38, 39, 41, 45, 101, 114, 131, 132, 133, 135, 138, 150], "artifici": 1, "global": [1, 6, 18], "problem": [1, 5, 6, 7, 38, 39, 115, 116, 118, 120, 121, 131, 133], "across": [1, 6, 20, 54, 57, 61, 101, 114, 139], "multipl": [1, 6, 7, 11, 12, 13, 19, 20, 22, 27, 38, 39, 47, 48, 54, 57, 61, 68, 87, 101, 114, 122, 135, 140, 141, 143, 149], "instanc": [1, 2, 6, 7, 11, 12, 16, 17, 20, 38, 39, 40, 41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 80, 87, 88, 90, 101, 102, 103, 104, 105, 113, 114, 115, 116, 118, 120, 121, 122, 124, 139], "characterist": 1, "capabl": [1, 115, 118], "sampl": [1, 11, 13, 14, 22, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 54, 55, 59, 61, 63, 64, 68, 69, 70, 72, 80, 82, 87, 88, 90, 122, 131, 132, 133, 135, 142, 143, 146], "effici": [1, 54, 57, 61, 101, 114, 150], "black": [1, 2, 6, 131], "box": [1, 2, 6, 131], "onli": [1, 6, 7, 10, 11, 13, 15, 16, 18, 22, 23, 29, 38, 39, 47, 49, 54, 57, 59, 61, 63, 64, 68, 69, 74, 75, 87, 101, 103, 104, 113, 114, 115, 117, 118, 122, 126, 133, 135, 138, 139, 142, 143], "awar": [1, 15], "input": [1, 6, 11, 22, 24, 58, 62, 68, 69, 70, 72, 82, 87, 88, 90, 103, 105, 107, 126, 131, 133], "output": [1, 6, 16, 54, 55, 68, 69, 70, 72, 80, 122], "agnost": 1, "intern": [1, 9, 11, 12, 13, 14, 38, 39, 47, 48, 54, 55, 57, 61, 62, 63, 64, 68, 69, 70, 74, 75, 80, 81, 82, 86, 87, 92, 93, 95, 101, 113, 114, 115, 116, 118, 120, 121, 122, 138], "categor": [1, 2, 30, 34, 38, 41, 132, 135, 138, 139, 143], "hierarch": 1, "condit": [1, 74, 75, 124, 132, 138, 139, 143], "integr": [1, 11, 22, 26, 70, 80, 134, 135], "configurationspac": [1, 2, 3, 30, 31, 33, 34, 35, 68, 69, 70, 71, 72, 80, 101, 114, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "up": [1, 11, 54, 56, 101, 114, 126, 131, 138, 139], "100": [1, 3, 6, 122, 131, 133, 134], "ani": [1, 6, 7, 8, 9, 11, 18, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 47, 48, 54, 55, 57, 59, 61, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 115, 116, 117, 118, 120, 121, 122, 131, 135, 146], "object": [1, 2, 3, 6, 14, 16, 17, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 44, 46, 47, 48, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 115, 116, 117, 118, 120, 121, 122, 124, 127, 131, 132, 133, 134, 135, 138, 139, 143, 145, 146], "g": [1, 5, 6, 11, 13, 16, 30, 34, 38, 39, 63, 64, 139], "accuraci": [1, 2, 17, 135, 138, 143], "runtim": [1, 11, 16, 17, 22, 25, 54, 61, 103, 106, 115, 116, 118, 120, 121], "cross": [1, 6, 122, 135, 136, 137, 138, 139, 143, 149], "valid": [1, 2, 6, 38, 39, 63, 64, 68, 69, 122, 131, 133, 135, 136, 137, 138, 139, 142, 143, 146, 149], "possibl": [1, 2, 9, 11, 22, 27, 38, 39, 54, 57, 74, 75, 122, 139], "multi": [1, 2, 6, 14, 16, 20, 38, 39, 40, 41, 44, 45, 46, 63, 64, 92, 93, 94, 95, 101, 103, 104, 114, 115, 120, 121, 122, 135, 139, 141, 142, 143], "arbitrari": [1, 2, 115, 116, 118, 120, 121, 131, 133, 150], "number": [1, 6, 11, 12, 14, 15, 17, 22, 24, 27, 30, 31, 34, 35, 38, 40, 41, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 80, 82, 88, 90, 92, 94, 96, 97, 98, 99, 100, 101, 113, 115, 116, 117, 118, 120, 121, 122, 132, 133, 135, 138, 139, 146], "scalar": [1, 11, 13, 38, 39, 82], "oject": 1, "both": [1, 2, 12, 13, 54, 59, 101, 103, 105, 113, 117, 143], "parego": [1, 5, 11, 13, 92, 101, 114, 144, 145, 149], "know06": [1, 5, 13], "mean": [1, 3, 7, 11, 13, 14, 38, 40, 41, 43, 44, 45, 46, 68, 69, 70, 72, 80, 81, 83, 85, 87, 88, 90, 92, 94, 101, 114, 122, 132, 135, 138, 139, 143], "aggreg": [1, 13, 38, 40, 41, 44, 45, 46, 92, 94], "strategi": [1, 6, 13, 38, 39, 40, 41, 44, 45, 46, 47, 48, 92, 93], "ar": [1, 2, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 25, 30, 33, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 54, 55, 57, 59, 61, 62, 63, 64, 68, 69, 70, 71, 72, 74, 75, 80, 82, 88, 90, 101, 103, 104, 114, 115, 116, 117, 118, 120, 121, 122, 124, 126, 127, 131, 133, 135, 138, 139, 143, 146], "fidel": [1, 2, 6, 14, 17, 20, 38, 39, 45, 63, 64, 101, 114, 122, 138, 139], "judg": [1, 38, 39, 63, 64], "budget": [1, 2, 6, 11, 12, 14, 15, 16, 17, 38, 39, 40, 41, 43, 44, 45, 46, 54, 55, 57, 58, 59, 61, 62, 63, 64, 66, 101, 102, 103, 104, 105, 114, 115, 116, 118, 120, 121, 122, 131, 132, 133, 135, 138, 139, 142, 143, 146], "discard": 1, "unsuit": 1, "earli": [1, 38, 46], "thi": [1, 2, 7, 8, 11, 13, 14, 15, 18, 20, 22, 23, 30, 31, 34, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 72, 74, 75, 76, 80, 81, 82, 86, 88, 90, 96, 99, 101, 103, 105, 114, 115, 116, 117, 118, 119, 122, 124, 133, 134, 135, 138, 139, 146, 147, 149, 150], "result": [1, 2, 11, 15, 38, 39, 54, 55, 56, 58, 59, 62, 63, 64, 66, 115, 116, 117, 118, 120, 121, 122, 126, 131, 146], "massiv": 1, "speed": 1, "find": [1, 2, 3, 6, 11, 131, 132, 133, 134, 146], "one": [1, 6, 7, 10, 16, 17, 30, 33, 34, 38, 46, 54, 61, 70, 80, 101, 103, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 126, 133, 135, 139, 142, 143], "dataset": [1, 3, 6, 14, 122, 132, 135, 138, 140, 141, 143, 149], "mani": [1, 2, 6, 9, 38, 39, 46, 54, 55, 61, 63, 64, 68, 87], "line": [1, 5, 6, 20, 54, 59], "interfac": [1, 2, 6, 13, 20, 133], "execut": [1, 7, 11, 16, 38, 39, 45, 54, 55, 56, 58, 59, 62, 63, 64, 66, 115, 116, 118, 120, 121, 137, 138, 139, 141, 145, 148], "file": [1, 8, 9, 16, 20, 38, 39, 101, 114, 122, 137, 141, 145, 148], "also": [1, 2, 6, 7, 11, 12, 16, 17, 38, 39, 54, 55, 56, 58, 59, 62, 63, 64, 66, 70, 80, 101, 114, 115, 116, 118, 121, 127, 132, 135, 138, 143], "commandlin": 1, "consequ": 1, "other": [1, 10, 11, 17, 22, 29, 38, 39, 54, 59, 101, 114, 143], "languag": 1, "temporar": 1, "disabl": [1, 18, 38, 41, 44, 45, 47, 48, 103, 105, 122, 134], "v2": [1, 7, 15, 16], "0": [1, 2, 3, 7, 11, 13, 14, 15, 16, 17, 18, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 58, 59, 62, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 114, 121, 122, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148], "fall": 1, "back": 1, "v1": [1, 16], "need": [1, 2, 11, 14, 15, 16, 20, 33, 38, 39, 54, 55, 56, 58, 59, 61, 62, 63, 64, 74, 75, 101, 114, 115, 116, 117, 118, 139], "tabl": [1, 2, 18], "provid": [1, 2, 7, 11, 15, 17, 33, 54, 61, 68, 87, 101, 113, 115, 118, 131, 132, 133, 135, 138, 139, 142, 143, 146, 149], "": [1, 5, 6, 7, 9, 11, 12, 13, 18, 30, 34, 35, 38, 39, 54, 55, 56, 58, 59, 62, 63, 64, 70, 72, 80, 82, 101, 114, 115, 116, 117, 118, 120, 121, 122, 131, 132, 133, 134, 135, 138, 139, 143, 146], "tool": [1, 7, 150], "complex": [1, 11, 20, 115, 116], "space": [1, 11, 16, 22, 24, 25, 27, 30, 34, 38, 41, 44, 45, 46, 47, 48, 81, 82, 86, 101, 114, 121, 122, 131, 132, 135, 138, 139], "parallel": [1, 20, 54, 56, 57, 115, 116, 117, 118, 122], "hypermapp": 1, "optuna": 1, "hyperopt": 1, "botorch": 1, "openbox": 1, "hpbandster": [1, 7], "In": [2, 6, 11, 12, 13, 14, 15, 16, 17, 20, 30, 31, 38, 39, 54, 59, 63, 64, 70, 72, 80, 81, 82, 86, 101, 114, 115, 116, 117, 118, 120, 122, 134, 139, 143, 150], "core": [2, 150], "four": [2, 68, 69], "compon": [2, 9, 16, 20, 38, 39, 40, 45, 68, 69, 70, 71, 72, 80, 88, 90], "run": [2, 6, 7, 10, 11, 12, 13, 15, 16, 17, 20, 37, 38, 39, 43, 45, 46, 54, 55, 56, 57, 59, 61, 63, 64, 66, 101, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "process": [2, 5, 6, 7, 11, 16, 17, 37, 38, 39, 41, 54, 55, 59, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 80, 82, 101, 113, 115, 116, 120, 121, 122, 131, 134, 139], "all": [2, 6, 10, 11, 13, 16, 17, 18, 20, 22, 27, 30, 34, 38, 39, 40, 41, 44, 45, 54, 55, 56, 57, 59, 61, 63, 64, 68, 69, 70, 71, 74, 75, 82, 87, 88, 89, 90, 101, 103, 104, 105, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 131, 132, 133, 135, 138, 139, 143, 149], "which": [2, 6, 7, 10, 11, 13, 15, 16, 18, 22, 23, 26, 30, 33, 34, 38, 39, 40, 41, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 80, 87, 88, 90, 91, 96, 98, 100, 101, 102, 113, 115, 116, 117, 118, 120, 121, 122, 132, 133, 135, 138, 139, 150], "explain": [2, 11], "page": [2, 18, 20, 150], "defin": [2, 14, 15, 17, 22, 27, 30, 31, 34, 38, 39, 60, 63, 64, 66, 82, 101, 113, 115, 116, 122, 131, 132, 133, 135, 138, 139, 143], "search": [2, 11, 22, 27, 30, 34, 35, 38, 40, 41, 44, 45, 46, 131, 133], "tunabl": 2, "paramet": [2, 11, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133, 135, 138, 139, 146, 150], "legal": 2, "rang": [2, 92, 93, 94, 95, 132, 133, 135, 138, 139], "default": [2, 7, 11, 12, 13, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 114, 115, 116, 118, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "valu": [2, 11, 12, 13, 16, 17, 22, 23, 24, 25, 27, 28, 29, 37, 38, 39, 45, 46, 54, 57, 60, 61, 63, 64, 66, 68, 69, 70, 72, 74, 75, 80, 82, 88, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 126, 127, 131, 132, 133, 134, 135, 138, 143, 146], "configspac": [2, 3, 30, 31, 32, 33, 34, 35, 36, 38, 39, 63, 64, 68, 69, 70, 71, 72, 80, 88, 90, 91, 101, 114, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "import": [2, 3, 7, 11, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "c": [2, 3, 92, 95, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 150], "myfloat": 2, "1": [2, 3, 11, 12, 17, 18, 22, 23, 24, 25, 28, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 81, 83, 87, 88, 90, 92, 93, 94, 95, 103, 104, 105, 106, 107, 109, 110, 111, 115, 118, 122, 124, 127, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "5": [2, 3, 11, 16, 30, 34, 38, 40, 41, 44, 45, 46, 54, 59, 74, 77, 88, 90, 103, 104, 105, 106, 107, 109, 110, 111, 115, 118, 121, 131, 132, 133, 134, 135, 138, 139, 143, 150], "uniform": [2, 30, 34, 135], "float": [2, 3, 16, 22, 24, 25, 27, 28, 29, 30, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 114, 115, 116, 118, 120, 121, 122, 124, 126, 127, 131, 132, 133, 134, 135, 138, 139, 142, 143], "myint": 2, "2": [2, 6, 11, 22, 24, 30, 33, 35, 38, 40, 44, 45, 54, 59, 88, 90, 96, 99, 115, 118, 131, 132, 133, 134, 135, 138, 139, 142, 143], "integ": [2, 96, 99, 126, 132, 135, 138, 143], "speci": 2, "mous": 2, "cat": 2, "dog": 2, "see": [2, 6, 7, 8, 11, 12, 13, 22, 26, 27, 47, 53, 101, 114], "take": [2, 7, 11, 13, 38, 39, 68, 69, 88, 90, 115, 118, 138], "return": [2, 3, 6, 11, 13, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "For": [2, 6, 7, 11, 14, 38, 39, 41, 44, 45, 47, 48, 63, 64, 74, 75, 115, 116, 117, 122, 138, 150], "exampl": [2, 6, 7, 11, 12, 13, 14, 15, 16, 22, 23, 38, 39, 41, 44, 45, 47, 48, 54, 55, 63, 64, 101, 113, 114, 115, 116, 121, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "could": [2, 7, 16, 54, 59, 115, 119, 122, 126, 139], "neural": [2, 54, 61, 138], "network": [2, 54, 61, 135, 138], "predict": [2, 11, 68, 69, 87, 88, 90], "base": [2, 5, 6, 7, 10, 11, 13, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 132, 139, 150], "learn": [2, 22, 26, 135, 138, 150], "rate": [2, 135, 138], "everi": [2, 54, 57, 61, 96, 98, 99], "would": [2, 11], "most": [2, 38, 39, 41, 44, 45, 47, 48, 63, 64, 101, 114, 135, 138], "like": [2, 11, 16, 17, 38, 39, 46, 63, 64, 135], "differ": [2, 6, 7, 11, 13, 14, 15, 16, 30, 34, 37, 38, 39, 54, 57, 59, 60, 63, 64, 88, 90, 92, 93, 101, 113, 115, 116, 122, 125, 135, 138, 139, 143], "howev": [2, 6, 7, 10, 11, 13, 15, 16, 20, 38, 39, 63, 64, 121, 138, 139], "tri": 2, "best": [2, 3, 6, 11, 22, 24, 25, 28, 29, 30, 34, 38, 39, 45, 46, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 131, 132, 133, 134, 139, 143, 146], "try": [2, 7, 38, 44, 54, 59, 139], "potenti": 2, "def": [2, 3, 11, 131, 132, 133, 134, 135, 138, 139, 142, 143], "train": [2, 3, 6, 11, 14, 37, 38, 39, 44, 45, 54, 61, 63, 64, 68, 69, 70, 71, 72, 80, 88, 90, 103, 104, 122, 131, 132, 133, 134, 135, 138, 139, 143], "self": [2, 11, 30, 31, 54, 59, 68, 69, 70, 74, 75, 80, 81, 82, 86, 96, 98, 101, 114, 115, 116, 117, 118, 131, 132, 133, 134, 135, 138, 139, 143], "seed": [2, 3, 6, 7, 9, 11, 16, 17, 30, 31, 32, 34, 35, 36, 38, 39, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 118, 120, 121, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "int": [2, 3, 30, 31, 34, 35, 38, 39, 40, 41, 43, 44, 45, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 115, 116, 117, 118, 120, 121, 122, 124, 126, 131, 132, 133, 134, 135, 138, 139, 142, 143], "model": [2, 6, 7, 14, 20, 22, 23, 26, 27, 37, 38, 39, 40, 41, 43, 44, 45, 46, 63, 64, 66, 103, 104, 115, 118, 122, 131, 132, 133, 134, 135, 139, 150], "multilayerperceptron": 2, "learning_r": [2, 138, 139, 143], "fit": [2, 8, 22, 23, 68, 91], "alwai": [2, 7, 11, 54, 59, 131, 133], "minim": [2, 17, 30, 35, 38, 40, 41, 43, 44, 45, 54, 55, 57, 59, 61, 96, 98], "smaller": [2, 88, 90, 124], "better": [2, 11, 38, 46, 131, 132, 133, 135, 138, 139, 142, 143, 146, 150], "gener": [2, 6, 7, 9, 11, 12, 33, 38, 39, 47, 53, 54, 55, 56, 58, 59, 62, 92, 93, 101, 113, 115, 116, 117, 118, 122, 132, 150], "argument": [2, 11, 12, 13, 16, 22, 23, 38, 39, 41, 44, 45, 47, 48, 54, 56, 57, 61, 63, 64, 74, 75, 115, 116, 120, 121, 122, 139, 143, 146], "intensifi": [2, 9, 10, 12, 15, 18, 20, 37, 38, 39, 40, 41, 43, 44, 45, 46, 63, 64, 66, 101, 102, 113, 115, 116, 117, 118, 122, 131, 132, 133, 135, 138, 139, 142, 143, 146], "first": [2, 7, 15, 16, 38, 39, 54, 58, 59, 61, 62, 63, 64, 74, 75, 115, 119, 120, 125, 131, 132, 133, 135, 138, 139, 142, 143, 146], "name": [2, 9, 13, 14, 18, 22, 23, 24, 25, 26, 27, 28, 29, 38, 39, 74, 75, 101, 114, 122, 126, 131], "here": [2, 7, 11, 17, 22, 29, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 150], "specifi": [2, 3, 9, 18, 19, 30, 31, 34, 38, 39, 54, 57, 61, 63, 64, 68, 69, 70, 72, 74, 75, 81, 85, 122, 124, 131, 134, 138, 139, 146], "requir": [2, 7, 12, 22, 23, 27, 29, 54, 61, 88, 90, 101, 114, 115, 116, 120, 121, 122, 139], "addition": [2, 11, 14, 103, 104], "successivehalv": [2, 54, 57, 61, 62], "hyperband": [2, 5, 6, 12, 15, 19, 38, 43, 45, 54, 58, 61, 138, 139], "did": 2, "pass": [2, 7, 11, 12, 13, 16, 18, 38, 39, 54, 61, 88, 90, 103, 104, 115, 116, 118, 120, 121, 122, 126, 127, 131, 135, 138, 139, 143, 146], "But": [2, 15, 139], "don": [2, 7], "worri": 2, "tell": [2, 11, 20, 38, 39, 63, 64, 66, 136, 137, 149], "someth": [2, 16], "miss": 2, "never": [2, 33], "variabl": [2, 16, 122, 135, 138, 143], "want": [2, 6, 7, 9, 11, 13, 14, 15, 18, 20, 22, 29, 38, 46, 132, 135, 138, 139, 143, 147, 149, 150], "limit": [2, 7, 11, 15, 16, 115, 116, 118, 120, 121], "time": [2, 7, 10, 11, 15, 17, 33, 38, 40, 41, 44, 46, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 96, 99, 100, 101, 102, 103, 105, 114, 115, 116, 118, 120, 121, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "where": [2, 6, 7, 9, 22, 23, 27, 30, 34, 38, 46, 54, 59, 139, 143], "save": [2, 38, 39, 63, 64, 66, 101, 113, 114, 122], "output_directori": [2, 9, 122], "path": [2, 16, 18, 38, 39, 122, 126], "your_output_directori": 2, "walltime_limit": [2, 122, 138, 139, 143], "120": 2, "two": [2, 11, 30, 34, 54, 61, 88, 90, 139, 150], "minut": [2, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "n_trial": [2, 3, 22, 27, 38, 41, 44, 45, 47, 48, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "500": [2, 146], "max": [2, 12, 22, 25, 127, 132, 138, 139, 143], "trial": [2, 6, 11, 15, 17, 37, 38, 39, 40, 41, 44, 54, 55, 56, 58, 59, 62, 63, 64, 66, 101, 102, 103, 104, 114, 115, 116, 117, 118, 120, 121, 122, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "n_worker": [2, 19, 54, 55, 56, 58, 59, 62, 115, 118, 122, 138, 143], "eight": 2, "worker": [2, 10, 19, 54, 55, 56, 57, 58, 59, 61, 62, 101, 102, 115, 116, 117, 118, 122, 138, 139], "A": [2, 5, 6, 8, 22, 27, 30, 34, 54, 55, 59, 70, 72, 80, 82, 92, 93, 94, 95, 103, 105, 115, 116, 117, 118, 120, 121, 142, 150], "construct": [2, 115, 118], "pipelin": [2, 38, 39], "variou": [2, 38, 39], "satisfi": [2, 11], "crucial": [2, 138], "peak": 2, "idea": [2, 7, 150], "behind": 2, "simpl": [2, 6, 11, 18, 101, 113, 132, 142, 146], "easi": 2, "understand": 2, "without": [2, 8, 20, 33], "dive": [2, 11], "deep": [2, 74, 75, 138], "materi": 2, "expert": 2, "invit": 2, "chang": [2, 9, 11, 18, 38, 45, 54, 55, 56, 58, 59, 62, 74, 75, 101, 114, 131, 132, 133, 135, 138, 139, 142, 143, 146], "thei": [2, 11, 54, 61], "even": [2, 6, 8, 11, 14, 17, 38, 40, 41, 43, 44, 45, 54, 55, 57, 59, 61], "horizont": 2, "scrollabl": 2, "show": [2, 7, 11, 13, 16, 18, 38, 39, 63, 64, 121, 133, 142, 143, 146, 149], "what": [2, 7, 68, 69, 101, 114, 115, 116, 118], "reveal": 2, "medium": 2, "high": [2, 11], "initi": [2, 15, 20, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 57, 59, 61, 63, 64, 96, 98, 99, 115, 118, 122, 131, 132, 133, 135, 138, 139, 142, 143, 146], "design": [2, 5, 6, 15, 20, 30, 31, 33, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 64, 115, 118, 131, 132, 133, 135, 138, 139, 142, 143, 146], "sobol": [2, 11, 38, 41, 44, 47, 53], "surrog": [2, 14, 20, 22, 23, 27, 37, 38, 39, 40, 41, 44, 45, 46, 63, 64, 66, 68, 69, 87, 103, 104, 122, 131, 132], "gaussian": [2, 5, 6, 11, 38, 41, 68, 69, 70, 71, 72, 74, 75, 80, 82, 131], "Not": 2, "acquisit": [2, 5, 20, 37, 38, 39, 40, 41, 44, 45, 46, 63, 64, 66, 70, 80, 103, 106, 135], "expect": [2, 7, 11, 22, 25, 38, 39, 40, 41, 44, 88, 90, 115, 116], "log": [2, 11, 20, 22, 24, 25, 38, 39, 44, 54, 55, 56, 58, 59, 62, 63, 64, 70, 72, 81, 82, 85, 86, 88, 90, 103, 106, 109, 110, 132, 134, 135, 138, 139, 143], "maximi": [2, 38, 39, 63, 64], "local": [2, 11, 30, 34, 35, 38, 40, 41, 44, 54, 56, 103, 105, 115, 118], "sort": [2, 11, 30, 34, 38, 40, 41, 44, 143], "runhistori": [2, 13, 20, 37, 38, 39, 40, 41, 44, 45, 46, 54, 55, 56, 58, 59, 62, 63, 64, 66, 133, 134, 142, 143], "encod": [2, 13, 20, 38, 39, 40, 41, 44, 46, 63, 64], "probabl": [2, 11, 22, 28, 38, 40, 41, 44, 81, 82, 86, 96, 98, 100], "20": [2, 18, 38, 40, 44, 70, 80, 88, 90, 131, 133, 134], "50": [2, 11, 18, 38, 41, 44, 45, 47, 48, 70, 80, 132, 134], "closest": [2, 138], "implement": [2, 7, 22, 23, 30, 31, 34, 35, 47, 48, 54, 57, 61, 63, 64, 66, 68, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 88, 90, 92, 95, 115, 116, 118, 138], "bohb": [2, 6, 7, 54, 57, 61, 138], "emphas": 2, "highli": 2, "modular": 2, "accept": [2, 38, 46, 138], "note": [2, 16, 17], "contrast": 2, "previou": [2, 9, 11, 30, 31, 34, 38, 39, 63, 64, 101, 114, 131, 135, 146], "instanti": [2, 6, 11, 13, 38, 39, 41, 54, 56, 61], "instead": [2, 6, 13, 14, 15, 16, 18, 74, 75], "kwarg": [2, 22, 23, 47, 53, 63, 66, 74, 75, 88, 89, 103, 108, 112], "direct": 2, "modul": [2, 18, 126], "blackboxfacad": [2, 16, 38, 41, 131, 146], "bbfacad": 2, "hyperparameteroptimizationfacad": [2, 3, 10, 38, 44, 45, 132, 133, 134, 135, 142, 143], "hpofacad": [2, 11, 134, 142, 143], "multifidelityfacad": [2, 7, 11, 38, 45, 138, 139], "mffacad": 2, "algorithmconfigurationfacad": [2, 38, 40], "acfacad": 2, "randomfacad": [2, 38, 43, 46], "rfacad": 2, "hyperbandfacad": [2, 38, 43, 46], "hbfacad": 2, "target_funct": [2, 16, 38, 39, 40, 41, 43, 44, 45, 46, 115, 120, 121, 142], "code": [3, 7, 9, 11, 16, 17, 30, 34, 70, 72, 80, 81, 86, 115, 118, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 147, 149], "vector": [3, 30, 35, 103, 104, 105, 136, 137, 149], "iri": [3, 132], "numpi": [3, 74, 75, 103, 105, 126, 132, 135, 138, 139, 142, 143], "np": [3, 17, 22, 23, 25, 62, 68, 69, 70, 72, 74, 75, 82, 87, 88, 90, 96, 99, 103, 104, 106, 122, 124, 126, 132, 135, 138, 139, 142, 143], "scenario": [3, 9, 12, 13, 14, 16, 17, 19, 22, 27, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 61, 63, 64, 92, 93, 94, 95, 103, 104, 105, 106, 107, 109, 110, 111, 115, 116, 117, 120, 121, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "sklearn": [3, 74, 75, 132, 135, 138, 139, 143], "svm": [3, 132], "svc": [3, 132], "model_select": [3, 132, 135, 138, 139, 143], "cross_val_scor": [3, 132, 135, 138, 139, 143], "load_iri": [3, 132], "classifi": [3, 132, 135, 138, 139, 143], "random_st": [3, 132, 135, 138, 139, 143], "score": [3, 132, 135, 138, 139, 143], "data": [3, 6, 11, 12, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 40, 44, 45, 47, 48, 54, 55, 56, 59, 61, 63, 64, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 113, 114, 115, 116, 120, 121, 122, 131, 132, 135, 138, 139, 143, 146], "target": [3, 6, 7, 12, 13, 14, 20, 38, 39, 45, 54, 55, 57, 59, 61, 62, 63, 64, 68, 69, 88, 90, 101, 114, 115, 116, 118, 119, 120, 121, 122, 131, 132, 135, 138, 139, 143, 147, 148, 149], "cv": [3, 6, 132, 135, 138, 139, 143], "1000": [3, 38, 41, 131, 132, 146], "determinist": [3, 7, 38, 45, 54, 57, 61, 122, 133, 138, 139, 142, 146], "true": [3, 38, 39, 40, 44, 54, 55, 56, 58, 59, 62, 63, 64, 66, 70, 72, 74, 75, 80, 88, 90, 101, 114, 122, 126, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "200": [3, 13, 134, 138, 143], "incumb": [3, 6, 11, 13, 16, 17, 22, 28, 38, 39, 45, 46, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 101, 102, 114, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "ljdr18": [5, 38, 43], "l": 5, "li": [5, 54, 61], "k": [5, 74, 75, 101, 114, 150], "jamieson": 5, "desalvo": 5, "rostamizadeh": 5, "talwalkar": 5, "novel": [5, 6], "bandit": [5, 6], "approach": [5, 38, 46, 103, 105], "jmlr": [5, 150], "org": [5, 8, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 150], "paper": [5, 22, 26, 150], "v18": 5, "16": [5, 54, 59, 135, 137], "558": 5, "html": [5, 47, 53], "hssl22": [5, 22, 27], "carl": [5, 22, 27], "hvarfner": [5, 22, 27], "danni": 5, "stoll": 5, "artur": 5, "souza": 5, "mariu": [5, 150], "lindauer": [5, 150], "frank": [5, 150], "hutter": [5, 7, 70, 72, 80, 82, 150], "luigi": 5, "nardi": 5, "\u03c0bo": 5, "augment": [5, 6, 14, 22, 27], "user": [5, 15, 16, 17, 18, 22, 27, 30, 34, 38, 39, 54, 57, 61, 63, 64, 115, 118, 136, 137, 149], "belief": [5, 22, 27, 135], "arxiv": [5, 150], "pdf": [5, 22, 26, 54, 61, 92, 95], "2204": 5, "11051": 5, "j": 5, "knowl": 5, "hybrid": 5, "landscap": 5, "approxim": [5, 11], "expens": [5, 6], "multiobject": 5, "ieeexplor": 5, "ieee": 5, "1583627": 5, "skks10": [5, 22, 24], "sriniva": 5, "m": [5, 54, 59], "kakad": 5, "kraus": 5, "seeger": 5, "No": [5, 54, 59, 131, 132, 133, 135, 142, 143, 146], "regret": 5, "experiment": 5, "0912": 5, "3995": 5, "sequenti": [6, 7, 150], "bo": [6, 38, 39, 103, 105], "hb": [6, 62], "roar": [6, 38, 43, 46], "onlin": [6, 38, 43, 46], "adapt": [6, 82, 138, 139, 143], "race": [6, 38, 43, 46, 54, 55, 56, 57, 58, 59, 61, 62, 138, 150], "bb": 6, "mf": 6, "rf": [6, 22, 27], "gp": [6, 70, 80], "mcmc": [6, 38, 41, 70, 80], "markov": 6, "chain": [6, 70, 80], "mont": [6, 70, 80], "carlo": [6, 70, 80], "cli": 6, "hp": [6, 11, 135], "doe": [6, 7, 10, 15, 18, 22, 29, 33, 38, 45, 54, 59, 96, 99, 115, 118], "assum": [6, 7, 38, 39, 115, 119, 131, 132, 133, 135, 138, 139, 142, 143, 146], "form": [6, 16, 38, 45, 81, 83, 121], "usual": [6, 115, 119], "emploi": 6, "weight": [6, 11, 13, 22, 27, 30, 34, 38, 40, 41, 44, 46, 92, 94, 101, 114, 135, 144, 145, 149], "explor": [6, 11, 22, 24, 25, 28, 38, 39, 40, 41, 44], "exploit": [6, 11, 22, 24, 25, 28, 38, 39, 40, 41, 44, 45], "minimum": [6, 38, 40, 41, 44, 54, 55, 56, 59, 88, 90, 101, 114, 122, 131], "its": [6, 11, 14, 17, 54, 55, 70, 74, 75, 80, 131, 132], "extens": [6, 54, 57], "success": [6, 12, 15, 16, 19, 38, 43, 45, 54, 57, 61, 62, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 121, 138, 139], "halv": [6, 12, 15, 19, 38, 43, 45, 54, 57, 61, 62, 138, 139], "work": [6, 7, 12, 14, 15, 20, 38, 45, 115, 118, 131, 143], "free": [6, 7, 8, 38, 43], "smbo": [6, 11, 37, 38, 39, 40, 41, 44, 45, 54, 56, 59, 63, 92, 93, 95, 96, 97, 98, 99, 100, 101, 113, 115, 116, 117, 118, 134], "select": [6, 11, 38, 39, 46, 47, 48, 50, 54, 57, 58, 59, 61, 62, 101, 114, 115, 116, 143], "uniformli": [6, 38, 46, 54, 59], "iter": [6, 10, 11, 17, 30, 31, 33, 34, 35, 37, 38, 39, 41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 92, 93, 95, 96, 97, 98, 99, 100, 101, 114, 115, 116, 117, 118, 138, 139], "compar": [6, 11, 17, 38, 43, 46, 125], "them": [6, 103, 108, 110, 111, 112, 115, 118, 138, 143], "against": [6, 7, 38, 45, 54, 57, 59, 61], "intensif": [6, 10, 37, 38, 45, 54, 55, 59, 63, 64, 66, 138], "mechan": [6, 115, 116, 138, 150], "extend": 6, "chapter": [6, 20], "refer": [6, 7, 11, 12, 47, 53, 54, 57, 61, 150], "observ": [6, 11, 38, 45, 101, 114, 124], "cost": [6, 11, 13, 14, 16, 20, 38, 39, 44, 54, 55, 56, 58, 59, 62, 63, 64, 92, 93, 94, 95, 101, 102, 103, 104, 105, 114, 115, 116, 118, 120, 121, 122, 127, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "given": [6, 11, 16, 22, 23, 24, 25, 28, 29, 54, 55, 57, 61, 68, 69, 96, 98, 100, 101, 103, 104, 114, 115, 116, 120, 121, 127, 139], "singl": [6, 11, 13, 16, 38, 40, 44, 46, 68, 87, 88, 90, 92, 93, 94, 95, 101, 114, 115, 116, 117, 118, 121], "combin": [6, 38, 39, 45, 54, 61, 63, 64, 92, 93, 94, 95, 101, 114, 115, 116, 118, 122, 132, 138, 139, 150], "metric": 6, "qualiti": [6, 54, 61], "than": [6, 38, 39, 46, 54, 59, 63, 64, 81, 82, 83, 88, 90, 122, 131, 132, 133, 135, 138, 139, 142, 143, 146], "goal": 6, "solut": [6, 7, 30, 32, 36, 38, 39, 63, 64, 66], "least": [6, 38, 45, 138], "good": [6, 138], "compromis": 6, "anoth": [6, 11, 101, 113, 132], "word": [6, 11, 17], "epoch": [6, 12, 54, 61, 122, 140, 141, 149], "size": [6, 54, 59, 122, 135, 138], "subset": [6, 12, 14, 54, 59, 101, 114, 122, 139], "context": [6, 122], "let": [6, 11, 13, 131, 132, 133, 134, 135, 138, 143, 146], "sai": 6, "therebi": [6, 12], "prematur": [6, 12], "often": [6, 7, 13, 14, 38, 46, 131, 133], "transform": [6, 11, 38, 39, 63, 64, 82, 88, 90, 92, 93, 94, 95, 103, 104, 105, 106, 108, 109, 110, 111, 112, 126, 139], "each": [6, 11, 12, 14, 15, 17, 22, 27, 30, 33, 35, 38, 39, 43, 45, 54, 55, 56, 57, 59, 61, 63, 64, 70, 72, 80, 92, 93, 95, 96, 100, 101, 114, 115, 118, 122, 143], "call": [6, 11, 13, 14, 20, 22, 23, 30, 31, 35, 37, 38, 39, 40, 41, 44, 46, 47, 48, 54, 55, 56, 59, 61, 62, 63, 64, 68, 69, 74, 75, 76, 81, 82, 86, 91, 115, 116, 117, 118, 120, 121, 125, 133, 135, 147, 148, 149], "so": [6, 9, 10, 11, 17, 22, 24, 28, 29, 38, 39, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 115, 116, 117, 118, 126, 134, 135, 138], "found": [6, 7, 15, 22, 27, 38, 39, 63, 64, 96, 99, 131, 146, 150], "superior": 6, "govern": 6, "how": [6, 7, 10, 11, 12, 13, 16, 18, 20, 38, 39, 40, 41, 44, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 101, 113, 114, 115, 116, 118, 121, 122, 125, 133, 138, 142, 143, 146, 149], "when": [6, 10, 11, 12, 13, 15, 19, 38, 39, 40, 46, 54, 61, 62, 63, 64, 68, 69, 70, 71, 72, 74, 75, 80, 88, 90, 115, 118, 122, 126, 138], "trust": 6, "enough": [6, 38, 46, 54, 55, 115, 116], "make": [6, 7, 11, 13, 16, 22, 29, 54, 55, 56, 58, 59, 61, 62, 70, 80, 96, 99, 115, 116, 117, 118, 122, 135, 138, 139, 143], "new": [6, 7, 9, 11, 13, 33, 37, 38, 46, 54, 55, 56, 58, 59, 62, 101, 114, 131, 132, 133, 135, 142, 143, 146], "known": [6, 38, 45, 131], "should": [7, 8, 10, 11, 15, 16, 18, 22, 23, 26, 33, 38, 39, 40, 41, 44, 54, 55, 59, 63, 64, 66, 68, 74, 75, 87, 96, 97, 98, 99, 100, 101, 113, 122, 131, 133], "smac2": [7, 88, 90], "reimplement": 7, "origin": [7, 13, 30, 34, 54, 56, 81, 82, 86, 101, 114, 150], "et": [7, 22, 26, 27, 54, 57, 61, 70, 80], "al": [7, 22, 26, 27, 54, 57, 61, 70, 80], "2021": [7, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 150], "slightli": 7, "comparison": 7, "stabl": 7, "releas": 7, "java": 7, "sinc": [7, 9, 10, 11, 15, 16, 17, 20, 38, 46, 138, 143], "maintain": 7, "applic": [7, 12], "cannot": 7, "root": [7, 18, 103, 112, 125], "directori": [7, 122], "instal": 7, "pyrfr": 7, "rais": [7, 103, 104, 135, 138, 143], "cryptic": 7, "error": [7, 18], "ensur": [7, 10, 22, 27, 122], "gcc": 7, "compil": 7, "same": [7, 11, 30, 34, 38, 40, 41, 44, 46, 54, 59, 92, 94, 101, 113, 114, 127], "link": 7, "dure": [7, 11, 30, 34, 35, 38, 39, 46, 54, 59, 63, 64, 88, 90, 101, 113], "happen": [7, 11, 54, 59], "anaconda": 7, "facad": [7, 11, 12, 13, 14, 18, 63, 64, 122, 131, 132, 135, 138, 142, 143], "close": [7, 115, 118], "discov": 7, "bug": 7, "behav": [7, 22, 27], "report": [7, 15], "open": 7, "issu": [7, 11, 38, 44, 54, 55, 150], "our": [7, 12, 13, 15, 132, 135, 138, 139, 143, 146, 150], "list": [7, 13, 16, 22, 23, 30, 31, 33, 38, 39, 40, 41, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 68, 69, 70, 71, 72, 74, 75, 80, 87, 88, 90, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 139, 142], "befor": [7, 11, 15, 22, 23, 30, 34, 35, 37, 38, 39, 44, 54, 57, 59, 61, 63, 64, 70, 80, 96, 99, 103, 105, 115, 116, 117, 118, 138, 143], "sure": [7, 11, 13, 16, 70, 80, 96, 99, 115, 116, 118, 119], "hasn": 7, "alreadi": [7, 11, 15, 22, 23, 54, 59, 101, 114], "tracker": 7, "latest": 7, "u": 7, "inform": [7, 11, 38, 39, 45, 47, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 101, 102, 113, 114, 115, 116, 118, 120, 121, 132], "descript": [7, 54, 61], "reproduc": [7, 11, 20, 122], "about": [7, 11, 38, 45, 54, 57, 63, 64, 66, 74, 75, 101, 102, 115, 116, 132, 135], "setup": [7, 38, 39, 46, 63, 64], "help": 7, "resolv": 7, "packag": [7, 150], "feel": 7, "screenshot": 7, "contribut": [7, 150], "discuss": [7, 20], "care": [7, 11, 38, 39], "question": 7, "feedback": 7, "prefer": 7, "locat": [7, 22, 25], "featur": [7, 11, 14, 16, 38, 40, 44, 45, 68, 69, 70, 71, 72, 80, 87, 88, 90, 101, 103, 104, 105, 113, 121, 122, 124, 139], "ongo": 7, "look": [7, 12, 15, 33, 38, 39, 46, 63, 64], "guid": [7, 11], "flag": [7, 11], "fals": [7, 18, 22, 25, 27, 37, 38, 39, 40, 41, 43, 44, 45, 46, 54, 55, 56, 58, 59, 62, 63, 64, 70, 74, 75, 76, 77, 78, 79, 80, 88, 90, 101, 114, 115, 118, 122, 132, 133, 134], "non": [7, 16, 22, 27, 38, 45, 54, 57, 61, 74, 75, 138, 139, 147, 149], "thu": [7, 14, 135], "nevertheless": [7, 54, 59, 115, 118], "still": [7, 9, 11, 13, 16, 101, 113, 115, 116, 117, 118, 133], "why": [7, 12], "colab": 7, "crash": [7, 103, 104, 105, 106, 107, 109, 110, 111, 115, 119], "child": [7, 47, 48, 115, 116, 132, 138, 143], "pynish": [7, 115, 120, 122], "enforc": [7, 122], "memori": [7, 115, 120, 122], "runner": [7, 11, 63, 64], "mai": 7, "specif": [7, 15, 18, 22, 23, 38, 39, 74, 75, 88, 90, 103, 106, 139], "overcom": 7, "remov": [7, 22, 27, 30, 34, 121, 143], "program": [8, 33, 101, 113], "softwar": 8, "redistribut": 8, "modifi": 8, "under": 8, "term": 8, "claus": [8, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "bsd": [8, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "distribut": [8, 11, 81, 83, 85, 88, 90, 115, 118], "hope": 8, "warranti": 8, "impli": [8, 138], "merchant": 8, "FOR": 8, "particular": [8, 54, 59], "purpos": [8, 14], "receiv": [8, 11, 15, 16, 115, 118], "copi": 8, "along": [8, 68, 69], "opensourc": 8, "automat": [9, 20, 115, 118], "restor": 9, "state": [9, 11, 13, 54, 55, 59, 92, 93, 95, 96, 99, 101, 103, 104, 114, 132], "left": [9, 22, 25, 63, 64, 66, 74, 75], "off": [9, 11, 38, 39], "wa": [9, 11, 17, 22, 23, 54, 59, 101, 102, 113, 114, 115, 118], "interrupt": 9, "finish": [9, 11, 37, 38, 39, 63, 64, 115, 116, 117, 118, 133, 134, 138, 139], "do": [9, 11, 13, 14, 16, 18, 22, 29, 38, 46, 54, 56, 58, 59, 62, 115, 118, 135, 146], "derivid": 9, "ask": [9, 11, 20, 37, 38, 39, 63, 64, 66, 136, 137, 149], "whether": [9, 10, 11, 22, 25, 27, 38, 39, 54, 55, 56, 58, 59, 62, 63, 64, 66, 74, 75, 96, 97, 98, 99, 100, 101, 113, 114, 115, 116, 117, 118, 122], "resum": 9, "delet": [9, 115, 118], "old": [9, 38, 39, 63, 64], "complet": [9, 15, 17, 38, 39, 54, 56, 63, 64, 115, 116, 117, 118, 132], "affect": [9, 38, 41, 44, 45, 47, 48], "unfortun": 9, "especi": 9, "becaus": [10, 11, 13, 15, 54, 59, 74, 75, 101, 114, 115, 116, 119, 131, 139, 143], "comput": [10, 11, 22, 23, 24, 25, 26, 28, 81, 82, 86, 101, 114], "intensifier_percentag": 10, "long": [10, 11], "took": [10, 115, 116, 118, 120, 121], "far": [10, 11, 17, 22, 24, 28, 29, 38, 39, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 134], "time_bound": [10, 38, 40, 41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62], "procedur": [10, 54, 56, 59, 115, 118], "base_smbo": [10, 131, 132, 133, 135, 138, 139, 142, 143, 146], "further": [10, 11, 16, 22, 26, 27, 47, 53, 96, 99, 115, 116, 118, 119, 120, 121, 122, 150], "next": [10, 11, 15, 17, 37, 38, 39, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 96, 97, 98, 99, 100, 115, 116, 132, 133], "start": [10, 11, 20, 37, 38, 39, 63, 64, 70, 80, 92, 93, 95, 115, 118, 134, 138, 139, 143], "process_result": [10, 54, 55, 56, 58, 59, 62], "guarante": [10, 11, 20, 101, 114], "basic": [11, 13, 133], "mention": [11, 150], "pictur": 11, "These": [11, 135], "influenc": 11, "drastic": 11, "shortli": 11, "main": [11, 30, 34, 38, 46, 115, 118, 134, 150], "loop": [11, 38, 39, 45, 46, 54, 59, 63, 64, 115, 116, 134], "logic": [11, 54, 57, 61], "while": [11, 54, 58, 59, 62], "submit": [11, 115, 116, 117, 118], "wait": [11, 54, 56, 63, 64, 66, 115, 116, 117, 118], "decoupl": 11, "method": [11, 13, 15, 17, 22, 23, 30, 31, 37, 38, 39, 45, 54, 55, 57, 59, 61, 63, 64, 66, 68, 69, 74, 75, 76, 81, 82, 86, 88, 90, 115, 116, 117, 118, 120, 121, 135, 138, 139, 143], "wai": [11, 18, 38, 45, 54, 57, 134], "until": [11, 38, 45, 115, 116, 117, 118], "told": 11, "wallclock": [11, 17], "remain": 11, "class": [11, 13, 18, 22, 30, 38, 47, 54, 63, 68, 70, 74, 81, 88, 92, 96, 101, 103, 115, 131, 132, 133, 134, 135, 138, 139, 143], "empir": [11, 22, 27, 54, 55, 56, 58, 59, 62, 101, 114], "epm": [11, 54, 59, 101, 113], "mostli": 11, "associ": [11, 17, 54, 55, 122], "incorpor": [11, 15, 38, 39, 46, 68, 69, 70, 71, 72, 80, 88, 90, 101, 114, 122, 135], "higher": [11, 38, 40, 41, 44, 54, 59, 132], "collect": [11, 38, 45, 63, 64, 74, 75, 76, 115, 116, 118], "involv": 11, "highest": [11, 17, 38, 39, 45, 54, 57, 61, 63, 64, 101, 114], "_min_sampl": 11, "imagin": 11, "75": 11, "505": 11, "7": [11, 54, 59, 68, 69, 70, 71, 72, 80, 88, 90, 91], "lead": 11, "end": [11, 30, 31, 37, 54, 59], "me": 11, "request": [11, 54, 56, 101, 113], "get_next_configur": [11, 38, 39, 54, 55, 56, 58, 59, 62, 63, 64, 66], "over": [11, 22, 24, 26, 27, 28, 29, 38, 40, 41, 44, 45, 54, 55, 56, 59, 63, 64, 66, 68, 69, 70, 80, 87, 88, 90, 96, 99, 100, 101, 114, 117, 136, 137, 149], "considered_st": [11, 103, 104, 105, 106, 107, 109, 110, 111], "timeout": [11, 103, 105], "consid": [11, 17, 38, 40, 41, 43, 44, 45, 46, 54, 55, 57, 59, 61, 88, 90, 103, 104, 105, 117, 138, 139, 143], "step": [11, 30, 34, 35, 38, 45, 70, 80, 117, 138, 139, 143], "normalize_cost": [11, 127], "objective_bound": [11, 101, 114], "might": [11, 13, 15, 74, 75, 101, 114, 115, 116, 117, 118], "inact": [11, 38, 39, 63, 64, 124], "after": [11, 17, 22, 23, 37, 38, 43, 45, 46, 54, 57, 59, 61, 96, 99, 133, 134, 138, 143], "mathemat": 11, "techniqu": 11, "varianc": [11, 68, 69, 70, 72, 80, 87, 88, 90, 139], "section": 11, "otherwis": [11, 115, 118, 120, 122], "bunch": 11, "lower": [11, 22, 24, 81, 86, 101, 114, 135], "confid": [11, 22, 24, 38, 46, 54, 59], "bound": [11, 22, 24, 81, 86, 101, 114, 124, 127, 143], "thompson": [11, 22], "prior": [11, 22, 27, 30, 34, 74, 75, 76, 77, 78, 79, 136, 137, 149], "literatur": 11, "calcul": [11, 22, 23, 54, 57, 61, 101, 114, 131, 132, 133, 135, 138, 146], "respons": [11, 103, 104, 106, 108, 109, 110, 111, 112], "wrapper": [11, 68, 87, 115, 116, 117, 118], "upon": [11, 115, 118], "differenti": 11, "evolut": 11, "neighbour": 11, "pai": 11, "attent": 11, "challeng": [11, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 96, 97, 115, 116, 131, 132, 133, 135, 138, 139, 142, 143, 146], "experi": [11, 18, 38, 44], "ram": [11, 38, 44], "challengerlist": [11, 30, 31, 33], "latin": [11, 47, 51], "hypercub": [11, 47, 51], "factori": [11, 47, 50, 101, 102], "corner": [11, 47, 50], "sequenc": [11, 47, 53, 54, 59], "quasi": 11, "disrep": 11, "statist": [11, 63, 64], "multidimension": 11, "chanc": 11, "although": 11, "includ": [11, 68, 69, 87, 135, 139, 150], "trade": [11, 38, 39], "stuck": [11, 15], "optimum": [11, 22, 27, 103, 104, 136, 137, 149], "addit": [11, 17, 22, 23, 38, 40, 41, 44, 45, 46, 47, 48, 101, 103, 105, 114, 115, 116, 118, 120, 121, 131, 132, 133, 135, 138, 139, 142, 143, 146], "anneal": [11, 96, 98], "modulu": [11, 33, 96, 99], "decid": [11, 38, 39, 54, 56, 63, 64, 115, 116, 150], "worth": 11, "spend": 11, "pair": [11, 54, 55, 59, 101, 114, 143], "max_config_cal": [11, 38, 40, 41, 44, 46, 54, 55, 59, 133, 135], "lot": [11, 20, 139], "unless": 11, "intensify_percentag": [11, 38, 40, 41, 44, 46, 54, 59], "throughout": 11, "uses_se": [11, 54, 55, 56, 58, 59, 62], "uses_budget": [11, 54, 55, 58, 59, 61, 62], "uses_inst": [11, 54, 55, 58, 59, 61, 62], "callabl": [11, 33, 38, 39, 54, 55, 56, 58, 59, 62, 115, 120, 121], "saniti": 11, "know": [11, 74, 75, 133], "exact": [11, 38, 39, 63, 64], "get_target_function_se": [11, 38, 39, 54, 55, 59, 61, 62], "get_target_function_budget": [11, 38, 39, 54, 55, 59, 61, 62], "get_target_function_inst": [11, 38, 39, 54, 55, 59, 61, 62], "normal": [11, 16, 22, 28, 54, 59, 70, 72, 80, 81, 85, 92, 93, 94, 95, 101, 114, 127, 135], "access": [11, 38, 40, 41, 44, 54, 59, 74, 75], "plai": [11, 14], "role": [11, 14], "get_cost": [11, 101, 114, 134], "ambigu": [11, 13, 143], "pareto": [11, 13, 101, 114, 143], "front": [11, 13, 101, 114, 143], "everytim": [11, 13, 16, 121], "get_incumb": [11, 13, 101, 114], "hold": [11, 20, 38, 39, 63, 64, 126, 132], "un": 11, "min": [11, 54, 59, 127, 138, 139, 143], "sum": [11, 38, 40, 41, 44, 54, 55, 56, 59, 74, 75, 101, 114], "averag": [11, 17, 38, 39, 40, 41, 44, 46, 63, 64, 92, 94, 101, 114, 138, 143], "trial_info": [11, 54, 55, 56, 58, 59, 62, 115, 116, 117, 118], "trial_valu": [11, 54, 55, 56, 58, 59, 62], "item": [11, 102, 126], "info": [11, 18, 37, 38, 39, 54, 55, 63, 64, 66, 115, 116, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "statu": [11, 16, 54, 55, 56, 58, 59, 62, 101, 102, 113, 114, 115, 116, 118, 120, 121], "starttim": [11, 101, 102, 114], "endtim": [11, 101, 102, 114], "additional_info": [11, 16, 101, 102, 114, 115, 116, 118, 120, 121], "get_config": [11, 101, 114, 143], "average_cost": [11, 17, 101, 114, 143], "format": [11, 18, 125, 126], "afterward": 11, "abil": 11, "easili": [11, 122], "inherit": [11, 74, 75], "overwrit": [11, 38, 39, 40, 41, 43, 44, 45, 46, 62, 63, 64, 101, 114, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "customcallback": [11, 134], "on_start": [11, 37, 134], "none": [11, 22, 23, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 132, 133, 134, 138, 139, 142, 143], "on_end": [11, 37], "on_iteration_start": [11, 37], "on_iteration_end": [11, 37], "runinfo": [11, 101, 113, 115, 116, 118], "runvalu": 11, "bool": [11, 22, 25, 27, 37, 38, 39, 40, 44, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 70, 72, 74, 75, 80, 88, 90, 96, 97, 98, 99, 100, 101, 114, 115, 116, 117, 118, 122, 126, 134], "just": [11, 13, 19, 38, 46, 134], "print": [11, 13, 16, 126, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "min_budget": [12, 54, 61, 122, 138, 139], "max_budget": [12, 54, 61, 122, 138, 139], "real": [12, 38, 39, 54, 57, 61, 63, 64, 115, 116, 118, 120, 121], "stage": [12, 15, 37, 54, 55, 56, 58, 59, 62, 134], "That": [12, 38, 43, 44, 45, 54, 56], "reason": [12, 74, 75], "simpli": [12, 13, 38, 46, 146], "wherea": 12, "world": 12, "exactli": 13, "right": [13, 16, 22, 25, 74, 75], "histori": [13, 15, 17, 38, 39, 54, 56, 63, 64], "keep": [13, 18, 38, 40, 68, 69, 70, 71, 72, 80, 88, 90, 115, 116, 117, 118, 143], "recip": 13, "dictionari": [13, 101, 114, 125], "contain": [13, 38, 39, 54, 55, 59, 63, 64, 66, 74, 75, 101, 103, 105, 114, 115, 116, 117, 118], "kei": [13, 16, 101, 102, 114, 146], "myobj1": 13, "myobj2": 13, "multi_object": [13, 101, 103, 104, 114, 143], "option": [13, 14, 16, 22, 23, 27, 30, 31, 34, 37, 38, 39, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 68, 69, 74, 75, 101, 103, 104, 114, 115, 119, 121, 127, 134], "custom": [13, 20, 136, 137, 149], "multi_objective_algorithm": [13, 38, 39, 40, 41, 43, 44, 45, 46, 101, 103, 104, 114, 142, 143], "get_pareto_front": [13, 101, 114, 143], "plot": [13, 142, 143], "five": [14, 38, 41, 44, 45, 47, 48, 138, 143], "identifi": [14, 58, 62, 122], "id": [14, 101, 114], "d0": 14, "d1": [14, 125], "d2": [14, 125], "d3": 14, "d4": 14, "instance_featur": [14, 16, 68, 69, 70, 71, 72, 80, 88, 90, 91, 121, 122, 124, 139], "those": 14, "expand": [14, 122], "x": [14, 22, 23, 24, 25, 28, 29, 68, 69, 70, 71, 72, 74, 75, 80, 81, 83, 87, 88, 90, 103, 104, 105, 124, 131, 133, 142, 143], "matrix": [14, 68, 69], "underli": 14, "121": 14, "6": [14, 38, 40, 44, 54, 59, 88, 90, 103, 104, 105, 106, 107, 109, 110, 111], "140": 14, "65": [14, 135], "99": 14, "45": [14, 139], "102": 14, "59": 14, "132": 14, "48": 14, "type": [14, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 132, 135, 138, 139, 142], "give": [15, 18, 20, 54, 56, 101, 113, 122], "opportun": 15, "come": [15, 17, 101, 102, 115, 118], "some": [15, 20, 74, 75, 103, 104, 134], "part": [15, 18, 30, 31], "callback": [15, 20, 33, 38, 39, 40, 41, 43, 44, 45, 46, 136, 137, 149], "ignor": [15, 16, 17, 38, 39, 63, 64, 74, 75, 135, 138, 139, 143], "skip": [15, 54, 55, 59, 63, 64, 66, 101, 103, 105, 113], "handl": [15, 54, 57, 101, 114, 115, 116, 118, 120, 121], "fact": 15, "sometim": [15, 18, 54, 59], "realiz": 15, "detect": 15, "complic": 15, "script": [16, 38, 39, 121, 131, 132, 133, 134, 135, 138, 139, 142, 143, 147, 148, 149], "popen": [16, 121], "standard": [16, 17, 22, 28, 68, 69, 81, 85, 135], "interpret": [16, 38, 39], "avail": [16, 38, 45, 54, 55, 56, 57, 58, 59, 61, 62, 101, 114, 115, 116, 117, 118], "filenam": [16, 18, 101, 114, 146], "hyperparameter1": [16, 121], "5323": [16, 121], "sh": [16, 62, 146], "bash": [16, 146], "anyth": [16, 54, 61, 74, 75, 126], "els": [16, 18, 54, 59, 132, 138, 143], "wih": 16, "mark": [16, 54, 59], "bin": [16, 22, 27, 146], "usr": 16, "env": 16, "comma": [16, 121], "separ": [16, 38, 39, 121], "empti": [16, 101, 114, 115, 116, 117, 118, 121], "echo": [16, 121, 146], "cut": [16, 146], "f1": [16, 142, 146], "d": [16, 18, 22, 24, 146], "f2": [16, 142, 146], "v": [16, 101, 114, 115, 118, 139, 146], "declar": [16, 74, 75, 146], "fi": [16, 146], "done": [16, 38, 39, 54, 55, 56, 59, 63, 64, 115, 116, 117, 118, 146], "stdout": [16, 18], "white": [16, 38, 41, 74, 79, 121], "01": [16, 121, 137, 141, 145, 148], "except": [16, 38, 39, 54, 59, 115, 117, 118, 135], "semicolon": 16, "string": [16, 38, 39, 121, 125, 126], "match": 16, "statustyp": [16, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 118, 120, 121], "chmod": 16, "advanc": 17, "reach": [17, 38, 45, 96, 99], "below": 17, "termination_cost_threshold": [17, 122], "inf": [17, 96, 99, 122], "abov": 17, "infin": 17, "again": [17, 54, 55, 56, 58, 59, 62], "crucic": 18, "customiz": 18, "overview": 18, "easiest": 18, "behaviour": [18, 38, 39, 63, 64], "logger": [18, 58, 62, 126], "logging_level": [18, 38, 39, 40, 41, 43, 44, 45, 46, 134], "debug": [18, 38, 39, 58, 62], "30": [18, 134, 138, 139, 143, 146], "warn": [18, 101, 114, 135, 138, 139, 143], "40": [18, 134, 135, 138, 139, 143], "critic": 18, "highlight": [18, 143], "specifii": 18, "yaml": [18, 38, 39], "displai": 18, "messag": [18, 58, 62], "everyth": [18, 146], "disable_existing_logg": 18, "formatt": 18, "levelnam": 18, "lineno": 18, "handler": 18, "consol": 18, "streamhandl": 18, "stream": 18, "ext": 18, "sy": 18, "nativ": 19, "readi": 19, "go": [19, 54, 56, 135, 143], "librari": 20, "strongli": 20, "hint": 20, "react": 20, "certain": 20, "thing": 20, "maxim": [20, 22, 23, 24, 29, 38, 39, 40, 41, 44, 46, 54, 61, 63, 64, 101, 114], "stop": [20, 37, 122, 134, 138, 143], "criteria": 20, "termin": [20, 30, 34, 35, 38, 45, 115, 118], "threshold": [20, 122], "level": [20, 38, 39, 45, 125, 126], "abstractacquisitionfunct": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 39, 46, 63, 64], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149], "abstract": [22, 23, 30, 31, 38, 39, 54, 55, 63, 64, 68, 69, 70, 71, 82, 88, 89, 92, 93, 96, 97, 103, 104, 115, 116, 118], "__call__": [22, 23, 74, 75, 92, 93, 94, 95, 115, 120, 121], "ndarrai": [22, 23, 62, 68, 69, 70, 72, 74, 75, 82, 87, 88, 90, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 126, 139], "properti": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 39, 47, 48, 54, 55, 56, 58, 59, 61, 62, 63, 64, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 114, 115, 116, 120, 121, 122, 131, 132, 133, 134, 135, 138, 139, 143], "meta": [22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 47, 48, 54, 55, 59, 61, 63, 64, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 115, 116, 120, 121, 122, 131, 146], "dict": [22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 47, 48, 54, 55, 59, 61, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 115, 116, 118, 120, 121, 122, 125, 139, 142, 143], "str": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 38, 39, 41, 47, 48, 54, 55, 57, 59, 61, 62, 63, 64, 68, 69, 70, 71, 72, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 115, 116, 118, 120, 121, 122, 125, 139, 142, 143], "abstract_model": [22, 23, 27, 68, 87], "abstractmodel": [22, 23, 27, 38, 39, 63, 64, 68, 69, 70, 71, 87, 88, 89, 91], "full": [22, 23, 24, 25, 26, 27, 28, 29, 68, 69, 101, 114, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "attribut": [22, 23], "As": [22, 23, 117, 135], "ei": [22, 23, 25, 38, 40, 41, 44, 45], "fmin": [22, 23], "acqusit": [22, 23], "present": [22, 23, 38, 45], "_updat": [22, 23], "xi": [22, 25, 28, 29, 38, 40, 41, 44], "mathbb": [22, 25], "f": [22, 25, 28, 70, 72, 80, 81, 82, 83, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 150], "mathbf": [22, 24, 25, 28, 29], "f_": [22, 25, 28], "control": [22, 24, 25, 28, 38, 40, 41, 44, 54, 58, 61, 62], "balanc": [22, 24, 25, 28, 38, 40, 41, 44], "between": [22, 24, 25, 28, 38, 40, 41, 44, 68, 69, 88, 90, 103, 108, 110, 111, 112], "eip": [22, 25, 103, 106], "computess": [22, 25], "frac": [22, 25, 28], "r": [22, 25, 54, 59, 143], "integratedacquisitionfunct": [22, 26], "acquisition_funct": [22, 24, 26, 27, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 63, 64, 135], "margin": [22, 26, 68, 69, 70, 72, 87, 88, 90], "practic": [22, 26, 149], "jasper": [22, 26], "snoek": [22, 26, 70, 80], "nip": [22, 26, 70, 72, 80, 82], "cc": [22, 26], "4522": [22, 26], "lcb": [22, 24], "beta": [22, 24, 135], "mu": [22, 24, 28, 29, 135], "sqrt": [22, 24, 142], "beta_t": [22, 24], "sigma": [22, 24, 28, 29, 81, 85, 135], "text": [22, 24, 150], "dimens": [22, 24, 68, 69, 131, 132, 133], "tradeoff": [22, 24], "pi": [22, 28], "p": [22, 28, 81, 83], "geq": [22, 28], "phi": [22, 28], "cdf": [22, 28], "prioracquisitionfunct": [22, 27, 135], "decay_beta": [22, 27, 135], "prior_floor": [22, 27], "1e": [22, 27, 38, 44, 74, 75, 76, 77, 78, 79, 88, 90, 135], "12": [22, 27, 54, 59], "discret": [22, 27, 135], "discrete_bins_factor": [22, 27], "pibo": [22, 27], "decai": [22, 27], "factor": [22, 27, 38, 43, 45, 54, 57, 61, 96, 100], "solid": [22, 27, 135], "lowest": [22, 27, 38, 39, 101, 114], "neg": [22, 27], "densiti": [22, 27], "contin": [22, 27], "trigger": [22, 27, 54, 59, 115, 119, 134], "avoid": [22, 27], "patholog": [22, 27], "piecewis": [22, 27], "constant": [22, 27, 96, 99, 138, 139, 143], "allow": [22, 27, 54, 57, 122], "togeth": [22, 29, 38, 46], "randomsearch": [22, 29, 30, 36, 38, 46], "localandsortedrandomsearch": [22, 29, 30, 34, 38, 40, 41, 44, 45], "math": [22, 29, 82], "mathcal": [22, 29], "consist": [22, 29, 30, 31, 135, 138, 139, 143, 150], "abstractacquisitionmaxim": [30, 31, 32, 34, 35, 36, 38, 39, 63, 64], "5000": [30, 31, 32, 34, 35, 36, 139], "order": [30, 31, 54, 56, 57, 61, 103, 104, 122], "subclass": [30, 31, 38, 39, 74, 75], "_maxim": [30, 31], "abstract_acquisition_funct": [30, 31, 34], "previous_config": [30, 31], "n_point": [30, 31], "random_design": [30, 31, 33, 38, 39, 40, 41, 43, 44, 45, 46, 63, 64], "_challeng": [30, 31], "abstractrandomdesign": [30, 31, 33, 38, 39, 46, 96, 97, 98, 99, 100], "interleav": [30, 31, 33, 34, 38, 39, 40, 41, 44, 96, 97, 98, 99, 100], "scheme": [30, 31, 115, 116], "next_iter": [30, 31, 96, 97, 98, 99, 100], "differentialevolut": [30, 32], "candid": [30, 32, 36, 38, 39, 45, 54, 61, 63, 64, 66], "differentialevolutionsolv": [30, 32], "scipi": [30, 32, 47, 53], "localandsortedpriorrandomsearch": [30, 34], "uniform_configspac": [30, 34], "max_step": [30, 34, 35], "n_steps_plateau_walk": [30, 34, 35], "local_search_iter": [30, 34, 38, 41, 44], "prior_sampling_fract": [30, 34], "accord": [30, 34, 96, 98, 100], "randomli": [30, 34, 38, 39, 46, 63, 64], "retriev": [30, 34, 139], "normalfloathp": [30, 34], "localsearch": [30, 34, 35], "maximum": [30, 34, 35, 38, 40, 41, 44, 54, 55, 56, 58, 59, 62, 88, 90, 96, 98, 99, 122], "plateau": [30, 34, 35], "walk": [30, 34, 35], "ratio": [30, 34, 38, 40, 44, 88, 90], "taken": [30, 34, 103, 104], "oppos": [30, 34], "defaut": [30, 34, 38, 41, 44], "vectorization_min_obtain": [30, 35], "vectorization_max_obtain": [30, 35], "neighbor": [30, 35], "obtain": [30, 35, 70, 72, 82], "tune": [30, 35, 54, 59, 70, 80, 135], "reduc": [30, 33, 35, 38, 40, 44, 68, 69, 70, 71, 72, 80, 88, 90, 115, 118, 133, 146], "overhead": [30, 35], "challenger_callback": 33, "modulus_design": 33, "modulusrandomdesign": [33, 96, 99], "second": [33, 63, 64, 66, 115, 118, 120, 122, 125, 131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "necessari": [33, 38, 45, 54, 55, 56, 58, 59, 62], "hundr": 33, "closur": 33, "www": [33, 92, 95], "programiz": 33, "on_ask_end": 37, "intent": [37, 54, 59, 63, 64, 66], "on_ask_start": 37, "on_next_configurations_end": 37, "essenti": 37, "on_next_configurations_start": 37, "on_tell_end": [37, 134], "stat": [37, 38, 39, 47, 53, 63, 64, 66, 133, 134], "gracefulli": 37, "on_tell_start": 37, "abstractfacad": [38, 39, 40, 41, 44, 46, 142, 143], "acquisition_maxim": [38, 39, 40, 41, 43, 44, 45, 46, 63, 64], "initial_design": [38, 39, 40, 41, 43, 44, 45, 46, 63, 64, 132, 135, 138, 143], "runhistory_encod": [38, 39, 40, 41, 43, 44, 45, 46, 63, 64], "top": [38, 39, 54, 58, 61, 62], "backend": [38, 39], "organ": [38, 39], "manner": [38, 39], "suit": [38, 39], "With": [38, 39], "explicitli": [38, 39, 115, 118], "get_": [38, 39], "environment": [38, 39, 63, 64], "abstractrunn": [38, 39, 63, 64, 115, 116, 117, 118], "targetfunctionscriptrunn": [38, 39, 121], "promis": [38, 39, 46, 54, 55, 56, 58, 59, 62, 63, 64], "initialdesign": [38, 39, 63, 64], "randomdesign": [38, 39, 63, 64], "drawn": [38, 39, 40, 41, 44, 54, 59, 63, 64, 70, 72, 82, 96, 100], "abstractintensifi": [38, 39, 54, 55, 56, 59, 62, 63, 64], "abstractmultiobjectivealgorithm": [38, 39, 92, 93, 94, 95, 101, 103, 104, 114], "runhistoryencod": [38, 39, 40, 41, 46, 63, 64, 103, 105, 107, 108, 109, 110, 111, 112], "indic": [38, 39, 54, 55, 56, 58, 59, 62, 96, 97, 99, 101, 102, 113, 115, 119, 139, 143], "noth": [38, 39], "yml": [38, 39], "inconsist": [38, 39, 63, 64, 131, 146], "intend": [38, 39, 115, 118], "trialinfo": [38, 39, 54, 55, 56, 58, 59, 62, 63, 64, 66, 101, 102, 115, 116, 117, 118, 134], "static": [38, 39, 40, 41, 43, 44, 45, 46, 122], "get_acquisition_funct": [38, 39, 40, 41, 44, 46, 135], "get_acquisition_maxim": [38, 39, 40, 41, 44, 46], "get_initial_design": [38, 39, 40, 41, 44, 45, 46, 132, 135, 138, 143], "warm": [38, 39], "abstractinitialdesign": [38, 39, 47, 48, 49, 50, 51, 52, 53], "get_intensifi": [38, 39, 40, 41, 43, 44, 45, 46, 133, 135], "get_model": [38, 39, 40, 41, 44, 46], "get_multi_objective_algorithm": [38, 39, 40, 41, 44, 46, 142], "choos": [38, 39, 41, 54, 55, 58, 62, 63, 64, 66, 70, 80, 138], "suggest": [38, 39, 63, 64, 66, 115, 119], "get_random_design": [38, 39, 40, 41, 44, 46], "get_runhistory_encod": [38, 39, 40, 41, 44, 46], "prepar": [38, 39, 54, 55, 103, 104], "abstractrunhistoryencod": [38, 39, 103, 104, 106, 107], "configuration_spac": [38, 39, 63, 64, 101, 114], "hash": [38, 39, 122], "fill": [38, 39, 63, 64, 117], "relev": [38, 39, 63, 64, 66], "trajectori": [38, 39, 54, 55, 56, 58, 59, 62, 63, 64, 102], "describ": [38, 39, 63, 64, 66], "trialvalu": [38, 39, 54, 55, 56, 58, 59, 62, 63, 64, 66, 101, 102, 114, 115, 116, 117, 118, 133, 134], "regard": [38, 39, 63, 64, 66], "additional_config": [38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 135], "defaultinitialdesign": [38, 40, 46, 47, 49], "min_config_cal": [38, 40, 41, 44, 46, 54, 55, 59], "2000": [38, 40, 54, 55, 59], "min_challeng": [38, 40, 41, 43, 44, 45, 46, 54, 55, 56, 57, 59, 61], "race_against": [38, 40, 41, 44, 46, 54, 59], "per": [38, 40, 41, 44, 45, 47, 48, 54, 55, 56, 59, 88, 90, 101, 114, 135], "exhaust": [38, 40, 41, 43, 44, 45, 54, 55, 57, 59, 61, 131, 132, 133, 135, 138, 139, 142, 143, 146], "earlier": [38, 40, 41, 43, 44, 45, 54, 55, 57, 59, 61], "much": [38, 40, 41, 44, 54, 59, 63, 64, 66, 101, 114, 115, 118, 138, 142], "percentag": [38, 40, 41, 44, 54, 59], "n_tree": [38, 40, 44, 88, 90], "ratio_featur": [38, 40, 44, 88, 90], "8333333333333334": [38, 40, 88, 90], "min_samples_split": [38, 40, 44, 88, 90], "min_samples_leaf": [38, 40, 44, 88, 90], "max_depth": [38, 40, 44, 88, 90], "bootstrap": [38, 40, 44, 88, 90], "pca_compon": [38, 40, 68, 69, 70, 71, 72, 80, 88, 90, 91], "tree": [38, 40, 44, 88, 90], "split": [38, 40, 44, 88, 90, 135, 138, 139, 143], "leaf": [38, 40, 44, 88, 90], "depth": [38, 40, 44, 88, 90], "pca": [38, 40, 68, 69, 70, 71, 72, 80, 88, 90], "randomforest": [38, 40, 44, 45, 88, 90], "objective_weight": [38, 40, 41, 44, 46, 92, 94, 142], "length": [38, 40, 41, 44, 46, 54, 59, 70, 74, 76, 80, 92, 94], "meanaggregationstrategi": [38, 40, 41, 44, 46, 92, 94], "probabilityrandomdesign": [38, 40, 41, 44, 96, 100], "n_config": [38, 41, 44, 45, 47, 48, 49, 50, 51, 52, 132, 138, 143], "n_configs_per_hyperparamt": [38, 41, 44, 45], "max_ratio": [38, 41, 44, 45, 47, 48, 49, 50, 51, 52, 133, 146], "n_configs_per_hyperparamet": [38, 41, 44, 45, 47, 48, 49, 50, 51, 52], "my": [38, 41, 44, 45, 47, 48], "cover": [38, 41, 44, 45, 47, 48], "sobolinitialdesign": [38, 41, 44, 47, 53, 132], "get_kernel": [38, 41], "kernel": [38, 41, 70, 71, 72, 80, 132], "composit": [38, 41], "hammingkernel": [38, 41, 74, 76], "matern": [38, 41, 74, 77], "nois": [38, 41], "model_typ": [38, 41], "chosen": [38, 41, 138, 149], "vanilla": [38, 41], "gaussianprocess": [38, 41, 70, 72, 80], "mcmcgaussianprocess": [38, 41, 70, 80], "08447232371720552": [38, 41], "aggress": [38, 43, 46, 138, 150], "eta": [38, 43, 45, 54, 57, 61, 138, 139], "10000": [38, 44], "1048576": [38, 44, 88, 90], "scale": [38, 44, 54, 57, 61, 74, 76, 81, 82, 83, 84, 86, 103, 104, 108, 110, 111, 112, 132], "runhistorylogscaledencod": [38, 44, 103, 105, 110], "randominitialdesign": [38, 45, 47, 52], "fashion": [38, 45, 54, 56, 115, 117, 118], "_collect_data": [38, 45], "notabl": [38, 45], "through": [38, 45, 101, 114], "_min_samples_model": [38, 45], "exist": [38, 45, 101, 114, 132], "surviv": [38, 45], "inquir": [38, 45], "unseen": [38, 45], "criterion": [38, 45, 54, 61], "intersect": [38, 45], "common": [38, 45, 54, 56, 115, 116, 118, 135], "abstract_intensifi": [38, 45, 131, 132, 133, 135, 138, 139, 142, 143, 146], "_compare_config": [38, 45], "datapoint": [38, 45], "disambigu": [38, 45], "index": [38, 45], "replac": [38, 45, 46, 115, 120, 138], "n_seed": [38, 45, 54, 57, 61, 122, 138, 139], "\u03b8": [38, 46, 54, 59], "unpromis": [38, 46], "reject": [38, 46], "veri": [38, 46], "dummi": [38, 46], "neither": [38, 46, 101, 114], "nor": [38, 46, 101, 114], "increas": [38, 46, 96, 99, 138, 139], "randommodel": [38, 46, 68, 91], "select_configur": [47, 48], "_select_configur": [47, 48], "factorialinitialdesign": [47, 50], "middl": [47, 50], "latinhypercubeinitialdesign": [47, 51], "arg": [47, 53, 63, 66, 88, 89, 103, 108, 112], "scrambl": [47, 53], "io": [47, 53], "devdoc": [47, 53], "qmc": [47, 53], "resourc": [54, 55, 115, 118, 120], "produc": [54, 55, 115, 116, 117, 118], "get_next_tri": [54, 55, 56, 58, 59, 62], "repeat_config": [54, 55, 56, 58, 59, 62], "runinfoint": [54, 55], "tupl": [54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 66, 68, 69, 74, 75, 87, 88, 90, 101, 103, 104, 105, 114, 115, 116, 117, 118, 120, 121, 124, 127, 139, 142], "trialinfoint": [54, 55, 56, 58, 59, 62, 63, 64, 66, 101, 113], "consum": [54, 55, 56, 58, 59, 62, 115, 116], "encapsul": [54, 55, 56, 58, 59, 62, 115, 116], "iteration_don": [54, 55], "num_trial": [54, 55, 102], "log_trajectori": [54, 55, 56, 58, 59, 62], "seen": [54, 55, 56, 58, 59, 62], "sec": [54, 55, 56, 58, 59, 62], "mayb": [54, 55, 56, 58, 59, 62], "incumbent_cost": [54, 55, 56, 58, 59, 62, 131, 132, 133, 135, 138, 139, 142, 146], "repeat": [54, 55], "abstractparallelintensifi": [54, 56, 61], "racer": [54, 56, 59], "schedul": [54, 56, 96, 98], "basi": [54, 56, 61], "prevent": [54, 56, 59, 61, 74, 75], "idl": [54, 56, 57, 61], "pick": [54, 56, 58, 62], "send": [54, 56], "redirect": [54, 56], "respect": [54, 56, 61, 74, 75, 81, 82, 86], "reli": [54, 56], "choic": [54, 56, 138], "instance_seed_pair": [54, 57, 61], "instance_ord": [54, 57, 61, 122], "shuffle_onc": [54, 57, 61, 122], "incumbent_select": [54, 57, 61, 139], "highest_executed_budget": [54, 57, 61], "n_initial_challeng": [54, 57, 61], "falkner": [54, 57, 61, 70, 72, 80, 82], "2018": [54, 57, 61], "hyperbandwork": [54, 57, 58], "actual": [54, 57, 61, 70, 80, 115, 116], "shuffl": [54, 57, 61, 122, 135, 138, 139, 143], "highest_budget": [54, 57, 61], "any_budget": [54, 57, 61], "regardless": [54, 57, 61], "\u03b8_new": [54, 59], "\u03b8_inc": [54, 59], "t_intensifi": [54, 59], "\u03c0": [54, 59], "c_hat": [54, 59], "denot": [54, 59], "run_incumb": [54, 59], "less": [54, 59], "equal": [54, 59, 101, 114], "executerun": [54, 59], "run_challeng": [54, 59], "s_miss": [54, 59], "11": [54, 59, 143], "s_torun": [54, 59], "foreach": [54, 59], "13": [54, 59, 143], "14": [54, 59, 132, 134, 137], "\u03c0_common": [54, 59], "previous": [54, 58, 59, 62], "ran": [54, 59], "15": [54, 59, 139], "break": [54, 59], "17": [54, 59, 137], "18": [54, 59], "spent": [54, 59], "exce": [54, 59], "19": [54, 59], "get_next_challeng": [54, 59], "exercis": [54, 59, 115, 116, 117, 118], "though": [54, 59], "popul": [54, 59, 115, 116, 117, 118], "_configs_to_run": [54, 59], "pool": [54, 59], "regist": [54, 59], "_to_run": [54, 59], "brand": [54, 59], "_next_iter": [54, 59], "transit": [54, 59], "new_challeng": [54, 59], "charg": [54, 59], "compli": [54, 59, 115, 118], "job": [54, 59, 115, 118], "circumv": [54, 59], "cap": [54, 59], "post": [54, 59, 143], "intensifierstag": [54, 59, 60], "process_incumbent_run": [54, 59], "process_first_config_run": [54, 59], "At": [54, 59], "move": [54, 59, 96, 98, 101, 114], "supplementari": [54, 61], "proceed": [54, 61, 150], "mlr": [54, 61], "press": [54, 61], "v80": [54, 61], "falkner18a": [54, 61], "supp": [54, 61], "oper": [54, 61, 74, 75], "kind": [54, 61], "total": [54, 61, 88, 90, 115, 118, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148], "posit": [54, 61, 92, 95, 115, 116, 118, 120, 121], "eg": [54, 61], "successivehalvingwork": [54, 58, 61, 62], "rather": [54, 61, 82], "calculate_budget": [54, 61], "max_iter": [54, 61], "stand": [58, 62], "alon": [58, 62], "numer": [58, 62, 131], "tag": [58, 62], "properli": [58, 62, 117], "later": [58, 62], "enum": [60, 101, 113], "successive_halv": [62, 138, 139], "_all_budget": 62, "_n_configs_in_stag": 62, "_min_budget": 62, "_max_budget": 62, "sub": [62, 103, 104], "rout": 62, "basesmbo": [63, 64, 66, 134], "store": [63, 64, 101, 114, 138], "time_left": [63, 64, 66], "update_acquisition_funct": [63, 64], "assosi": [63, 64], "update_model": [63, 64], "y": [68, 69, 74, 75, 88, 90, 103, 104, 105, 124], "concret": [68, 69], "covariance_typ": [68, 69], "diagon": [68, 69], "_predict": [68, 69], "appli": [68, 69, 82, 103, 105, 131], "std": [68, 69], "deviat": [68, 69, 81, 85, 135], "covari": [68, 69], "whole": [68, 69], "var": [68, 69, 87, 88, 90, 122, 139], "predict_margin": [68, 69, 87, 88, 90], "_train": [68, 69], "correspond": [68, 69, 81, 83, 127], "multiobjectivemodel": [68, 87], "abstractgaussianprocess": [70, 71, 72, 80], "n_restart": [70, 72], "normalize_i": [70, 72, 80], "likelihood": [70, 72], "robo": [70, 72, 80, 82], "klein": [70, 72, 80, 82], "mansur": [70, 72, 80, 82], "2017": [70, 72, 80, 82], "workshop": [70, 72, 80, 82], "restart": [70, 72, 96, 98], "zero": [70, 72, 80, 103, 108, 110, 111, 112, 131, 133], "unit": [70, 72, 80, 135], "sample_funct": [70, 72], "x_test": [70, 72], "n_func": [70, 72], "posterior": [70, 72], "function_sampl": [70, 72], "arrai": [70, 72, 74, 75, 126, 143], "n_mcmc_walker": [70, 80], "chain_length": [70, 80], "burning_step": [70, 80], "mcmc_sampler": [70, 80], "emce": [70, 80], "average_sampl": [70, 80], "out": [70, 80], "markow": [70, 80], "propos": [70, 80], "walker": [70, 80], "last": [70, 80, 132], "burnin": [70, 80], "sampler": [70, 80], "nut": [70, 80], "abstractkernel": [74, 75, 76, 77, 78, 79], "operate_on": [74, 75, 76, 77, 78, 79], "has_condit": [74, 75, 76, 77, 78, 79], "mixin": [74, 75], "overrid": [74, 75, 131, 132, 146], "place": [74, 75, 135], "hierarchi": [74, 75], "instantiat": [74, 75], "mypi": [74, 75], "won": [74, 75], "relat": [74, 75], "superclass": [74, 75], "statement": [74, 75], "member": [74, 75], "_call": [74, 75], "super": [74, 75], "get_param": [74, 75, 76], "etc": [74, 75, 122], "On": [74, 75, 115, 116, 117, 118, 140, 141, 149], "abstractprior": [74, 75, 81, 82, 83, 84, 85, 86], "primarili": [74, 75], "eval_gradi": [74, 75], "estim": [74, 75, 88, 90, 103, 104, 131, 132, 133, 135, 138, 139, 142, 143, 146], "subobject": [74, 75], "param": [74, 75], "map": [74, 75, 101, 114], "n_dim": [74, 75], "fix": [74, 75], "constantkernel": [74, 75], "constant_valu": [74, 75], "constant_value_bound": [74, 75], "05": [74, 75, 76, 77, 78, 79, 92, 95, 139], "100000": [74, 75, 76, 77, 78, 79], "gradient": [74, 75, 81, 82, 86, 140, 141, 149], "shape": [74, 75, 81, 83], "n_samples_x": [74, 75], "n_featur": [74, 75], "n_samples_i": [74, 75], "boolean": [74, 75], "k_gradient": [74, 75], "opt": [74, 75], "length_scal": [74, 76, 77, 78], "length_scale_bound": [74, 76, 77, 78], "stationarykernelmixin": [74, 76], "normalizedkernelmixin": [74, 76], "ham": [74, 76], "hyperparameter_length_scal": [74, 76], "maternkernel": [74, 77], "nu": [74, 77], "productkernel": [74, 75], "k1": [74, 75], "k2": [74, 75], "product": [74, 75], "rbfkernel": [74, 78], "rbf": [74, 78, 132], "sumkernel": [74, 75], "whitekernel": [74, 79], "noise_level": [74, 79], "noise_level_bound": [74, 79], "gammaprior": [81, 83], "loc": [81, 83], "gamma": [81, 83, 132], "greater": [81, 83, 122], "canon": [81, 83], "greather": [81, 83, 122], "horseshoeprior": [81, 84], "horsesho": [81, 84], "spearmint": [81, 84, 86], "lognormalprior": [81, 85], "softtophatprior": [81, 86], "lower_bound": [81, 86], "upper_bound": [81, 86], "expon": [81, 86], "soft": [81, 86], "tophat": [81, 86], "upper": [81, 86, 101, 114, 135], "get_gradi": [81, 82, 86], "theta": [81, 82, 86], "hi": [81, 82, 86], "_get_gradi": [81, 82, 86], "get_log_prob": [81, 82, 86], "exponenti": [81, 82, 86], "_get_log_prob": [81, 82, 86], "tophatprior": [81, 86], "whenev": 82, "lnprob": 82, "sample_from_prior": 82, "n_sampl": 82, "_sample_from_prior": 82, "abstractrandomforest": [88, 89, 90], "n_points_per_tre": [88, 90], "eps_pur": [88, 90], "08": [88, 90], "max_nod": [88, 90], "log_i": [88, 90], "account": [88, 90, 103, 104, 138], "node": [88, 90, 115, 118], "assumpt": [88, 90], "uncertainti": [88, 90], "abc": [92, 93, 115, 116], "loss": [92, 93, 94, 95, 115, 120, 139], "update_on_iteration_start": [92, 93, 95], "rho": [92, 95], "bham": [92, 95], "ac": [92, 95], "uk": [92, 95], "jdk": [92, 95], "ukci": [92, 95], "2015": [92, 95], "small": [92, 95], "helper": [96, 97], "th": [96, 97, 98, 99, 100], "begin": [96, 97, 99], "cosineannealingrandomdesign": [96, 98], "min_prob": [96, 98], "max_prob": [96, 98], "restart_iter": [96, 98], "decreas": [96, 98, 99, 100], "cosin": [96, 98], "final": [96, 98, 131, 132, 133, 135, 138, 139, 142, 143, 146], "_probabl": [96, 98], "dynamicmodulusrandomdesign": [96, 99], "start_modulu": [96, 99], "modulus_incr": [96, 99], "end_modulu": [96, 99], "fraction": [96, 99], "amount": [96, 99, 115, 118], "ever": [96, 99], "adjust": [96, 99], "dynamicprobabilityrandomdesign": [96, 100], "multipli": [96, 100], "dataorigin": [101, 113, 114], "definit": [101, 113], "gather": [101, 113], "disk": [101, 113, 114], "external_same_inst": [101, 113, 114], "extern": [101, 113, 114], "psmac": [101, 113], "external_different_inst": [101, 113], "due": [101, 113, 139], "Will": [101, 113, 115, 118], "instanceseedbudgetkei": [101, 102, 114], "instanceseedkei": [101, 102], "overwrite_existing_tri": [101, 114], "trialkei": [101, 102, 114], "importantli": [101, 114], "theoret": [101, 114], "picklabl": [101, 114], "scaral": [101, 114], "__contains__": [101, 114], "semant": [101, 114], "__eq__": [101, 114], "__getitem__": [101, 114], "__iter__": [101, 114], "__len__": [101, 114], "len": [101, 114], "force_upd": [101, 114], "instance_seed_budget_kei": [101, 114], "queri": [101, 114], "wrt": [101, 114], "config_id": [101, 102, 114, 142], "get_configs_per_budget": [101, 114], "budget_subset": [101, 103, 104, 105, 114], "docstr": [101, 114], "re": [101, 114], "cach": [101, 114], "get_min_cost": [101, 114], "min_cost": [101, 114], "get_trial": [101, 114], "only_max_observed_budget": [101, 114], "ids_config": [101, 114, 142], "incremental_update_cost": [101, 114], "increment": [101, 114], "load_json": [101, 114], "load": [101, 114, 122, 132], "json": [101, 114], "represent": [101, 103, 104, 105, 114], "abstract_multi_objective_algorithm": [101, 103, 104, 114], "reset": [101, 114], "save_json": [101, 114], "save_extern": [101, 114], "sum_cost": [101, 114], "individu": [101, 114], "external_ful": [101, 114], "structur": [101, 114], "_config_id_to_inst_seed_budget": [101, 114], "update_cost": [101, 114], "_cost_per_config": [101, 114], "_num_trials_per_config": [101, 114], "scratch": [101, 114], "accordingli": [101, 114, 135], "update_from_json": [101, 114], "intenum": [101, 113], "run_info": [101, 113], "trajectoryitem": 102, "walltime_us": 102, "memoryout": [103, 104, 105, 106, 107, 109, 110, 111], "donotadv": [103, 104, 105, 106, 107, 109, 110, 111], "lower_budget_st": [103, 104, 105, 106, 107, 109, 110, 111], "scale_percentag": [103, 104, 105, 106, 107, 109, 110, 111], "noqa": [103, 104], "e501": [103, 104], "percentil": [103, 104], "distanc": [103, 104], "typeerror": [103, 104], "get_configur": [103, 104], "append": [103, 104, 142], "configs_arrai": [103, 104], "objecct": [103, 104], "defaul": [103, 104], "transform_response_valu": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "transformed_valu": [103, 104], "runhistoryeipsencod": [103, 106], "runhistoryinversescaledencod": [103, 108], "linearli": [103, 108, 110, 111, 112], "invers": [103, 108], "runhistorylogencod": [103, 109], "runhistoryrawencod": [103, 105], "runhistroi": [103, 105], "raw": [103, 105], "transform_raw_valu": [103, 105], "transform_with_raw": [103, 105], "imput": [103, 105, 124], "censor": [103, 105], "cutoff": [103, 105], "y_raw": [103, 105], "runhistoryrawscaledencod": [103, 105], "runhistoryscaledencod": [103, 111], "runhistorysqrtscaledencod": [103, 112], "squar": [103, 112, 142], "required_argu": [115, 116, 117, 120, 121], "interact": [115, 116], "perspect": [115, 116], "launch": [115, 116, 117, 118], "submit_run": [115, 116, 118], "run_wrapp": [115, 116, 118], "among": [115, 116], "unner": [115, 116], "realli": [115, 116], "translat": [115, 116], "iter_result": [115, 116, 117, 118], "decis": [115, 116, 117, 118], "abl": [115, 116, 132], "count_available_work": [115, 116, 117, 118], "is_run": [115, 116, 117, 118], "serial": [115, 116, 117, 118], "instantli": [115, 116, 117, 118], "pend": [115, 116, 117, 118], "_results_queu": [115, 116, 117, 118], "get_finish": [115, 116, 117, 118], "aka": [115, 116, 118], "repres": [115, 116, 118, 120, 121, 126, 139, 150], "around": [115, 116], "simplifi": [115, 116], "isol": [115, 116], "submit_tri": [115, 116, 117, 118], "embed": [115, 116, 118], "eventu": [115, 116], "fifo": [115, 116], "dictat": [115, 116, 118], "submiss": [115, 116], "endeavor": [115, 116], "daskparallelrunn": [115, 118], "single_work": [115, 118], "patienc": [115, 118], "dask_client": [115, 118], "bridg": [115, 118], "pattern": [115, 118], "wrap": [115, 118], "baserunn": [115, 118], "neext": [115, 118], "dask": [115, 118, 122], "precis": [115, 118], "task": [115, 117, 118, 122, 135], "pickl": [115, 118], "Such": [115, 118], "futur": [115, 118], "manag": [115, 118, 122], "client": [115, 118], "fail": [115, 118, 119, 122], "cluster": [115, 118], "attach": [115, 118], "manual": [115, 118, 135], "__del__": [115, 118], "forc": [115, 118], "dynam": [115, 118], "alloc": [115, 118, 138], "firstruncrashedexcept": [115, 119], "targetalgorithmabortexcept": [115, 119], "abort": [115, 119], "targetfunctionrunn": [115, 120], "abstractserialrunn": [115, 117, 120, 121], "element": [115, 120, 126], "algorithm_kwarg": [115, 120, 121], "walltim": [115, 120], "immedi": 117, "subprocess": 121, "posixpath": 122, "smac3_output": 122, "crash_cost": 122, "cputime_limit": 122, "trial_walltime_limit": 122, "trial_memory_limit": 122, "frame": 122, "cpu": 122, "constraint": [122, 139], "spawn": 122, "mb": [122, 137, 141, 145, 148], "__post_init__": 122, "count_instance_featur": 122, "count": 122, "count_object": 122, "make_serializ": 122, "serializ": [122, 126], "convert_configurations_to_arrai": 124, "get_conditional_hyperparamet": 124, "get_typ": 124, "recursively_compare_dict": 125, "diff": 125, "recurs": 125, "format_arrai": 126, "format_v": 126, "get_logg": 126, "logger_nam": 126, "setup_log": 126, "own": 126, "unnorm": 127, "normalized_cost": 127, "click": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "download": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149], "2d": [131, 144, 145, 149], "rosenbrock": [131, 133], "larg": 131, "abstract_initial_design": [131, 132, 133, 135, 138, 139, 142, 143, 146], "py": [131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 145, 146, 148], "133": [131, 132, 133, 135, 138, 139, 142, 143, 146], "275": [131, 132, 133, 135, 142, 143, 146], "446": [131, 132, 133, 135, 142, 143, 146], "566": [131, 132, 133, 135, 142, 143, 146], "1102": [131, 133, 134], "7878": [131, 133], "340": [131, 132, 133, 135, 139, 142, 143, 146], "4656": 131, "364": [131, 132, 133, 135, 138, 139, 142, 143, 146], "367": [131, 132, 133, 135, 138, 139, 142, 143, 146], "x0": [131, 133, 134, 146], "9968221839517355": [131, 133, 134], "03135360777378082": [131, 134], "x1": [131, 133, 134], "30847043171525": [131, 133, 134], "21179260686039925": [131, 134], "9344": 131, "1521441831066923": 131, "991027821936083": 131, "1692": 131, "4106696064172155": 131, "8167666169669126": 131, "144": 131, "403706808083208": 131, "82964389327294": 131, "5901": 131, "395035485965658": 131, "8263728258094574": 131, "8351": 131, "7031544591929872": 131, "842364243857716": 131, "260": [131, 132, 133, 135, 138, 139, 142, 143, 146], "abstract_facad": [131, 132, 133, 135, 138, 139, 142, 143, 146], "325": [131, 132, 133, 135, 138, 139, 142, 143, 146], "326": [131, 132, 133, 135, 138, 139, 142, 143, 146], "8351420167215506": 131, "16916": [131, 133], "__copyright__": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "copyright": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "freiburg": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "hannov": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "__license__": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "rosenbrock2d": [131, 133, 134], "add_hyperparamet": [131, 132, 133, 134, 135, 138, 139, 143], "toi": [131, 133], "commun": [131, 133], "serv": [131, 133], "x_i": [131, 133], "domain": [131, 133], "interv": [131, 133], "x2": [131, 133, 134], "__name__": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "__main__": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "synthetic_funct": 131, "300": [131, 138, 143], "default_cost": [131, 132, 133, 135, 138, 139, 142, 143, 146], "get_default_configur": [131, 132, 133, 135, 138, 139, 142, 143, 146], "369": [131, 137], "1_synthetic_funct": [131, 137], "jupyt": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149], "notebook": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146, 149], "ipynb": [131, 132, 133, 134, 135, 138, 139, 142, 143, 146], "mix": 132, "0667": 132, "0133": 132, "03992740880515713": 132, "2760639488343621": 132, "linear": 132, "shrink": 132, "013333333333333308": 132, "03333333333333344": 132, "incondit": [132, 138, 143], "wide": [132, 135], "benchmark": 132, "poli": 132, "sigmoid": 132, "001": [132, 138, 143], "degre": 132, "coef": 132, "coef0": 132, "auto": 132, "gamma_valu": 132, "0001": [132, 138, 143], "Then": 132, "use_degre": 132, "parent": [132, 138, 143], "use_coef": 132, "use_gamma": 132, "use_gamma_valu": 132, "add_condit": [132, 138, 143], "config_dict": 132, "get_dictionari": [132, 134], "pop": 132, "alter": 132, "812": [132, 137, 143, 145], "2_svm_cv": [132, 137], "81": [133, 146], "672": 133, "0431": 133, "9280337160103862": 133, "4464462844169503": 133, "183": [133, 143], "6784": 133, "9167466732085607": 133, "1820819878384476": 133, "182": 133, "4884": 133, "9141428270293508": 133, "1729097185109234": 133, "164": 133, "4657": 133, "9103128553040527": 133, "0968037323933704": 133, "163": 133, "9262": 133, "910733502117334": 133, "0954344738526878": 133, "92": 133, "1675": 133, "9006410943547403": 133, "7521911779257788": 133, "89": 133, "4053": 133, "9099906417534438": 133, "7541349483716564": 133, "43": [133, 138, 141], "6122": 133, "2476082835069278": 133, "626766790256079": 133, "1317": 133, "0139112945122775": 133, "0004718388428309": 133, "1121": 133, "027343750289238": 133, "0509433415660299": 133, "0264": 133, "0040559219771676": 133, "9980269946902469": 133, "0085": 133, "0015597533594587": 133, "9983792230911721": 133, "0014": 133, "0002439590109136": 133, "999": 133, "9997277410011209": 133, "9887": 133, "9963819545932235": 133, "988": 133, "9959464568187233": 133, "9876": 133, "9961882939807678": 133, "9976978411919504": 133, "9861": 133, "9926013162698908": 133, "9977540422915405": 133, "9824": 133, "9961880469767745": 133, "9824079688264136": 133, "dataclass": 133, "minimium": 133, "_": [133, 139, 143], "assert": [133, 134], "26": [133, 137, 145], "876": [133, 137], "3_ask_and_tel": [133, 137], "easieast": 134, "7877872130716": 134, "465623793958126": 134, "031095629660985225": 134, "16092022442280118": 134, "5595210205505565": 134, "07949865375354737": 134, "555498713891465": 134, "__future__": [134, 139, 142, 143], "annot": [134, 139, 142, 143], "__init__": [134, 139], "trials_count": 134, "999999": 134, "820": [134, 137], "4_callback": [134, 137], "layer": [135, 139, 140, 141, 149], "perceptron": [135, 139, 140, 141, 149], "mlp": [135, 138, 139, 143], "deriv": 135, "knowledg": 135, "similar": 135, "intuit": 135, "gain": 135, "categoricalhyperparamet": 135, "optimizt": 135, "stick": 135, "prior_acqusition_funct": 135, "107": 135, "8987": 135, "039": 135, "logist": [135, 138, 143], "relu": [135, 138, 143], "batch_siz": [135, 138, 143], "324": 135, "128": 135, "learning_rate_init": [135, 138, 143], "1134996369914405": 135, "0010000000000000002": 135, "n_layer": [135, 138, 143], "n_neuron": [135, 138, 143], "157": 135, "108": 135, "sgd": [135, 138, 139, 143], "adam": [135, 138, 143], "0306": 135, "66": 135, "0010972380878858119": 135, "0262": 135, "0011090117979356453": 135, "026155988857938794": 135, "05787991333952347": 135, "046196224079232406": 135, "betaintegerhyperparamet": 135, "normalfloathyperparamet": 135, "uniformintegerhyperparamet": 135, "load_digit": [135, 138, 139, 143], "convergencewarn": 135, "stratifiedkfold": [135, 138, 139, 143], "neural_network": [135, 138, 143], "mlpclassifi": [135, 138, 143], "digit": [135, 138, 139, 143], "illustr": [135, 138], "educ": 135, "beforehand": 135, "believ": 135, "rel": 135, "And": 135, "skew": 135, "toward": 135, "wider": 135, "256": [135, 138, 143], "alpha": [135, 139, 142], "60": 135, "tanh": [135, 138, 143], "default_valu": 135, "moreov": 135, "opinion": 135, "batch": [135, 138], "leav": 135, "512": 135, "center": 135, "catch_warn": [135, 138, 139, 143], "filterwarn": [135, 138, 139, 143], "categori": 135, "hidden_layer_s": [135, 138, 143], "solver": [135, 138, 143], "max_it": [135, 138, 139, 143], "fold": [135, 138, 143], "n_split": [135, 138, 139, 143], "error_scor": [135, 138, 143], "default_config": 135, "conduct": 135, "proven": 135, "666": [135, 137], "5_prior": [135, 137], "synthet": [136, 137, 149], "02": 137, "542": 137, "examples_1_bas": 137, "00": [137, 138, 139, 141, 145, 148], "04": 137, "advantag": 138, "123": [138, 139], "197": [138, 139], "25": 138, "abstract_parallel_intensifi": [138, 139], "93": [138, 139], "hyperband_work": [138, 139], "165": [138, 139], "successive_halving_work": [138, 139], "396": [138, 139], "613": 138, "0495": 138, "0568": 138, "3333": [138, 142], "155": 138, "006677306766018313": 138, "56": 138, "lbfg": [138, 143], "245": [138, 139], "33": 138, "0345": 138, "0384": 138, "0000": 138, "117": 138, "008282754423021153": 138, "52": 138, "0228": 138, "67": [138, 139], "0070322204321926806": 138, "022819560507582937": 138, "4307319715258433": 138, "025598885793871817": 138, "equalscondit": [138, 143], "invscal": [138, 139, 143], "restrict": 138, "use_lr": [138, 143], "use_lr_init": [138, 143], "use_batch_s": [138, 143], "deactiv": 138, "virtu": 138, "placehold": 138, "lr": [138, 143], "lr_init": [138, 143], "ceil": [138, 143], "961": [138, 141], "1_mlp_epoch": [138, 141], "wlog": 139, "had": 139, "binari": 139, "longer": 139, "217": 139, "0137": 139, "0164": 139, "5488135039273248": 139, "11827442586893322": 139, "eta0": 139, "0006273927602293597": 139, "614170248896958e": 139, "l1_ratio": 139, "317983179393976": 139, "24875314351995803": 139, "27": 139, "008231389269086701": 139, "13423167867113728": 139, "007983889335257179": 139, "itertool": 139, "linear_model": 139, "sgdclassifi": 139, "digitsdataset": 139, "_data": 139, "get_inst": 139, "classa": 139, "classb": 139, "target_nam": 139, "get_instance_featur": 139, "get_instance_data": 139, "logical_or": 139, "00001": 139, "clf": 139, "penalti": 139, "elasticnet": 139, "early_stop": 139, "39": [139, 141], "348": [139, 141], "2_sgd_dataset": [139, 141], "stochast": [140, 141, 149], "descent": [140, 141, 149], "23": 141, "309": 141, "examples_2_multi_fidel": 141, "shown": [142, 143], "5888": 142, "9324859157204628": 142, "3451112993061543": 142, "2725": 142, "3448614852608838": 142, "2724": 142, "3442250183165956": 142, "344081913330525": 142, "3439457083376847": 142, "2723": 142, "3436009486299065": 142, "343062445203584": 142, "3430038657074754": 142, "2722": 142, "3423393633152223": 142, "3423268024390436": 142, "2721": 142, "3411748493907347": 142, "3408257098322904": 142, "264": 142, "154695986884652": 142, "1581912672166585": 142, "2639": 142, "1828007982514523": 142, "1749832250073124": 142, "1748448120914996": 142, "1727127330103513": 142, "1727241873269154": 142, "1730755740919152": 142, "1731571705331119": 142, "173596954335133": 142, "2491": 142, "2502": 142, "246831324420453": 142, "249": 142, "2449620779189017": 142, "2402": 142, "2404": 142, "2844793813252284": 142, "2844462259462253": 142, "283467969854264": 142, "282275260385982": 142, "273756633456062": 142, "2738847990089424": 142, "273934858702745": 142, "2308": 142, "2309": 142, "2837994656468243": 142, "2307": 142, "3252147956587637": 142, "317594589544663": 142, "309332009537401": 142, "3083895672738888": 142, "2306": 142, "3070641795200197": 142, "23064995052356516": 142, "70841677": 142, "48016005": 142, "matplotlib": [142, 143], "pyplot": [142, 143], "plt": [142, 143], "metric1": 142, "metric2": 142, "all_x": 142, "figur": 142, "scatter": [142, 143], "blue": 142, "zorder": 142, "3000": 142, "vline": 142, "linestyl": [142, 143], "dash": 142, "color": 142, "red": [142, 143], "hline": 142, "plot_from_smac": 142, "rh": 142, "trial_kei": 142, "150": 142, "twice": 142, "41": [142, 145], "597": [142, 145], "1_schaffer": [142, 145], "ones": 143, "three": 143, "target_function_runn": 143, "71": 143, "5752": 143, "2876": 143, "4953": 143, "5468": 143, "77": 143, "000534923804864797": 143, "146": 143, "3599": 143, "3887": 143, "3644": 143, "3911": 143, "175": 143, "004156370184967407": 143, "90": 143, "0493": 143, "1423": 143, "184": 143, "0058543125448366285": 143, "0478": 143, "0668": 143, "004363441792114775": 143, "0464": 143, "004695065884871293": 143, "0463": 143, "00472527401258228": 143, "0428": 143, "0892": 143, "190": 143, "01725156210862893": 143, "91": 143, "0201": 143, "0608": 143, "279": 143, "013746975320218277": 143, "1991": 143, "6271": 143, "229": 143, "0003103157692913114": 143, "85": 143, "0319": 143, "1249": 143, "186": 143, "0177872524477677": 143, "012990739683092676": 143, "62956618": 143, "24405773": 143, "40439183": 143, "20653319": 143, "03913907": 143, "36557659": 143, "77054421": 143, "19186155": 143, "86069225": 143, "17019502": 143, "03654029": 143, "36450036": 143, "start_tim": 143, "plot_pareto": 143, "pareto_cost": 143, "bit": 143, "argsort": 143, "vstack": 143, "costs_x": 143, "costs_i": 143, "pareto_costs_x": 143, "pareto_costs_i": 143, "marker": 143, "tolist": 143, "titl": [143, 150], "xlabel": 143, "ylabel": 143, "mind": 143, "enumer": 143, "44": [143, 145], "2_parego": [143, 145], "schaffer": [144, 145, 149], "409": 145, "examples_3_multi_object": 145, "content": 146, "267": 146, "116": 146, "115": 146, "104": [146, 148], "1_call_target_function_script": [146, 148], "examples_5_commandlin": 148, "were": 149, "varieti": 149, "examples_python": 149, "zip": 149, "examples_jupyt": 149, "Its": 150, "cite": 150, "inproceed": 150, "arxiv21a": 150, "author": 150, "katharina": 150, "eggensperg": 150, "matthia": 150, "feurer": 150, "andr\u00e9": 150, "biedenkapp": 150, "difan": 150, "deng": 150, "carolin": 150, "benjamin": 150, "tim": 150, "ruhkopf": 150, "ren\u00e9": 150, "sass": 150, "versatil": 150, "booktitl": 150, "2109": 150, "09831": 150, "year": 150, "url": 150, "ab": 150, "hoo": 150, "h": 150, "leyton": 150, "brown": 150, "confer": 150, "intellig": 150, "lion": 150, "develop": 150, "visit": 150, "guidelin": 150}, "objects": {"smac": [[21, 0, 0, "-", "acquisition"], [37, 0, 0, "-", "callback"], [38, 0, 0, "-", "facade"], [47, 0, 0, "-", "initial_design"], [54, 0, 0, "-", "intensifier"], [63, 0, 0, "-", "main"], [68, 0, 0, "-", "model"], [92, 0, 0, "-", "multi_objective"], [96, 0, 0, "-", "random_design"], [101, 0, 0, "-", "runhistory"], [115, 0, 0, "-", "runner"], [122, 0, 0, "-", "scenario"], [123, 0, 0, "-", "utils"]], "smac.acquisition": [[22, 0, 0, "-", "function"], [30, 0, 0, "-", "maximizer"]], "smac.acquisition.function": [[22, 1, 1, "", "AbstractAcquisitionFunction"], [22, 1, 1, "", "EI"], [22, 1, 1, "", "EIPS"], [22, 1, 1, "", "IntegratedAcquisitionFunction"], [22, 1, 1, "", "LCB"], [22, 1, 1, "", "PI"], [22, 1, 1, "", "PriorAcquisitionFunction"], [22, 1, 1, "", "TS"], [23, 0, 0, "-", "abstract_acquisition_function"], [24, 0, 0, "-", "confidence_bound"], [25, 0, 0, "-", "expected_improvement"], [26, 0, 0, "-", "integrated_acquisition_function"], [27, 0, 0, "-", "prior_acqusition_function"], [28, 0, 0, "-", "probability_improvement"], [29, 0, 0, "-", "thompson"]], "smac.acquisition.function.AbstractAcquisitionFunction": [[22, 2, 1, "", "__call__"], [22, 3, 1, "", "meta"], [22, 3, 1, "", "model"], [22, 3, 1, "", "name"], [22, 2, 1, "", "update"]], "smac.acquisition.function.EI": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.EIPS": [[22, 3, 1, "", "name"]], "smac.acquisition.function.IntegratedAcquisitionFunction": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.LCB": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.PI": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "name"]], "smac.acquisition.function.PriorAcquisitionFunction": [[22, 3, 1, "", "meta"], [22, 3, 1, "", "model"], [22, 3, 1, "", "name"]], "smac.acquisition.function.TS": [[22, 3, 1, "", "name"]], "smac.acquisition.function.abstract_acquisition_function": [[23, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction": [[23, 2, 1, "", "__call__"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "model"], [23, 3, 1, "", "name"], [23, 2, 1, "", "update"]], "smac.acquisition.function.confidence_bound": [[24, 1, 1, "", "LCB"]], "smac.acquisition.function.confidence_bound.LCB": [[24, 3, 1, "", "meta"], [24, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement": [[25, 1, 1, "", "EI"], [25, 1, 1, "", "EIPS"]], "smac.acquisition.function.expected_improvement.EI": [[25, 3, 1, "", "meta"], [25, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement.EIPS": [[25, 3, 1, "", "name"]], "smac.acquisition.function.integrated_acquisition_function": [[26, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction": [[26, 3, 1, "", "meta"], [26, 3, 1, "", "name"]], "smac.acquisition.function.prior_acqusition_function": [[27, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction": [[27, 3, 1, "", "meta"], [27, 3, 1, "", "model"], [27, 3, 1, "", "name"]], "smac.acquisition.function.probability_improvement": [[28, 1, 1, "", "PI"]], "smac.acquisition.function.probability_improvement.PI": [[28, 3, 1, "", "meta"], [28, 3, 1, "", "name"]], "smac.acquisition.function.thompson": [[29, 1, 1, "", "TS"]], "smac.acquisition.function.thompson.TS": [[29, 3, 1, "", "name"]], "smac.acquisition.maximizer": [[30, 1, 1, "", "AbstractAcquisitionMaximizer"], [30, 1, 1, "", "DifferentialEvolution"], [30, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [30, 1, 1, "", "LocalAndSortedRandomSearch"], [30, 1, 1, "", "LocalSearch"], [30, 1, 1, "", "RandomSearch"], [31, 0, 0, "-", "abstract_acqusition_maximizer"], [32, 0, 0, "-", "differential_evolution"], [33, 0, 0, "-", "helpers"], [34, 0, 0, "-", "local_and_random_search"], [35, 0, 0, "-", "local_search"], [36, 0, 0, "-", "random_search"]], "smac.acquisition.maximizer.AbstractAcquisitionMaximizer": [[30, 3, 1, "", "acquisition_function"], [30, 2, 1, "", "maximize"], [30, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalAndSortedRandomSearch": [[30, 3, 1, "", "acquisition_function"], [30, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalSearch": [[30, 3, 1, "", "meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[31, 1, 1, "", "AbstractAcquisitionMaximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer": [[31, 3, 1, "", "acquisition_function"], [31, 2, 1, "", "maximize"], [31, 3, 1, "", "meta"]], "smac.acquisition.maximizer.differential_evolution": [[32, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.maximizer.helpers": [[33, 1, 1, "", "ChallengerList"]], "smac.acquisition.maximizer.local_and_random_search": [[34, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [34, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch": [[34, 3, 1, "", "acquisition_function"], [34, 3, 1, "", "meta"]], "smac.acquisition.maximizer.local_search": [[35, 1, 1, "", "LocalSearch"]], "smac.acquisition.maximizer.local_search.LocalSearch": [[35, 3, 1, "", "meta"]], "smac.acquisition.maximizer.random_search": [[36, 1, 1, "", "RandomSearch"]], "smac.callback": [[37, 1, 1, "", "Callback"]], "smac.callback.Callback": [[37, 2, 1, "", "on_ask_end"], [37, 2, 1, "", "on_ask_start"], [37, 2, 1, "", "on_end"], [37, 2, 1, "", "on_iteration_end"], [37, 2, 1, "", "on_iteration_start"], [37, 2, 1, "", "on_next_configurations_end"], [37, 2, 1, "", "on_next_configurations_start"], [37, 2, 1, "", "on_start"], [37, 2, 1, "", "on_tell_end"], [37, 2, 1, "", "on_tell_start"]], "smac.facade": [[38, 1, 1, "", "AbstractFacade"], [38, 1, 1, "", "AlgorithmConfigurationFacade"], [38, 1, 1, "", "BlackBoxFacade"], [38, 1, 1, "", "HyperbandFacade"], [38, 1, 1, "", "HyperparameterOptimizationFacade"], [38, 1, 1, "", "MultiFidelityFacade"], [38, 1, 1, "", "RandomFacade"], [39, 0, 0, "-", "abstract_facade"], [40, 0, 0, "-", "algorithm_configuration_facade"], [41, 0, 0, "-", "blackbox_facade"], [42, 0, 0, "-", "boing_facade"], [43, 0, 0, "-", "hyperband_facade"], [44, 0, 0, "-", "hyperparameter_optimization_facade"], [45, 0, 0, "-", "multi_fidelity_facade"], [46, 0, 0, "-", "random_facade"]], "smac.facade.AbstractFacade": [[38, 2, 1, "", "ask"], [38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_next_configurations"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"], [38, 2, 1, "", "get_target_function_budgets"], [38, 2, 1, "", "get_target_function_instances"], [38, 2, 1, "", "get_target_function_seeds"], [38, 3, 1, "", "incumbent"], [38, 3, 1, "", "meta"], [38, 2, 1, "", "optimize"], [38, 3, 1, "", "runhistory"], [38, 3, 1, "", "scenario"], [38, 3, 1, "", "stats"], [38, 2, 1, "", "tell"], [38, 2, 1, "", "validate"]], "smac.facade.AlgorithmConfigurationFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.BlackBoxFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_kernel"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.HyperbandFacade": [[38, 2, 1, "", "get_intensifier"]], "smac.facade.HyperparameterOptimizationFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.MultiFidelityFacade": [[38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"]], "smac.facade.RandomFacade": [[38, 2, 1, "", "get_acquisition_function"], [38, 2, 1, "", "get_acquisition_maximizer"], [38, 2, 1, "", "get_initial_design"], [38, 2, 1, "", "get_intensifier"], [38, 2, 1, "", "get_model"], [38, 2, 1, "", "get_multi_objective_algorithm"], [38, 2, 1, "", "get_random_design"], [38, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.abstract_facade": [[39, 1, 1, "", "AbstractFacade"]], "smac.facade.abstract_facade.AbstractFacade": [[39, 2, 1, "", "ask"], [39, 2, 1, "", "get_acquisition_function"], [39, 2, 1, "", "get_acquisition_maximizer"], [39, 2, 1, "", "get_initial_design"], [39, 2, 1, "", "get_intensifier"], [39, 2, 1, "", "get_model"], [39, 2, 1, "", "get_multi_objective_algorithm"], [39, 2, 1, "", "get_next_configurations"], [39, 2, 1, "", "get_random_design"], [39, 2, 1, "", "get_runhistory_encoder"], [39, 2, 1, "", "get_target_function_budgets"], [39, 2, 1, "", "get_target_function_instances"], [39, 2, 1, "", "get_target_function_seeds"], [39, 3, 1, "", "incumbent"], [39, 3, 1, "", "meta"], [39, 2, 1, "", "optimize"], [39, 3, 1, "", "runhistory"], [39, 3, 1, "", "scenario"], [39, 3, 1, "", "stats"], [39, 2, 1, "", "tell"], [39, 2, 1, "", "validate"]], "smac.facade.algorithm_configuration_facade": [[40, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade": [[40, 2, 1, "", "get_acquisition_function"], [40, 2, 1, "", "get_acquisition_maximizer"], [40, 2, 1, "", "get_initial_design"], [40, 2, 1, "", "get_intensifier"], [40, 2, 1, "", "get_model"], [40, 2, 1, "", "get_multi_objective_algorithm"], [40, 2, 1, "", "get_random_design"], [40, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[41, 1, 1, "", "BlackBoxFacade"]], "smac.facade.blackbox_facade.BlackBoxFacade": [[41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_kernel"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.hyperband_facade": [[43, 1, 1, "", "HyperbandFacade"]], "smac.facade.hyperband_facade.HyperbandFacade": [[43, 2, 1, "", "get_intensifier"]], "smac.facade.hyperparameter_optimization_facade": [[44, 1, 1, "", "HyperparameterOptimizationFacade"]], "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade": [[44, 2, 1, "", "get_acquisition_function"], [44, 2, 1, "", "get_acquisition_maximizer"], [44, 2, 1, "", "get_initial_design"], [44, 2, 1, "", "get_intensifier"], [44, 2, 1, "", "get_model"], [44, 2, 1, "", "get_multi_objective_algorithm"], [44, 2, 1, "", "get_random_design"], [44, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.multi_fidelity_facade": [[45, 1, 1, "", "MultiFidelityFacade"]], "smac.facade.multi_fidelity_facade.MultiFidelityFacade": [[45, 2, 1, "", "get_initial_design"], [45, 2, 1, "", "get_intensifier"]], "smac.facade.random_facade": [[46, 1, 1, "", "RandomFacade"]], "smac.facade.random_facade.RandomFacade": [[46, 2, 1, "", "get_acquisition_function"], [46, 2, 1, "", "get_acquisition_maximizer"], [46, 2, 1, "", "get_initial_design"], [46, 2, 1, "", "get_intensifier"], [46, 2, 1, "", "get_model"], [46, 2, 1, "", "get_multi_objective_algorithm"], [46, 2, 1, "", "get_random_design"], [46, 2, 1, "", "get_runhistory_encoder"]], "smac.initial_design": [[47, 1, 1, "", "AbstractInitialDesign"], [47, 1, 1, "", "DefaultInitialDesign"], [47, 1, 1, "", "FactorialInitialDesign"], [47, 1, 1, "", "LatinHypercubeInitialDesign"], [47, 1, 1, "", "RandomInitialDesign"], [47, 1, 1, "", "SobolInitialDesign"], [48, 0, 0, "-", "abstract_initial_design"], [49, 0, 0, "-", "default_design"], [50, 0, 0, "-", "factorial_design"], [51, 0, 0, "-", "latin_hypercube_design"], [52, 0, 0, "-", "random_design"], [53, 0, 0, "-", "sobol_design"]], "smac.initial_design.AbstractInitialDesign": [[47, 3, 1, "", "meta"], [47, 2, 1, "", "select_configurations"]], "smac.initial_design.abstract_initial_design": [[48, 1, 1, "", "AbstractInitialDesign"]], "smac.initial_design.abstract_initial_design.AbstractInitialDesign": [[48, 3, 1, "", "meta"], [48, 2, 1, "", "select_configurations"]], "smac.initial_design.default_design": [[49, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[50, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[51, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.random_design": [[52, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[53, 1, 1, "", "SobolInitialDesign"]], "smac.intensifier": [[54, 1, 1, "", "AbstractIntensifier"], [54, 1, 1, "", "AbstractParallelIntensifier"], [54, 1, 1, "", "Hyperband"], [54, 1, 1, "", "Intensifier"], [54, 1, 1, "", "SuccessiveHalving"], [55, 0, 0, "-", "abstract_intensifier"], [56, 0, 0, "-", "abstract_parallel_intensifier"], [57, 0, 0, "-", "hyperband"], [58, 0, 0, "-", "hyperband_worker"], [59, 0, 0, "-", "intensifier"], [60, 0, 0, "-", "stages"], [61, 0, 0, "-", "successive_halving"], [62, 0, 0, "-", "successive_halving_worker"]], "smac.intensifier.AbstractIntensifier": [[54, 2, 1, "", "get_next_trial"], [54, 2, 1, "", "get_target_function_budgets"], [54, 2, 1, "", "get_target_function_instances"], [54, 2, 1, "", "get_target_function_seeds"], [54, 3, 1, "", "iteration_done"], [54, 3, 1, "", "meta"], [54, 3, 1, "", "num_trials"], [54, 2, 1, "", "process_results"], [54, 3, 1, "", "repeat_configs"], [54, 3, 1, "", "uses_budgets"], [54, 3, 1, "", "uses_instances"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.AbstractParallelIntensifier": [[54, 2, 1, "", "get_next_trial"], [54, 2, 1, "", "process_results"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.Intensifier": [[54, 2, 1, "", "get_next_challenger"], [54, 2, 1, "", "get_next_trial"], [54, 2, 1, "", "get_target_function_budgets"], [54, 2, 1, "", "get_target_function_instances"], [54, 2, 1, "", "get_target_function_seeds"], [54, 3, 1, "", "intensify_percentage"], [54, 3, 1, "", "meta"], [54, 2, 1, "", "process_results"], [54, 3, 1, "", "uses_budgets"], [54, 3, 1, "", "uses_instances"], [54, 3, 1, "", "uses_seeds"]], "smac.intensifier.SuccessiveHalving": [[54, 2, 1, "", "calculate_budgets"], [54, 2, 1, "", "get_target_function_budgets"], [54, 2, 1, "", "get_target_function_instances"], [54, 2, 1, "", "get_target_function_seeds"], [54, 3, 1, "", "meta"], [54, 3, 1, "", "uses_budgets"], [54, 3, 1, "", "uses_instances"]], "smac.intensifier.abstract_intensifier": [[55, 1, 1, "", "AbstractIntensifier"]], "smac.intensifier.abstract_intensifier.AbstractIntensifier": [[55, 2, 1, "", "get_next_trial"], [55, 2, 1, "", "get_target_function_budgets"], [55, 2, 1, "", "get_target_function_instances"], [55, 2, 1, "", "get_target_function_seeds"], [55, 3, 1, "", "iteration_done"], [55, 3, 1, "", "meta"], [55, 3, 1, "", "num_trials"], [55, 2, 1, "", "process_results"], [55, 3, 1, "", "repeat_configs"], [55, 3, 1, "", "uses_budgets"], [55, 3, 1, "", "uses_instances"], [55, 3, 1, "", "uses_seeds"]], "smac.intensifier.abstract_parallel_intensifier": [[56, 1, 1, "", "AbstractParallelIntensifier"]], "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier": [[56, 2, 1, "", "get_next_trial"], [56, 2, 1, "", "process_results"], [56, 3, 1, "", "uses_seeds"]], "smac.intensifier.hyperband": [[57, 1, 1, "", "Hyperband"]], "smac.intensifier.hyperband_worker": [[58, 1, 1, "", "HyperbandWorker"]], "smac.intensifier.hyperband_worker.HyperbandWorker": [[58, 2, 1, "", "get_next_trial"], [58, 2, 1, "", "process_results"], [58, 3, 1, "", "uses_budgets"], [58, 3, 1, "", "uses_instances"], [58, 3, 1, "", "uses_seeds"]], "smac.intensifier.intensifier": [[59, 1, 1, "", "Intensifier"]], "smac.intensifier.intensifier.Intensifier": [[59, 2, 1, "", "get_next_challenger"], [59, 2, 1, "", "get_next_trial"], [59, 2, 1, "", "get_target_function_budgets"], [59, 2, 1, "", "get_target_function_instances"], [59, 2, 1, "", "get_target_function_seeds"], [59, 3, 1, "", "intensify_percentage"], [59, 3, 1, "", "meta"], [59, 2, 1, "", "process_results"], [59, 3, 1, "", "uses_budgets"], [59, 3, 1, "", "uses_instances"], [59, 3, 1, "", "uses_seeds"]], "smac.intensifier.stages": [[60, 1, 1, "", "IntensifierStage"]], "smac.intensifier.successive_halving": [[61, 1, 1, "", "SuccessiveHalving"]], "smac.intensifier.successive_halving.SuccessiveHalving": [[61, 2, 1, "", "calculate_budgets"], [61, 2, 1, "", "get_target_function_budgets"], [61, 2, 1, "", "get_target_function_instances"], [61, 2, 1, "", "get_target_function_seeds"], [61, 3, 1, "", "meta"], [61, 3, 1, "", "uses_budgets"], [61, 3, 1, "", "uses_instances"]], "smac.intensifier.successive_halving_worker": [[62, 1, 1, "", "SuccessiveHalvingWorker"]], "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker": [[62, 2, 1, "", "get_next_trial"], [62, 2, 1, "", "get_target_function_budgets"], [62, 2, 1, "", "get_target_function_instances"], [62, 2, 1, "", "get_target_function_seeds"], [62, 2, 1, "", "process_results"], [62, 3, 1, "", "stage"], [62, 3, 1, "", "uses_budgets"], [62, 3, 1, "", "uses_instances"], [62, 3, 1, "", "uses_seeds"]], "smac.main": [[63, 1, 1, "", "BaseSMBO"], [63, 1, 1, "", "SMBO"], [64, 0, 0, "-", "base_smbo"], [65, 0, 0, "-", "boing"], [66, 0, 0, "-", "smbo"], [67, 0, 0, "-", "turbo"]], "smac.main.BaseSMBO": [[63, 2, 1, "", "ask"], [63, 2, 1, "", "get_next_configurations"], [63, 3, 1, "", "incumbent"], [63, 2, 1, "", "optimize"], [63, 3, 1, "", "runhistory"], [63, 2, 1, "", "save"], [63, 3, 1, "", "stats"], [63, 2, 1, "", "tell"], [63, 2, 1, "", "update_acquisition_function"], [63, 2, 1, "", "update_model"], [63, 2, 1, "", "validate"]], "smac.main.SMBO": [[63, 2, 1, "", "ask"], [63, 2, 1, "", "get_next_configurations"], [63, 2, 1, "", "tell"]], "smac.main.base_smbo": [[64, 1, 1, "", "BaseSMBO"]], "smac.main.base_smbo.BaseSMBO": [[64, 2, 1, "", "ask"], [64, 2, 1, "", "get_next_configurations"], [64, 3, 1, "", "incumbent"], [64, 2, 1, "", "optimize"], [64, 3, 1, "", "runhistory"], [64, 2, 1, "", "save"], [64, 3, 1, "", "stats"], [64, 2, 1, "", "tell"], [64, 2, 1, "", "update_acquisition_function"], [64, 2, 1, "", "update_model"], [64, 2, 1, "", "validate"]], "smac.main.smbo": [[66, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[66, 2, 1, "", "ask"], [66, 2, 1, "", "get_next_configurations"], [66, 2, 1, "", "tell"]], "smac.model": [[68, 1, 1, "", "AbstractModel"], [68, 1, 1, "", "MultiObjectiveModel"], [68, 1, 1, "", "RandomModel"], [69, 0, 0, "-", "abstract_model"], [70, 0, 0, "-", "gaussian_process"], [87, 0, 0, "-", "multi_objective_model"], [88, 0, 0, "-", "random_forest"], [91, 0, 0, "-", "random_model"]], "smac.model.AbstractModel": [[68, 3, 1, "", "meta"], [68, 2, 1, "", "predict"], [68, 2, 1, "", "predict_marginalized"], [68, 2, 1, "", "train"]], "smac.model.MultiObjectiveModel": [[68, 3, 1, "", "models"], [68, 2, 1, "", "predict_marginalized"]], "smac.model.abstract_model": [[69, 1, 1, "", "AbstractModel"]], "smac.model.abstract_model.AbstractModel": [[69, 3, 1, "", "meta"], [69, 2, 1, "", "predict"], [69, 2, 1, "", "predict_marginalized"], [69, 2, 1, "", "train"]], "smac.model.gaussian_process": [[70, 1, 1, "", "AbstractGaussianProcess"], [70, 1, 1, "", "GaussianProcess"], [70, 1, 1, "", "MCMCGaussianProcess"], [71, 0, 0, "-", "abstract_gaussian_process"], [72, 0, 0, "-", "gaussian_process"], [73, 0, 0, "-", "gpytorch_gaussian_process"], [74, 0, 0, "-", "kernels"], [80, 0, 0, "-", "mcmc_gaussian_process"], [81, 0, 0, "-", "priors"]], "smac.model.gaussian_process.AbstractGaussianProcess": [[70, 3, 1, "", "meta"]], "smac.model.gaussian_process.GaussianProcess": [[70, 3, 1, "", "meta"], [70, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.MCMCGaussianProcess": [[70, 3, 1, "", "meta"], [70, 3, 1, "", "models"]], "smac.model.gaussian_process.abstract_gaussian_process": [[71, 1, 1, "", "AbstractGaussianProcess"]], "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess": [[71, 3, 1, "", "meta"]], "smac.model.gaussian_process.gaussian_process": [[72, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[72, 3, 1, "", "meta"], [72, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.kernels": [[74, 1, 1, "", "AbstractKernel"], [74, 1, 1, "", "ConstantKernel"], [74, 1, 1, "", "HammingKernel"], [74, 1, 1, "", "MaternKernel"], [74, 1, 1, "", "ProductKernel"], [74, 1, 1, "", "RBFKernel"], [74, 1, 1, "", "SumKernel"], [74, 1, 1, "", "WhiteKernel"], [75, 0, 0, "-", "base_kernels"], [76, 0, 0, "-", "hamming_kernel"], [77, 0, 0, "-", "matern_kernel"], [78, 0, 0, "-", "rbf_kernel"], [79, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.AbstractKernel": [[74, 2, 1, "", "__call__"], [74, 2, 1, "", "get_params"], [74, 4, 1, "", "has_conditions"], [74, 3, 1, "", "hyperparameters"], [74, 3, 1, "", "meta"], [74, 3, 1, "", "n_dims"], [74, 4, 1, "", "operate_on"], [74, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[74, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.HammingKernel": [[74, 3, 1, "", "hyperparameter_length_scale"], [74, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[74, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.SumKernel": [[74, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels": [[75, 1, 1, "", "AbstractKernel"], [75, 1, 1, "", "ConstantKernel"], [75, 1, 1, "", "ProductKernel"], [75, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel": [[75, 2, 1, "", "__call__"], [75, 2, 1, "", "get_params"], [75, 4, 1, "", "has_conditions"], [75, 3, 1, "", "hyperparameters"], [75, 3, 1, "", "meta"], [75, 3, 1, "", "n_dims"], [75, 4, 1, "", "operate_on"], [75, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[75, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[75, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[75, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[76, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[76, 3, 1, "", "hyperparameter_length_scale"], [76, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.matern_kernel": [[77, 1, 1, "", "MaternKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[78, 1, 1, "", "RBFKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[79, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[80, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess": [[80, 3, 1, "", "meta"], [80, 3, 1, "", "models"]], "smac.model.gaussian_process.priors": [[81, 1, 1, "", "GammaPrior"], [81, 1, 1, "", "HorseshoePrior"], [81, 1, 1, "", "LogNormalPrior"], [81, 1, 1, "", "SoftTopHatPrior"], [81, 1, 1, "", "TophatPrior"], [82, 0, 0, "-", "abstract_prior"], [83, 0, 0, "-", "gamma_prior"], [84, 0, 0, "-", "horseshoe_prior"], [85, 0, 0, "-", "log_normal_prior"], [86, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.GammaPrior": [[81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.HorseshoePrior": [[81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.LogNormalPrior": [[81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.SoftTopHatPrior": [[81, 2, 1, "", "get_gradient"], [81, 2, 1, "", "get_log_probability"], [81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.TophatPrior": [[81, 2, 1, "", "get_gradient"], [81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.abstract_prior": [[82, 1, 1, "", "AbstractPrior"]], "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior": [[82, 2, 1, "", "get_gradient"], [82, 2, 1, "", "get_log_probability"], [82, 3, 1, "", "meta"], [82, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[83, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.gamma_prior.GammaPrior": [[83, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[84, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior": [[84, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[85, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior": [[85, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[86, 1, 1, "", "SoftTopHatPrior"], [86, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[86, 2, 1, "", "get_gradient"], [86, 2, 1, "", "get_log_probability"], [86, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[86, 2, 1, "", "get_gradient"], [86, 3, 1, "", "meta"]], "smac.model.multi_objective_model": [[87, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[87, 3, 1, "", "models"], [87, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest": [[88, 1, 1, "", "AbstractRandomForest"], [88, 1, 1, "", "RandomForest"], [89, 0, 0, "-", "abstract_random_forest"], [90, 0, 0, "-", "random_forest"]], "smac.model.random_forest.RandomForest": [[88, 3, 1, "", "meta"], [88, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest.abstract_random_forest": [[89, 1, 1, "", "AbstractRandomForest"]], "smac.model.random_forest.random_forest": [[90, 1, 1, "", "RandomForest"]], "smac.model.random_forest.random_forest.RandomForest": [[90, 3, 1, "", "meta"], [90, 2, 1, "", "predict_marginalized"]], "smac.model.random_model": [[91, 1, 1, "", "RandomModel"]], "smac.multi_objective": [[92, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [92, 1, 1, "", "MeanAggregationStrategy"], [92, 1, 1, "", "ParEGO"], [93, 0, 0, "-", "abstract_multi_objective_algorithm"], [94, 0, 0, "-", "aggregation_strategy"], [95, 0, 0, "-", "parego"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[92, 2, 1, "", "__call__"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.MeanAggregationStrategy": [[92, 2, 1, "", "__call__"], [92, 3, 1, "", "meta"]], "smac.multi_objective.ParEGO": [[92, 2, 1, "", "__call__"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[93, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[93, 2, 1, "", "__call__"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.aggregation_strategy": [[94, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[94, 2, 1, "", "__call__"], [94, 3, 1, "", "meta"]], "smac.multi_objective.parego": [[95, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[95, 2, 1, "", "__call__"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "update_on_iteration_start"]], "smac.random_design": [[96, 1, 1, "", "AbstractRandomDesign"], [96, 1, 1, "", "CosineAnnealingRandomDesign"], [96, 1, 1, "", "DynamicModulusRandomDesign"], [96, 1, 1, "", "DynamicProbabilityRandomDesign"], [96, 1, 1, "", "ModulusRandomDesign"], [96, 1, 1, "", "ProbabilityRandomDesign"], [97, 0, 0, "-", "abstract_random_design"], [98, 0, 0, "-", "annealing_design"], [99, 0, 0, "-", "modulus_design"], [100, 0, 0, "-", "probability_design"]], "smac.random_design.AbstractRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.CosineAnnealingRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicModulusRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicProbabilityRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.ModulusRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"]], "smac.random_design.ProbabilityRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"]], "smac.random_design.abstract_random_design": [[97, 1, 1, "", "AbstractRandomDesign"]], "smac.random_design.abstract_random_design.AbstractRandomDesign": [[97, 2, 1, "", "check"], [97, 3, 1, "", "meta"], [97, 2, 1, "", "next_iteration"]], "smac.random_design.annealing_design": [[98, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.annealing_design.CosineAnnealingRandomDesign": [[98, 2, 1, "", "check"], [98, 3, 1, "", "meta"], [98, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[99, 1, 1, "", "DynamicModulusRandomDesign"], [99, 1, 1, "", "ModulusRandomDesign"]], "smac.random_design.modulus_design.DynamicModulusRandomDesign": [[99, 2, 1, "", "check"], [99, 3, 1, "", "meta"], [99, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.ModulusRandomDesign": [[99, 2, 1, "", "check"], [99, 3, 1, "", "meta"]], "smac.random_design.probability_design": [[100, 1, 1, "", "DynamicProbabilityRandomDesign"], [100, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.DynamicProbabilityRandomDesign": [[100, 2, 1, "", "check"], [100, 3, 1, "", "meta"], [100, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[100, 2, 1, "", "check"], [100, 3, 1, "", "meta"]], "smac.runhistory": [[101, 1, 1, "", "DataOrigin"], [101, 1, 1, "", "InstanceSeedBudgetKey"], [101, 1, 1, "", "InstanceSeedKey"], [101, 1, 1, "", "RunHistory"], [101, 1, 1, "", "StatusType"], [101, 1, 1, "", "TrialInfo"], [101, 1, 1, "", "TrialInfoIntent"], [101, 1, 1, "", "TrialKey"], [101, 1, 1, "", "TrialValue"], [102, 0, 0, "-", "dataclasses"], [103, 0, 0, "-", "encoder"], [113, 0, 0, "-", "enumerations"], [114, 0, 0, "-", "runhistory"]], "smac.runhistory.RunHistory": [[101, 2, 1, "", "__contains__"], [101, 2, 1, "", "__eq__"], [101, 2, 1, "", "__getitem__"], [101, 2, 1, "", "__iter__"], [101, 2, 1, "", "__len__"], [101, 2, 1, "", "add"], [101, 2, 1, "", "average_cost"], [101, 3, 1, "", "config_ids"], [101, 2, 1, "", "empty"], [101, 2, 1, "", "get_config"], [101, 2, 1, "", "get_configs"], [101, 2, 1, "", "get_configs_per_budget"], [101, 2, 1, "", "get_cost"], [101, 2, 1, "", "get_incumbent"], [101, 2, 1, "", "get_min_cost"], [101, 2, 1, "", "get_pareto_front"], [101, 2, 1, "", "get_trials"], [101, 3, 1, "", "ids_config"], [101, 2, 1, "", "incremental_update_cost"], [101, 2, 1, "", "load_json"], [101, 2, 1, "", "min_cost"], [101, 3, 1, "", "multi_objective_algorithm"], [101, 3, 1, "", "objective_bounds"], [101, 2, 1, "", "reset"], [101, 2, 1, "", "save_json"], [101, 2, 1, "", "sum_cost"], [101, 2, 1, "", "update"], [101, 2, 1, "", "update_cost"], [101, 2, 1, "", "update_costs"], [101, 2, 1, "", "update_from_json"]], "smac.runhistory.dataclasses": [[102, 1, 1, "", "InstanceSeedBudgetKey"], [102, 1, 1, "", "InstanceSeedKey"], [102, 1, 1, "", "TrajectoryItem"], [102, 1, 1, "", "TrialInfo"], [102, 1, 1, "", "TrialKey"], [102, 1, 1, "", "TrialValue"]], "smac.runhistory.encoder": [[103, 1, 1, "", "AbstractRunHistoryEncoder"], [103, 1, 1, "", "RunHistoryEIPSEncoder"], [103, 1, 1, "", "RunHistoryEncoder"], [103, 1, 1, "", "RunHistoryInverseScaledEncoder"], [103, 1, 1, "", "RunHistoryLogEncoder"], [103, 1, 1, "", "RunHistoryLogScaledEncoder"], [103, 1, 1, "", "RunHistoryRawEncoder"], [103, 1, 1, "", "RunHistoryRawScaledEncoder"], [103, 1, 1, "", "RunHistoryScaledEncoder"], [103, 1, 1, "", "RunHistorySqrtScaledEncoder"], [104, 0, 0, "-", "abstract_encoder"], [105, 0, 0, "-", "boing_encoder"], [106, 0, 0, "-", "eips_encoder"], [107, 0, 0, "-", "encoder"], [108, 0, 0, "-", "inverse_scaled_encoder"], [109, 0, 0, "-", "log_encoder"], [110, 0, 0, "-", "log_scaled_encoder"], [111, 0, 0, "-", "scaled_encoder"], [112, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[103, 2, 1, "", "get_configurations"], [103, 3, 1, "", "meta"], [103, 3, 1, "", "multi_objective_algorithm"], [103, 2, 1, "", "transform"], [103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryRawEncoder": [[103, 2, 1, "", "transform_raw_values"], [103, 2, 1, "", "transform_response_values"], [103, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.RunHistoryRawScaledEncoder": [[103, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[104, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[104, 2, 1, "", "get_configurations"], [104, 3, 1, "", "meta"], [104, 3, 1, "", "multi_objective_algorithm"], [104, 2, 1, "", "transform"], [104, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[105, 1, 1, "", "RunHistoryRawEncoder"], [105, 1, 1, "", "RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder": [[105, 2, 1, "", "transform_raw_values"], [105, 2, 1, "", "transform_response_values"], [105, 2, 1, "", "transform_with_raw"]], "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder": [[105, 2, 1, "", "transform_raw_values"]], "smac.runhistory.encoder.eips_encoder": [[106, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[106, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[107, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[107, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[108, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder": [[108, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[109, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[109, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[110, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[110, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[111, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[111, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[112, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[112, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[113, 1, 1, "", "DataOrigin"], [113, 1, 1, "", "StatusType"], [113, 1, 1, "", "TrialInfoIntent"]], "smac.runhistory.runhistory": [[114, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[114, 2, 1, "", "__contains__"], [114, 2, 1, "", "__eq__"], [114, 2, 1, "", "__getitem__"], [114, 2, 1, "", "__iter__"], [114, 2, 1, "", "__len__"], [114, 2, 1, "", "add"], [114, 2, 1, "", "average_cost"], [114, 3, 1, "", "config_ids"], [114, 2, 1, "", "empty"], [114, 2, 1, "", "get_config"], [114, 2, 1, "", "get_configs"], [114, 2, 1, "", "get_configs_per_budget"], [114, 2, 1, "", "get_cost"], [114, 2, 1, "", "get_incumbent"], [114, 2, 1, "", "get_min_cost"], [114, 2, 1, "", "get_pareto_front"], [114, 2, 1, "", "get_trials"], [114, 3, 1, "", "ids_config"], [114, 2, 1, "", "incremental_update_cost"], [114, 2, 1, "", "load_json"], [114, 2, 1, "", "min_cost"], [114, 3, 1, "", "multi_objective_algorithm"], [114, 3, 1, "", "objective_bounds"], [114, 2, 1, "", "reset"], [114, 2, 1, "", "save_json"], [114, 2, 1, "", "sum_cost"], [114, 2, 1, "", "update"], [114, 2, 1, "", "update_cost"], [114, 2, 1, "", "update_costs"], [114, 2, 1, "", "update_from_json"]], "smac.runner": [[115, 1, 1, "", "AbstractRunner"], [115, 1, 1, "", "DaskParallelRunner"], [115, 5, 1, "", "FirstRunCrashedException"], [115, 5, 1, "", "TargetAlgorithmAbortException"], [115, 1, 1, "", "TargetFunctionRunner"], [116, 0, 0, "-", "abstract_runner"], [117, 0, 0, "-", "abstract_serial_runner"], [118, 0, 0, "-", "dask_runner"], [119, 0, 0, "-", "exceptions"], [120, 0, 0, "-", "target_function_runner"], [121, 0, 0, "-", "target_function_script_runner"]], "smac.runner.AbstractRunner": [[115, 2, 1, "", "count_available_workers"], [115, 2, 1, "", "is_running"], [115, 2, 1, "", "iter_results"], [115, 3, 1, "", "meta"], [115, 2, 1, "", "run"], [115, 2, 1, "", "run_wrapper"], [115, 2, 1, "", "submit_trial"], [115, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[115, 2, 1, "", "__del__"], [115, 2, 1, "", "close"], [115, 2, 1, "", "count_available_workers"], [115, 2, 1, "", "is_running"], [115, 2, 1, "", "iter_results"], [115, 2, 1, "", "run"], [115, 2, 1, "", "submit_trial"], [115, 2, 1, "", "wait"]], "smac.runner.TargetFunctionRunner": [[115, 2, 1, "", "__call__"], [115, 3, 1, "", "meta"], [115, 2, 1, "", "run"]], "smac.runner.abstract_runner": [[116, 1, 1, "", "AbstractRunner"]], "smac.runner.abstract_runner.AbstractRunner": [[116, 2, 1, "", "count_available_workers"], [116, 2, 1, "", "is_running"], [116, 2, 1, "", "iter_results"], [116, 3, 1, "", "meta"], [116, 2, 1, "", "run"], [116, 2, 1, "", "run_wrapper"], [116, 2, 1, "", "submit_trial"], [116, 2, 1, "", "wait"]], "smac.runner.abstract_serial_runner": [[117, 1, 1, "", "AbstractSerialRunner"]], "smac.runner.abstract_serial_runner.AbstractSerialRunner": [[117, 2, 1, "", "count_available_workers"], [117, 2, 1, "", "is_running"], [117, 2, 1, "", "iter_results"], [117, 2, 1, "", "submit_trial"], [117, 2, 1, "", "wait"]], "smac.runner.dask_runner": [[118, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[118, 2, 1, "", "__del__"], [118, 2, 1, "", "close"], [118, 2, 1, "", "count_available_workers"], [118, 2, 1, "", "is_running"], [118, 2, 1, "", "iter_results"], [118, 2, 1, "", "run"], [118, 2, 1, "", "submit_trial"], [118, 2, 1, "", "wait"]], "smac.runner.exceptions": [[119, 5, 1, "", "FirstRunCrashedException"], [119, 5, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.target_function_runner": [[120, 1, 1, "", "TargetFunctionRunner"]], "smac.runner.target_function_runner.TargetFunctionRunner": [[120, 2, 1, "", "__call__"], [120, 3, 1, "", "meta"], [120, 2, 1, "", "run"]], "smac.runner.target_function_script_runner": [[121, 1, 1, "", "TargetFunctionScriptRunner"]], "smac.runner.target_function_script_runner.TargetFunctionScriptRunner": [[121, 2, 1, "", "__call__"], [121, 3, 1, "", "meta"], [121, 2, 1, "", "run"]], "smac.scenario": [[122, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[122, 2, 1, "", "__post_init__"], [122, 2, 1, "", "count_instance_features"], [122, 2, 1, "", "count_objectives"], [122, 2, 1, "", "load"], [122, 2, 1, "", "make_serializable"], [122, 3, 1, "", "meta"], [122, 2, 1, "", "save"]], "smac.utils": [[124, 0, 0, "-", "configspace"], [125, 0, 0, "-", "data_structures"], [126, 0, 0, "-", "logging"], [127, 0, 0, "-", "multi_objective"], [128, 0, 0, "-", "subspaces"]], "smac.utils.configspace": [[124, 6, 1, "", "convert_configurations_to_array"], [124, 6, 1, "", "get_conditional_hyperparameters"], [124, 6, 1, "", "get_types"]], "smac.utils.data_structures": [[125, 6, 1, "", "recursively_compare_dicts"]], "smac.utils.logging": [[126, 6, 1, "", "format_array"], [126, 6, 1, "", "get_logger"], [126, 6, 1, "", "setup_logging"]], "smac.utils.multi_objective": [[127, 6, 1, "", "normalize_costs"]], "smac.utils.subspaces": [[129, 0, 0, "-", "boing_subspace"], [130, 0, 0, "-", "turbo_subspace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "requir": 0, "anaconda": 0, "conda": 0, "forg": 0, "packag": 1, "overview": 1, "featur": 1, "comparison": 1, "get": 2, "start": [2, 16], "configur": 2, "space": 2, "target": [2, 16, 146], "function": [2, 11, 16, 22, 23, 24, 25, 26, 27, 28, 29, 124, 125, 126, 127, 131, 142, 146], "scenario": [2, 122], "facad": [2, 38, 39, 40, 41, 42, 43, 44, 45, 46], "minim": 3, "exampl": [3, 149], "api": 4, "refer": [4, 5], "glossari": 6, "f": 7, "A": 7, "q": 7, "licens": 8, "continu": 9, "run": 9, "reproduc": 10, "compon": 11, "surrog": 11, "model": [11, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "acquisit": [11, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36], "maxim": [11, 30, 31, 32, 33, 34, 35, 36], "initi": 11, "design": 11, "random": 11, "intensifi": [11, 54, 55, 56, 57, 58, 59, 60, 61, 62], "multi": [11, 12, 13, 138, 140, 144, 149], "object": [11, 13, 142, 144, 149], "algorithm": 11, "runhistori": [11, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "encod": [11, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "callback": [11, 37, 134], "fidel": [12, 140, 149], "optim": [12, 13, 14, 16], "across": 14, "instanc": [14, 140, 149], "ask": [15, 133], "tell": [15, 133], "interfac": [15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 147, 149], "call": [15, 16, 146], "without": 15, "multipl": [15, 138, 139], "command": [16, 147, 149], "line": [16, 147, 149], "return": 16, "stop": 17, "criteria": 17, "termin": 17, "cost": 17, "threshold": 17, "automat": 17, "log": [18, 126], "level": 18, "custom": [18, 134], "file": 18, "parallel": 19, "advanc": 20, "usag": 20, "navig": 20, "smac": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130], "modul": [21, 22, 30, 38, 47, 54, 63, 68, 70, 74, 81, 88, 92, 96, 101, 103, 115, 123, 128], "abstract_acquisition_funct": 23, "class": [23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 69, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122], "confidence_bound": 24, "expected_improv": 25, "integrated_acquisition_funct": 26, "prior_acqusition_funct": 27, "probability_improv": 28, "thompson": 29, "abstract_acqusition_maxim": 31, "differential_evolut": 32, "helper": 33, "local_and_random_search": 34, "local_search": 35, "random_search": 36, "abstract_facad": 39, "algorithm_configuration_facad": 40, "blackbox_facad": 41, "boing_facad": 42, "hyperband_facad": 43, "hyperparameter_optimization_facad": 44, "multi_fidelity_facad": 45, "random_facad": 46, "initial_design": [47, 48, 49, 50, 51, 52, 53], "abstract_initial_design": 48, "default_design": 49, "factorial_design": 50, "latin_hypercube_design": 51, "random_design": [52, 96, 97, 98, 99, 100], "sobol_design": 53, "abstract_intensifi": 55, "abstract_parallel_intensifi": 56, "hyperband": 57, "hyperband_work": 58, "stage": 60, "successive_halv": 61, "successive_halving_work": 62, "main": [63, 64, 65, 66, 67], "base_smbo": 64, "bo": 65, "smbo": 66, "turbo": 67, "abstract_model": 69, "gaussian_process": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86], "abstract_gaussian_process": 71, "gpytorch_gaussian_process": 73, "kernel": [74, 75, 76, 77, 78, 79], "base_kernel": 75, "hamming_kernel": 76, "matern_kernel": 77, "rbf_kernel": 78, "white_kernel": 79, "mcmc_gaussian_process": 80, "prior": [81, 82, 83, 84, 85, 86, 135], "abstract_prior": 82, "gamma_prior": 83, "horseshoe_prior": 84, "log_normal_prior": 85, "tophat_prior": 86, "multi_objective_model": 87, "random_forest": [88, 89, 90], "abstract_random_forest": 89, "random_model": 91, "multi_object": [92, 93, 94, 95, 127], "abstract_multi_objective_algorithm": 93, "aggregation_strategi": 94, "parego": [95, 143], "abstract_random_design": 97, "annealing_design": 98, "modulus_design": 99, "probability_design": 100, "dataclass": 102, "abstract_encod": 104, "boing_encod": 105, "eips_encod": 106, "inverse_scaled_encod": 108, "log_encod": 109, "log_scaled_encod": 110, "scaled_encod": 111, "sqrt_scaled_encod": 112, "enumer": 113, "runner": [115, 116, 117, 118, 119, 120, 121], "abstract_runn": 116, "abstract_serial_runn": 117, "dask_runn": 118, "except": 119, "target_function_runn": 120, "target_function_script_runn": 121, "util": [123, 124, 125, 126, 127, 128, 129, 130], "configspac": 124, "data_structur": 125, "subspac": [128, 129, 130], "boing_subspac": 129, "turbo_subspac": 130, "synthet": 131, "support": 132, "vector": 132, "machin": 132, "cross": 132, "valid": 132, "user": 135, "over": 135, "optimum": 135, "basic": [136, 149], "comput": [137, 141, 145, 148], "time": [137, 141, 145, 148], "layer": 138, "perceptron": 138, "us": 138, "epoch": 138, "stochast": 139, "gradient": 139, "descent": 139, "On": 139, "dataset": 139, "2d": 142, "schaffer": 142, "weight": 142, "from": 146, "script": 146, "home": 150, "contact": 150}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Installation": [[0, "installation"]], "Requirements": [[0, "requirements"]], "Anaconda": [[0, "anaconda"]], "Conda-forge": [[0, "conda-forge"]], "Package Overview": [[1, "package-overview"]], "Features": [[1, "features"]], "Comparison": [[1, "comparison"]], "Getting Started": [[2, "getting-started"]], "Configuration Space": [[2, "configuration-space"]], "Target Function": [[2, "target-function"]], "Scenario": [[2, "scenario"]], "Facade": [[2, "facade"]], "Minimal Example": [[3, "minimal-example"]], "API References": [[4, "api-references"]], "References": [[5, "references"]], "Glossary": [[6, "glossary"]], "F.A.Q.": [[7, "f-a-q"]], "License": [[8, "license"]], "Continue a Run": [[9, "continue-a-run"]], "Reproducability": [[10, "reproducability"]], "Components": [[11, "components"]], "Surrogate Model": [[11, "surrogate-model"]], "Acquisition Function": [[11, "acquisition-function"]], "Acquisition Maximizer": [[11, "acquisition-maximizer"]], "Initial Design": [[11, "initial-design"]], "Random Design": [[11, "random-design"]], "Intensifier": [[11, "intensifier"]], "Multi-Objective Algorithm": [[11, "multi-objective-algorithm"]], "RunHistory": [[11, "runhistory"]], "RunHistory Encoder": [[11, "runhistory-encoder"]], "Callback": [[11, "callback"]], "Multi-Fidelity Optimization": [[12, "multi-fidelity-optimization"]], "Multi-Objective Optimization": [[13, "multi-objective-optimization"]], "Optimization across Instances": [[14, "optimization-across-instances"]], "Ask-and-Tell Interface": [[15, "ask-and-tell-interface"]], "Calling Tell without Ask": [[15, "calling-tell-without-ask"]], "Calling Multiple Tells": [[15, "calling-multiple-tells"]], "Command-Line Interface": [[16, "command-line-interface"], [147, "command-line-interface"], [149, "command-line-interface"]], "Call of the Target Function": [[16, "call-of-the-target-function"]], "Return of the Target Function": [[16, "return-of-the-target-function"]], "Start the Optimization": [[16, "start-the-optimization"]], "Stopping Criteria": [[17, "stopping-criteria"]], "Termination Cost Threshold": [[17, "termination-cost-threshold"]], "Automatically Stopping": [[17, "automatically-stopping"]], "Logging": [[18, "logging"]], "Level": [[18, "level"]], "Custom File": [[18, "custom-file"]], "Parallelism": [[19, "parallelism"]], "Advanced Usage": [[20, "advanced-usage"]], "Navigation": [[20, "navigation"]], "smac.acquisition": [[21, "module-smac.acquisition"]], "Interfaces": [[21, "interfaces"], [22, "interfaces"], [23, "interfaces"], [24, "interfaces"], [25, "interfaces"], [26, "interfaces"], [27, "interfaces"], [28, "interfaces"], [29, "interfaces"], [30, "interfaces"], [31, "interfaces"], [32, "interfaces"], [33, "interfaces"], [34, "interfaces"], [35, "interfaces"], [36, "interfaces"], [37, "interfaces"], [38, "interfaces"], [39, "interfaces"], [40, "interfaces"], [41, "interfaces"], [42, "interfaces"], [43, "interfaces"], [44, "interfaces"], [45, "interfaces"], [46, "interfaces"], [47, "interfaces"], [48, "interfaces"], [49, "interfaces"], [50, "interfaces"], [51, "interfaces"], [52, "interfaces"], [53, "interfaces"], [54, "interfaces"], [55, "interfaces"], [56, "interfaces"], [57, "interfaces"], [58, "interfaces"], [59, "interfaces"], [60, "interfaces"], [61, "interfaces"], [62, "interfaces"], [63, "interfaces"], [64, "interfaces"], [65, "interfaces"], [66, "interfaces"], [67, "interfaces"], [68, "interfaces"], [69, "interfaces"], [70, "interfaces"], [71, "interfaces"], [72, "interfaces"], [73, "interfaces"], [74, "interfaces"], [75, "interfaces"], [76, "interfaces"], [77, "interfaces"], [78, "interfaces"], [79, "interfaces"], [80, "interfaces"], [81, "interfaces"], [82, "interfaces"], [83, "interfaces"], [84, "interfaces"], [85, "interfaces"], [86, "interfaces"], [87, "interfaces"], [88, "interfaces"], [89, "interfaces"], [90, "interfaces"], [91, "interfaces"], [92, "interfaces"], [93, "interfaces"], [94, "interfaces"], [95, "interfaces"], [96, "interfaces"], [97, "interfaces"], [98, "interfaces"], [99, "interfaces"], [100, "interfaces"], [101, "interfaces"], [102, "interfaces"], [103, "interfaces"], [104, "interfaces"], [105, "interfaces"], [106, "interfaces"], [107, "interfaces"], [108, "interfaces"], [109, "interfaces"], [110, "interfaces"], [111, "interfaces"], [112, "interfaces"], [113, "interfaces"], [114, "interfaces"], [115, "interfaces"], [116, "interfaces"], [117, "interfaces"], [118, "interfaces"], [119, "interfaces"], [120, "interfaces"], [121, "interfaces"], [122, "interfaces"], [123, "interfaces"], [124, "interfaces"], [125, "interfaces"], [126, "interfaces"], [127, "interfaces"], [128, "interfaces"], [129, "interfaces"], [130, "interfaces"]], "Modules": [[21, "modules"], [22, "modules"], [30, "modules"], [38, "modules"], [47, "modules"], [54, "modules"], [63, "modules"], [68, "modules"], [70, "modules"], [74, "modules"], [81, "modules"], [88, "modules"], [92, "modules"], [96, "modules"], [101, "modules"], [103, "modules"], [115, "modules"], [123, "modules"], [128, "modules"]], "smac.acquisition.function": [[22, "module-smac.acquisition.function"]], "smac.acquisition.function.abstract_acquisition_function": [[23, "module-smac.acquisition.function.abstract_acquisition_function"]], "Classes": [[23, "classes"], [24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [31, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [39, "classes"], [40, "classes"], [41, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [61, "classes"], [62, "classes"], [64, "classes"], [66, "classes"], [69, "classes"], [71, "classes"], [72, "classes"], [75, "classes"], [76, "classes"], [77, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [82, "classes"], [83, "classes"], [84, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [97, "classes"], [98, "classes"], [99, "classes"], [100, "classes"], [102, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [110, "classes"], [111, "classes"], [112, "classes"], [113, "classes"], [114, "classes"], [116, "classes"], [117, "classes"], [118, "classes"], [120, "classes"], [121, "classes"], [122, "classes"]], "smac.acquisition.function.confidence_bound": [[24, "module-smac.acquisition.function.confidence_bound"]], "smac.acquisition.function.expected_improvement": [[25, "module-smac.acquisition.function.expected_improvement"]], "smac.acquisition.function.integrated_acquisition_function": [[26, "module-smac.acquisition.function.integrated_acquisition_function"]], "smac.acquisition.function.prior_acqusition_function": [[27, "module-smac.acquisition.function.prior_acqusition_function"]], "smac.acquisition.function.probability_improvement": [[28, "module-smac.acquisition.function.probability_improvement"]], "smac.acquisition.function.thompson": [[29, "module-smac.acquisition.function.thompson"]], "smac.acquisition.maximizer": [[30, "module-smac.acquisition.maximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[31, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "smac.acquisition.maximizer.differential_evolution": [[32, "module-smac.acquisition.maximizer.differential_evolution"]], "smac.acquisition.maximizer.helpers": [[33, "module-smac.acquisition.maximizer.helpers"]], "smac.acquisition.maximizer.local_and_random_search": [[34, "module-smac.acquisition.maximizer.local_and_random_search"]], "smac.acquisition.maximizer.local_search": [[35, "module-smac.acquisition.maximizer.local_search"]], "smac.acquisition.maximizer.random_search": [[36, "module-smac.acquisition.maximizer.random_search"]], "smac.callback": [[37, "module-smac.callback"]], "smac.facade": [[38, "module-smac.facade"]], "smac.facade.abstract_facade": [[39, "module-smac.facade.abstract_facade"]], "smac.facade.algorithm_configuration_facade": [[40, "module-smac.facade.algorithm_configuration_facade"]], "smac.facade.blackbox_facade": [[41, "module-smac.facade.blackbox_facade"]], "smac.facade.boing_facade": [[42, "module-smac.facade.boing_facade"]], "smac.facade.hyperband_facade": [[43, "module-smac.facade.hyperband_facade"]], "smac.facade.hyperparameter_optimization_facade": [[44, "module-smac.facade.hyperparameter_optimization_facade"]], "smac.facade.multi_fidelity_facade": [[45, "module-smac.facade.multi_fidelity_facade"]], "smac.facade.random_facade": [[46, "module-smac.facade.random_facade"]], "smac.initial_design": [[47, "module-smac.initial_design"]], "smac.initial_design.abstract_initial_design": [[48, "module-smac.initial_design.abstract_initial_design"]], "smac.initial_design.default_design": [[49, "module-smac.initial_design.default_design"]], "smac.initial_design.factorial_design": [[50, "module-smac.initial_design.factorial_design"]], "smac.initial_design.latin_hypercube_design": [[51, "module-smac.initial_design.latin_hypercube_design"]], "smac.initial_design.random_design": [[52, "module-smac.initial_design.random_design"]], "smac.initial_design.sobol_design": [[53, "module-smac.initial_design.sobol_design"]], "smac.intensifier": [[54, "module-smac.intensifier"]], "smac.intensifier.abstract_intensifier": [[55, "module-smac.intensifier.abstract_intensifier"]], "smac.intensifier.abstract_parallel_intensifier": [[56, "module-smac.intensifier.abstract_parallel_intensifier"]], "smac.intensifier.hyperband": [[57, "module-smac.intensifier.hyperband"]], "smac.intensifier.hyperband_worker": [[58, "module-smac.intensifier.hyperband_worker"]], "smac.intensifier.intensifier": [[59, "module-smac.intensifier.intensifier"]], "smac.intensifier.stages": [[60, "module-smac.intensifier.stages"]], "smac.intensifier.successive_halving": [[61, "module-smac.intensifier.successive_halving"]], "smac.intensifier.successive_halving_worker": [[62, "module-smac.intensifier.successive_halving_worker"]], "smac.main": [[63, "module-smac.main"]], "smac.main.base_smbo": [[64, "module-smac.main.base_smbo"]], "smac.main.boing": [[65, "module-smac.main.boing"]], "smac.main.smbo": [[66, "module-smac.main.smbo"]], "smac.main.turbo": [[67, "module-smac.main.turbo"]], "smac.model": [[68, "module-smac.model"]], "smac.model.abstract_model": [[69, "module-smac.model.abstract_model"]], "smac.model.gaussian_process": [[70, "module-smac.model.gaussian_process"]], "smac.model.gaussian_process.abstract_gaussian_process": [[71, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "smac.model.gaussian_process.gaussian_process": [[72, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[73, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "smac.model.gaussian_process.kernels": [[74, "module-smac.model.gaussian_process.kernels"]], "smac.model.gaussian_process.kernels.base_kernels": [[75, "module-smac.model.gaussian_process.kernels.base_kernels"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[76, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[77, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[78, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[79, "module-smac.model.gaussian_process.kernels.white_kernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[80, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "smac.model.gaussian_process.priors": [[81, "module-smac.model.gaussian_process.priors"]], "smac.model.gaussian_process.priors.abstract_prior": [[82, "module-smac.model.gaussian_process.priors.abstract_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[83, "module-smac.model.gaussian_process.priors.gamma_prior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[84, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[85, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[86, "module-smac.model.gaussian_process.priors.tophat_prior"]], "smac.model.multi_objective_model": [[87, "module-smac.model.multi_objective_model"]], "smac.model.random_forest": [[88, "module-smac.model.random_forest"]], "smac.model.random_forest.abstract_random_forest": [[89, "module-smac.model.random_forest.abstract_random_forest"]], "smac.model.random_forest.random_forest": [[90, "module-smac.model.random_forest.random_forest"]], "smac.model.random_model": [[91, "module-smac.model.random_model"]], "smac.multi_objective": [[92, "module-smac.multi_objective"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[93, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "smac.multi_objective.aggregation_strategy": [[94, "module-smac.multi_objective.aggregation_strategy"]], "smac.multi_objective.parego": [[95, "module-smac.multi_objective.parego"]], "smac.random_design": [[96, "module-smac.random_design"]], "smac.random_design.abstract_random_design": [[97, "module-smac.random_design.abstract_random_design"]], "smac.random_design.annealing_design": [[98, "module-smac.random_design.annealing_design"]], "smac.random_design.modulus_design": [[99, "module-smac.random_design.modulus_design"]], "smac.random_design.probability_design": [[100, "module-smac.random_design.probability_design"]], "smac.runhistory": [[101, "module-smac.runhistory"]], "smac.runhistory.dataclasses": [[102, "module-smac.runhistory.dataclasses"]], "smac.runhistory.encoder": [[103, "module-smac.runhistory.encoder"]], "smac.runhistory.encoder.abstract_encoder": [[104, "module-smac.runhistory.encoder.abstract_encoder"]], "smac.runhistory.encoder.boing_encoder": [[105, "module-smac.runhistory.encoder.boing_encoder"]], "smac.runhistory.encoder.eips_encoder": [[106, "module-smac.runhistory.encoder.eips_encoder"]], "smac.runhistory.encoder.encoder": [[107, "module-smac.runhistory.encoder.encoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[108, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "smac.runhistory.encoder.log_encoder": [[109, "module-smac.runhistory.encoder.log_encoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[110, "module-smac.runhistory.encoder.log_scaled_encoder"]], "smac.runhistory.encoder.scaled_encoder": [[111, "module-smac.runhistory.encoder.scaled_encoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[112, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "smac.runhistory.enumerations": [[113, "module-smac.runhistory.enumerations"]], "smac.runhistory.runhistory": [[114, "module-smac.runhistory.runhistory"]], "smac.runner": [[115, "module-smac.runner"]], "smac.runner.abstract_runner": [[116, "module-smac.runner.abstract_runner"]], "smac.runner.abstract_serial_runner": [[117, "module-smac.runner.abstract_serial_runner"]], "smac.runner.dask_runner": [[118, "module-smac.runner.dask_runner"]], "smac.runner.exceptions": [[119, "module-smac.runner.exceptions"]], "Exceptions": [[119, "exceptions"]], "smac.runner.target_function_runner": [[120, "module-smac.runner.target_function_runner"]], "smac.runner.target_function_script_runner": [[121, "module-smac.runner.target_function_script_runner"]], "smac.scenario": [[122, "module-smac.scenario"]], "smac.utils": [[123, "module-smac.utils"]], "smac.utils.configspace": [[124, "module-smac.utils.configspace"]], "Functions": [[124, "functions"], [125, "functions"], [126, "functions"], [127, "functions"]], "smac.utils.data_structures": [[125, "module-smac.utils.data_structures"]], "smac.utils.logging": [[126, "module-smac.utils.logging"]], "smac.utils.multi_objective": [[127, "module-smac.utils.multi_objective"]], "smac.utils.subspaces": [[128, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[129, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[130, "module-smac.utils.subspaces.turbo_subspace"]], "Synthetic Function": [[131, "synthetic-function"]], "Support Vector Machine with Cross-Validation": [[132, "support-vector-machine-with-cross-validation"]], "Ask-and-Tell": [[133, "ask-and-tell"]], "Custom Callback": [[134, "custom-callback"]], "User Priors over the Optimum": [[135, "user-priors-over-the-optimum"]], "Basics": [[136, "basics"], [149, "basics"]], "Computation times": [[137, "computation-times"], [141, "computation-times"], [145, "computation-times"], [148, "computation-times"]], "Multi-Layer Perceptron Using Multiple Epochs": [[138, "multi-layer-perceptron-using-multiple-epochs"]], "Stochastic Gradient Descent On Multiple Datasets": [[139, "stochastic-gradient-descent-on-multiple-datasets"]], "Multi-Fidelity and Multi-Instances": [[140, "multi-fidelity-and-multi-instances"], [149, "multi-fidelity-and-multi-instances"]], "2D Schaffer Function with Objective Weights": [[142, "d-schaffer-function-with-objective-weights"]], "ParEGO": [[143, "parego"]], "Multi-Objective": [[144, "multi-objective"], [149, "multi-objective"]], "Call Target Function From Script": [[146, "call-target-function-from-script"]], "Examples": [[149, "examples"]], "Home": [[150, "home"]], "Contact": [[150, "contact"]]}, "indexentries": {"bb": [[6, "term-BB"]], "bo": [[6, "term-BO"]], "bohb": [[6, "term-BOHB"]], "bayesian optimization": [[6, "term-Bayesian-Optimization"]], "black-box": [[6, "term-Black-Box"]], "budget": [[6, "term-Budget"]], "cli": [[6, "term-CLI"]], "cv": [[6, "term-CV"]], "gp": [[6, "term-GP"]], "gp-mcmc": [[6, "term-GP-MCMC"]], "hb": [[6, "term-HB"]], "hp": [[6, "term-HP"]], "hyperband": [[6, "term-Hyperband"]], "incumbent": [[6, "term-Incumbent"]], "instances": [[6, "term-Instances"]], "intensification": [[6, "term-Intensification"]], "mf": [[6, "term-MF"]], "multi-fidelity": [[6, "term-Multi-Fidelity"]], "multi-objective": [[6, "term-Multi-Objective"]], "objective": [[6, "term-Objective"]], "rf": [[6, "term-RF"]], "roar": [[6, "term-ROAR"]], "random online adaptive racing": [[6, "term-Random-Online-Adaptive-Racing"]], "smac": [[6, "term-SMAC"]], "target function": [[6, "term-Target-Function"]], "trial": [[6, "term-Trial"]], "module": [[21, "module-smac.acquisition"], [22, "module-smac.acquisition.function"], [23, "module-smac.acquisition.function.abstract_acquisition_function"], [24, "module-smac.acquisition.function.confidence_bound"], [25, "module-smac.acquisition.function.expected_improvement"], [26, "module-smac.acquisition.function.integrated_acquisition_function"], [27, "module-smac.acquisition.function.prior_acqusition_function"], [28, "module-smac.acquisition.function.probability_improvement"], [29, "module-smac.acquisition.function.thompson"], [30, "module-smac.acquisition.maximizer"], [31, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"], [32, "module-smac.acquisition.maximizer.differential_evolution"], [33, "module-smac.acquisition.maximizer.helpers"], [34, "module-smac.acquisition.maximizer.local_and_random_search"], [35, "module-smac.acquisition.maximizer.local_search"], [36, "module-smac.acquisition.maximizer.random_search"], [37, "module-smac.callback"], [38, "module-smac.facade"], [39, "module-smac.facade.abstract_facade"], [40, "module-smac.facade.algorithm_configuration_facade"], [41, "module-smac.facade.blackbox_facade"], [42, "module-smac.facade.boing_facade"], [43, "module-smac.facade.hyperband_facade"], [44, "module-smac.facade.hyperparameter_optimization_facade"], [45, "module-smac.facade.multi_fidelity_facade"], [46, "module-smac.facade.random_facade"], [47, "module-smac.initial_design"], [48, "module-smac.initial_design.abstract_initial_design"], [49, "module-smac.initial_design.default_design"], [50, "module-smac.initial_design.factorial_design"], [51, "module-smac.initial_design.latin_hypercube_design"], [52, "module-smac.initial_design.random_design"], [53, "module-smac.initial_design.sobol_design"], [54, "module-smac.intensifier"], [55, "module-smac.intensifier.abstract_intensifier"], [56, "module-smac.intensifier.abstract_parallel_intensifier"], [57, "module-smac.intensifier.hyperband"], [58, "module-smac.intensifier.hyperband_worker"], [59, "module-smac.intensifier.intensifier"], [60, "module-smac.intensifier.stages"], [61, "module-smac.intensifier.successive_halving"], [62, "module-smac.intensifier.successive_halving_worker"], [63, "module-smac.main"], [64, "module-smac.main.base_smbo"], [65, "module-smac.main.boing"], [66, "module-smac.main.smbo"], [67, "module-smac.main.turbo"], [68, "module-smac.model"], [69, "module-smac.model.abstract_model"], [70, "module-smac.model.gaussian_process"], [71, "module-smac.model.gaussian_process.abstract_gaussian_process"], [72, "module-smac.model.gaussian_process.gaussian_process"], [73, "module-smac.model.gaussian_process.gpytorch_gaussian_process"], [74, "module-smac.model.gaussian_process.kernels"], [75, "module-smac.model.gaussian_process.kernels.base_kernels"], [76, "module-smac.model.gaussian_process.kernels.hamming_kernel"], [77, "module-smac.model.gaussian_process.kernels.matern_kernel"], [78, "module-smac.model.gaussian_process.kernels.rbf_kernel"], [79, "module-smac.model.gaussian_process.kernels.white_kernel"], [80, "module-smac.model.gaussian_process.mcmc_gaussian_process"], [81, "module-smac.model.gaussian_process.priors"], [82, "module-smac.model.gaussian_process.priors.abstract_prior"], [83, "module-smac.model.gaussian_process.priors.gamma_prior"], [84, "module-smac.model.gaussian_process.priors.horseshoe_prior"], [85, "module-smac.model.gaussian_process.priors.log_normal_prior"], [86, "module-smac.model.gaussian_process.priors.tophat_prior"], [87, "module-smac.model.multi_objective_model"], [88, "module-smac.model.random_forest"], [89, "module-smac.model.random_forest.abstract_random_forest"], [90, "module-smac.model.random_forest.random_forest"], [91, "module-smac.model.random_model"], [92, "module-smac.multi_objective"], [93, "module-smac.multi_objective.abstract_multi_objective_algorithm"], [94, "module-smac.multi_objective.aggregation_strategy"], [95, "module-smac.multi_objective.parego"], [96, "module-smac.random_design"], [97, "module-smac.random_design.abstract_random_design"], [98, "module-smac.random_design.annealing_design"], [99, "module-smac.random_design.modulus_design"], [100, "module-smac.random_design.probability_design"], [101, "module-smac.runhistory"], [102, "module-smac.runhistory.dataclasses"], [103, "module-smac.runhistory.encoder"], [104, "module-smac.runhistory.encoder.abstract_encoder"], [105, "module-smac.runhistory.encoder.boing_encoder"], [106, "module-smac.runhistory.encoder.eips_encoder"], [107, "module-smac.runhistory.encoder.encoder"], [108, "module-smac.runhistory.encoder.inverse_scaled_encoder"], [109, "module-smac.runhistory.encoder.log_encoder"], [110, "module-smac.runhistory.encoder.log_scaled_encoder"], [111, "module-smac.runhistory.encoder.scaled_encoder"], [112, "module-smac.runhistory.encoder.sqrt_scaled_encoder"], [113, "module-smac.runhistory.enumerations"], [114, "module-smac.runhistory.runhistory"], [115, "module-smac.runner"], [116, "module-smac.runner.abstract_runner"], [117, "module-smac.runner.abstract_serial_runner"], [118, "module-smac.runner.dask_runner"], [119, "module-smac.runner.exceptions"], [120, "module-smac.runner.target_function_runner"], [121, "module-smac.runner.target_function_script_runner"], [122, "module-smac.scenario"], [123, "module-smac.utils"], [124, "module-smac.utils.configspace"], [125, "module-smac.utils.data_structures"], [126, "module-smac.utils.logging"], [127, "module-smac.utils.multi_objective"], [128, "module-smac.utils.subspaces"], [129, "module-smac.utils.subspaces.boing_subspace"], [130, "module-smac.utils.subspaces.turbo_subspace"]], "smac.acquisition": [[21, "module-smac.acquisition"]], "abstractacquisitionfunction (class in smac.acquisition.function)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction"]], "ei (class in smac.acquisition.function)": [[22, "smac.acquisition.function.EI"]], "eips (class in smac.acquisition.function)": [[22, "smac.acquisition.function.EIPS"]], "integratedacquisitionfunction (class in smac.acquisition.function)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction"]], "lcb (class in smac.acquisition.function)": [[22, "smac.acquisition.function.LCB"]], "pi (class in smac.acquisition.function)": [[22, "smac.acquisition.function.PI"]], "prioracquisitionfunction (class in smac.acquisition.function)": [[22, "smac.acquisition.function.PriorAcquisitionFunction"]], "ts (class in smac.acquisition.function)": [[22, "smac.acquisition.function.TS"]], "__call__() (smac.acquisition.function.abstractacquisitionfunction method)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.meta"]], "meta (smac.acquisition.function.ei property)": [[22, "smac.acquisition.function.EI.meta"]], "meta (smac.acquisition.function.integratedacquisitionfunction property)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction.meta"]], "meta (smac.acquisition.function.lcb property)": [[22, "smac.acquisition.function.LCB.meta"]], "meta (smac.acquisition.function.pi property)": [[22, "smac.acquisition.function.PI.meta"]], "meta (smac.acquisition.function.prioracquisitionfunction property)": [[22, "smac.acquisition.function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.model"]], "model (smac.acquisition.function.prioracquisitionfunction property)": [[22, "smac.acquisition.function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.abstractacquisitionfunction property)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.name"]], "name (smac.acquisition.function.ei property)": [[22, "smac.acquisition.function.EI.name"]], "name (smac.acquisition.function.eips property)": [[22, "smac.acquisition.function.EIPS.name"]], "name (smac.acquisition.function.integratedacquisitionfunction property)": [[22, "smac.acquisition.function.IntegratedAcquisitionFunction.name"]], "name (smac.acquisition.function.lcb property)": [[22, "smac.acquisition.function.LCB.name"]], "name (smac.acquisition.function.pi property)": [[22, "smac.acquisition.function.PI.name"]], "name (smac.acquisition.function.prioracquisitionfunction property)": [[22, "smac.acquisition.function.PriorAcquisitionFunction.name"]], "name (smac.acquisition.function.ts property)": [[22, "smac.acquisition.function.TS.name"]], "smac.acquisition.function": [[22, "module-smac.acquisition.function"]], "update() (smac.acquisition.function.abstractacquisitionfunction method)": [[22, "smac.acquisition.function.AbstractAcquisitionFunction.update"]], "abstractacquisitionfunction (class in smac.acquisition.function.abstract_acquisition_function)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction"]], "__call__() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.model"]], "name (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.name"]], "smac.acquisition.function.abstract_acquisition_function": [[23, "module-smac.acquisition.function.abstract_acquisition_function"]], "update() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[23, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.update"]], "lcb (class in smac.acquisition.function.confidence_bound)": [[24, "smac.acquisition.function.confidence_bound.LCB"]], "meta (smac.acquisition.function.confidence_bound.lcb property)": [[24, "smac.acquisition.function.confidence_bound.LCB.meta"]], "name (smac.acquisition.function.confidence_bound.lcb property)": [[24, "smac.acquisition.function.confidence_bound.LCB.name"]], "smac.acquisition.function.confidence_bound": [[24, "module-smac.acquisition.function.confidence_bound"]], "ei (class in smac.acquisition.function.expected_improvement)": [[25, "smac.acquisition.function.expected_improvement.EI"]], "eips (class in smac.acquisition.function.expected_improvement)": [[25, "smac.acquisition.function.expected_improvement.EIPS"]], "meta (smac.acquisition.function.expected_improvement.ei property)": [[25, "smac.acquisition.function.expected_improvement.EI.meta"]], "name (smac.acquisition.function.expected_improvement.ei property)": [[25, "smac.acquisition.function.expected_improvement.EI.name"]], "name (smac.acquisition.function.expected_improvement.eips property)": [[25, "smac.acquisition.function.expected_improvement.EIPS.name"]], "smac.acquisition.function.expected_improvement": [[25, "module-smac.acquisition.function.expected_improvement"]], "integratedacquisitionfunction (class in smac.acquisition.function.integrated_acquisition_function)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction"]], "meta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.meta"]], "name (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[26, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.name"]], "smac.acquisition.function.integrated_acquisition_function": [[26, "module-smac.acquisition.function.integrated_acquisition_function"]], "prioracquisitionfunction (class in smac.acquisition.function.prior_acqusition_function)": [[27, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction"]], "meta (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[27, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[27, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[27, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.name"]], "smac.acquisition.function.prior_acqusition_function": [[27, "module-smac.acquisition.function.prior_acqusition_function"]], "pi (class in smac.acquisition.function.probability_improvement)": [[28, "smac.acquisition.function.probability_improvement.PI"]], "meta (smac.acquisition.function.probability_improvement.pi property)": [[28, "smac.acquisition.function.probability_improvement.PI.meta"]], "name (smac.acquisition.function.probability_improvement.pi property)": [[28, "smac.acquisition.function.probability_improvement.PI.name"]], "smac.acquisition.function.probability_improvement": [[28, "module-smac.acquisition.function.probability_improvement"]], "ts (class in smac.acquisition.function.thompson)": [[29, "smac.acquisition.function.thompson.TS"]], "name (smac.acquisition.function.thompson.ts property)": [[29, "smac.acquisition.function.thompson.TS.name"]], "smac.acquisition.function.thompson": [[29, "module-smac.acquisition.function.thompson"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer"]], "differentialevolution (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.DifferentialEvolution"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.LocalAndSortedRandomSearch"]], "localsearch (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.LocalSearch"]], "randomsearch (class in smac.acquisition.maximizer)": [[30, "smac.acquisition.maximizer.RandomSearch"]], "acquisition_function (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[30, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "acquisition_function (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[30, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstractacquisitionmaximizer method)": [[30, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[30, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.meta"]], "meta (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[30, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.meta"]], "meta (smac.acquisition.maximizer.localsearch property)": [[30, "smac.acquisition.maximizer.LocalSearch.meta"]], "smac.acquisition.maximizer": [[30, "module-smac.acquisition.maximizer"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer.abstract_acqusition_maximizer)": [[31, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer"]], "acquisition_function (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[31, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer method)": [[31, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[31, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[31, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "differentialevolution (class in smac.acquisition.maximizer.differential_evolution)": [[32, "smac.acquisition.maximizer.differential_evolution.DifferentialEvolution"]], "smac.acquisition.maximizer.differential_evolution": [[32, "module-smac.acquisition.maximizer.differential_evolution"]], "challengerlist (class in smac.acquisition.maximizer.helpers)": [[33, "smac.acquisition.maximizer.helpers.ChallengerList"]], "smac.acquisition.maximizer.helpers": [[33, "module-smac.acquisition.maximizer.helpers"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[34, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[34, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch"]], "acquisition_function (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[34, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.acquisition_function"]], "meta (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[34, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.meta"]], "smac.acquisition.maximizer.local_and_random_search": [[34, "module-smac.acquisition.maximizer.local_and_random_search"]], "localsearch (class in smac.acquisition.maximizer.local_search)": [[35, "smac.acquisition.maximizer.local_search.LocalSearch"]], "meta (smac.acquisition.maximizer.local_search.localsearch property)": [[35, "smac.acquisition.maximizer.local_search.LocalSearch.meta"]], "smac.acquisition.maximizer.local_search": [[35, "module-smac.acquisition.maximizer.local_search"]], "randomsearch (class in smac.acquisition.maximizer.random_search)": [[36, "smac.acquisition.maximizer.random_search.RandomSearch"]], "smac.acquisition.maximizer.random_search": [[36, "module-smac.acquisition.maximizer.random_search"]], "callback (class in smac.callback)": [[37, "smac.callback.Callback"]], "on_ask_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_start"]], "on_tell_end() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback method)": [[37, "smac.callback.Callback.on_tell_start"]], "smac.callback": [[37, "module-smac.callback"]], "abstractfacade (class in smac.facade)": [[38, "smac.facade.AbstractFacade"]], "algorithmconfigurationfacade (class in smac.facade)": [[38, "smac.facade.AlgorithmConfigurationFacade"]], "blackboxfacade (class in smac.facade)": [[38, "smac.facade.BlackBoxFacade"]], "hyperbandfacade (class in smac.facade)": [[38, "smac.facade.HyperbandFacade"]], "hyperparameteroptimizationfacade (class in smac.facade)": [[38, "smac.facade.HyperparameterOptimizationFacade"]], "multifidelityfacade (class in smac.facade)": [[38, "smac.facade.MultiFidelityFacade"]], "randomfacade (class in smac.facade)": [[38, "smac.facade.RandomFacade"]], "ask() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_initial_design"]], "get_initial_design() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_initial_design() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_initial_design"]], "get_initial_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_initial_design() (smac.facade.multifidelityfacade static method)": [[38, "smac.facade.MultiFidelityFacade.get_initial_design"]], "get_initial_design() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_intensifier"]], "get_intensifier() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_intensifier() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperbandfacade static method)": [[38, "smac.facade.HyperbandFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_intensifier() (smac.facade.multifidelityfacade static method)": [[38, "smac.facade.MultiFidelityFacade.get_intensifier"]], "get_intensifier() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_intensifier"]], "get_kernel() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_model"]], "get_model() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_model"]], "get_model() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_model"]], "get_model() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_model"]], "get_model() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_multi_objective_algorithm"]], "get_next_configurations() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.get_next_configurations"]], "get_random_design() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_random_design"]], "get_random_design() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_random_design"]], "get_random_design() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_random_design"]], "get_random_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_random_design"]], "get_random_design() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstractfacade static method)": [[38, "smac.facade.AbstractFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.algorithmconfigurationfacade static method)": [[38, "smac.facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.blackboxfacade static method)": [[38, "smac.facade.BlackBoxFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.hyperparameteroptimizationfacade static method)": [[38, "smac.facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.randomfacade static method)": [[38, "smac.facade.RandomFacade.get_runhistory_encoder"]], "get_target_function_budgets() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.get_target_function_budgets"]], "get_target_function_instances() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.get_target_function_instances"]], "get_target_function_seeds() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.get_target_function_seeds"]], "incumbent (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.incumbent"]], "meta (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.optimize"]], "runhistory (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.scenario"]], "smac.facade": [[38, "module-smac.facade"]], "stats (smac.facade.abstractfacade property)": [[38, "smac.facade.AbstractFacade.stats"]], "tell() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.tell"]], "validate() (smac.facade.abstractfacade method)": [[38, "smac.facade.AbstractFacade.validate"]], "abstractfacade (class in smac.facade.abstract_facade)": [[39, "smac.facade.abstract_facade.AbstractFacade"]], "ask() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_intensifier"]], "get_model() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_multi_objective_algorithm"]], "get_next_configurations() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_next_configurations"]], "get_random_design() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstract_facade.abstractfacade static method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_runhistory_encoder"]], "get_target_function_budgets() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_target_function_budgets"]], "get_target_function_instances() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_target_function_instances"]], "get_target_function_seeds() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.get_target_function_seeds"]], "incumbent (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.incumbent"]], "meta (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.optimize"]], "runhistory (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.scenario"]], "smac.facade.abstract_facade": [[39, "module-smac.facade.abstract_facade"]], "stats (smac.facade.abstract_facade.abstractfacade property)": [[39, "smac.facade.abstract_facade.AbstractFacade.stats"]], "tell() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.tell"]], "validate() (smac.facade.abstract_facade.abstractfacade method)": [[39, "smac.facade.abstract_facade.AbstractFacade.validate"]], "algorithmconfigurationfacade (class in smac.facade.algorithm_configuration_facade)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade"]], "get_acquisition_function() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_intensifier() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_model() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[40, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "smac.facade.algorithm_configuration_facade": [[40, "module-smac.facade.algorithm_configuration_facade"]], "blackboxfacade (class in smac.facade.blackbox_facade)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade"]], "get_acquisition_function() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_initial_design"]], "get_intensifier() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_intensifier"]], "get_kernel() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.blackbox_facade.blackboxfacade static method)": [[41, "smac.facade.blackbox_facade.BlackBoxFacade.get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[41, "module-smac.facade.blackbox_facade"]], "smac.facade.boing_facade": [[42, "module-smac.facade.boing_facade"]], "hyperbandfacade (class in smac.facade.hyperband_facade)": [[43, "smac.facade.hyperband_facade.HyperbandFacade"]], "get_intensifier() (smac.facade.hyperband_facade.hyperbandfacade static method)": [[43, "smac.facade.hyperband_facade.HyperbandFacade.get_intensifier"]], "smac.facade.hyperband_facade": [[43, "module-smac.facade.hyperband_facade"]], "hyperparameteroptimizationfacade (class in smac.facade.hyperparameter_optimization_facade)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade"]], "get_acquisition_function() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_intensifier() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_model() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[44, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "smac.facade.hyperparameter_optimization_facade": [[44, "module-smac.facade.hyperparameter_optimization_facade"]], "multifidelityfacade (class in smac.facade.multi_fidelity_facade)": [[45, "smac.facade.multi_fidelity_facade.MultiFidelityFacade"]], "get_initial_design() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[45, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_initial_design"]], "get_intensifier() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[45, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_intensifier"]], "smac.facade.multi_fidelity_facade": [[45, "module-smac.facade.multi_fidelity_facade"]], "randomfacade (class in smac.facade.random_facade)": [[46, "smac.facade.random_facade.RandomFacade"]], "get_acquisition_function() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_intensifier"]], "get_model() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.random_facade.randomfacade static method)": [[46, "smac.facade.random_facade.RandomFacade.get_runhistory_encoder"]], "smac.facade.random_facade": [[46, "module-smac.facade.random_facade"]], "abstractinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.AbstractInitialDesign"]], "defaultinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.DefaultInitialDesign"]], "factorialinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.FactorialInitialDesign"]], "latinhypercubeinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.LatinHypercubeInitialDesign"]], "randominitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.RandomInitialDesign"]], "sobolinitialdesign (class in smac.initial_design)": [[47, "smac.initial_design.SobolInitialDesign"]], "meta (smac.initial_design.abstractinitialdesign property)": [[47, "smac.initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstractinitialdesign method)": [[47, "smac.initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design": [[47, "module-smac.initial_design"]], "abstractinitialdesign (class in smac.initial_design.abstract_initial_design)": [[48, "smac.initial_design.abstract_initial_design.AbstractInitialDesign"]], "meta (smac.initial_design.abstract_initial_design.abstractinitialdesign property)": [[48, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstract_initial_design.abstractinitialdesign method)": [[48, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design.abstract_initial_design": [[48, "module-smac.initial_design.abstract_initial_design"]], "defaultinitialdesign (class in smac.initial_design.default_design)": [[49, "smac.initial_design.default_design.DefaultInitialDesign"]], "smac.initial_design.default_design": [[49, "module-smac.initial_design.default_design"]], "factorialinitialdesign (class in smac.initial_design.factorial_design)": [[50, "smac.initial_design.factorial_design.FactorialInitialDesign"]], "smac.initial_design.factorial_design": [[50, "module-smac.initial_design.factorial_design"]], "latinhypercubeinitialdesign (class in smac.initial_design.latin_hypercube_design)": [[51, "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[51, "module-smac.initial_design.latin_hypercube_design"]], "randominitialdesign (class in smac.initial_design.random_design)": [[52, "smac.initial_design.random_design.RandomInitialDesign"]], "smac.initial_design.random_design": [[52, "module-smac.initial_design.random_design"]], "sobolinitialdesign (class in smac.initial_design.sobol_design)": [[53, "smac.initial_design.sobol_design.SobolInitialDesign"]], "smac.initial_design.sobol_design": [[53, "module-smac.initial_design.sobol_design"]], "abstractintensifier (class in smac.intensifier)": [[54, "smac.intensifier.AbstractIntensifier"]], "abstractparallelintensifier (class in smac.intensifier)": [[54, "smac.intensifier.AbstractParallelIntensifier"]], "hyperband (class in smac.intensifier)": [[54, "smac.intensifier.Hyperband"]], "intensifier (class in smac.intensifier)": [[54, "smac.intensifier.Intensifier"]], "successivehalving (class in smac.intensifier)": [[54, "smac.intensifier.SuccessiveHalving"]], "calculate_budgets() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.calculate_budgets"]], "get_next_challenger() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.get_next_challenger"]], "get_next_trial() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_next_trial"]], "get_next_trial() (smac.intensifier.abstractparallelintensifier method)": [[54, "smac.intensifier.AbstractParallelIntensifier.get_next_trial"]], "get_next_trial() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_target_function_budgets"]], "get_target_function_budgets() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.get_target_function_budgets"]], "get_target_function_budgets() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_target_function_instances"]], "get_target_function_instances() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.get_target_function_instances"]], "get_target_function_instances() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.get_target_function_seeds"]], "get_target_function_seeds() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.get_target_function_seeds"]], "get_target_function_seeds() (smac.intensifier.successivehalving method)": [[54, "smac.intensifier.SuccessiveHalving.get_target_function_seeds"]], "intensify_percentage (smac.intensifier.intensifier property)": [[54, "smac.intensifier.Intensifier.intensify_percentage"]], "iteration_done (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.iteration_done"]], "meta (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.meta"]], "meta (smac.intensifier.intensifier property)": [[54, "smac.intensifier.Intensifier.meta"]], "meta (smac.intensifier.successivehalving property)": [[54, "smac.intensifier.SuccessiveHalving.meta"]], "num_trials (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.num_trials"]], "process_results() (smac.intensifier.abstractintensifier method)": [[54, "smac.intensifier.AbstractIntensifier.process_results"]], "process_results() (smac.intensifier.abstractparallelintensifier method)": [[54, "smac.intensifier.AbstractParallelIntensifier.process_results"]], "process_results() (smac.intensifier.intensifier method)": [[54, "smac.intensifier.Intensifier.process_results"]], "repeat_configs (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.repeat_configs"]], "smac.intensifier": [[54, "module-smac.intensifier"]], "uses_budgets (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.uses_budgets"]], "uses_budgets (smac.intensifier.intensifier property)": [[54, "smac.intensifier.Intensifier.uses_budgets"]], "uses_budgets (smac.intensifier.successivehalving property)": [[54, "smac.intensifier.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.uses_instances"]], "uses_instances (smac.intensifier.intensifier property)": [[54, "smac.intensifier.Intensifier.uses_instances"]], "uses_instances (smac.intensifier.successivehalving property)": [[54, "smac.intensifier.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.abstractintensifier property)": [[54, "smac.intensifier.AbstractIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.abstractparallelintensifier property)": [[54, "smac.intensifier.AbstractParallelIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.intensifier property)": [[54, "smac.intensifier.Intensifier.uses_seeds"]], "abstractintensifier (class in smac.intensifier.abstract_intensifier)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier"]], "get_next_trial() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_target_function_seeds"]], "iteration_done (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.iteration_done"]], "meta (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.meta"]], "num_trials (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.num_trials"]], "process_results() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.process_results"]], "repeat_configs (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.repeat_configs"]], "smac.intensifier.abstract_intensifier": [[55, "module-smac.intensifier.abstract_intensifier"]], "uses_budgets (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_budgets"]], "uses_instances (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_instances"]], "uses_seeds (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[55, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_seeds"]], "abstractparallelintensifier (class in smac.intensifier.abstract_parallel_intensifier)": [[56, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier"]], "get_next_trial() (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier method)": [[56, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.get_next_trial"]], "process_results() (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier method)": [[56, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.process_results"]], "smac.intensifier.abstract_parallel_intensifier": [[56, "module-smac.intensifier.abstract_parallel_intensifier"]], "uses_seeds (smac.intensifier.abstract_parallel_intensifier.abstractparallelintensifier property)": [[56, "smac.intensifier.abstract_parallel_intensifier.AbstractParallelIntensifier.uses_seeds"]], "hyperband (class in smac.intensifier.hyperband)": [[57, "smac.intensifier.hyperband.Hyperband"]], "smac.intensifier.hyperband": [[57, "module-smac.intensifier.hyperband"]], "hyperbandworker (class in smac.intensifier.hyperband_worker)": [[58, "smac.intensifier.hyperband_worker.HyperbandWorker"]], "get_next_trial() (smac.intensifier.hyperband_worker.hyperbandworker method)": [[58, "smac.intensifier.hyperband_worker.HyperbandWorker.get_next_trial"]], "process_results() (smac.intensifier.hyperband_worker.hyperbandworker method)": [[58, "smac.intensifier.hyperband_worker.HyperbandWorker.process_results"]], "smac.intensifier.hyperband_worker": [[58, "module-smac.intensifier.hyperband_worker"]], "uses_budgets (smac.intensifier.hyperband_worker.hyperbandworker property)": [[58, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_budgets"]], "uses_instances (smac.intensifier.hyperband_worker.hyperbandworker property)": [[58, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_instances"]], "uses_seeds (smac.intensifier.hyperband_worker.hyperbandworker property)": [[58, "smac.intensifier.hyperband_worker.HyperbandWorker.uses_seeds"]], "intensifier (class in smac.intensifier.intensifier)": [[59, "smac.intensifier.intensifier.Intensifier"]], "get_next_challenger() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.get_next_challenger"]], "get_next_trial() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.get_target_function_seeds"]], "intensify_percentage (smac.intensifier.intensifier.intensifier property)": [[59, "smac.intensifier.intensifier.Intensifier.intensify_percentage"]], "meta (smac.intensifier.intensifier.intensifier property)": [[59, "smac.intensifier.intensifier.Intensifier.meta"]], "process_results() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.process_results"]], "smac.intensifier.intensifier": [[59, "module-smac.intensifier.intensifier"]], "uses_budgets (smac.intensifier.intensifier.intensifier property)": [[59, "smac.intensifier.intensifier.Intensifier.uses_budgets"]], "uses_instances (smac.intensifier.intensifier.intensifier property)": [[59, "smac.intensifier.intensifier.Intensifier.uses_instances"]], "uses_seeds (smac.intensifier.intensifier.intensifier property)": [[59, "smac.intensifier.intensifier.Intensifier.uses_seeds"]], "intensifierstage (class in smac.intensifier.stages)": [[60, "smac.intensifier.stages.IntensifierStage"]], "smac.intensifier.stages": [[60, "module-smac.intensifier.stages"]], "successivehalving (class in smac.intensifier.successive_halving)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving"]], "calculate_budgets() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.calculate_budgets"]], "get_target_function_budgets() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.successive_halving.successivehalving method)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.get_target_function_seeds"]], "meta (smac.intensifier.successive_halving.successivehalving property)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.meta"]], "smac.intensifier.successive_halving": [[61, "module-smac.intensifier.successive_halving"]], "uses_budgets (smac.intensifier.successive_halving.successivehalving property)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving.successivehalving property)": [[61, "smac.intensifier.successive_halving.SuccessiveHalving.uses_instances"]], "successivehalvingworker (class in smac.intensifier.successive_halving_worker)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker"]], "get_next_trial() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_next_trial"]], "get_target_function_budgets() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_budgets"]], "get_target_function_instances() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_instances"]], "get_target_function_seeds() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.get_target_function_seeds"]], "process_results() (smac.intensifier.successive_halving_worker.successivehalvingworker method)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.process_results"]], "smac.intensifier.successive_halving_worker": [[62, "module-smac.intensifier.successive_halving_worker"]], "stage (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.stage"]], "uses_budgets (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_instances"]], "uses_seeds (smac.intensifier.successive_halving_worker.successivehalvingworker property)": [[62, "smac.intensifier.successive_halving_worker.SuccessiveHalvingWorker.uses_seeds"]], "basesmbo (class in smac.main)": [[63, "smac.main.BaseSMBO"]], "smbo (class in smac.main)": [[63, "smac.main.SMBO"]], "ask() (smac.main.basesmbo method)": [[63, "smac.main.BaseSMBO.ask"]], "ask() (smac.main.smbo method)": [[63, "smac.main.SMBO.ask"]], "get_next_configurations() (smac.main.basesmbo method)": [[63, "smac.main.BaseSMBO.get_next_configurations"]], "get_next_configurations() (smac.main.smbo method)": [[63, "smac.main.SMBO.get_next_configurations"]], "incumbent (smac.main.basesmbo property)": [[63, "smac.main.BaseSMBO.incumbent"]], "optimize() (smac.main.basesmbo method)": [[63, "smac.main.BaseSMBO.optimize"]], "runhistory (smac.main.basesmbo property)": [[63, "smac.main.BaseSMBO.runhistory"]], "save() (smac.main.basesmbo method)": [[63, "smac.main.BaseSMBO.save"]], "smac.main": [[63, "module-smac.main"]], "stats (smac.main.basesmbo property)": [[63, "smac.main.BaseSMBO.stats"]], "tell() (smac.main.basesmbo method)": [[63, "smac.main.BaseSMBO.tell"]], "tell() (smac.main.smbo method)": [[63, "smac.main.SMBO.tell"]], "update_acquisition_function() (smac.main.basesmbo method)": [[63, "smac.main.BaseSMBO.update_acquisition_function"]], "update_model() (smac.main.basesmbo method)": [[63, "smac.main.BaseSMBO.update_model"]], "validate() (smac.main.basesmbo method)": [[63, "smac.main.BaseSMBO.validate"]], "basesmbo (class in smac.main.base_smbo)": [[64, "smac.main.base_smbo.BaseSMBO"]], "ask() (smac.main.base_smbo.basesmbo method)": [[64, "smac.main.base_smbo.BaseSMBO.ask"]], "get_next_configurations() (smac.main.base_smbo.basesmbo method)": [[64, "smac.main.base_smbo.BaseSMBO.get_next_configurations"]], "incumbent (smac.main.base_smbo.basesmbo property)": [[64, "smac.main.base_smbo.BaseSMBO.incumbent"]], "optimize() (smac.main.base_smbo.basesmbo method)": [[64, "smac.main.base_smbo.BaseSMBO.optimize"]], "runhistory (smac.main.base_smbo.basesmbo property)": [[64, "smac.main.base_smbo.BaseSMBO.runhistory"]], "save() (smac.main.base_smbo.basesmbo method)": [[64, "smac.main.base_smbo.BaseSMBO.save"]], "smac.main.base_smbo": [[64, "module-smac.main.base_smbo"]], "stats (smac.main.base_smbo.basesmbo property)": [[64, "smac.main.base_smbo.BaseSMBO.stats"]], "tell() (smac.main.base_smbo.basesmbo method)": [[64, "smac.main.base_smbo.BaseSMBO.tell"]], "update_acquisition_function() (smac.main.base_smbo.basesmbo method)": [[64, "smac.main.base_smbo.BaseSMBO.update_acquisition_function"]], "update_model() (smac.main.base_smbo.basesmbo method)": [[64, "smac.main.base_smbo.BaseSMBO.update_model"]], "validate() (smac.main.base_smbo.basesmbo method)": [[64, "smac.main.base_smbo.BaseSMBO.validate"]], "smac.main.boing": [[65, "module-smac.main.boing"]], "smbo (class in smac.main.smbo)": [[66, "smac.main.smbo.SMBO"]], "ask() (smac.main.smbo.smbo method)": [[66, "smac.main.smbo.SMBO.ask"]], "get_next_configurations() (smac.main.smbo.smbo method)": [[66, "smac.main.smbo.SMBO.get_next_configurations"]], "smac.main.smbo": [[66, "module-smac.main.smbo"]], "tell() (smac.main.smbo.smbo method)": [[66, "smac.main.smbo.SMBO.tell"]], "smac.main.turbo": [[67, "module-smac.main.turbo"]], "abstractmodel (class in smac.model)": [[68, "smac.model.AbstractModel"]], "multiobjectivemodel (class in smac.model)": [[68, "smac.model.MultiObjectiveModel"]], "randommodel (class in smac.model)": [[68, "smac.model.RandomModel"]], "meta (smac.model.abstractmodel property)": [[68, "smac.model.AbstractModel.meta"]], "models (smac.model.multiobjectivemodel property)": [[68, "smac.model.MultiObjectiveModel.models"]], "predict() (smac.model.abstractmodel method)": [[68, "smac.model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstractmodel method)": [[68, "smac.model.AbstractModel.predict_marginalized"]], "predict_marginalized() (smac.model.multiobjectivemodel method)": [[68, "smac.model.MultiObjectiveModel.predict_marginalized"]], "smac.model": [[68, "module-smac.model"]], "train() (smac.model.abstractmodel method)": [[68, "smac.model.AbstractModel.train"]], "abstractmodel (class in smac.model.abstract_model)": [[69, "smac.model.abstract_model.AbstractModel"]], "meta (smac.model.abstract_model.abstractmodel property)": [[69, "smac.model.abstract_model.AbstractModel.meta"]], "predict() (smac.model.abstract_model.abstractmodel method)": [[69, "smac.model.abstract_model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstract_model.abstractmodel method)": [[69, "smac.model.abstract_model.AbstractModel.predict_marginalized"]], "smac.model.abstract_model": [[69, "module-smac.model.abstract_model"]], "train() (smac.model.abstract_model.abstractmodel method)": [[69, "smac.model.abstract_model.AbstractModel.train"]], "abstractgaussianprocess (class in smac.model.gaussian_process)": [[70, "smac.model.gaussian_process.AbstractGaussianProcess"]], "gaussianprocess (class in smac.model.gaussian_process)": [[70, "smac.model.gaussian_process.GaussianProcess"]], "mcmcgaussianprocess (class in smac.model.gaussian_process)": [[70, "smac.model.gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.abstractgaussianprocess property)": [[70, "smac.model.gaussian_process.AbstractGaussianProcess.meta"]], "meta (smac.model.gaussian_process.gaussianprocess property)": [[70, "smac.model.gaussian_process.GaussianProcess.meta"]], "meta (smac.model.gaussian_process.mcmcgaussianprocess property)": [[70, "smac.model.gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmcgaussianprocess property)": [[70, "smac.model.gaussian_process.MCMCGaussianProcess.models"]], "sample_functions() (smac.model.gaussian_process.gaussianprocess method)": [[70, "smac.model.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process": [[70, "module-smac.model.gaussian_process"]], "abstractgaussianprocess (class in smac.model.gaussian_process.abstract_gaussian_process)": [[71, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess"]], "meta (smac.model.gaussian_process.abstract_gaussian_process.abstractgaussianprocess property)": [[71, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess.meta"]], "smac.model.gaussian_process.abstract_gaussian_process": [[71, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "gaussianprocess (class in smac.model.gaussian_process.gaussian_process)": [[72, "smac.model.gaussian_process.gaussian_process.GaussianProcess"]], "meta (smac.model.gaussian_process.gaussian_process.gaussianprocess property)": [[72, "smac.model.gaussian_process.gaussian_process.GaussianProcess.meta"]], "sample_functions() (smac.model.gaussian_process.gaussian_process.gaussianprocess method)": [[72, "smac.model.gaussian_process.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[72, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[73, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "abstractkernel (class in smac.model.gaussian_process.kernels)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels)": [[74, "smac.model.gaussian_process.kernels.ConstantKernel"]], "hammingkernel (class in smac.model.gaussian_process.kernels)": [[74, "smac.model.gaussian_process.kernels.HammingKernel"]], "maternkernel (class in smac.model.gaussian_process.kernels)": [[74, "smac.model.gaussian_process.kernels.MaternKernel"]], "productkernel (class in smac.model.gaussian_process.kernels)": [[74, "smac.model.gaussian_process.kernels.ProductKernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels)": [[74, "smac.model.gaussian_process.kernels.RBFKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels)": [[74, "smac.model.gaussian_process.kernels.SumKernel"]], "whitekernel (class in smac.model.gaussian_process.kernels)": [[74, "smac.model.gaussian_process.kernels.WhiteKernel"]], "__call__() (smac.model.gaussian_process.kernels.abstractkernel method)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.constantkernel method)": [[74, "smac.model.gaussian_process.kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.productkernel method)": [[74, "smac.model.gaussian_process.kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.sumkernel method)": [[74, "smac.model.gaussian_process.kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.abstractkernel method)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel.has_conditions"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hammingkernel property)": [[74, "smac.model.gaussian_process.kernels.HammingKernel.hyperparameter_length_scale"]], "hyperparameters (smac.model.gaussian_process.kernels.abstractkernel property)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.abstractkernel property)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel.meta"]], "meta (smac.model.gaussian_process.kernels.hammingkernel property)": [[74, "smac.model.gaussian_process.kernels.HammingKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.abstractkernel property)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[74, "smac.model.gaussian_process.kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels": [[74, "module-smac.model.gaussian_process.kernels"]], "abstractkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[75, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel"]], "productkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[75, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[75, "smac.model.gaussian_process.kernels.base_kernels.SumKernel"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.constantkernel method)": [[75, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.productkernel method)": [[75, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.sumkernel method)": [[75, "smac.model.gaussian_process.kernels.base_kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.has_conditions"]], "hyperparameters (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[75, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels.base_kernels": [[75, "module-smac.model.gaussian_process.kernels.base_kernels"]], "hammingkernel (class in smac.model.gaussian_process.kernels.hamming_kernel)": [[76, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[76, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.hyperparameter_length_scale"]], "meta (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[76, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[76, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "maternkernel (class in smac.model.gaussian_process.kernels.matern_kernel)": [[77, "smac.model.gaussian_process.kernels.matern_kernel.MaternKernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[77, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels.rbf_kernel)": [[78, "smac.model.gaussian_process.kernels.rbf_kernel.RBFKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[78, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "whitekernel (class in smac.model.gaussian_process.kernels.white_kernel)": [[79, "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[79, "module-smac.model.gaussian_process.kernels.white_kernel"]], "mcmcgaussianprocess (class in smac.model.gaussian_process.mcmc_gaussian_process)": [[80, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[80, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[80, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.models"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[80, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "gammaprior (class in smac.model.gaussian_process.priors)": [[81, "smac.model.gaussian_process.priors.GammaPrior"]], "horseshoeprior (class in smac.model.gaussian_process.priors)": [[81, "smac.model.gaussian_process.priors.HorseshoePrior"]], "lognormalprior (class in smac.model.gaussian_process.priors)": [[81, "smac.model.gaussian_process.priors.LogNormalPrior"]], "softtophatprior (class in smac.model.gaussian_process.priors)": [[81, "smac.model.gaussian_process.priors.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors)": [[81, "smac.model.gaussian_process.priors.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.softtophatprior method)": [[81, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophatprior method)": [[81, "smac.model.gaussian_process.priors.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.softtophatprior method)": [[81, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.gammaprior property)": [[81, "smac.model.gaussian_process.priors.GammaPrior.meta"]], "meta (smac.model.gaussian_process.priors.horseshoeprior property)": [[81, "smac.model.gaussian_process.priors.HorseshoePrior.meta"]], "meta (smac.model.gaussian_process.priors.lognormalprior property)": [[81, "smac.model.gaussian_process.priors.LogNormalPrior.meta"]], "meta (smac.model.gaussian_process.priors.softtophatprior property)": [[81, "smac.model.gaussian_process.priors.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophatprior property)": [[81, "smac.model.gaussian_process.priors.TophatPrior.meta"]], "smac.model.gaussian_process.priors": [[81, "module-smac.model.gaussian_process.priors"]], "abstractprior (class in smac.model.gaussian_process.priors.abstract_prior)": [[82, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior"]], "get_gradient() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[82, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[82, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.abstract_prior.abstractprior property)": [[82, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.meta"]], "sample_from_prior() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[82, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.sample_from_prior"]], "smac.model.gaussian_process.priors.abstract_prior": [[82, "module-smac.model.gaussian_process.priors.abstract_prior"]], "gammaprior (class in smac.model.gaussian_process.priors.gamma_prior)": [[83, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior"]], "meta (smac.model.gaussian_process.priors.gamma_prior.gammaprior property)": [[83, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior.meta"]], "smac.model.gaussian_process.priors.gamma_prior": [[83, "module-smac.model.gaussian_process.priors.gamma_prior"]], "horseshoeprior (class in smac.model.gaussian_process.priors.horseshoe_prior)": [[84, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior"]], "meta (smac.model.gaussian_process.priors.horseshoe_prior.horseshoeprior property)": [[84, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior.meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[84, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "lognormalprior (class in smac.model.gaussian_process.priors.log_normal_prior)": [[85, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior"]], "meta (smac.model.gaussian_process.priors.log_normal_prior.lognormalprior property)": [[85, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior.meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[85, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "softtophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[86, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[86, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[86, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.tophatprior method)": [[86, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[86, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.tophat_prior.softtophatprior property)": [[86, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophat_prior.tophatprior property)": [[86, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[86, "module-smac.model.gaussian_process.priors.tophat_prior"]], "multiobjectivemodel (class in smac.model.multi_objective_model)": [[87, "smac.model.multi_objective_model.MultiObjectiveModel"]], "models (smac.model.multi_objective_model.multiobjectivemodel property)": [[87, "smac.model.multi_objective_model.MultiObjectiveModel.models"]], "predict_marginalized() (smac.model.multi_objective_model.multiobjectivemodel method)": [[87, "smac.model.multi_objective_model.MultiObjectiveModel.predict_marginalized"]], "smac.model.multi_objective_model": [[87, "module-smac.model.multi_objective_model"]], "abstractrandomforest (class in smac.model.random_forest)": [[88, "smac.model.random_forest.AbstractRandomForest"]], "randomforest (class in smac.model.random_forest)": [[88, "smac.model.random_forest.RandomForest"]], "meta (smac.model.random_forest.randomforest property)": [[88, "smac.model.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.randomforest method)": [[88, "smac.model.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest": [[88, "module-smac.model.random_forest"]], "abstractrandomforest (class in smac.model.random_forest.abstract_random_forest)": [[89, "smac.model.random_forest.abstract_random_forest.AbstractRandomForest"]], "smac.model.random_forest.abstract_random_forest": [[89, "module-smac.model.random_forest.abstract_random_forest"]], "randomforest (class in smac.model.random_forest.random_forest)": [[90, "smac.model.random_forest.random_forest.RandomForest"]], "meta (smac.model.random_forest.random_forest.randomforest property)": [[90, "smac.model.random_forest.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.random_forest.randomforest method)": [[90, "smac.model.random_forest.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest.random_forest": [[90, "module-smac.model.random_forest.random_forest"]], "randommodel (class in smac.model.random_model)": [[91, "smac.model.random_model.RandomModel"]], "smac.model.random_model": [[91, "module-smac.model.random_model"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective)": [[92, "smac.multi_objective.AbstractMultiObjectiveAlgorithm"]], "meanaggregationstrategy (class in smac.multi_objective)": [[92, "smac.multi_objective.MeanAggregationStrategy"]], "parego (class in smac.multi_objective)": [[92, "smac.multi_objective.ParEGO"]], "__call__() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[92, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.__call__"]], "__call__() (smac.multi_objective.meanaggregationstrategy method)": [[92, "smac.multi_objective.MeanAggregationStrategy.__call__"]], "__call__() (smac.multi_objective.parego method)": [[92, "smac.multi_objective.ParEGO.__call__"]], "meta (smac.multi_objective.abstractmultiobjectivealgorithm property)": [[92, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.meta"]], "meta (smac.multi_objective.meanaggregationstrategy property)": [[92, "smac.multi_objective.MeanAggregationStrategy.meta"]], "meta (smac.multi_objective.parego property)": [[92, "smac.multi_objective.ParEGO.meta"]], "smac.multi_objective": [[92, "module-smac.multi_objective"]], "update_on_iteration_start() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[92, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "update_on_iteration_start() (smac.multi_objective.parego method)": [[92, "smac.multi_objective.ParEGO.update_on_iteration_start"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective.abstract_multi_objective_algorithm)": [[93, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm"]], "__call__() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[93, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.__call__"]], "meta (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm property)": [[93, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[93, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "update_on_iteration_start() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[93, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "meanaggregationstrategy (class in smac.multi_objective.aggregation_strategy)": [[94, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy"]], "__call__() (smac.multi_objective.aggregation_strategy.meanaggregationstrategy method)": [[94, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.__call__"]], "meta (smac.multi_objective.aggregation_strategy.meanaggregationstrategy property)": [[94, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.meta"]], "smac.multi_objective.aggregation_strategy": [[94, "module-smac.multi_objective.aggregation_strategy"]], "parego (class in smac.multi_objective.parego)": [[95, "smac.multi_objective.parego.ParEGO"]], "__call__() (smac.multi_objective.parego.parego method)": [[95, "smac.multi_objective.parego.ParEGO.__call__"]], "meta (smac.multi_objective.parego.parego property)": [[95, "smac.multi_objective.parego.ParEGO.meta"]], "smac.multi_objective.parego": [[95, "module-smac.multi_objective.parego"]], "update_on_iteration_start() (smac.multi_objective.parego.parego method)": [[95, "smac.multi_objective.parego.ParEGO.update_on_iteration_start"]], "abstractrandomdesign (class in smac.random_design)": [[96, "smac.random_design.AbstractRandomDesign"]], "cosineannealingrandomdesign (class in smac.random_design)": [[96, "smac.random_design.CosineAnnealingRandomDesign"]], "dynamicmodulusrandomdesign (class in smac.random_design)": [[96, "smac.random_design.DynamicModulusRandomDesign"]], "dynamicprobabilityrandomdesign (class in smac.random_design)": [[96, "smac.random_design.DynamicProbabilityRandomDesign"]], "modulusrandomdesign (class in smac.random_design)": [[96, "smac.random_design.ModulusRandomDesign"]], "probabilityrandomdesign (class in smac.random_design)": [[96, "smac.random_design.ProbabilityRandomDesign"]], "check() (smac.random_design.abstractrandomdesign method)": [[96, "smac.random_design.AbstractRandomDesign.check"]], "check() (smac.random_design.cosineannealingrandomdesign method)": [[96, "smac.random_design.CosineAnnealingRandomDesign.check"]], "check() (smac.random_design.dynamicmodulusrandomdesign method)": [[96, "smac.random_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.dynamicprobabilityrandomdesign method)": [[96, "smac.random_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.modulusrandomdesign method)": [[96, "smac.random_design.ModulusRandomDesign.check"]], "check() (smac.random_design.probabilityrandomdesign method)": [[96, "smac.random_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.abstractrandomdesign property)": [[96, "smac.random_design.AbstractRandomDesign.meta"]], "meta (smac.random_design.cosineannealingrandomdesign property)": [[96, "smac.random_design.CosineAnnealingRandomDesign.meta"]], "meta (smac.random_design.dynamicmodulusrandomdesign property)": [[96, "smac.random_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.dynamicprobabilityrandomdesign property)": [[96, "smac.random_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.modulusrandomdesign property)": [[96, "smac.random_design.ModulusRandomDesign.meta"]], "meta (smac.random_design.probabilityrandomdesign property)": [[96, "smac.random_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.abstractrandomdesign method)": [[96, "smac.random_design.AbstractRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.cosineannealingrandomdesign method)": [[96, "smac.random_design.CosineAnnealingRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicmodulusrandomdesign method)": [[96, "smac.random_design.DynamicModulusRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicprobabilityrandomdesign method)": [[96, "smac.random_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design": [[96, "module-smac.random_design"]], "abstractrandomdesign (class in smac.random_design.abstract_random_design)": [[97, "smac.random_design.abstract_random_design.AbstractRandomDesign"]], "check() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[97, "smac.random_design.abstract_random_design.AbstractRandomDesign.check"]], "meta (smac.random_design.abstract_random_design.abstractrandomdesign property)": [[97, "smac.random_design.abstract_random_design.AbstractRandomDesign.meta"]], "next_iteration() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[97, "smac.random_design.abstract_random_design.AbstractRandomDesign.next_iteration"]], "smac.random_design.abstract_random_design": [[97, "module-smac.random_design.abstract_random_design"]], "cosineannealingrandomdesign (class in smac.random_design.annealing_design)": [[98, "smac.random_design.annealing_design.CosineAnnealingRandomDesign"]], "check() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[98, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.check"]], "meta (smac.random_design.annealing_design.cosineannealingrandomdesign property)": [[98, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.meta"]], "next_iteration() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[98, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.next_iteration"]], "smac.random_design.annealing_design": [[98, "module-smac.random_design.annealing_design"]], "dynamicmodulusrandomdesign (class in smac.random_design.modulus_design)": [[99, "smac.random_design.modulus_design.DynamicModulusRandomDesign"]], "modulusrandomdesign (class in smac.random_design.modulus_design)": [[99, "smac.random_design.modulus_design.ModulusRandomDesign"]], "check() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[99, "smac.random_design.modulus_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.modulus_design.modulusrandomdesign method)": [[99, "smac.random_design.modulus_design.ModulusRandomDesign.check"]], "meta (smac.random_design.modulus_design.dynamicmodulusrandomdesign property)": [[99, "smac.random_design.modulus_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.modulus_design.modulusrandomdesign property)": [[99, "smac.random_design.modulus_design.ModulusRandomDesign.meta"]], "next_iteration() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[99, "smac.random_design.modulus_design.DynamicModulusRandomDesign.next_iteration"]], "smac.random_design.modulus_design": [[99, "module-smac.random_design.modulus_design"]], "dynamicprobabilityrandomdesign (class in smac.random_design.probability_design)": [[100, "smac.random_design.probability_design.DynamicProbabilityRandomDesign"]], "probabilityrandomdesign (class in smac.random_design.probability_design)": [[100, "smac.random_design.probability_design.ProbabilityRandomDesign"]], "check() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[100, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.probability_design.probabilityrandomdesign method)": [[100, "smac.random_design.probability_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.probability_design.dynamicprobabilityrandomdesign property)": [[100, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.probability_design.probabilityrandomdesign property)": [[100, "smac.random_design.probability_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[100, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design.probability_design": [[100, "module-smac.random_design.probability_design"]], "dataorigin (class in smac.runhistory)": [[101, "smac.runhistory.DataOrigin"]], "instanceseedbudgetkey (class in smac.runhistory)": [[101, "smac.runhistory.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory)": [[101, "smac.runhistory.InstanceSeedKey"]], "runhistory (class in smac.runhistory)": [[101, "smac.runhistory.RunHistory"]], "statustype (class in smac.runhistory)": [[101, "smac.runhistory.StatusType"]], "trialinfo (class in smac.runhistory)": [[101, "smac.runhistory.TrialInfo"]], "trialinfointent (class in smac.runhistory)": [[101, "smac.runhistory.TrialInfoIntent"]], "trialkey (class in smac.runhistory)": [[101, "smac.runhistory.TrialKey"]], "trialvalue (class in smac.runhistory)": [[101, "smac.runhistory.TrialValue"]], "__contains__() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.add"]], "average_cost() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory property)": [[101, "smac.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.empty"]], "get_config() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.get_config"]], "get_configs() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.get_cost"]], "get_incumbent() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.get_incumbent"]], "get_min_cost() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.get_min_cost"]], "get_pareto_front() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.get_pareto_front"]], "get_trials() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory property)": [[101, "smac.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.incremental_update_cost"]], "load_json() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.load_json"]], "min_cost() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory property)": [[101, "smac.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory property)": [[101, "smac.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.reset"]], "save_json() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.save_json"]], "smac.runhistory": [[101, "module-smac.runhistory"]], "sum_cost() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory method)": [[101, "smac.runhistory.RunHistory.update_from_json"]], "instanceseedbudgetkey (class in smac.runhistory.dataclasses)": [[102, "smac.runhistory.dataclasses.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory.dataclasses)": [[102, "smac.runhistory.dataclasses.InstanceSeedKey"]], "trajectoryitem (class in smac.runhistory.dataclasses)": [[102, "smac.runhistory.dataclasses.TrajectoryItem"]], "trialinfo (class in smac.runhistory.dataclasses)": [[102, "smac.runhistory.dataclasses.TrialInfo"]], "trialkey (class in smac.runhistory.dataclasses)": [[102, "smac.runhistory.dataclasses.TrialKey"]], "trialvalue (class in smac.runhistory.dataclasses)": [[102, "smac.runhistory.dataclasses.TrialValue"]], "smac.runhistory.dataclasses": [[102, "module-smac.runhistory.dataclasses"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.AbstractRunHistoryEncoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistoryEIPSEncoder"]], "runhistoryencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistoryEncoder"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder"]], "runhistorylogencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistoryLogEncoder"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistoryLogScaledEncoder"]], "runhistoryrawencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistoryRawEncoder"]], "runhistoryrawscaledencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistoryRawScaledEncoder"]], "runhistoryscaledencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistoryScaledEncoder"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder)": [[103, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder"]], "get_configurations() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[103, "smac.runhistory.encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[103, "smac.runhistory.encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[103, "smac.runhistory.encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "smac.runhistory.encoder": [[103, "module-smac.runhistory.encoder"]], "transform() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[103, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform"]], "transform_raw_values() (smac.runhistory.encoder.runhistoryrawencoder method)": [[103, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_raw_values"]], "transform_raw_values() (smac.runhistory.encoder.runhistoryrawscaledencoder method)": [[103, "smac.runhistory.encoder.RunHistoryRawScaledEncoder.transform_raw_values"]], "transform_response_values() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[103, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryeipsencoder method)": [[103, "smac.runhistory.encoder.RunHistoryEIPSEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryencoder method)": [[103, "smac.runhistory.encoder.RunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryinversescaledencoder method)": [[103, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogencoder method)": [[103, "smac.runhistory.encoder.RunHistoryLogEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogscaledencoder method)": [[103, "smac.runhistory.encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryrawencoder method)": [[103, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryscaledencoder method)": [[103, "smac.runhistory.encoder.RunHistoryScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorysqrtscaledencoder method)": [[103, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "transform_with_raw() (smac.runhistory.encoder.runhistoryrawencoder method)": [[103, "smac.runhistory.encoder.RunHistoryRawEncoder.transform_with_raw"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder.abstract_encoder)": [[104, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder"]], "get_configurations() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[104, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[104, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[104, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "smac.runhistory.encoder.abstract_encoder": [[104, "module-smac.runhistory.encoder.abstract_encoder"]], "transform() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[104, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[104, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform_response_values"]], "runhistoryrawencoder (class in smac.runhistory.encoder.boing_encoder)": [[105, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder"]], "runhistoryrawscaledencoder (class in smac.runhistory.encoder.boing_encoder)": [[105, "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder"]], "smac.runhistory.encoder.boing_encoder": [[105, "module-smac.runhistory.encoder.boing_encoder"]], "transform_raw_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[105, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_raw_values"]], "transform_raw_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawscaledencoder method)": [[105, "smac.runhistory.encoder.boing_encoder.RunHistoryRawScaledEncoder.transform_raw_values"]], "transform_response_values() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[105, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_response_values"]], "transform_with_raw() (smac.runhistory.encoder.boing_encoder.runhistoryrawencoder method)": [[105, "smac.runhistory.encoder.boing_encoder.RunHistoryRawEncoder.transform_with_raw"]], "runhistoryeipsencoder (class in smac.runhistory.encoder.eips_encoder)": [[106, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder": [[106, "module-smac.runhistory.encoder.eips_encoder"]], "transform_response_values() (smac.runhistory.encoder.eips_encoder.runhistoryeipsencoder method)": [[106, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder.transform_response_values"]], "runhistoryencoder (class in smac.runhistory.encoder.encoder)": [[107, "smac.runhistory.encoder.encoder.RunHistoryEncoder"]], "smac.runhistory.encoder.encoder": [[107, "module-smac.runhistory.encoder.encoder"]], "transform_response_values() (smac.runhistory.encoder.encoder.runhistoryencoder method)": [[107, "smac.runhistory.encoder.encoder.RunHistoryEncoder.transform_response_values"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder.inverse_scaled_encoder)": [[108, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[108, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.inverse_scaled_encoder.runhistoryinversescaledencoder method)": [[108, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "runhistorylogencoder (class in smac.runhistory.encoder.log_encoder)": [[109, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder": [[109, "module-smac.runhistory.encoder.log_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_encoder.runhistorylogencoder method)": [[109, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder.transform_response_values"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder.log_scaled_encoder)": [[110, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[110, "module-smac.runhistory.encoder.log_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_scaled_encoder.runhistorylogscaledencoder method)": [[110, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "runhistoryscaledencoder (class in smac.runhistory.encoder.scaled_encoder)": [[111, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder": [[111, "module-smac.runhistory.encoder.scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.scaled_encoder.runhistoryscaledencoder method)": [[111, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder.transform_response_values"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder.sqrt_scaled_encoder)": [[112, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[112, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.sqrt_scaled_encoder.runhistorysqrtscaledencoder method)": [[112, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "dataorigin (class in smac.runhistory.enumerations)": [[113, "smac.runhistory.enumerations.DataOrigin"]], "statustype (class in smac.runhistory.enumerations)": [[113, "smac.runhistory.enumerations.StatusType"]], "trialinfointent (class in smac.runhistory.enumerations)": [[113, "smac.runhistory.enumerations.TrialInfoIntent"]], "smac.runhistory.enumerations": [[113, "module-smac.runhistory.enumerations"]], "runhistory (class in smac.runhistory.runhistory)": [[114, "smac.runhistory.runhistory.RunHistory"]], "__contains__() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.add"]], "average_cost() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory.runhistory property)": [[114, "smac.runhistory.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.empty"]], "get_config() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.get_config"]], "get_configs() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.get_cost"]], "get_incumbent() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.get_incumbent"]], "get_min_cost() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.get_min_cost"]], "get_pareto_front() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.get_pareto_front"]], "get_trials() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.get_trials"]], "ids_config (smac.runhistory.runhistory.runhistory property)": [[114, "smac.runhistory.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.incremental_update_cost"]], "load_json() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.load_json"]], "min_cost() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory.runhistory property)": [[114, "smac.runhistory.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory.runhistory property)": [[114, "smac.runhistory.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.reset"]], "save_json() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.save_json"]], "smac.runhistory.runhistory": [[114, "module-smac.runhistory.runhistory"]], "sum_cost() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory.runhistory method)": [[114, "smac.runhistory.runhistory.RunHistory.update_from_json"]], "abstractrunner (class in smac.runner)": [[115, "smac.runner.AbstractRunner"]], "daskparallelrunner (class in smac.runner)": [[115, "smac.runner.DaskParallelRunner"]], "firstruncrashedexception": [[115, "smac.runner.FirstRunCrashedException"], [119, "smac.runner.exceptions.FirstRunCrashedException"]], "targetalgorithmabortexception": [[115, "smac.runner.TargetAlgorithmAbortException"], [119, "smac.runner.exceptions.TargetAlgorithmAbortException"]], "targetfunctionrunner (class in smac.runner)": [[115, "smac.runner.TargetFunctionRunner"]], "__call__() (smac.runner.targetfunctionrunner method)": [[115, "smac.runner.TargetFunctionRunner.__call__"]], "__del__() (smac.runner.daskparallelrunner method)": [[115, "smac.runner.DaskParallelRunner.__del__"]], "close() (smac.runner.daskparallelrunner method)": [[115, "smac.runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.abstractrunner method)": [[115, "smac.runner.AbstractRunner.count_available_workers"]], "count_available_workers() (smac.runner.daskparallelrunner method)": [[115, "smac.runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.abstractrunner method)": [[115, "smac.runner.AbstractRunner.is_running"]], "is_running() (smac.runner.daskparallelrunner method)": [[115, "smac.runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.abstractrunner method)": [[115, "smac.runner.AbstractRunner.iter_results"]], "iter_results() (smac.runner.daskparallelrunner method)": [[115, "smac.runner.DaskParallelRunner.iter_results"]], "meta (smac.runner.abstractrunner property)": [[115, "smac.runner.AbstractRunner.meta"]], "meta (smac.runner.targetfunctionrunner property)": [[115, "smac.runner.TargetFunctionRunner.meta"]], "run() (smac.runner.abstractrunner method)": [[115, "smac.runner.AbstractRunner.run"]], "run() (smac.runner.daskparallelrunner method)": [[115, "smac.runner.DaskParallelRunner.run"]], "run() (smac.runner.targetfunctionrunner method)": [[115, "smac.runner.TargetFunctionRunner.run"]], "run_wrapper() (smac.runner.abstractrunner method)": [[115, "smac.runner.AbstractRunner.run_wrapper"]], "smac.runner": [[115, "module-smac.runner"]], "submit_trial() (smac.runner.abstractrunner method)": [[115, "smac.runner.AbstractRunner.submit_trial"]], "submit_trial() (smac.runner.daskparallelrunner method)": [[115, "smac.runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.abstractrunner method)": [[115, "smac.runner.AbstractRunner.wait"]], "wait() (smac.runner.daskparallelrunner method)": [[115, "smac.runner.DaskParallelRunner.wait"]], "abstractrunner (class in smac.runner.abstract_runner)": [[116, "smac.runner.abstract_runner.AbstractRunner"]], "count_available_workers() (smac.runner.abstract_runner.abstractrunner method)": [[116, "smac.runner.abstract_runner.AbstractRunner.count_available_workers"]], "is_running() (smac.runner.abstract_runner.abstractrunner method)": [[116, "smac.runner.abstract_runner.AbstractRunner.is_running"]], "iter_results() (smac.runner.abstract_runner.abstractrunner method)": [[116, "smac.runner.abstract_runner.AbstractRunner.iter_results"]], "meta (smac.runner.abstract_runner.abstractrunner property)": [[116, "smac.runner.abstract_runner.AbstractRunner.meta"]], "run() (smac.runner.abstract_runner.abstractrunner method)": [[116, "smac.runner.abstract_runner.AbstractRunner.run"]], "run_wrapper() (smac.runner.abstract_runner.abstractrunner method)": [[116, "smac.runner.abstract_runner.AbstractRunner.run_wrapper"]], "smac.runner.abstract_runner": [[116, "module-smac.runner.abstract_runner"]], "submit_trial() (smac.runner.abstract_runner.abstractrunner method)": [[116, "smac.runner.abstract_runner.AbstractRunner.submit_trial"]], "wait() (smac.runner.abstract_runner.abstractrunner method)": [[116, "smac.runner.abstract_runner.AbstractRunner.wait"]], "abstractserialrunner (class in smac.runner.abstract_serial_runner)": [[117, "smac.runner.abstract_serial_runner.AbstractSerialRunner"]], "count_available_workers() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[117, "smac.runner.abstract_serial_runner.AbstractSerialRunner.count_available_workers"]], "is_running() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[117, "smac.runner.abstract_serial_runner.AbstractSerialRunner.is_running"]], "iter_results() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[117, "smac.runner.abstract_serial_runner.AbstractSerialRunner.iter_results"]], "smac.runner.abstract_serial_runner": [[117, "module-smac.runner.abstract_serial_runner"]], "submit_trial() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[117, "smac.runner.abstract_serial_runner.AbstractSerialRunner.submit_trial"]], "wait() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[117, "smac.runner.abstract_serial_runner.AbstractSerialRunner.wait"]], "daskparallelrunner (class in smac.runner.dask_runner)": [[118, "smac.runner.dask_runner.DaskParallelRunner"]], "__del__() (smac.runner.dask_runner.daskparallelrunner method)": [[118, "smac.runner.dask_runner.DaskParallelRunner.__del__"]], "close() (smac.runner.dask_runner.daskparallelrunner method)": [[118, "smac.runner.dask_runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.dask_runner.daskparallelrunner method)": [[118, "smac.runner.dask_runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.dask_runner.daskparallelrunner method)": [[118, "smac.runner.dask_runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.dask_runner.daskparallelrunner method)": [[118, "smac.runner.dask_runner.DaskParallelRunner.iter_results"]], "run() (smac.runner.dask_runner.daskparallelrunner method)": [[118, "smac.runner.dask_runner.DaskParallelRunner.run"]], "smac.runner.dask_runner": [[118, "module-smac.runner.dask_runner"]], "submit_trial() (smac.runner.dask_runner.daskparallelrunner method)": [[118, "smac.runner.dask_runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.dask_runner.daskparallelrunner method)": [[118, "smac.runner.dask_runner.DaskParallelRunner.wait"]], "smac.runner.exceptions": [[119, "module-smac.runner.exceptions"]], "targetfunctionrunner (class in smac.runner.target_function_runner)": [[120, "smac.runner.target_function_runner.TargetFunctionRunner"]], "__call__() (smac.runner.target_function_runner.targetfunctionrunner method)": [[120, "smac.runner.target_function_runner.TargetFunctionRunner.__call__"]], "meta (smac.runner.target_function_runner.targetfunctionrunner property)": [[120, "smac.runner.target_function_runner.TargetFunctionRunner.meta"]], "run() (smac.runner.target_function_runner.targetfunctionrunner method)": [[120, "smac.runner.target_function_runner.TargetFunctionRunner.run"]], "smac.runner.target_function_runner": [[120, "module-smac.runner.target_function_runner"]], "targetfunctionscriptrunner (class in smac.runner.target_function_script_runner)": [[121, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner"]], "__call__() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[121, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.__call__"]], "meta (smac.runner.target_function_script_runner.targetfunctionscriptrunner property)": [[121, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.meta"]], "run() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[121, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.run"]], "smac.runner.target_function_script_runner": [[121, "module-smac.runner.target_function_script_runner"]], "scenario (class in smac.scenario)": [[122, "smac.scenario.Scenario"]], "__post_init__() (smac.scenario.scenario method)": [[122, "smac.scenario.Scenario.__post_init__"]], "count_instance_features() (smac.scenario.scenario method)": [[122, "smac.scenario.Scenario.count_instance_features"]], "count_objectives() (smac.scenario.scenario method)": [[122, "smac.scenario.Scenario.count_objectives"]], "load() (smac.scenario.scenario static method)": [[122, "smac.scenario.Scenario.load"]], "make_serializable() (smac.scenario.scenario static method)": [[122, "smac.scenario.Scenario.make_serializable"]], "meta (smac.scenario.scenario property)": [[122, "smac.scenario.Scenario.meta"]], "save() (smac.scenario.scenario method)": [[122, "smac.scenario.Scenario.save"]], "smac.scenario": [[122, "module-smac.scenario"]], "smac.utils": [[123, "module-smac.utils"]], "convert_configurations_to_array() (in module smac.utils.configspace)": [[124, "smac.utils.configspace.convert_configurations_to_array"]], "get_conditional_hyperparameters() (in module smac.utils.configspace)": [[124, "smac.utils.configspace.get_conditional_hyperparameters"]], "get_types() (in module smac.utils.configspace)": [[124, "smac.utils.configspace.get_types"]], "smac.utils.configspace": [[124, "module-smac.utils.configspace"]], "recursively_compare_dicts() (in module smac.utils.data_structures)": [[125, "smac.utils.data_structures.recursively_compare_dicts"]], "smac.utils.data_structures": [[125, "module-smac.utils.data_structures"]], "format_array() (in module smac.utils.logging)": [[126, "smac.utils.logging.format_array"]], "get_logger() (in module smac.utils.logging)": [[126, "smac.utils.logging.get_logger"]], "setup_logging() (in module smac.utils.logging)": [[126, "smac.utils.logging.setup_logging"]], "smac.utils.logging": [[126, "module-smac.utils.logging"]], "normalize_costs() (in module smac.utils.multi_objective)": [[127, "smac.utils.multi_objective.normalize_costs"]], "smac.utils.multi_objective": [[127, "module-smac.utils.multi_objective"]], "smac.utils.subspaces": [[128, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[129, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[130, "module-smac.utils.subspaces.turbo_subspace"]]}})