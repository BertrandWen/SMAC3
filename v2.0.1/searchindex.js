Search.setIndex({"docnames": ["1_installation", "2_package_overview", "3_getting_started", "4_minimal_example", "5_api", "6_references", "7_glossary", "8_faq", "9_license", "advanced_usage/10_continue", "advanced_usage/11_reproducibility", "advanced_usage/12_optimizations", "advanced_usage/1_components", "advanced_usage/2_multi_fidelity", "advanced_usage/3_multi_objective", "advanced_usage/4_instances", "advanced_usage/5_ask_and_tell", "advanced_usage/6_commandline", "advanced_usage/7_stopping_criteria", "advanced_usage/8_logging", "advanced_usage/9_parallelism", "advanced_usage/index", "api/smac.acquisition", "api/smac.acquisition.function", "api/smac.acquisition.function.abstract_acquisition_function", "api/smac.acquisition.function.confidence_bound", "api/smac.acquisition.function.expected_improvement", "api/smac.acquisition.function.integrated_acquisition_function", "api/smac.acquisition.function.prior_acqusition_function", "api/smac.acquisition.function.probability_improvement", "api/smac.acquisition.function.thompson", "api/smac.acquisition.maximizer", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer", "api/smac.acquisition.maximizer.differential_evolution", "api/smac.acquisition.maximizer.helpers", "api/smac.acquisition.maximizer.local_and_random_search", "api/smac.acquisition.maximizer.local_search", "api/smac.acquisition.maximizer.random_search", "api/smac.callback", "api/smac.callback.callback", "api/smac.callback.metadata_callback", "api/smac.facade", "api/smac.facade.abstract_facade", "api/smac.facade.algorithm_configuration_facade", "api/smac.facade.blackbox_facade", "api/smac.facade.hyperband_facade", "api/smac.facade.hyperparameter_optimization_facade", "api/smac.facade.multi_fidelity_facade", "api/smac.facade.random_facade", "api/smac.initial_design", "api/smac.initial_design.abstract_initial_design", "api/smac.initial_design.default_design", "api/smac.initial_design.factorial_design", "api/smac.initial_design.latin_hypercube_design", "api/smac.initial_design.random_design", "api/smac.initial_design.sobol_design", "api/smac.intensifier", "api/smac.intensifier.abstract_intensifier", "api/smac.intensifier.hyperband", "api/smac.intensifier.intensifier", "api/smac.intensifier.successive_halving", "api/smac.main", "api/smac.main.config_selector", "api/smac.main.smbo", "api/smac.model", "api/smac.model.abstract_model", "api/smac.model.gaussian_process", "api/smac.model.gaussian_process.abstract_gaussian_process", "api/smac.model.gaussian_process.gaussian_process", "api/smac.model.gaussian_process.gpytorch_gaussian_process", "api/smac.model.gaussian_process.kernels", "api/smac.model.gaussian_process.kernels.base_kernels", "api/smac.model.gaussian_process.kernels.hamming_kernel", "api/smac.model.gaussian_process.kernels.matern_kernel", "api/smac.model.gaussian_process.kernels.rbf_kernel", "api/smac.model.gaussian_process.kernels.white_kernel", "api/smac.model.gaussian_process.mcmc_gaussian_process", "api/smac.model.gaussian_process.priors", "api/smac.model.gaussian_process.priors.abstract_prior", "api/smac.model.gaussian_process.priors.gamma_prior", "api/smac.model.gaussian_process.priors.horseshoe_prior", "api/smac.model.gaussian_process.priors.log_normal_prior", "api/smac.model.gaussian_process.priors.tophat_prior", "api/smac.model.multi_objective_model", "api/smac.model.random_forest", "api/smac.model.random_forest.abstract_random_forest", "api/smac.model.random_forest.random_forest", "api/smac.model.random_model", "api/smac.multi_objective", "api/smac.multi_objective.abstract_multi_objective_algorithm", "api/smac.multi_objective.aggregation_strategy", "api/smac.multi_objective.parego", "api/smac.random_design", "api/smac.random_design.abstract_random_design", "api/smac.random_design.annealing_design", "api/smac.random_design.modulus_design", "api/smac.random_design.probability_design", "api/smac.runhistory", "api/smac.runhistory.dataclasses", "api/smac.runhistory.encoder", "api/smac.runhistory.encoder.abstract_encoder", "api/smac.runhistory.encoder.boing_encoder", "api/smac.runhistory.encoder.eips_encoder", "api/smac.runhistory.encoder.encoder", "api/smac.runhistory.encoder.inverse_scaled_encoder", "api/smac.runhistory.encoder.log_encoder", "api/smac.runhistory.encoder.log_scaled_encoder", "api/smac.runhistory.encoder.scaled_encoder", "api/smac.runhistory.encoder.sqrt_scaled_encoder", "api/smac.runhistory.enumerations", "api/smac.runhistory.errors", "api/smac.runhistory.runhistory", "api/smac.runner", "api/smac.runner.abstract_runner", "api/smac.runner.abstract_serial_runner", "api/smac.runner.dask_runner", "api/smac.runner.exceptions", "api/smac.runner.target_function_runner", "api/smac.runner.target_function_script_runner", "api/smac.scenario", "api/smac.utils", "api/smac.utils.configspace", "api/smac.utils.data_structures", "api/smac.utils.logging", "api/smac.utils.multi_objective", "api/smac.utils.pareto_front", "api/smac.utils.subspaces", "api/smac.utils.subspaces.boing_subspace", "api/smac.utils.subspaces.turbo_subspace", "examples/1_basics/1_quadratic_function", "examples/1_basics/2_svm_cv", "examples/1_basics/3_ask_and_tell", "examples/1_basics/4_callback", "examples/1_basics/5_continue", "examples/1_basics/6_priors", "examples/1_basics/index", "examples/1_basics/sg_execution_times", "examples/2_multi_fidelity/1_mlp_epochs", "examples/2_multi_fidelity/2_sgd_datasets", "examples/2_multi_fidelity/index", "examples/2_multi_fidelity/sg_execution_times", "examples/3_multi_objective/1_schaffer", "examples/3_multi_objective/2_parego", "examples/3_multi_objective/index", "examples/3_multi_objective/sg_execution_times", "examples/5_commandline/1_call_target_function_script", "examples/5_commandline/index", "examples/5_commandline/sg_execution_times", "examples/index", "images/README", "index"], "filenames": ["1_installation.rst", "2_package_overview.rst", "3_getting_started.rst", "4_minimal_example.rst", "5_api.rst", "6_references.rst", "7_glossary.rst", "8_faq.rst", "9_license.rst", "advanced_usage/10_continue.rst", "advanced_usage/11_reproducibility.rst", "advanced_usage/12_optimizations.rst", "advanced_usage/1_components.rst", "advanced_usage/2_multi_fidelity.rst", "advanced_usage/3_multi_objective.rst", "advanced_usage/4_instances.rst", "advanced_usage/5_ask_and_tell.rst", "advanced_usage/6_commandline.rst", "advanced_usage/7_stopping_criteria.rst", "advanced_usage/8_logging.rst", "advanced_usage/9_parallelism.rst", "advanced_usage/index.rst", "api/smac.acquisition.rst", "api/smac.acquisition.function.rst", "api/smac.acquisition.function.abstract_acquisition_function.rst", "api/smac.acquisition.function.confidence_bound.rst", "api/smac.acquisition.function.expected_improvement.rst", "api/smac.acquisition.function.integrated_acquisition_function.rst", "api/smac.acquisition.function.prior_acqusition_function.rst", "api/smac.acquisition.function.probability_improvement.rst", "api/smac.acquisition.function.thompson.rst", "api/smac.acquisition.maximizer.rst", "api/smac.acquisition.maximizer.abstract_acqusition_maximizer.rst", "api/smac.acquisition.maximizer.differential_evolution.rst", "api/smac.acquisition.maximizer.helpers.rst", "api/smac.acquisition.maximizer.local_and_random_search.rst", "api/smac.acquisition.maximizer.local_search.rst", "api/smac.acquisition.maximizer.random_search.rst", "api/smac.callback.rst", "api/smac.callback.callback.rst", "api/smac.callback.metadata_callback.rst", "api/smac.facade.rst", "api/smac.facade.abstract_facade.rst", "api/smac.facade.algorithm_configuration_facade.rst", "api/smac.facade.blackbox_facade.rst", "api/smac.facade.hyperband_facade.rst", "api/smac.facade.hyperparameter_optimization_facade.rst", "api/smac.facade.multi_fidelity_facade.rst", "api/smac.facade.random_facade.rst", "api/smac.initial_design.rst", "api/smac.initial_design.abstract_initial_design.rst", "api/smac.initial_design.default_design.rst", "api/smac.initial_design.factorial_design.rst", "api/smac.initial_design.latin_hypercube_design.rst", "api/smac.initial_design.random_design.rst", "api/smac.initial_design.sobol_design.rst", "api/smac.intensifier.rst", "api/smac.intensifier.abstract_intensifier.rst", "api/smac.intensifier.hyperband.rst", "api/smac.intensifier.intensifier.rst", "api/smac.intensifier.successive_halving.rst", "api/smac.main.rst", "api/smac.main.config_selector.rst", "api/smac.main.smbo.rst", "api/smac.model.rst", "api/smac.model.abstract_model.rst", "api/smac.model.gaussian_process.rst", "api/smac.model.gaussian_process.abstract_gaussian_process.rst", "api/smac.model.gaussian_process.gaussian_process.rst", "api/smac.model.gaussian_process.gpytorch_gaussian_process.rst", "api/smac.model.gaussian_process.kernels.rst", "api/smac.model.gaussian_process.kernels.base_kernels.rst", "api/smac.model.gaussian_process.kernels.hamming_kernel.rst", "api/smac.model.gaussian_process.kernels.matern_kernel.rst", "api/smac.model.gaussian_process.kernels.rbf_kernel.rst", "api/smac.model.gaussian_process.kernels.white_kernel.rst", "api/smac.model.gaussian_process.mcmc_gaussian_process.rst", "api/smac.model.gaussian_process.priors.rst", "api/smac.model.gaussian_process.priors.abstract_prior.rst", "api/smac.model.gaussian_process.priors.gamma_prior.rst", "api/smac.model.gaussian_process.priors.horseshoe_prior.rst", "api/smac.model.gaussian_process.priors.log_normal_prior.rst", "api/smac.model.gaussian_process.priors.tophat_prior.rst", "api/smac.model.multi_objective_model.rst", "api/smac.model.random_forest.rst", "api/smac.model.random_forest.abstract_random_forest.rst", "api/smac.model.random_forest.random_forest.rst", "api/smac.model.random_model.rst", "api/smac.multi_objective.rst", "api/smac.multi_objective.abstract_multi_objective_algorithm.rst", "api/smac.multi_objective.aggregation_strategy.rst", "api/smac.multi_objective.parego.rst", "api/smac.random_design.rst", "api/smac.random_design.abstract_random_design.rst", "api/smac.random_design.annealing_design.rst", "api/smac.random_design.modulus_design.rst", "api/smac.random_design.probability_design.rst", "api/smac.runhistory.rst", "api/smac.runhistory.dataclasses.rst", "api/smac.runhistory.encoder.rst", "api/smac.runhistory.encoder.abstract_encoder.rst", "api/smac.runhistory.encoder.boing_encoder.rst", "api/smac.runhistory.encoder.eips_encoder.rst", "api/smac.runhistory.encoder.encoder.rst", "api/smac.runhistory.encoder.inverse_scaled_encoder.rst", "api/smac.runhistory.encoder.log_encoder.rst", "api/smac.runhistory.encoder.log_scaled_encoder.rst", "api/smac.runhistory.encoder.scaled_encoder.rst", "api/smac.runhistory.encoder.sqrt_scaled_encoder.rst", "api/smac.runhistory.enumerations.rst", "api/smac.runhistory.errors.rst", "api/smac.runhistory.runhistory.rst", "api/smac.runner.rst", "api/smac.runner.abstract_runner.rst", "api/smac.runner.abstract_serial_runner.rst", "api/smac.runner.dask_runner.rst", "api/smac.runner.exceptions.rst", "api/smac.runner.target_function_runner.rst", "api/smac.runner.target_function_script_runner.rst", "api/smac.scenario.rst", "api/smac.utils.rst", "api/smac.utils.configspace.rst", "api/smac.utils.data_structures.rst", "api/smac.utils.logging.rst", "api/smac.utils.multi_objective.rst", "api/smac.utils.pareto_front.rst", "api/smac.utils.subspaces.rst", "api/smac.utils.subspaces.boing_subspace.rst", "api/smac.utils.subspaces.turbo_subspace.rst", "examples/1_basics/1_quadratic_function.rst", "examples/1_basics/2_svm_cv.rst", "examples/1_basics/3_ask_and_tell.rst", "examples/1_basics/4_callback.rst", "examples/1_basics/5_continue.rst", "examples/1_basics/6_priors.rst", "examples/1_basics/index.rst", "examples/1_basics/sg_execution_times.rst", "examples/2_multi_fidelity/1_mlp_epochs.rst", "examples/2_multi_fidelity/2_sgd_datasets.rst", "examples/2_multi_fidelity/index.rst", "examples/2_multi_fidelity/sg_execution_times.rst", "examples/3_multi_objective/1_schaffer.rst", "examples/3_multi_objective/2_parego.rst", "examples/3_multi_objective/index.rst", "examples/3_multi_objective/sg_execution_times.rst", "examples/5_commandline/1_call_target_function_script.rst", "examples/5_commandline/index.rst", "examples/5_commandline/sg_execution_times.rst", "examples/index.rst", "images/README.md", "index.rst"], "titles": ["Installation", "Package Overview", "Getting Started", "Minimal Example", "API References", "References", "Glossary", "F.A.Q.", "License", "Continue", "Reproducibility", "Optimizations", "Components", "Multi-Fidelity Optimization", "Multi-Objective Optimization", "Optimization across Instances", "Ask-and-Tell Interface", "Command-Line Interface", "Stopping Criteria", "Logging", "Parallelism", "Advanced Usage", "smac.acquisition", "smac.acquisition.function", "smac.acquisition.function.abstract_acquisition_function", "smac.acquisition.function.confidence_bound", "smac.acquisition.function.expected_improvement", "smac.acquisition.function.integrated_acquisition_function", "smac.acquisition.function.prior_acqusition_function", "smac.acquisition.function.probability_improvement", "smac.acquisition.function.thompson", "smac.acquisition.maximizer", "smac.acquisition.maximizer.abstract_acqusition_maximizer", "smac.acquisition.maximizer.differential_evolution", "smac.acquisition.maximizer.helpers", "smac.acquisition.maximizer.local_and_random_search", "smac.acquisition.maximizer.local_search", "smac.acquisition.maximizer.random_search", "smac.callback", "smac.callback.callback", "smac.callback.metadata_callback", "smac.facade", "smac.facade.abstract_facade", "smac.facade.algorithm_configuration_facade", "smac.facade.blackbox_facade", "smac.facade.hyperband_facade", "smac.facade.hyperparameter_optimization_facade", "smac.facade.multi_fidelity_facade", "smac.facade.random_facade", "smac.initial_design", "smac.initial_design.abstract_initial_design", "smac.initial_design.default_design", "smac.initial_design.factorial_design", "smac.initial_design.latin_hypercube_design", "smac.initial_design.random_design", "smac.initial_design.sobol_design", "smac.intensifier", "smac.intensifier.abstract_intensifier", "smac.intensifier.hyperband", "smac.intensifier.intensifier", "smac.intensifier.successive_halving", "smac.main", "smac.main.config_selector", "smac.main.smbo", "smac.model", "smac.model.abstract_model", "smac.model.gaussian_process", "smac.model.gaussian_process.abstract_gaussian_process", "smac.model.gaussian_process.gaussian_process", "smac.model.gaussian_process.gpytorch_gaussian_process", "smac.model.gaussian_process.kernels", "smac.model.gaussian_process.kernels.base_kernels", "smac.model.gaussian_process.kernels.hamming_kernel", "smac.model.gaussian_process.kernels.matern_kernel", "smac.model.gaussian_process.kernels.rbf_kernel", "smac.model.gaussian_process.kernels.white_kernel", "smac.model.gaussian_process.mcmc_gaussian_process", "smac.model.gaussian_process.priors", "smac.model.gaussian_process.priors.abstract_prior", "smac.model.gaussian_process.priors.gamma_prior", "smac.model.gaussian_process.priors.horseshoe_prior", "smac.model.gaussian_process.priors.log_normal_prior", "smac.model.gaussian_process.priors.tophat_prior", "smac.model.multi_objective_model", "smac.model.random_forest", "smac.model.random_forest.abstract_random_forest", "smac.model.random_forest.random_forest", "smac.model.random_model", "smac.multi_objective", "smac.multi_objective.abstract_multi_objective_algorithm", "smac.multi_objective.aggregation_strategy", "smac.multi_objective.parego", "smac.random_design", "smac.random_design.abstract_random_design", "smac.random_design.annealing_design", "smac.random_design.modulus_design", "smac.random_design.probability_design", "smac.runhistory", "smac.runhistory.dataclasses", "smac.runhistory.encoder", "smac.runhistory.encoder.abstract_encoder", "smac.runhistory.encoder.boing_encoder", "smac.runhistory.encoder.eips_encoder", "smac.runhistory.encoder.encoder", "smac.runhistory.encoder.inverse_scaled_encoder", "smac.runhistory.encoder.log_encoder", "smac.runhistory.encoder.log_scaled_encoder", "smac.runhistory.encoder.scaled_encoder", "smac.runhistory.encoder.sqrt_scaled_encoder", "smac.runhistory.enumerations", "smac.runhistory.errors", "smac.runhistory.runhistory", "smac.runner", "smac.runner.abstract_runner", "smac.runner.abstract_serial_runner", "smac.runner.dask_runner", "smac.runner.exceptions", "smac.runner.target_function_runner", "smac.runner.target_function_script_runner", "smac.scenario", "smac.utils", "smac.utils.configspace", "smac.utils.data_structures", "smac.utils.logging", "smac.utils.multi_objective", "smac.utils.pareto_front", "smac.utils.subspaces", "smac.utils.subspaces.boing_subspace", "smac.utils.subspaces.turbo_subspace", "Quadratic Function", "Support Vector Machine with Cross-Validation", "Ask-and-Tell", "Custom Callback", "Continue an Optimization", "User Priors over the Optimum", "Basics", "Computation times", "Multi-Layer Perceptron Using Multiple Epochs", "Stochastic Gradient Descent On Multiple Datasets", "Multi-Fidelity and Multi-Instances", "Computation times", "2D Schaffer Function with Objective Weights", "ParEGO", "Multi-Objective", "Computation times", "Call Target Function From Script", "Command-Line Interface", "Computation times", "Examples", "Overview Figure", "Home"], "terms": {"smac": [0, 1, 2, 3, 6, 7, 9, 11, 12, 14, 16, 17, 18, 19, 20, 21, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148, 150], "i": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 23, 28, 31, 32, 33, 35, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 80, 83, 84, 86, 92, 93, 94, 95, 96, 97, 98, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148, 150], "written": [0, 56, 57, 150], "python3": [0, 137, 150], "therefor": [0, 2, 6, 12, 41, 48, 70, 71, 119, 137, 142], "an": [0, 1, 2, 6, 7, 12, 13, 14, 16, 17, 23, 24, 31, 32, 34, 38, 39, 41, 42, 43, 44, 46, 48, 56, 57, 59, 66, 76, 88, 90, 92, 93, 94, 95, 96, 97, 98, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 129, 130, 134, 135, 136, 137, 138, 142, 148, 150], "environ": [0, 2, 3, 41, 42, 119, 129, 132, 133, 134, 137, 142, 145], "python": [0, 1, 7, 17, 34, 66, 68, 76, 78, 112, 117, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148, 150], "3": [0, 6, 8, 12, 14, 41, 43, 44, 45, 46, 47, 48, 56, 58, 59, 60, 84, 86, 92, 95, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 150], "8": [0, 2, 11, 12, 41, 42, 44, 56, 60, 62, 84, 86, 130, 134, 137, 141, 142, 145, 150], "furthermor": [0, 56, 57, 132], "random": [0, 2, 6, 21, 23, 28, 31, 32, 34, 35, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 56, 57, 59, 60, 64, 65, 84, 85, 86, 87, 92, 93, 94, 95, 96, 119, 130, 134, 137, 142, 150], "forest": [0, 2, 6, 12, 23, 28, 31, 35, 41, 43, 46, 64, 65, 84, 85, 86, 130, 134, 150], "us": [0, 1, 2, 3, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 20, 23, 24, 28, 30, 31, 32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 80, 82, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 108, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 145, 146, 148, 150], "swig": 0, "build": [0, 130, 134, 137, 138], "depend": [0, 1, 2, 7, 11, 12, 17, 21, 41, 44, 64, 65, 88, 89, 112, 116, 119, 130], "either": [0, 2, 7, 41, 42, 66, 76, 97, 111, 112, 117], "your": [0, 1, 2, 6, 7, 14, 15, 17, 19, 20, 21, 41, 42, 63, 112, 113, 115, 117, 119], "system": 0, "directli": [0, 2, 12, 13, 14, 17, 112, 117], "The": [0, 1, 2, 3, 6, 7, 11, 12, 13, 14, 17, 18, 19, 20, 23, 24, 31, 32, 33, 35, 41, 42, 43, 44, 46, 48, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 79, 82, 83, 84, 86, 92, 93, 95, 97, 98, 99, 100, 111, 112, 113, 114, 115, 117, 118, 119, 121, 125, 129, 131, 137, 141, 142, 150], "command": [0, 1, 6, 20, 21], "linux": 0, "machin": [0, 3, 23, 27, 135, 136, 148, 150], "follow": [0, 1, 2, 3, 7, 11, 12, 14, 15, 17, 19, 41, 48, 56, 59, 60, 84, 86, 112, 113, 115, 118, 145, 150], "apt": 0, "get": [0, 12, 31, 32, 33, 37, 56, 57, 60, 70, 71, 112, 115, 123, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "test": [0, 17, 64, 65, 66, 68, 97, 111, 118, 150], "mac": [0, 7], "9": [0, 31, 33, 137, 138, 141, 150], "10": [0, 2, 6, 19, 23, 28, 31, 35, 36, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 66, 68, 84, 86, 129, 130, 131, 132, 133, 134, 137, 141, 142, 144, 150], "we": [0, 2, 6, 7, 12, 14, 15, 17, 21, 23, 30, 31, 32, 41, 42, 48, 56, 57, 60, 62, 63, 66, 76, 78, 112, 113, 115, 117, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148, 150], "recommend": [0, 7, 11, 12, 17, 21], "creat": [0, 7, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 41, 42, 49, 50, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 112, 113, 115, 117, 118, 130, 134, 137, 138, 142], "activ": [0, 7, 70, 71, 112, 115, 134, 137, 142], "n": [0, 5, 23, 24, 27, 30, 56, 59, 62, 66, 68, 76, 78, 112, 115, 122, 141, 142], "If": [0, 2, 7, 8, 9, 12, 16, 17, 18, 21, 23, 28, 31, 32, 41, 42, 46, 48, 56, 57, 59, 60, 62, 63, 64, 66, 70, 71, 76, 83, 84, 86, 92, 95, 97, 99, 100, 111, 112, 115, 118, 119, 123, 124, 130, 138, 150], "you": [0, 1, 2, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 41, 42, 46, 48, 66, 76, 112, 115, 119, 130, 134, 137, 141, 146, 148, 150], "haven": 0, "t": [0, 2, 7, 23, 25, 26, 29, 30, 70, 71, 133], "yet": [0, 7, 56, 60, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "can": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 33, 36, 41, 42, 45, 47, 56, 57, 60, 63, 66, 76, 97, 111, 112, 113, 114, 115, 117, 119, 123, 130, 131, 133, 134, 137, 141, 142, 146, 148, 150], "insid": [0, 12, 20, 132], "gxx_linux": 0, "64": [0, 31, 36], "gcc_linux": 0, "now": [0, 14, 129, 130, 131, 132, 133, 138, 145], "via": [0, 12, 14, 20, 31, 33, 37, 112, 113, 115], "pypi": 0, "pip": 0, "Or": [0, 14], "altern": [0, 14, 130, 138], "clone": 0, "from": [0, 1, 2, 3, 7, 9, 12, 17, 18, 19, 31, 32, 33, 35, 41, 42, 48, 49, 50, 56, 57, 59, 60, 62, 63, 66, 68, 70, 71, 78, 97, 111, 112, 113, 115, 117, 118, 119, 125, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 146, 147, 148], "github": [0, 7, 49, 55, 125, 150], "git": 0, "http": [0, 5, 8, 23, 27, 49, 53, 55, 88, 91, 125, 137, 150], "com": [0, 125, 150], "automl": [0, 7, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 150], "smac3": [0, 7, 150], "cd": 0, "e": [0, 1, 6, 11, 12, 14, 17, 20, 23, 26, 31, 35, 41, 45, 47, 56, 60, 62, 77, 79, 112, 113, 138], "dev": 0, "channel": 0, "achiev": [0, 2], "ad": [0, 12, 38, 39, 56, 57, 59, 60, 70, 71, 97, 111, 121, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "config": [0, 2, 3, 6, 12, 38, 39, 41, 42, 47, 49, 50, 56, 57, 59, 60, 62, 63, 97, 98, 109, 111, 112, 113, 115, 117, 118, 119, 121, 125, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "add": [0, 7, 12, 15, 41, 42, 43, 44, 46, 47, 48, 49, 50, 56, 59, 60, 63, 97, 111, 130, 134, 137, 138, 142], "set": [0, 1, 5, 7, 9, 12, 17, 18, 41, 42, 44, 45, 46, 47, 48, 49, 50, 56, 57, 58, 59, 60, 63, 92, 94, 96, 97, 111, 112, 117, 119, 123, 124, 133, 134, 141, 142, 145], "channel_prior": 0, "strict": 0, "must": [0, 2, 17, 31, 32, 34, 41, 43, 44, 46, 48, 64, 65, 70, 71, 77, 78, 79, 82, 83, 88, 90, 112, 117, 118, 119, 137], "have": [0, 6, 7, 8, 9, 12, 13, 14, 16, 17, 31, 35, 41, 42, 48, 56, 57, 62, 63, 97, 98, 111, 112, 113, 114, 115, 117, 131, 134, 137, 138, 142], "4": [0, 1, 12, 17, 41, 43, 56, 60, 99, 100, 102, 103, 105, 106, 107, 118, 129, 131, 132, 134, 137, 138, 141, 142], "To": [0, 7, 9, 12, 15, 112, 115, 134, 137], "updat": [0, 12, 17, 23, 24, 38, 39, 41, 42, 48, 56, 57, 63, 88, 89, 91, 97, 111, 133], "check": [0, 12, 56, 57, 62, 63, 92, 93, 94, 95, 96, 97, 111, 112, 113, 119, 133], "current": [0, 6, 12, 23, 24, 26, 27, 31, 32, 41, 42, 48, 56, 57, 58, 59, 60, 63, 66, 68, 92, 96, 97, 98, 99, 100, 111, 132], "version": [0, 2, 7, 12, 18, 19, 31, 35], "pleas": [0, 1, 2, 7, 8, 9, 12, 13, 16, 17, 20, 23, 30, 41, 48, 56, 57, 97, 111, 150], "instruct": 0, "offici": 0, "document": [0, 2, 31, 33, 56, 58], "onc": [0, 12, 31, 36, 41, 45, 47, 48, 56, 60, 134, 137, 142], "ha": [0, 1, 18, 31, 32, 41, 42, 49, 50, 56, 57, 60, 63, 70, 71, 98, 112, 113, 115, 117], "been": [0, 1, 7, 12, 16, 18, 56, 57, 60, 62, 97, 98, 111, 112, 113, 114, 115, 131], "enabl": [0, 17, 41, 43, 46, 84, 86, 97, 111], "read": [0, 9, 21, 97, 111], "feedstock": 0, "more": [0, 2, 6, 11, 12, 14, 18, 21, 41, 47, 56, 57, 59, 112, 113, 115, 141], "detail": [0, 2, 6, 23, 27, 28, 41, 47, 137], "support": [1, 2, 3, 12, 20, 41, 43, 45, 47, 56, 57, 59, 60, 70, 71, 135, 136, 148], "determin": [1, 7, 13, 41, 42, 56, 57, 66, 70, 71, 76, 114], "well": [1, 12, 16, 23, 28, 112, 113, 130, 131, 134], "perform": [1, 2, 6, 7, 12, 13, 17, 31, 35, 36, 41, 42, 43, 45, 46, 47, 48, 56, 57, 60, 63, 84, 86, 97, 111, 112, 113, 119, 123, 138, 150], "hyperparamet": [1, 2, 3, 5, 6, 12, 17, 23, 27, 28, 31, 35, 41, 42, 44, 46, 47, 49, 50, 64, 65, 66, 68, 70, 71, 72, 76, 77, 78, 82, 83, 84, 86, 121, 129, 130, 131, 132, 133, 134, 137, 142, 145, 150], "configur": [1, 3, 6, 7, 11, 14, 16, 17, 21, 23, 24, 31, 32, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 77, 78, 82, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 125, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 150], "algorithm": [1, 2, 5, 6, 7, 13, 14, 21, 23, 27, 31, 33, 41, 42, 43, 44, 45, 46, 48, 56, 57, 97, 99, 100, 111, 112, 113, 117, 118, 125, 138, 150], "By": [1, 137], "being": [1, 6, 70, 71, 112, 117], "robust": [1, 66, 68, 76, 78], "flexibl": [1, 66, 68, 76, 78], "framework": [1, 2, 6, 66, 68, 76, 78], "bayesian": [1, 5, 6, 12, 23, 27, 28, 41, 42, 63, 66, 68, 76, 78, 92, 95, 132, 150], "optim": [1, 2, 3, 5, 6, 7, 12, 16, 18, 19, 20, 21, 23, 25, 27, 28, 30, 31, 33, 35, 38, 39, 40, 41, 42, 48, 56, 57, 63, 66, 68, 76, 78, 88, 89, 92, 95, 119, 129, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 145, 146, 148, 150], "improv": [1, 2, 12, 23, 26, 29, 41, 43, 44, 46, 99, 102], "within": [1, 62, 112, 115], "few": [1, 6, 41, 48, 138], "function": [1, 5, 6, 7, 11, 13, 14, 20, 21, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 44, 46, 48, 62, 63, 66, 68, 70, 71, 76, 97, 99, 100, 102, 111, 112, 113, 114, 115, 116, 117, 118, 119, 131, 133, 134, 135, 136, 137, 138, 142, 143, 144, 146, 147, 148], "evalu": [1, 2, 6, 7, 11, 12, 13, 18, 20, 23, 24, 31, 32, 33, 41, 42, 43, 44, 46, 48, 49, 50, 51, 54, 56, 57, 59, 60, 62, 70, 71, 92, 93, 94, 95, 96, 97, 98, 111, 112, 117, 119, 129, 130, 131, 132, 137, 138, 141, 142], "It": [1, 6, 12, 16, 56, 57, 62, 84, 86, 112, 115, 130, 131], "offer": [1, 2, 14, 112, 113], "sever": [1, 34, 38, 39, 148], "entri": [1, 2], "point": [1, 2, 12, 14, 23, 25, 31, 32, 35, 41, 43, 46, 56, 57, 64, 65, 66, 68, 83, 84, 86, 141], "pre": [1, 15], "typic": 1, "case": [1, 2, 12, 13, 14, 16, 20, 23, 28, 31, 35, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 62, 63, 97, 98, 111, 112, 113, 114, 115, 119, 138, 148], "solv": 1, "low": [1, 2, 11, 12, 41, 48], "dimension": [1, 12, 41, 43, 64, 65, 66, 67, 68, 76, 84, 86, 131], "continu": [1, 12, 21, 31, 33, 41, 42, 44, 56, 57, 58, 59, 60, 62, 97, 111, 130, 131, 134, 135, 136, 137, 141, 148, 150], "artifici": [1, 133], "global": [1, 6, 19, 31, 33, 56, 57], "problem": [1, 5, 6, 7, 41, 42, 112, 113, 115, 117, 118, 129, 131], "across": [1, 6, 21, 41, 42, 45, 47, 56, 60, 63, 97, 111, 112, 113, 115, 117, 138], "multipl": [1, 6, 7, 12, 13, 14, 20, 23, 28, 41, 42, 49, 50, 64, 83, 97, 111, 119, 134, 139, 140, 142, 148], "instanc": [1, 2, 6, 7, 12, 13, 17, 18, 21, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 76, 83, 84, 86, 97, 98, 99, 100, 111, 112, 113, 115, 117, 118, 119, 121, 125, 129, 130, 131, 133, 134, 137, 138, 145], "characterist": 1, "capabl": [1, 112, 115], "sampl": [1, 12, 14, 15, 23, 30, 31, 32, 34, 35, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 56, 59, 60, 62, 64, 65, 66, 68, 76, 78, 83, 84, 86, 119], "effici": [1, 2, 11, 31, 33, 56, 57, 97, 111, 150], "black": [1, 2, 6, 129], "box": [1, 2, 6, 129], "onli": [1, 6, 7, 10, 11, 12, 14, 17, 19, 20, 23, 24, 30, 41, 42, 45, 47, 49, 51, 56, 57, 59, 60, 62, 63, 64, 65, 70, 71, 83, 97, 99, 100, 111, 112, 114, 115, 119, 125, 129, 131, 133, 134, 137, 138, 141, 142, 145], "awar": 1, "input": [1, 6, 12, 23, 25, 41, 45, 47, 56, 59, 60, 64, 65, 66, 68, 78, 83, 84, 86, 99, 103, 124, 131], "output": [1, 6, 17, 63, 64, 65, 66, 68, 76, 119], "agnost": 1, "intern": [1, 13, 15, 41, 42, 49, 50, 56, 57, 58, 59, 60, 63, 64, 65, 66, 70, 71, 76, 77, 78, 82, 83, 88, 89, 91, 112, 113, 115, 117, 118, 119, 137], "categor": [1, 2, 31, 35, 41, 44, 130, 134, 137, 138, 142], "hierarch": 1, "condit": [1, 70, 71, 121, 130, 137, 138, 142], "integr": [1, 12, 23, 27, 66, 76, 132, 134], "configurationspac": [1, 2, 3, 31, 32, 34, 35, 36, 64, 65, 66, 67, 68, 76, 97, 111, 119, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "up": [1, 12, 56, 60, 62, 97, 111, 123, 129], "100": [1, 3, 6, 119, 129, 131, 132, 137, 138, 141], "ani": [1, 6, 7, 8, 9, 12, 19, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 41, 42, 45, 47, 49, 50, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 117, 118, 119, 129, 133, 134, 145], "object": [1, 2, 3, 6, 15, 17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 117, 118, 119, 121, 124, 129, 130, 131, 132, 133, 134, 137, 138, 142, 144, 145], "g": [1, 5, 6, 11, 12, 14, 17, 20, 31, 35, 138], "accuraci": [1, 2, 18, 134, 137, 142], "runtim": [1, 17, 18, 23, 26, 63, 99, 102, 112, 113, 115, 117, 118], "cross": [1, 6, 119, 134, 135, 136, 137, 138, 142, 148], "valid": [1, 2, 6, 41, 42, 56, 57, 60, 63, 64, 65, 119, 129, 131, 133, 134, 135, 136, 137, 138, 141, 142, 145, 148], "possibl": [1, 2, 12, 23, 28, 41, 42, 70, 71, 138], "multi": [1, 2, 6, 17, 21, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 63, 88, 89, 90, 91, 97, 98, 99, 100, 111, 112, 117, 118, 119, 134, 138, 140, 141, 142], "arbitrari": [1, 2, 112, 113, 115, 117, 118, 131, 150], "number": [1, 6, 11, 12, 13, 15, 18, 20, 23, 25, 27, 28, 31, 32, 33, 35, 36, 41, 42, 43, 44, 46, 47, 48, 49, 50, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 76, 78, 84, 86, 88, 90, 92, 93, 94, 95, 96, 97, 111, 112, 113, 114, 115, 117, 118, 119, 130, 134, 137, 138, 141, 142, 145, 150], "scalar": [1, 12, 14, 41, 42, 78, 97, 111], "both": [1, 2, 13, 14, 56, 57, 62, 114, 137, 142], "parego": [1, 5, 12, 14, 88, 143, 144, 148], "know06": [1, 5, 14], "mean": [1, 3, 7, 12, 14, 15, 41, 43, 44, 46, 48, 56, 59, 64, 65, 66, 68, 76, 77, 79, 81, 83, 84, 86, 88, 90, 97, 111, 119, 130, 134, 137, 138, 142], "aggreg": [1, 14, 41, 43, 44, 46, 48, 88, 90], "strategi": [1, 6, 14, 41, 42, 43, 44, 46, 48, 49, 50, 88, 89], "ar": [1, 2, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 20, 23, 24, 26, 31, 34, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 78, 84, 86, 97, 99, 100, 111, 112, 113, 114, 115, 117, 118, 119, 121, 124, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "fidel": [1, 2, 6, 12, 18, 21, 41, 42, 47, 56, 57, 59, 60, 63, 97, 111, 119, 137, 138], "judg": [1, 41, 42, 63], "budget": [1, 2, 6, 12, 13, 16, 17, 18, 41, 42, 43, 45, 47, 48, 56, 57, 59, 60, 62, 63, 97, 98, 99, 100, 111, 112, 113, 115, 117, 118, 119, 125, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "discard": [1, 41, 45, 47, 56, 60], "unsuit": 1, "earli": [1, 41, 48], "thi": [1, 2, 7, 8, 12, 14, 15, 19, 20, 21, 23, 24, 31, 32, 35, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 72, 76, 77, 78, 82, 84, 86, 92, 93, 95, 97, 98, 111, 112, 113, 114, 115, 116, 117, 119, 121, 131, 132, 133, 134, 137, 138, 145, 146, 148, 150], "result": [1, 2, 12, 16, 41, 42, 56, 57, 63, 112, 113, 114, 115, 117, 118, 119, 129, 133, 137, 145], "massiv": 1, "speed": 1, "find": [1, 2, 3, 6, 12, 31, 33, 56, 57, 62, 129, 130, 131, 132, 133, 145], "one": [1, 6, 7, 10, 11, 14, 17, 18, 20, 31, 34, 35, 41, 42, 48, 56, 57, 59, 60, 66, 76, 97, 99, 104, 106, 107, 108, 111, 112, 113, 114, 115, 118, 119, 129, 131, 133, 134, 138, 141, 142, 145], "dataset": [1, 3, 6, 15, 41, 42, 63, 112, 113, 115, 117, 119, 130, 134, 137, 139, 140, 142, 148], "mani": [1, 2, 6, 11, 41, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 62, 64, 83, 97, 98, 111], "line": [1, 5, 6, 21], "interfac": [1, 2, 6, 14, 21, 131], "execut": [1, 7, 12, 17, 41, 42, 47, 63, 97, 111, 112, 113, 114, 115, 117, 118, 136, 140, 144, 147], "file": [1, 8, 9, 17, 21, 41, 42, 63, 97, 111, 119, 136, 140, 144, 147], "also": [1, 2, 6, 7, 12, 13, 17, 18, 20, 56, 57, 66, 76, 97, 111, 112, 113, 115, 118, 124, 130, 133, 134, 137, 142], "commandlin": 1, "consequ": 1, "implement": [1, 2, 7, 12, 23, 24, 31, 32, 35, 36, 49, 50, 56, 57, 59, 60, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 84, 86, 88, 91, 112, 113, 115, 137], "other": [1, 12, 18, 23, 30, 41, 42, 56, 57, 63, 97, 111], "languag": 1, "temporarili": 1, "disabl": [1, 19, 41, 44, 46, 47, 49, 50, 132], "v2": [1, 7, 16, 17], "0": [1, 2, 3, 7, 12, 14, 15, 16, 17, 18, 19, 23, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 111, 118, 119, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147], "fall": 1, "back": [1, 12], "v1": [1, 17], "need": [1, 2, 12, 15, 17, 20, 21, 34, 41, 42, 56, 57, 59, 60, 70, 71, 97, 111, 112, 113, 114, 115, 138], "tabl": [1, 2, 19], "provid": [1, 2, 7, 12, 16, 18, 34, 41, 42, 45, 47, 56, 57, 60, 64, 83, 112, 115, 148], "": [1, 2, 5, 6, 7, 9, 12, 13, 19, 31, 35, 36, 41, 42, 63, 66, 68, 76, 78, 112, 113, 115, 117, 118, 119, 129, 130, 131, 132, 134, 137, 142, 145], "tool": [1, 7, 150], "complex": [1, 12, 21, 112, 113], "space": [1, 12, 17, 23, 25, 26, 28, 31, 32, 33, 35, 41, 44, 46, 47, 48, 49, 50, 77, 78, 82, 118, 119, 129, 130, 134, 137, 138], "parallel": [1, 11, 21, 112, 113, 114, 115, 119], "hypermapp": 1, "optuna": 1, "hyperopt": 1, "botorch": 1, "openbox": 1, "hpbandster": [1, 7], "four": [2, 64, 65], "core": [2, 11, 41, 42, 63, 112, 113, 115, 117, 150], "compon": [2, 9, 17, 21, 41, 42, 43, 62, 64, 65, 66, 67, 68, 76, 84, 86], "run": [2, 6, 7, 9, 11, 12, 13, 14, 17, 18, 21, 38, 39, 41, 42, 45, 47, 48, 56, 57, 58, 59, 60, 62, 63, 97, 111, 112, 113, 114, 115, 116, 117, 118, 119, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "process": [2, 5, 6, 7, 11, 12, 14, 16, 17, 18, 20, 31, 35, 38, 39, 41, 42, 44, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 78, 112, 113, 115, 117, 118, 119, 129, 132, 137, 138], "all": [2, 6, 12, 14, 16, 17, 18, 19, 21, 23, 28, 31, 35, 41, 42, 45, 47, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 70, 71, 78, 83, 84, 85, 86, 97, 99, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 123, 129, 130, 131, 134, 137, 138, 141, 148], "which": [2, 6, 7, 12, 14, 17, 19, 20, 23, 24, 31, 34, 35, 41, 42, 43, 44, 48, 49, 50, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 76, 83, 84, 86, 87, 92, 94, 96, 97, 111, 112, 113, 114, 115, 117, 118, 119, 125, 130, 131, 134, 137, 138, 150], "explain": [2, 12], "page": [2, 19, 21, 150], "thei": [2, 12, 16, 56, 59, 62], "interact": [2, 112, 113], "wai": [2, 19, 56, 57, 132], "defin": [2, 15, 18, 23, 28, 31, 32, 35, 41, 42, 63, 78, 97, 109, 112, 113, 119, 130, 131, 134, 137, 138, 142], "search": [2, 12, 23, 28, 31, 33, 35, 36, 41, 43, 44, 46, 48, 131], "tunabl": 2, "paramet": [2, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 41, 42, 43, 44, 46, 47, 48, 49, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 130, 131, 134, 137, 138, 145, 150], "legal": 2, "rang": [2, 88, 89, 90, 91, 130, 131, 134, 137, 138], "default": [2, 7, 12, 13, 14, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "valu": [2, 12, 13, 14, 17, 18, 23, 24, 25, 26, 27, 28, 30, 31, 32, 38, 39, 41, 42, 48, 63, 64, 65, 66, 68, 70, 71, 76, 78, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 121, 124, 129, 130, 131, 132, 133, 134, 137, 142, 145], "configspac": [2, 3, 31, 32, 33, 34, 35, 36, 37, 64, 65, 66, 67, 68, 76, 84, 86, 87, 97, 111, 119, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "import": [2, 3, 7, 12, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "c": [2, 3, 5, 88, 91, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 150], "myfloat": 2, "1": [2, 3, 11, 12, 13, 18, 19, 23, 24, 25, 26, 29, 31, 33, 41, 45, 46, 47, 56, 58, 59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 79, 83, 84, 86, 88, 89, 90, 91, 99, 100, 102, 103, 105, 106, 107, 119, 121, 122, 124, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 150], "5": [2, 3, 12, 17, 31, 35, 41, 43, 46, 70, 73, 84, 86, 99, 100, 102, 103, 105, 106, 107, 112, 115, 118, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 150], "uniform": [2, 31, 35, 134], "float": [2, 3, 17, 23, 25, 26, 27, 28, 29, 30, 31, 35, 41, 42, 43, 44, 46, 47, 48, 49, 50, 56, 57, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 115, 117, 118, 119, 121, 124, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142], "myint": 2, "2": [2, 6, 12, 23, 25, 31, 33, 34, 36, 41, 46, 56, 59, 84, 86, 92, 95, 99, 100, 102, 103, 105, 106, 107, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142], "integ": [2, 92, 94, 95, 96, 123, 130, 134, 137, 142], "speci": 2, "mous": 2, "cat": 2, "dog": 2, "see": [2, 6, 7, 8, 12, 13, 20, 23, 27, 28, 49, 53, 55, 56, 58, 97, 111, 141], "take": [2, 7, 11, 12, 16, 41, 42, 64, 65, 84, 86, 112, 115, 137], "return": [2, 3, 6, 12, 14, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "For": [2, 6, 7, 12, 14, 15, 41, 42, 44, 46, 47, 49, 50, 56, 57, 60, 62, 63, 70, 71, 112, 113, 114, 115, 117, 119, 137, 150], "exampl": [2, 6, 7, 9, 12, 13, 14, 15, 16, 17, 20, 23, 24, 41, 42, 44, 46, 47, 49, 50, 56, 57, 60, 62, 63, 112, 113, 115, 117, 118, 119, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "could": [2, 7, 12, 17, 112, 116, 119, 138], "neural": [2, 137], "network": [2, 41, 42, 63, 112, 113, 115, 117, 134, 137], "predict": [2, 12, 31, 35, 64, 65, 83, 84, 86], "data": [2, 3, 6, 12, 13, 23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 41, 42, 43, 46, 49, 50, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 111, 112, 113, 115, 117, 118, 119, 129, 130, 133, 134, 137, 138, 142, 145], "some": [2, 20, 21, 56, 59, 70, 71, 99, 100, 132], "would": [2, 12, 41, 42, 63, 112, 113, 115, 117], "tune": [2, 31, 36, 66, 76, 134], "learn": [2, 23, 27, 134, 137, 150], "rate": [2, 134, 137], "everi": [2, 12, 41, 42, 56, 57, 63, 92, 94, 95, 112, 113, 115, 117], "chang": [2, 9, 12, 19, 56, 57, 60, 70, 71, 97, 111, 130, 134], "final": [2, 92, 94], "tri": 2, "best": [2, 3, 6, 12, 23, 25, 26, 31, 35, 41, 42, 45, 47, 48, 56, 60, 63, 129, 130, 131, 132, 133, 138, 142, 145], "try": [2, 7, 41, 46, 138], "differ": [2, 6, 7, 12, 15, 16, 17, 31, 35, 38, 39, 41, 42, 56, 57, 84, 86, 88, 89, 112, 113, 119, 121, 122, 134, 137, 138, 142], "def": [2, 3, 12, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142], "train": [2, 3, 6, 12, 14, 15, 20, 38, 39, 41, 42, 46, 56, 57, 62, 64, 65, 66, 67, 68, 76, 84, 86, 99, 100, 119, 129, 130, 131, 132, 133, 134, 137, 138, 142], "self": [2, 12, 31, 32, 56, 57, 64, 65, 66, 70, 71, 76, 77, 78, 82, 92, 94, 97, 111, 112, 113, 114, 115, 129, 130, 131, 132, 133, 134, 137, 138, 142], "seed": [2, 3, 6, 7, 9, 12, 17, 18, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 111, 112, 113, 115, 117, 118, 119, 125, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "int": [2, 3, 23, 25, 31, 32, 35, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 114, 115, 117, 118, 119, 121, 123, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142], "model": [2, 6, 7, 11, 14, 15, 20, 21, 23, 24, 27, 28, 31, 35, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 62, 63, 99, 100, 112, 115, 119, 129, 130, 131, 132, 133, 134, 138, 150], "multilayerperceptron": 2, "learning_r": [2, 137, 138, 142], "fit": [2, 8, 23, 24, 64, 87], "alwai": [2, 7, 12, 56, 57, 60, 131], "minim": [2, 18, 31, 36, 92, 94], "smaller": [2, 41, 47, 84, 86, 121], "better": [2, 11, 12, 41, 48, 56, 57, 59, 129, 130, 131, 133, 134, 137, 138, 145, 150], "In": [2, 6, 11, 12, 13, 14, 15, 17, 18, 21, 31, 32, 41, 42, 56, 57, 60, 63, 66, 68, 76, 77, 78, 82, 97, 98, 111, 112, 113, 114, 115, 117, 119, 132, 133, 137, 138, 141, 142, 150], "gener": [2, 6, 7, 9, 11, 12, 13, 34, 41, 42, 49, 53, 55, 56, 57, 88, 89, 112, 113, 114, 115, 119, 130, 149, 150], "argument": [2, 12, 13, 17, 23, 24, 41, 42, 44, 46, 47, 49, 50, 63, 70, 71, 112, 113, 115, 117, 118, 119, 138, 142, 145], "intensifi": [2, 11, 13, 14, 19, 21, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 63, 112, 113, 114, 115, 119, 131, 132, 133, 134, 137, 141, 142], "howev": [2, 6, 7, 12, 14, 16, 17, 21, 41, 42, 56, 60, 62, 118, 141], "first": [2, 7, 12, 16, 17, 41, 42, 56, 57, 59, 60, 62, 70, 71, 97, 111, 112, 116, 117, 122, 130, 133, 141, 145], "name": [2, 9, 14, 15, 19, 23, 24, 25, 26, 27, 28, 29, 30, 41, 42, 63, 70, 71, 97, 99, 100, 111, 119, 123], "here": [2, 7, 12, 18, 23, 30, 56, 57, 62, 129, 133, 134, 138, 145, 150], "specifi": [2, 3, 9, 14, 16, 19, 20, 31, 32, 35, 41, 42, 56, 57, 60, 63, 64, 65, 66, 68, 70, 71, 77, 81, 119, 121, 129, 132, 133, 137, 145], "requir": [2, 7, 12, 13, 23, 24, 28, 30, 31, 33, 56, 60, 62, 84, 86, 97, 111, 112, 113, 117, 118, 119, 138], "addition": [2, 15, 99, 100], "successivehalv": [2, 56, 58, 60, 137], "hyperband": [2, 5, 6, 13, 41, 45, 47, 56, 60, 137], "did": [2, 9], "pass": [2, 7, 12, 13, 14, 17, 19, 20, 41, 42, 56, 57, 84, 86, 97, 99, 100, 111, 112, 113, 115, 117, 118, 119, 123, 124, 125, 129, 133, 134, 137, 138, 142, 145], "But": [2, 138], "don": [2, 7, 133], "worri": 2, "tell": [2, 12, 21, 41, 42, 56, 60, 63, 135, 136, 148], "someth": [2, 12, 17], "miss": [2, 56, 57], "never": [2, 34], "variabl": [2, 17, 56, 57, 58, 59, 60, 63, 119, 134, 137, 142], "want": [2, 6, 7, 9, 12, 14, 15, 19, 21, 23, 30, 41, 48, 130, 133, 134, 137, 138, 142, 146, 148, 150], "limit": [2, 7, 12, 17, 112, 113, 115, 117, 118], "time": [2, 7, 10, 11, 12, 16, 18, 34, 41, 42, 48, 56, 57, 63, 92, 95, 96, 97, 98, 111, 112, 113, 115, 117, 118, 119, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "where": [2, 6, 7, 9, 12, 23, 24, 28, 31, 35, 41, 48, 138, 142], "save": [2, 12, 41, 42, 56, 57, 63, 97, 111, 119], "output_directori": [2, 9, 119], "path": [2, 17, 19, 41, 42, 63, 97, 111, 119, 123], "your_output_directori": 2, "walltime_limit": [2, 119, 137, 138, 142], "120": 2, "two": [2, 12, 31, 35, 62, 84, 86, 121, 138, 142, 150], "minut": [2, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "n_trial": [2, 3, 16, 23, 28, 41, 44, 46, 47, 49, 50, 119, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "500": [2, 137, 145], "max": [2, 13, 16, 23, 26, 41, 46, 48, 56, 57, 59, 124, 130, 137, 138, 142], "trial": [2, 6, 12, 16, 18, 20, 38, 39, 41, 42, 56, 57, 59, 60, 62, 63, 97, 98, 99, 100, 111, 112, 113, 114, 115, 117, 118, 119, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "n_worker": [2, 11, 20, 112, 115, 119, 137, 142], "eight": 2, "worker": [2, 10, 11, 12, 20, 112, 113, 114, 115, 119, 137], "A": [2, 5, 6, 8, 23, 28, 31, 35, 62, 66, 68, 76, 78, 88, 89, 90, 91, 112, 113, 114, 115, 117, 118, 133, 141, 150], "construct": [2, 112, 115], "pipelin": [2, 41, 42], "variou": [2, 41, 42], "satisfi": [2, 12], "common": [2, 112, 113, 115, 134], "crucial": [2, 19, 41, 47, 56, 57, 137], "peak": 2, "idea": [2, 7, 12, 150], "behind": [2, 12], "simpl": [2, 6, 12, 19, 31, 33, 130, 133, 141, 145], "easi": 2, "understand": 2, "without": [2, 8, 23, 26, 34], "deep": [2, 70, 71, 137], "dive": [2, 12], "materi": 2, "expert": 2, "invit": 2, "specif": [2, 7, 11, 12, 14, 19, 23, 24, 41, 42, 56, 57, 70, 71, 84, 86, 99, 102, 138], "horizont": 2, "scrollabl": 2, "show": [2, 7, 12, 14, 17, 19, 118, 129, 131, 137, 141, 142, 145, 148], "what": [2, 7, 64, 65, 112, 113, 115], "reveal": 2, "medium": 2, "high": [2, 11, 12, 20], "initi": [2, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 60, 62, 63, 92, 93, 94, 95, 96, 112, 115, 119, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "design": [2, 5, 6, 21, 31, 32, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 92, 93, 112, 115, 119, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "sobol": [2, 12, 41, 44, 46, 49, 55], "surrog": [2, 14, 15, 20, 21, 23, 24, 28, 38, 39, 41, 42, 43, 44, 46, 48, 62, 64, 65, 83, 99, 100, 119, 129, 130], "gaussian": [2, 5, 6, 12, 41, 44, 64, 65, 66, 67, 68, 70, 71, 76, 78, 129], "Not": 2, "acquisit": [2, 5, 14, 21, 38, 39, 41, 42, 43, 44, 46, 48, 62, 63, 66, 76, 99, 102, 134], "expect": [2, 7, 12, 23, 26, 41, 42, 43, 44, 46, 84, 86, 99, 102, 112, 113], "log": [2, 12, 21, 23, 25, 26, 41, 42, 46, 66, 68, 77, 78, 81, 82, 84, 86, 99, 102, 105, 106, 130, 132, 134, 137, 138, 142], "maxim": [2, 14, 21, 23, 24, 25, 30, 41, 42, 43, 44, 46, 48, 62], "local": [2, 12, 31, 35, 36, 41, 42, 43, 44, 46, 63, 112, 113, 115, 117], "sort": [2, 12, 31, 35, 41, 43, 44, 46, 56, 57, 97, 111, 125, 142], "runhistori": [2, 21, 38, 39, 41, 42, 43, 44, 46, 47, 48, 56, 57, 59, 60, 62, 63, 125, 129, 131, 132, 133, 141, 142], "encod": [2, 21, 41, 42, 43, 44, 46, 48], "probabl": [2, 12, 23, 29, 41, 43, 44, 46, 77, 78, 82, 92, 94, 96], "20": [2, 19, 41, 43, 44, 46, 66, 76, 84, 86, 131, 132], "50": [2, 12, 19, 41, 44, 46, 47, 49, 50, 66, 76, 129, 130, 131, 132, 133, 137, 138, 141], "closest": [2, 7, 137], "bohb": [2, 6, 7, 137], "emphas": 2, "highli": 2, "modular": 2, "accept": [2, 41, 48, 137], "note": [2, 17, 18, 41, 42, 131], "contrast": 2, "previou": [2, 12, 31, 32, 35, 41, 42, 63, 97, 111, 129, 133, 134, 145], "instanti": [2, 6, 12, 41, 42, 44, 97, 98], "instead": [2, 6, 14, 17, 19, 20, 62, 70, 71, 137], "kwarg": [2, 23, 24, 38, 40, 49, 55, 70, 71, 84, 85, 99, 104, 108, 112, 117], "modul": [2, 19, 123], "blackboxfacad": [2, 17, 41, 44, 145], "bbfacad": 2, "hyperparameteroptimizationfacad": [2, 3, 41, 46, 47, 129, 130, 131, 132, 133, 134, 141, 142], "hpofacad": [2, 12, 129, 132, 133, 141, 142], "multifidelityfacad": [2, 7, 12, 41, 47, 137, 138], "mffacad": [2, 137, 138], "algorithmconfigurationfacad": [2, 41, 43], "acfacad": 2, "randomfacad": [2, 41, 45, 48], "rfacad": 2, "hyperbandfacad": [2, 41, 45, 48], "hbfacad": 2, "target_funct": [2, 17, 41, 42, 43, 44, 45, 46, 47, 48, 112, 117, 118, 141], "code": [3, 7, 9, 12, 17, 18, 31, 35, 56, 57, 66, 68, 76, 77, 82, 112, 115, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 146, 148], "vector": [3, 31, 36, 99, 100, 135, 136, 148], "iri": [3, 130], "numpi": [3, 70, 71, 129, 130, 134, 137, 138, 141, 142], "np": [3, 18, 23, 24, 26, 64, 65, 66, 68, 70, 71, 78, 83, 84, 86, 92, 95, 99, 100, 102, 119, 121, 129, 130, 134, 137, 138, 141, 142], "scenario": [3, 9, 11, 13, 14, 15, 16, 17, 18, 20, 23, 28, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 88, 90, 91, 99, 100, 102, 103, 105, 106, 107, 112, 113, 114, 117, 118, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "sklearn": [3, 70, 71, 130, 134, 137, 138, 142], "svm": [3, 130], "svc": [3, 130], "model_select": [3, 130, 134, 137, 138, 142], "cross_val_scor": [3, 130, 134, 137, 138, 142], "load_iri": [3, 130], "classifi": [3, 130, 134, 137, 138, 142], "random_st": [3, 130, 134, 137, 138, 142], "score": [3, 130, 134, 137, 138, 142], "target": [3, 6, 7, 11, 13, 14, 20, 21, 41, 42, 63, 64, 65, 84, 86, 97, 111, 112, 113, 115, 116, 117, 118, 119, 129, 130, 133, 134, 137, 138, 142, 146, 147, 148], "cv": [3, 6, 130, 134, 137, 138, 142], "1000": [3, 41, 44, 129, 130, 145], "determinist": [3, 7, 119, 129, 131, 133, 141, 145], "true": [3, 41, 42, 43, 46, 47, 63, 66, 68, 70, 71, 76, 84, 86, 97, 111, 119, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "200": [3, 14, 132, 137, 138, 142], "incumb": [3, 6, 12, 14, 17, 18, 23, 26, 27, 29, 31, 32, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 63, 98, 121, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "ljdr18": [5, 41, 45], "l": 5, "li": [5, 56, 57], "k": [5, 12, 31, 33, 70, 71, 97, 111, 129, 150], "jamieson": 5, "desalvo": 5, "rostamizadeh": 5, "talwalkar": 5, "novel": [5, 6], "bandit": [5, 6], "base": [5, 6, 7, 12, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 130, 138, 150], "approach": [5, 41, 48], "jmlr": [5, 150], "org": [5, 8, 49, 53, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 150], "paper": [5, 23, 27, 150], "v18": 5, "16": [5, 41, 42, 56, 59, 62, 134], "558": 5, "html": [5, 49, 53, 55, 150], "hssl22": [5, 23, 28], "carl": [5, 23, 28], "hvarfner": [5, 23, 28], "danni": 5, "stoll": 5, "artur": 5, "souza": 5, "mariu": [5, 150], "lindauer": [5, 150], "frank": [5, 150], "hutter": [5, 7, 66, 68, 76, 78, 150], "luigi": 5, "nardi": 5, "\u03c0bo": 5, "augment": [5, 6, 15, 23, 28], "user": [5, 11, 12, 16, 17, 18, 19, 23, 28, 31, 35, 41, 42, 45, 47, 56, 59, 60, 63, 112, 113, 115, 117, 135, 136, 148], "belief": [5, 23, 28, 134], "arxiv": 5, "pdf": [5, 23, 27, 88, 91], "2204": 5, "11051": 5, "j": 5, "knowl": 5, "hybrid": 5, "landscap": 5, "approxim": [5, 12], "expens": [5, 6], "multiobject": 5, "www": [5, 88, 91], "bham": [5, 88, 91], "ac": [5, 88, 91], "uk": [5, 88, 91], "jdk": [5, 88, 91], "tr3": 5, "skks10": [5, 23, 25], "sriniva": 5, "m": 5, "kakad": 5, "kraus": 5, "seeger": 5, "No": [5, 20, 41, 45, 47, 56, 60], "regret": 5, "experiment": 5, "0912": 5, "3995": 5, "bb": 6, "bo": [6, 41, 42], "cli": 6, "gp": [6, 66, 76], "mcmc": [6, 41, 44, 66, 76], "markov": 6, "chain": [6, 66, 76], "mont": [6, 66, 76], "carlo": [6, 66, 76], "hb": 6, "hp": [6, 12, 134], "mf": 6, "rf": [6, 23, 28], "roar": [6, 41, 45, 48], "onlin": [6, 41, 45, 48], "adapt": [6, 78, 137, 138, 142], "race": [6, 41, 45, 48, 56, 57, 59, 137, 150], "sequenti": [6, 7, 150], "smbo": [6, 12, 38, 39, 40, 41, 42, 88, 89, 91, 92, 93, 94, 95, 96, 112, 113, 114, 115, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "mode": 6, "doe": [6, 7, 19, 23, 30, 31, 33, 34, 63, 92, 95, 97, 111, 112, 115], "assum": [6, 7, 41, 42, 56, 57, 112, 116], "form": [6, 17, 77, 79, 118], "usual": [6, 112, 116], "emploi": 6, "weight": [6, 12, 23, 28, 31, 35, 41, 43, 44, 46, 48, 88, 90, 97, 111, 134, 143, 144, 148], "explor": [6, 12, 23, 25, 26, 29, 41, 42, 43, 44, 46], "exploit": [6, 12, 23, 25, 26, 29, 41, 42, 43, 44, 46], "minimum": [6, 31, 33, 41, 43, 46, 84, 86, 97, 111, 119, 129, 133], "its": [6, 12, 15, 18, 66, 70, 71, 76, 97, 111, 112, 113, 114, 115, 129, 130], "refer": [6, 7, 12, 13, 41, 47, 49, 53, 55, 56, 57, 150], "observ": [6, 12, 23, 26, 41, 47, 56, 57, 97, 111, 121], "anoth": [6, 12, 97, 111], "word": [6, 12, 18], "epoch": [6, 13, 119, 139, 140, 148], "size": [6, 119, 122, 134, 137], "subset": [6, 13, 15, 97, 111, 119, 138], "context": [6, 119], "let": [6, 12, 129, 130, 131, 132, 134, 137, 142, 145], "sai": 6, "them": [6, 12, 99, 104, 106, 107, 108, 112, 115, 137, 142], "extens": 6, "success": [6, 13, 16, 17, 41, 45, 47, 56, 60, 97, 98, 99, 100, 102, 103, 105, 106, 107, 111, 118, 137, 138], "halv": [6, 13, 16, 41, 45, 47, 56, 60, 137, 138], "work": [6, 7, 12, 13, 15, 21, 112, 115, 129, 142], "known": 6, "often": [6, 7, 11, 12, 14, 15, 31, 33, 41, 48, 56, 57, 62, 131], "even": [6, 8, 12, 15, 18], "transform": [6, 12, 41, 42, 78, 84, 86, 88, 89, 90, 91, 99, 100, 102, 104, 105, 106, 107, 108, 138], "each": [6, 12, 13, 15, 18, 23, 28, 31, 34, 36, 41, 42, 45, 47, 56, 57, 60, 62, 63, 66, 68, 76, 88, 89, 91, 92, 96, 97, 111, 112, 115, 119, 142], "call": [6, 12, 16, 21, 23, 24, 31, 32, 36, 38, 39, 40, 41, 42, 48, 49, 50, 56, 57, 63, 64, 65, 70, 71, 72, 77, 78, 82, 87, 112, 113, 114, 115, 117, 118, 122, 131, 133, 134, 146, 147, 148], "so": [6, 9, 12, 18, 23, 25, 26, 41, 42, 45, 47, 56, 60, 63, 98, 112, 113, 114, 115, 132, 134, 137], "found": [6, 7, 12, 23, 28, 41, 42, 56, 57, 59, 63, 92, 95, 129, 133, 145, 150], "superior": 6, "intensif": [6, 12, 16, 38, 39, 56, 59, 137], "mechan": [6, 112, 113, 137, 150], "govern": 6, "how": [6, 7, 12, 13, 14, 17, 19, 21, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 62, 63, 97, 98, 111, 112, 113, 115, 118, 122, 131, 137, 141, 142, 145, 148], "when": [6, 12, 13, 16, 20, 41, 42, 43, 45, 47, 48, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 76, 84, 86, 112, 113, 115, 117, 119, 123, 137], "trust": 6, "enough": [6, 41, 48, 112, 113], "make": [6, 7, 11, 12, 14, 17, 23, 30, 56, 57, 59, 60, 66, 76, 92, 95, 112, 113, 114, 115, 119, 133, 134, 137, 138, 142], "new": [6, 7, 9, 12, 20, 34, 38, 39, 41, 48, 56, 57, 59, 60, 62, 97, 111, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "therebi": [6, 13], "prematur": [6, 13], "than": [6, 11, 31, 33, 41, 47, 48, 56, 57, 59, 63, 77, 78, 79, 84, 86, 119, 129, 130, 131, 133, 134, 137, 138, 141, 145], "goal": 6, "solut": [6, 7, 31, 33, 37], "least": [6, 97, 111, 137], "good": [6, 137], "compromis": 6, "metric": 6, "qualiti": 6, "free": [6, 7, 8, 41, 45], "select": [6, 12, 41, 42, 45, 47, 48, 49, 50, 52, 56, 60, 62, 97, 111, 112, 113, 142], "uniformli": [6, 41, 48], "iter": [6, 12, 18, 31, 32, 34, 35, 36, 38, 39, 41, 42, 44, 46, 56, 57, 59, 62, 88, 89, 91, 92, 93, 94, 95, 96, 97, 111, 112, 113, 114, 115, 122], "compar": [6, 12, 18, 41, 45, 48, 56, 57, 60, 121, 122, 125, 137], "against": [6, 7, 41, 47, 56, 57, 59], "extend": 6, "chapter": [6, 21], "cost": [6, 12, 14, 15, 17, 21, 41, 42, 46, 56, 57, 60, 63, 88, 89, 90, 91, 97, 98, 99, 100, 111, 112, 113, 115, 117, 118, 119, 124, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "given": [6, 17, 23, 24, 25, 41, 47, 56, 57, 60, 64, 65, 92, 94, 96, 97, 99, 100, 111, 112, 113, 117, 118, 124, 125, 138], "singl": [6, 11, 12, 14, 17, 41, 43, 46, 48, 56, 57, 64, 83, 84, 86, 88, 89, 90, 91, 97, 111, 112, 113, 114, 115, 118, 137], "combin": [6, 41, 42, 56, 57, 63, 88, 89, 90, 91, 97, 111, 112, 113, 115, 119, 130, 137, 138, 150], "should": [7, 8, 12, 17, 19, 23, 24, 34, 41, 42, 43, 44, 46, 48, 56, 57, 59, 62, 63, 64, 70, 71, 83, 92, 93, 94, 95, 96, 119, 125, 129, 131], "smac2": [7, 84, 86, 133], "reimplement": 7, "origin": [7, 14, 31, 35, 77, 78, 82, 124, 150], "et": [7, 23, 27, 28, 66, 76], "al": [7, 23, 27, 28, 66, 76], "2021": [7, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "slightli": 7, "comparison": [7, 41, 47, 56, 57], "stabl": 7, "releas": 7, "java": 7, "sinc": [7, 12, 14, 17, 18, 21, 41, 48, 56, 57, 137, 141, 142], "maintain": 7, "applic": [7, 13], "cannot": [7, 20], "root": [7, 19, 99, 108, 122], "directori": [7, 63, 119], "instal": 7, "pyrfr": 7, "rais": [7, 20, 99, 100, 134, 137, 142], "cryptic": 7, "error": [7, 19, 20], "ensur": [7, 10, 23, 28, 119], "gcc": 7, "compil": 7, "same": [7, 12, 31, 35, 41, 43, 44, 45, 46, 47, 48, 56, 59, 60, 88, 90, 97, 111, 124, 133], "link": 7, "dure": [7, 12, 31, 35, 36, 41, 42, 48, 63, 84, 86], "happen": [7, 12], "anaconda": 7, "facad": [7, 12, 13, 14, 19, 63, 119, 129, 130, 134, 137, 141, 142], "discov": 7, "bug": 7, "behav": [7, 23, 28], "report": [7, 16], "open": 7, "issu": [7, 12, 31, 35, 41, 46, 150], "our": [7, 9, 13, 14, 16, 20, 130, 134, 137, 138, 142, 145, 150], "list": [7, 11, 14, 17, 23, 24, 27, 31, 32, 34, 41, 42, 43, 44, 46, 47, 48, 49, 50, 56, 57, 60, 64, 65, 66, 67, 68, 70, 71, 76, 83, 84, 86, 88, 89, 90, 91, 92, 93, 97, 98, 99, 100, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 124, 125, 129, 137, 138, 142], "befor": [7, 12, 23, 24, 31, 35, 36, 38, 39, 40, 41, 42, 46, 62, 63, 66, 76, 92, 95, 112, 113, 114, 115, 137, 142], "sure": [7, 12, 14, 17, 66, 76, 92, 95, 112, 113, 115, 116, 133], "hasn": 7, "alreadi": [7, 12, 23, 24, 56, 59, 62, 63, 97, 111, 131, 137], "tracker": [7, 12, 56, 58, 60], "latest": [7, 56, 57], "u": 7, "inform": [7, 12, 41, 42, 49, 53, 55, 56, 57, 60, 63, 97, 98, 111, 112, 113, 115, 117, 118, 130], "descript": 7, "reproduc": [7, 20, 21, 119], "about": [7, 11, 12, 56, 59, 63, 70, 71, 97, 98, 112, 113, 130, 134], "setup": [7, 41, 42, 48, 63, 123], "help": [7, 11], "resolv": 7, "packag": [7, 137, 150], "feel": 7, "screenshot": 7, "contribut": [7, 150], "discuss": [7, 21], "care": [7, 12, 41, 42], "question": 7, "feedback": 7, "prefer": 7, "locat": [7, 23, 26], "featur": [7, 12, 15, 17, 41, 43, 46, 64, 65, 66, 67, 68, 76, 83, 84, 86, 99, 100, 118, 119, 121, 138], "ongo": 7, "look": [7, 9, 13, 16, 34, 41, 48], "guid": [7, 12], "flag": [7, 133], "fals": [7, 19, 23, 26, 28, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 60, 63, 66, 70, 71, 72, 73, 74, 75, 76, 84, 86, 97, 111, 112, 115, 119, 123, 130, 131, 132, 133], "non": [7, 17, 23, 28, 70, 71, 146, 148], "thu": [7, 15, 31, 32, 134], "nevertheless": [7, 112, 115], "still": [7, 9, 12, 14, 17, 20, 97, 111, 112, 113, 114, 115, 131], "why": [7, 13], "colab": 7, "crash": [7, 99, 100, 102, 103, 105, 106, 107, 112, 116], "child": [7, 49, 50, 112, 113, 130, 137, 142], "pynish": [7, 112, 117, 119], "enforc": [7, 119], "memori": [7, 41, 42, 63, 112, 113, 115, 117, 119], "runner": [7, 12, 63], "mai": [7, 56, 57], "overcom": 7, "remov": [7, 23, 28, 31, 35, 56, 59, 118, 141, 142], "program": [8, 62], "softwar": 8, "redistribut": 8, "modifi": [8, 20], "under": 8, "term": 8, "claus": [8, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "bsd": [8, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "distribut": [8, 12, 41, 42, 63, 77, 79, 81, 84, 86, 112, 113, 115, 117, 137], "hope": 8, "warranti": 8, "impli": [8, 137], "merchant": 8, "FOR": 8, "particular": 8, "purpos": [8, 15], "receiv": [8, 12, 14, 17, 62, 97, 111, 112, 115], "copi": [8, 23, 27, 56, 57], "along": [8, 64, 65], "opensourc": 8, "automat": [9, 21, 41, 42, 112, 115], "restor": [9, 56, 57, 58, 59, 60], "state": [9, 12, 56, 57, 58, 59, 60, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 111, 130], "left": [9, 23, 26, 41, 42, 70, 71], "off": [9, 12, 23, 25, 26, 41, 42], "wa": [9, 12, 18, 23, 24, 56, 60, 62, 63, 97, 111, 112, 115, 133], "interrupt": 9, "finish": [9, 12, 38, 39, 97, 111, 112, 113, 114, 115, 129, 130, 131, 132, 133, 137, 138, 141], "do": [9, 12, 14, 15, 17, 19, 23, 30, 41, 42, 48, 63, 112, 113, 115, 117, 134, 145], "old": [9, 41, 42, 63], "deriv": [9, 134], "ask": [9, 12, 21, 38, 39, 41, 42, 63, 135, 136, 148], "whether": [9, 12, 23, 26, 28, 41, 42, 56, 57, 63, 70, 71, 92, 93, 94, 95, 96, 97, 111, 112, 113, 114, 115, 119, 133], "resum": 9, "delet": [9, 112, 115], "complet": [9, 12, 18, 41, 42, 63, 112, 113, 114, 115], "affect": [9, 41, 44, 46, 47, 49, 50, 56, 57], "wallclock": [10, 12, 16, 18, 56, 57, 63, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "cpu": [10, 119, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "involv": [10, 12, 62], "might": [11, 12, 16, 20, 56, 57, 59, 70, 71, 97, 111, 112, 113, 114, 115], "faster": 11, "slower": 11, "appli": [11, 64, 65, 78, 129], "know": [11, 70, 71, 129, 131], "underli": [11, 15], "max_config_cal": [11, 12, 41, 43, 44, 46, 48, 56, 57, 59, 131, 134, 142], "higher": [11, 12, 130], "lead": [11, 12], "less": 11, "configselector": [11, 12, 41, 42, 56, 57, 62], "retrain_aft": [11, 12, 41, 42, 62], "lower": [11, 12, 23, 25, 56, 60, 62, 77, 82, 97, 99, 100, 111, 134], "retrain": [11, 62], "As": [11, 23, 24, 114, 134], "becaus": [11, 12, 70, 71, 97, 111, 112, 113, 116, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "commun": [11, 131], "longer": [11, 138], "thread": [11, 12, 20, 56, 57], "addit": [12, 18, 20, 23, 24, 41, 43, 44, 46, 47, 48, 49, 50, 56, 57, 97, 111, 112, 113, 115, 117, 118, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "basic": [12, 14, 41, 43, 44, 46, 48, 56, 57, 59, 131], "mention": [12, 150], "start": [12, 16, 21, 38, 39, 40, 41, 42, 56, 57, 66, 76, 88, 89, 91, 112, 115, 132, 137, 138, 142], "paragraph": 12, "give": [12, 16, 19, 21, 62, 119], "pictur": 12, "These": [12, 134], "influenc": [12, 14], "drastic": 12, "shortli": 12, "main": [12, 20, 31, 35, 41, 48, 56, 57, 112, 115, 132, 133, 150], "loop": [12, 41, 42, 48, 56, 57, 59, 60, 63, 112, 113, 132], "logic": [12, 56, 59], "while": [12, 56, 57, 59, 60], "next": [12, 14, 16, 18, 31, 32, 38, 39, 41, 42, 56, 57, 58, 62, 63, 92, 93, 94, 95, 96, 112, 113, 115, 130, 131], "submit": [12, 97, 111, 112, 113, 114, 115], "wait": [12, 56, 57, 112, 113, 114, 115], "decoupl": 12, "occupi": 12, "until": [12, 112, 113, 114, 115], "avail": [12, 17, 41, 47, 56, 57, 112, 113, 114, 115, 141], "again": [12, 18, 41, 47, 56, 57, 62], "moreov": [12, 56, 57, 134], "like": [12, 17, 18, 41, 42, 48, 56, 57, 59, 60, 63, 112, 113, 115, 117, 134], "remain": [12, 63, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "empir": [12, 23, 28, 97, 111], "epm": 12, "mostli": 12, "associ": [12, 18, 63, 119], "incorpor": [12, 41, 42, 48, 56, 57, 64, 65, 66, 67, 68, 76, 84, 86, 97, 111, 119, 134], "collect": [12, 70, 71, 72, 112, 113, 115], "highest": [12, 18, 41, 42, 45, 47, 56, 57, 60, 62, 63, 97, 111], "min_trial": [12, 62], "config_selector": [12, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57], "imagin": 12, "75": 12, "505": 12, "7": [12, 64, 65, 66, 67, 68, 76, 84, 86, 87, 141, 145], "end": [12, 31, 32, 38, 39, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "step": [12, 31, 35, 36, 56, 60, 66, 76, 114, 142], "request": [12, 133], "config_gener": [12, 56, 57], "over": [12, 23, 25, 27, 28, 31, 33, 56, 59, 64, 65, 66, 76, 83, 84, 86, 92, 95, 96, 97, 111, 114, 135, 136, 141, 148], "considered_st": [12, 99, 100, 102, 103, 105, 106, 107], "timeout": 12, "consid": [12, 16, 18, 20, 41, 43, 46, 48, 56, 57, 84, 86, 97, 99, 100, 111, 114, 137, 138, 142], "normalize_cost": [12, 124], "objective_bound": [12, 97, 111], "inact": [12, 41, 42, 121], "after": [12, 14, 18, 23, 24, 38, 39, 41, 48, 56, 60, 62, 63, 92, 95, 131, 132, 133, 137, 142], "mathemat": 12, "techniqu": [12, 31, 33], "varianc": [12, 64, 65, 66, 68, 76, 83, 84, 86, 138], "section": 12, "otherwis": [12, 56, 57, 112, 115, 117, 119], "bunch": 12, "confid": [12, 23, 25, 41, 48], "bound": [12, 23, 25, 77, 82, 97, 111, 121, 124, 142], "thompson": [12, 23], "prior": [12, 23, 28, 31, 35, 70, 71, 72, 73, 74, 75, 135, 136, 148], "literatur": 12, "calcul": [12, 16, 23, 24, 97, 111, 129, 130, 131, 134, 137, 145], "respons": [12, 41, 42, 99, 100, 102, 104, 105, 106, 107, 108], "wrapper": [12, 64, 83, 112, 113, 114, 115], "differenti": [12, 31, 33], "evolut": [12, 31, 33], "neighbour": 12, "pai": 12, "attent": 12, "challeng": [12, 31, 32, 33, 34, 35, 36, 37, 41, 42, 44, 46, 56, 57, 59, 92, 93, 112, 113, 121], "experi": [12, 19, 41, 46], "ram": [12, 41, 46], "long": 12, "comput": [12, 23, 24, 25, 27, 77, 78, 82, 97, 111, 125], "challengerlist": [12, 31, 32, 34], "latin": [12, 49, 53], "hypercub": [12, 49, 53], "factori": [12, 49, 52, 97, 98], "corner": [12, 49, 52], "sequenc": [12, 49, 55], "quasi": 12, "discrep": 12, "statist": [12, 63], "method": [12, 14, 18, 23, 24, 31, 32, 33, 38, 39, 41, 42, 56, 57, 59, 60, 62, 64, 65, 70, 71, 72, 77, 78, 82, 84, 86, 112, 113, 114, 115, 117, 118, 134, 137, 138, 142], "multidimension": 12, "yield": [12, 56, 60, 62], "keep": [12, 14, 19, 20, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 76, 84, 86, 112, 113, 114, 115, 117], "track": [12, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60], "twice": [12, 141], "chanc": 12, "although": [12, 56, 57], "includ": [12, 20, 56, 57, 58, 59, 60, 63, 64, 65, 83, 134, 138, 150], "trade": [12, 23, 25, 26, 41, 42], "stuck": 12, "optimum": [12, 23, 28, 99, 100, 135, 136, 148], "guarante": [12, 21, 97, 111], "anneal": [12, 92, 94], "modulu": [12, 34, 92, 95], "far": [12, 18, 23, 25, 26, 41, 45, 47, 56, 60, 63, 98, 132], "decid": [12, 41, 42, 63, 112, 113, 150], "worth": 12, "spend": [12, 63], "pair": [12, 41, 45, 47, 56, 60, 97, 111, 142], "n_seed": [12, 41, 45, 47, 56, 57, 58, 60, 119], "lot": [12, 21, 138], "throughout": 12, "uses_se": [12, 56, 57, 59, 60], "uses_budget": [12, 56, 57, 59, 60], "uses_inst": [12, 56, 57, 59, 60], "callabl": [12, 34, 41, 42, 112, 117, 118], "saniti": 12, "fact": [12, 56, 59], "repeat": 12, "taken": [12, 31, 35, 99, 100, 125], "recogn": 12, "beforehand": [12, 134], "queue": [12, 56, 59], "That": [12, 13, 41, 46], "nativ": [12, 20, 56, 60], "everytim": [12, 17, 56, 57, 59, 118], "straight": 12, "forward": 12, "were": [12, 56, 57, 148], "go": [12, 20, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "stop": [12, 21, 38, 39, 62, 119, 132, 133, 137, 142], "update_on_iteration_start": [12, 88, 89, 91], "normal": [12, 17, 23, 29, 66, 68, 76, 77, 81, 88, 89, 90, 91, 97, 111, 124, 134], "hold": [12, 21, 23, 27, 41, 42, 56, 59, 63, 130], "un": 12, "trial_info": [12, 112, 113, 114, 115], "trial_valu": 12, "item": [12, 98, 129, 137], "info": [12, 19, 38, 39, 41, 42, 63, 97, 111, 112, 113, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "statu": [12, 17, 41, 42, 56, 57, 97, 98, 109, 111, 112, 113, 115, 117, 118], "starttim": [12, 97, 98, 111], "endtim": [12, 97, 98, 111], "additional_info": [12, 17, 97, 98, 111, 112, 113, 115, 117, 118], "get_config": [12, 97, 111, 129, 141, 142], "average_cost": [12, 18, 97, 111, 142], "format": [12, 19, 122], "afterward": [12, 56, 59], "abil": 12, "easili": [12, 119], "inherit": [12, 70, 71], "overwrit": [12, 41, 42, 43, 44, 45, 46, 47, 48, 63, 97, 111, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "class": [12, 14, 19, 23, 31, 38, 41, 49, 56, 64, 66, 70, 77, 84, 88, 92, 97, 99, 112, 129, 130, 131, 132, 133, 134, 137, 138, 142], "customcallback": [12, 132], "on_start": [12, 38, 39, 40, 132], "none": [12, 23, 24, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 129, 130, 131, 132, 133, 137, 138, 141, 142], "on_end": [12, 38, 39], "on_iteration_start": [12, 38, 39], "on_iteration_end": [12, 38, 39], "runinfo": [12, 112, 113, 115], "runvalu": 12, "bool": [12, 23, 26, 28, 38, 39, 41, 42, 43, 46, 56, 57, 59, 60, 63, 66, 68, 70, 71, 76, 84, 86, 92, 93, 94, 95, 96, 97, 111, 112, 113, 114, 115, 119, 132, 133], "just": [12, 14, 20, 41, 48, 132], "print": [12, 17, 56, 60, 63, 121, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "min_budget": [13, 119, 137, 138], "max_budget": [13, 119, 137, 138], "real": [13, 41, 42, 63, 112, 113, 115, 117, 118], "stage": [13, 38, 39, 56, 60, 132, 137, 138], "reason": [13, 70, 71, 119], "simpli": [13, 14, 41, 48, 56, 60, 145], "wherea": 13, "world": 13, "exactli": [14, 56, 59], "right": [14, 17, 23, 26, 70, 71], "histori": [14, 18, 63], "recip": 14, "obj1": 14, "obj2": 14, "dictionari": [14, 97, 111, 122], "contain": [14, 41, 42, 63, 70, 71, 97, 111, 112, 113, 114, 115, 125], "kei": [14, 17, 41, 43, 44, 45, 46, 47, 48, 56, 57, 59, 60, 97, 98, 111, 125, 145], "option": [14, 15, 17, 38, 39, 41, 42, 56, 57, 63, 64, 65, 70, 71, 97, 111, 112, 116, 118, 124, 132, 133], "custom": [14, 20, 21, 41, 42, 123, 133, 135, 136, 148], "multi_objective_algorithm": [14, 41, 42, 43, 44, 45, 46, 47, 48, 97, 99, 100, 111, 141, 142], "pareto": [14, 56, 57, 125, 141, 142], "front": [14, 56, 57, 125, 141, 142], "get_incumb": [14, 56, 57, 132, 133, 141], "plot": [14, 129, 137, 141, 142], "five": [15, 41, 44, 46, 47, 49, 50, 137, 142], "identifi": [15, 119], "id": [15, 97, 98, 111], "d0": 15, "d1": [15, 122], "d2": [15, 122], "d3": 15, "d4": 15, "instance_featur": [15, 17, 64, 65, 66, 67, 68, 76, 84, 86, 87, 118, 119, 121, 138], "those": 15, "expand": [15, 56, 57, 60, 119], "x": [15, 23, 24, 25, 26, 29, 30, 64, 65, 66, 67, 68, 70, 71, 76, 77, 79, 83, 84, 86, 99, 100, 121, 129, 131, 133, 137, 141, 142], "matrix": [15, 64, 65], "plai": 15, "role": 15, "121": 15, "6": [15, 41, 43, 46, 84, 86, 121, 129, 138, 141], "140": 15, "65": 15, "99": 15, "45": [15, 138], "102": 15, "59": 15, "132": 15, "48": 15, "opportun": 16, "regist": [16, 63], "count": [16, 119], "min": [16, 124, 137, 138, 142], "intermedi": 16, "obvious": 16, "flow": 16, "further": [17, 23, 27, 28, 49, 53, 55, 92, 95, 112, 113, 115, 116, 117, 118, 119], "script": [17, 41, 42, 118, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 146, 147, 148], "popen": [17, 118], "standard": [17, 18, 23, 29, 64, 65, 77, 81, 134], "interpret": [17, 41, 42], "filenam": [17, 19, 56, 57, 63, 97, 111, 145], "hyperparameter1": [17, 118], "5323": [17, 118], "sh": [17, 145], "bash": [17, 145], "anyth": [17, 70, 71], "els": [17, 19, 130, 137, 142], "wih": 17, "mark": [17, 56, 57], "type": [17, 23, 24, 25, 26, 27, 31, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 77, 78, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 129, 130, 134, 137, 138, 141], "bin": [17, 23, 28, 145], "usr": 17, "env": 17, "comma": [17, 118], "separ": [17, 41, 42, 118], "empti": [17, 56, 59, 62, 97, 111, 112, 113, 114, 115, 117, 118], "echo": [17, 118, 145], "cut": [17, 56, 57, 145], "f1": [17, 141, 145], "d": [17, 19, 23, 25, 145], "f2": [17, 141, 145], "v": [17, 97, 111, 112, 115, 129, 138, 145], "declar": [17, 70, 71, 145], "fi": [17, 145], "done": [17, 20, 41, 42, 56, 59, 112, 113, 114, 115, 145], "stdout": [17, 19], "white": [17, 41, 44, 70, 75, 118], "ignor": [17, 18, 41, 42, 56, 59, 62, 63, 70, 71, 129, 134, 137, 138, 142], "01": [17, 118, 136], "except": [17, 41, 42, 112, 114, 115, 134], "semicolon": 17, "string": [17, 41, 42, 118, 122], "match": 17, "statustyp": [17, 97, 98, 99, 100, 102, 103, 105, 106, 107, 109, 111, 112, 113, 115, 117, 118], "chmod": 17, "advanc": 18, "reach": [18, 62, 92, 95], "averag": [18, 41, 42, 43, 44, 46, 48, 63, 88, 90, 97, 111, 137, 142], "below": 18, "termination_cost_threshold": [18, 119], "inf": [18, 92, 95, 119, 129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "abov": 18, "infin": 18, "come": [18, 112, 115], "part": [19, 31, 32, 56, 57], "customiz": 19, "overview": 19, "easiest": 19, "behaviour": [19, 41, 42, 56, 57, 59, 60, 63], "logger": [19, 121, 123], "logging_level": [19, 41, 42, 43, 44, 45, 46, 47, 48, 132], "debug": [19, 41, 42], "30": [19, 132, 137, 138, 142, 145], "warn": [19, 97, 111, 134, 137, 138, 142], "40": [19, 132, 134, 138], "critic": 19, "sometim": [19, 20], "highlight": [19, 142], "yaml": [19, 41, 42], "displai": 19, "messag": 19, "everyth": [19, 145], "disable_existing_logg": 19, "formatt": 19, "levelnam": 19, "lineno": 19, "handler": 19, "consol": 19, "streamhandl": 19, "stream": 19, "ext": 19, "sy": 19, "dask": [20, 41, 42, 112, 115, 117, 119], "readi": 20, "mind": 20, "orchestr": 20, "fast": 20, "counterproduct": 20, "due": [20, 31, 33, 138], "overhead": [20, 31, 36], "communc": 20, "anymor": 20, "client": [20, 41, 42, 112, 115], "slurm": 20, "On": [20, 70, 71, 112, 113, 114, 115, 139, 140, 148], "spawn": [20, 119], "job": [20, 112, 115], "slurmclust": 20, "login": 20, "node": [20, 84, 86, 112, 115, 137], "obviou": 20, "hang": 20, "silent": 20, "launch": [20, 112, 113, 114, 115], "job_class": 20, "submit_command": 20, "job_cl": 20, "cancel_command": 20, "librari": 21, "strongli": 21, "hint": 21, "react": 21, "certain": 21, "thing": 21, "selector": [21, 41, 42, 56, 57, 62], "callback": [21, 34, 41, 42, 43, 44, 45, 46, 47, 48, 56, 57, 63, 133, 135, 136, 148], "criteria": 21, "termin": [21, 31, 35, 36, 112, 115], "threshold": [21, 119], "level": [21, 41, 42, 122, 123], "cluster": [21, 41, 42, 112, 115, 137], "abstractacquisitionfunct": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 42, 48], "sourc": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148], "abstract": [23, 24, 31, 32, 41, 42, 56, 57, 64, 65, 66, 67, 78, 84, 85, 88, 89, 92, 93, 99, 100, 112, 113, 115], "__call__": [23, 24, 70, 71, 88, 89, 90, 91, 112, 117, 118], "ndarrai": [23, 24, 63, 64, 65, 66, 68, 70, 71, 78, 83, 84, 86, 99, 100, 102, 103, 104, 105, 106, 107, 108, 121, 138], "properti": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 42, 49, 50, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 111, 112, 113, 117, 118, 119, 129, 130, 131, 132, 133, 134, 137, 138, 142], "meta": [23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 41, 42, 49, 50, 56, 57, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 112, 113, 117, 118, 119, 129, 133, 145], "dict": [23, 24, 25, 26, 27, 28, 29, 31, 32, 35, 36, 41, 42, 49, 50, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 115, 117, 118, 119, 122, 138, 141, 142], "str": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 41, 42, 44, 45, 47, 49, 50, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 115, 117, 118, 119, 121, 122, 138, 141, 142], "abstractmodel": [23, 24, 28, 41, 42, 64, 65, 66, 67, 83, 84, 85, 87], "full": [23, 24, 25, 26, 27, 28, 29, 30, 64, 65, 97, 111, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "attribut": [23, 24], "ei": [23, 24, 26, 41, 43, 44, 46], "fmin": [23, 24], "acqusit": [23, 24], "present": [23, 24], "_updat": [23, 24], "xi": [23, 26, 29, 30, 41, 43, 44, 46, 129], "mathbb": [23, 26], "f": [23, 26, 29, 66, 68, 76, 77, 78, 79, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 150], "mathbf": [23, 25, 26, 29, 30], "f_": [23, 26, 29], "control": [23, 25, 26, 29, 41, 43, 44, 45, 46, 47, 56, 57, 60], "balanc": [23, 25, 26, 29, 41, 43, 44, 46], "between": [23, 25, 26, 29, 41, 43, 44, 46, 63, 64, 65, 84, 86, 99, 104, 106, 107, 108], "_xi": [23, 26], "exloit": [23, 26], "_log": [23, 26], "_eta": [23, 26, 27], "eip": [23, 26, 99, 102], "per": [23, 26, 41, 44, 46, 47, 49, 50, 84, 86, 97, 99, 102, 111, 131, 134], "second": [23, 26, 34, 99, 102, 112, 115, 117, 119, 122, 129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "frac": [23, 26, 29], "r": [23, 26, 31, 33, 142], "integratedacquisitionfunct": [23, 27], "acquisition_funct": [23, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 63, 134], "margin": [23, 27, 64, 65, 66, 68, 83, 84, 86], "practic": [23, 27, 148], "jasper": [23, 27], "snoek": [23, 27, 66, 76], "nip": [23, 27, 66, 68, 76, 78], "cc": [23, 27], "4522": [23, 27], "_acquisition_funct": [23, 27], "_function": [23, 27], "lcb": [23, 25], "beta": [23, 25, 134], "mu": [23, 25, 29, 30, 134], "sqrt": [23, 25, 141], "beta_t": [23, 25], "sigma": [23, 25, 29, 30, 77, 81, 134], "text": [23, 25], "dimens": [23, 25, 64, 65, 130, 131], "tradeoff": [23, 25], "_beta": [23, 25], "_num_data": [23, 25], "seen": [23, 25], "pi": [23, 29], "p": [23, 29, 77, 79], "geq": [23, 29], "phi": [23, 29], "cdf": [23, 29], "prioracquisitionfunct": [23, 28, 134], "decay_beta": [23, 28, 134], "prior_floor": [23, 28], "1e": [23, 28, 70, 71, 72, 73, 74, 75, 84, 86, 134], "12": [23, 28, 138], "discret": [23, 28, 134], "discrete_bins_factor": [23, 28], "pibo": [23, 28], "decai": [23, 28], "factor": [23, 28, 92, 96], "solid": [23, 28, 134], "lowest": [23, 28, 41, 42, 56, 57, 59, 97, 111], "neg": [23, 28], "densiti": [23, 28], "contin": [23, 28], "trigger": [23, 28, 112, 116, 132], "avoid": [23, 28], "patholog": [23, 28], "piecewis": [23, 28], "constant": [23, 28, 31, 35, 92, 95, 137, 138, 142], "allow": [23, 28, 56, 57, 119], "togeth": [23, 30, 41, 48, 56, 60], "randomsearch": [23, 30, 31, 37, 41, 48], "localandsortedrandomsearch": [23, 30, 31, 35, 41, 43, 44, 46], "math": [23, 30, 78], "mathcal": [23, 30], "consist": [23, 30, 31, 32, 134, 137, 138, 142, 150], "abstractacquisitionmaxim": [31, 32, 33, 35, 36, 37, 41, 42], "5000": [31, 32, 33, 35, 36, 37, 138], "order": [31, 32, 41, 45, 47, 56, 60, 99, 100], "subclass": [31, 32, 41, 42, 70, 71], "_maxim": [31, 32], "becom": [31, 32], "candid": [31, 32, 33, 37], "previous_config": [31, 32], "n_point": [31, 32], "random_design": [31, 32, 34, 41, 42, 43, 44, 45, 46, 47, 48], "_challeng": [31, 32], "abstractrandomdesign": [31, 32, 34, 41, 42, 48, 92, 93, 94, 95, 96], "interleav": [31, 32, 34, 35, 41, 42, 43, 44, 46, 92, 93, 94, 95, 96], "scheme": [31, 32, 112, 113], "next_iter": [31, 32, 92, 93, 94, 95, 96], "differentialevolut": [31, 33], "differentialevolutionsolv": [31, 33], "scipi": [31, 33, 49, 53, 55], "accord": [31, 33, 35, 92, 94, 96], "multivari": [31, 33], "stochast": [31, 33, 139, 140, 148], "natur": [31, 33], "gradient": [31, 33, 70, 71, 77, 78, 82, 139, 140, 148], "larg": [31, 33, 129], "area": [31, 33], "larger": [31, 33], "convent": [31, 33], "storn": [31, 33], "price": [31, 33], "heurist": [31, 33], "journal": [31, 33, 150], "1997": [31, 33], "11": [31, 33, 137, 141], "341": [31, 33], "359": [31, 33], "localandsortedpriorrandomsearch": [31, 35], "uniform_configspac": [31, 35], "max_step": [31, 35, 36], "n_steps_plateau_walk": [31, 35, 36], "local_search_iter": [31, 35, 41, 44, 46], "prior_sampling_fract": [31, 35], "randomli": [31, 35, 41, 42, 48], "retriev": [31, 35, 56, 57, 138], "normalfloathp": [31, 35], "localsearch": [31, 35, 36], "maximum": [31, 35, 36, 41, 43, 44, 46, 48, 56, 57, 59, 63, 84, 86, 92, 94, 95, 119], "plateau": [31, 35, 36], "walk": [31, 35, 36], "ratio": [31, 35, 41, 43, 46, 84, 86], "oppos": [31, 35], "circumv": [31, 35], "begin": [31, 35, 92, 93, 95], "defaut": [31, 35], "vectorization_min_obtain": [31, 36], "vectorization_max_obtain": [31, 36], "neighbor": [31, 36], "obtain": [31, 36, 56, 57, 66, 68, 78], "reduc": [31, 34, 36, 41, 43, 46, 64, 65, 66, 67, 68, 76, 84, 86, 112, 115, 137, 145], "challenger_callback": 34, "modulus_design": 34, "modulusrandomdesign": [34, 92, 95], "necessari": 34, "hundr": 34, "closur": 34, "on_ask_end": [38, 39], "on_ask_start": [38, 39], "on_next_configurations_end": [38, 39], "essenti": [38, 39], "on_next_configurations_start": [38, 39], "on_tell_end": [38, 39, 132, 133], "stat": [38, 39, 49, 53, 55, 63, 133], "gracefulli": [38, 39, 133], "on_tell_start": [38, 39], "metadatacallback": [38, 40], "abstractfacad": [41, 42, 43, 44, 46, 48, 137, 141, 142], "acquisition_maxim": [41, 42, 43, 44, 45, 46, 47, 48], "initial_design": [41, 42, 43, 44, 45, 46, 47, 48, 130, 134, 137, 142], "runhistory_encod": [41, 42, 43, 44, 45, 46, 47, 48], "dask_client": [41, 42, 43, 44, 45, 46, 47, 48, 112, 115], "top": [41, 42], "backend": [41, 42], "organ": [41, 42], "manner": [41, 42, 43, 44, 46, 48], "suit": [41, 42], "With": [41, 42], "explicitli": [41, 42, 112, 115], "get_": [41, 42], "environment": [41, 42, 63], "abstractrunn": [41, 42, 63, 112, 113, 114, 115], "targetfunctionscriptrunn": [41, 42, 118], "most": [41, 42, 44, 46, 47, 49, 50, 97, 111, 134, 137], "promis": [41, 42, 48], "initialdesign": [41, 42], "randomdesign": [41, 42], "drawn": [41, 42, 43, 44, 46, 66, 68, 78, 92, 96], "abstractintensifi": [41, 42, 56, 57, 59, 60, 63], "abstractmultiobjectivealgorithm": [41, 42, 88, 89, 90, 91, 97, 99, 100, 111], "runhistoryencod": [41, 42, 43, 44, 48, 99, 103, 104, 105, 106, 107, 108], "liter": [41, 42, 123], "indic": [41, 42, 92, 93, 95, 112, 116, 138, 142], "noth": [41, 42], "yml": [41, 42], "inconsist": [41, 42, 63, 129, 133, 145], "exact": [41, 42, 63], "attach": [41, 42, 112, 115], "close": [41, 42, 112, 115], "manual": [41, 42, 112, 115, 134], "upon": [41, 42, 112, 115], "trialinfo": [41, 42, 56, 57, 59, 60, 63, 97, 98, 111, 112, 113, 114, 115, 132, 133], "static": [41, 42, 43, 44, 45, 46, 47, 48, 119], "get_acquisition_funct": [41, 42, 43, 44, 46, 48, 134], "get_acquisition_maxim": [41, 42, 43, 44, 46, 48], "get_config_selector": [41, 42], "retri": [41, 42, 56, 59, 62], "get_initial_design": [41, 42, 43, 44, 46, 47, 48, 130, 134, 137, 142], "warm": [41, 42], "abstractinitialdesign": [41, 42, 49, 50, 51, 52, 53, 54, 55], "get_intensifi": [41, 42, 43, 44, 45, 46, 47, 48, 131, 134, 142], "get_model": [41, 42, 43, 44, 46, 48], "get_multi_objective_algorithm": [41, 42, 43, 44, 46, 48, 141], "get_random_design": [41, 42, 43, 44, 46, 48], "get_runhistory_encod": [41, 42, 43, 44, 46, 48], "prepar": [41, 42, 99, 100], "abstractrunhistoryencod": [41, 42, 99, 100, 102, 103], "hash": [41, 42, 119, 121], "data_to_scatt": [41, 42, 63], "dask_runn": [41, 42], "scatter": [41, 42, 63, 112, 113, 115, 117, 129, 137, 141, 142], "round": [41, 42, 45, 47, 56, 60, 63, 112, 113, 115, 117], "robin": [41, 42, 63, 112, 113, 115, 117], "fashion": [41, 42, 63, 112, 113, 114, 115, 117], "group": [41, 42, 56, 60, 63, 112, 113, 115, 117], "roughli": [41, 42, 63, 112, 113, 115, 117], "speak": [41, 42, 63, 112, 113, 115, 117], "de": [41, 42, 63, 112, 113, 115, 117], "serial": [41, 42, 63, 112, 113, 114, 115, 117], "big": [41, 42, 63, 112, 113, 115, 117], "share": [41, 42, 63, 112, 113, 115, 117], "veri": [41, 42, 48, 56, 57, 63, 112, 113, 115, 117], "fill": [41, 42, 56, 57, 60, 63, 114], "describ": [41, 42, 63], "trialvalu": [41, 42, 63, 97, 98, 111, 112, 113, 114, 115, 131, 132, 133], "relev": [41, 42, 63], "regard": [41, 42, 63], "ones": [41, 42, 63, 125, 142], "additional_config": [41, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 134], "defaultinitialdesign": [41, 43, 48, 49, 51], "2000": [41, 43], "max_incumb": [41, 43, 44, 45, 46, 47, 48, 56, 57, 58, 59, 60], "n_tree": [41, 43, 46, 84, 86], "ratio_featur": [41, 43, 46, 84, 86], "8333333333333334": [41, 43, 84, 86], "min_samples_split": [41, 43, 46, 84, 86], "min_samples_leaf": [41, 43, 46, 84, 86], "max_depth": [41, 43, 46, 84, 86], "bootstrap": [41, 43, 46, 84, 86], "pca_compon": [41, 43, 64, 65, 66, 67, 68, 76, 84, 86, 87], "tree": [41, 43, 46, 84, 86], "split": [41, 43, 46, 84, 86, 134, 137, 138, 142], "leaf": [41, 43, 46, 84, 86], "depth": [41, 43, 46, 84, 86], "pca": [41, 43, 64, 65, 66, 67, 68, 76, 84, 86], "randomforest": [41, 43, 46, 84, 86], "objective_weight": [41, 43, 44, 46, 48, 88, 90, 141], "length": [41, 43, 44, 46, 48, 66, 70, 72, 76, 88, 90], "meanaggregationstrategi": [41, 43, 44, 46, 48, 88, 90], "probabilityrandomdesign": [41, 43, 44, 46, 92, 96], "n_config": [41, 44, 46, 47, 49, 50, 51, 52, 53, 54, 119, 130, 137, 142], "n_configs_per_hyperparamt": [41, 44, 46, 47], "max_ratio": [41, 44, 46, 47, 49, 50, 51, 52, 53, 54, 145], "25": [41, 44, 46, 47, 49, 50, 51, 52, 53, 54, 129, 133, 137, 145], "n_configs_per_hyperparamet": [41, 44, 46, 47, 49, 50, 51, 52, 53, 54, 137], "my": [41, 44, 46, 47, 49, 50], "cover": [41, 44, 46, 47, 49, 50], "sobolinitialdesign": [41, 44, 46, 49, 55], "race_against": [41, 44, 46], "get_kernel": [41, 44], "kernel": [41, 44, 66, 67, 68, 76, 130], "composit": [41, 44], "hammingkernel": [41, 44, 70, 72], "matern": [41, 44, 70, 73], "nois": [41, 44], "model_typ": [41, 44], "chosen": [41, 44, 137, 148], "choos": [41, 44, 66, 76, 137], "vanilla": [41, 44], "gaussianprocess": [41, 44, 66, 68, 76], "mcmcgaussianprocess": [41, 44, 66, 76], "08447232371720552": [41, 44], "aggress": [41, 45, 48, 137, 150], "eta": [41, 45, 47, 56, 58, 60, 137, 138], "instance_seed_ord": [41, 45, 47, 56, 58, 60], "shuffle_onc": [41, 45, 47, 56, 58, 60], "incumbent_select": [41, 45, 47, 56, 58, 60, 137], "highest_observed_budget": [41, 45, 47, 56, 58, 60], "proport": [41, 45, 47, 56, 60], "shuffl": [41, 45, 47, 56, 57, 59, 60, 134, 137, 138, 142], "bracket": [41, 45, 47, 56, 58, 60, 137, 138], "individu": [41, 45, 47, 56, 60, 97, 111], "any_budget": [41, 45, 47, 56, 60], "regardless": [41, 45, 47, 56, 60], "highest_budget": [41, 45, 47, 56, 60, 137], "10000": [41, 46, 129], "1048576": [41, 46, 84, 86], "scale": [41, 46, 70, 72, 77, 78, 79, 80, 82, 99, 100, 104, 106, 107, 108, 130], "runhistorylogscaledencod": [41, 46, 99, 106], "randominitialdesign": [41, 47, 49, 54], "get_trial": [41, 47, 97, 111], "notic": [41, 47, 119, 141], "queu": [41, 47], "absolut": [41, 47], "\u03b8": [41, 48], "unpromis": [41, 48], "reject": [41, 48, 56, 57, 59, 129, 130, 131, 133, 134, 137, 138, 145], "replac": [41, 48, 56, 57, 112, 117, 137], "dummi": [41, 48], "neither": [41, 48, 97, 111], "nor": [41, 48, 97, 111], "increas": [41, 48, 92, 95], "randommodel": [41, 48, 64, 87], "select_configur": [49, 50], "_select_configur": [49, 50], "factorialinitialdesign": [49, 52], "middl": [49, 52], "latinhypercubeinitialdesign": [49, 53], "doc": [49, 53], "qmc": [49, 53, 55], "latinhypercub": [49, 53], "arg": [49, 55, 84, 85, 99, 104, 108], "scrambl": [49, 55], "io": [49, 55], "devdoc": [49, 55], "event": [56, 57, 59, 60], "__iter__": [56, 57, 59, 62, 97, 111], "__post_init__": [56, 57, 60, 119], "_tf_seed": [56, 57], "_tf_instanc": [56, 57], "get_callback": [56, 57], "develop": [56, 57, 150], "futur": [56, 57, 112, 115], "get_incumbent_instance_seed_budget_key_differ": [56, 57], "There": [56, 57], "situat": [56, 57], "intersect": [56, 57], "instanceseedbudgetkei": [56, 57, 60, 97, 98, 111, 125], "get_incumbent_instance_seed_budget_kei": [56, 57], "sort_bi": [56, 57, 97, 111], "num_trial": [56, 57, 97, 111], "get_instance_seed_budget_kei": [56, 57, 60, 97, 98, 111], "get_instance_seed_keys_of_interest": [56, 57, 60], "instance_seed_kei": [56, 57], "interest": [56, 57, 60], "instanceseedkei": [56, 57, 97, 98], "get_rejected_config": [56, 57], "fail": [56, 57, 112, 115, 116, 119], "get_stat": [56, 57, 58, 59, 60], "get_trials_of_interest": [56, 57, 60], "incumbents_chang": [56, 57], "load": [56, 57, 63, 97, 111, 119, 130], "trajectori": [56, 57, 98, 137], "reset": [56, 57, 58, 59, 60, 63, 97, 111], "set_stat": [56, 57, 58, 59, 60], "dataclass": [56, 57, 131], "trajectoryitem": [56, 57, 98], "update_incumb": [56, 57, 60], "requeu": [56, 57], "b": [56, 57], "inferior": [56, 57], "notabl": [56, 57], "calculate_pareto_front": [56, 57, 125], "hard": [56, 57], "special": [56, 57], "mo": [56, 57], "amend": [56, 57], "suffici": [56, 57], "overlap": [56, 57], "lastli": [56, 57], "_max_incumb": [56, 57], "amount": [56, 57, 59, 92, 95, 112, 115], "crowd": [56, 57, 125, 141], "distanc": [56, 57, 99, 100, 125, 141], "used_walltim": [56, 57, 63], "forev": [56, 59], "exist": [56, 59, 63, 97, 111, 130, 133], "succes": [56, 60], "out": [56, 60, 66, 76], "batch": [56, 60, 122, 134, 137], "post": [56, 60, 142], "queri": [56, 60, 97, 111], "rid": [56, 60], "print_track": [56, 60], "handl": [62, 97, 111, 112, 113, 115, 117, 118], "three": 62, "etc": [62, 70, 71, 119], "intiti": 62, "next_config": 62, "store": [63, 97, 111, 137], "budget_exhaust": 63, "walltim": [63, 98, 137], "cputim": 63, "exceed": 63, "folder": 63, "print_stat": 63, "register_callback": 63, "index": 63, "remaining_cputim": 63, "subtract": 63, "remaining_tri": 63, "ta": 63, "remaining_walltim": 63, "update_acquisition_funct": 63, "update_model": 63, "used_target_function_walltim": 63, "much": [63, 97, 98, 111, 112, 115, 137, 141], "exce": 63, "y": [64, 65, 70, 71, 84, 86, 99, 100, 121, 129, 133, 137], "concret": [64, 65], "covariance_typ": [64, 65], "diagon": [64, 65], "_predict": [64, 65], "std": [64, 65], "deviat": [64, 65, 77, 81, 134], "covari": [64, 65], "whole": [64, 65], "tupl": [64, 65, 70, 71, 83, 84, 86, 97, 99, 100, 111, 112, 113, 114, 115, 117, 118, 121, 124, 138, 141], "var": [64, 65, 83, 84, 86, 119, 138], "predict_margin": [64, 65, 83, 84, 86], "_train": [64, 65], "correspond": [64, 65, 77, 79, 124], "multiobjectivemodel": [64, 83], "abstract_model": [64, 83], "abstractgaussianprocess": [66, 67, 68, 76], "n_restart": [66, 68], "normalize_i": [66, 68, 76], "likelihood": [66, 68], "robo": [66, 68, 76, 78], "klein": [66, 68, 76, 78], "falkner": [66, 68, 76, 78], "mansur": [66, 68, 76, 78], "2017": [66, 68, 76, 78], "workshop": [66, 68, 76, 78], "restart": [66, 68, 92, 94], "zero": [66, 68, 76, 99, 104, 106, 107, 108, 131], "unit": [66, 68, 76, 134], "sample_funct": [66, 68], "x_test": [66, 68], "n_func": [66, 68], "posterior": [66, 68], "function_sampl": [66, 68], "n_mcmc_walker": [66, 76], "chain_length": [66, 76], "burning_step": [66, 76], "mcmc_sampler": [66, 76], "emce": [66, 76], "average_sampl": [66, 76], "markow": [66, 76], "propos": [66, 76], "walker": [66, 76], "last": [66, 76, 130, 133], "burn": [66, 76], "actual": [66, 76, 112, 113], "sampler": [66, 76], "nut": [66, 76], "abstractkernel": [70, 71, 72, 73, 74, 75], "operate_on": [70, 71, 72, 73, 74, 75], "has_condit": [70, 71, 72, 73, 74, 75], "mixin": [70, 71], "overrid": [70, 71, 129, 133, 145], "place": [70, 71, 134], "hierarchi": [70, 71], "prevent": [70, 71], "instantiat": [70, 71], "mypi": [70, 71], "won": [70, 71], "relat": [70, 71], "superclass": [70, 71], "statement": [70, 71], "access": [70, 71], "member": [70, 71], "_call": [70, 71], "super": [70, 71], "get_param": [70, 71, 72], "arrai": [70, 71, 142], "oper": [70, 71], "abstractprior": [70, 71, 77, 78, 79, 80, 81, 82], "primarili": [70, 71], "eval_gradi": [70, 71], "estim": [70, 71, 84, 86, 99, 100], "subobject": [70, 71], "param": [70, 71], "map": [70, 71, 97, 111], "n_dim": [70, 71], "fix": [70, 71], "constantkernel": [70, 71], "constant_valu": [70, 71], "constant_value_bound": [70, 71], "05": [70, 71, 72, 73, 74, 75, 88, 91, 129, 147], "100000": [70, 71, 72, 73, 74, 75], "shape": [70, 71, 77, 79], "n_samples_x": [70, 71], "n_featur": [70, 71], "n_samples_i": [70, 71], "respect": [70, 71, 77, 78, 82, 119], "boolean": [70, 71], "k_gradient": [70, 71], "opt": [70, 71, 137], "length_scal": [70, 72, 73, 74], "length_scale_bound": [70, 72, 73, 74], "stationarykernelmixin": [70, 72], "normalizedkernelmixin": [70, 72], "ham": [70, 72], "hyperparameter_length_scal": [70, 72], "maternkernel": [70, 73], "nu": [70, 73], "productkernel": [70, 71], "k1": [70, 71], "k2": [70, 71], "product": [70, 71], "rbfkernel": [70, 74], "rbf": [70, 74, 130], "sumkernel": [70, 71], "sum": [70, 71, 97, 111], "whitekernel": [70, 75], "noise_level": [70, 75], "noise_level_bound": [70, 75], "gammaprior": [77, 79], "loc": [77, 79], "gamma": [77, 79, 130], "greater": [77, 79, 119], "canon": [77, 79], "greather": [77, 79, 119], "horseshoeprior": [77, 80], "horsesho": [77, 80], "spearmint": [77, 80, 82], "lognormalprior": [77, 81], "softtophatprior": [77, 82], "lower_bound": [77, 82], "upper_bound": [77, 82], "expon": [77, 82], "soft": [77, 82], "tophat": [77, 82], "upper": [77, 82, 97, 111, 134], "get_gradi": [77, 78, 82], "theta": [77, 78, 82], "hi": [77, 78, 82], "_get_gradi": [77, 78, 82], "get_log_prob": [77, 78, 82], "exponenti": [77, 78, 82], "_get_log_prob": [77, 78, 82], "tophatprior": [77, 82], "whenev": 78, "lnprob": 78, "rather": 78, "sample_from_prior": 78, "n_sampl": 78, "_sample_from_prior": 78, "abstractrandomforest": [84, 85, 86], "n_points_per_tre": [84, 86], "eps_pur": [84, 86], "08": [84, 86], "max_nod": [84, 86], "log_i": [84, 86], "account": [84, 86, 99, 100, 137], "total": [84, 86, 112, 115, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147], "assumpt": [84, 86], "uncertainti": [84, 86], "abc": [88, 89, 112, 113], "loss": [88, 89, 90, 91, 112, 117, 138], "rho": [88, 91], "ukci": [88, 91], "2015": [88, 91], "small": [88, 91], "posit": [88, 91, 112, 113, 115, 117, 118], "helper": [92, 93], "th": [92, 93, 94, 95, 96], "cosineannealingrandomdesign": [92, 94], "min_prob": [92, 94], "max_prob": [92, 94], "restart_iter": [92, 94], "decreas": [92, 94, 95, 96], "cosin": [92, 94], "schedul": [92, 94], "move": [92, 94, 97, 111], "_probabl": [92, 94], "dynamicmodulusrandomdesign": [92, 95], "start_modulu": [92, 95], "modulus_incr": [92, 95], "end_modulu": [92, 95], "fraction": [92, 95], "ever": [92, 95], "adjust": [92, 95], "dynamicprobabilityrandomdesign": [92, 96], "multipli": [92, 96], "get_instance_seed_kei": [97, 98], "omit": [97, 98], "overwrite_existing_tri": [97, 111], "trialkei": [97, 98, 111], "importantli": [97, 111], "theoret": [97, 111], "picklabl": [97, 111], "__contains__": [97, 111], "semant": [97, 111], "__eq__": [97, 111], "equal": [97, 111], "__getitem__": [97, 111], "__len__": [97, 111], "len": [97, 111, 137], "force_upd": [97, 111], "add_running_tri": [97, 111], "add_trial": [97, 111], "instance_seed_budget_kei": [97, 111], "wrt": [97, 111], "config_id": [97, 98, 111, 129, 137], "configuration_spac": [97, 111], "get_config_id": [97, 111], "get_configs_per_budget": [97, 111], "budget_subset": [97, 99, 100, 111], "get_cost": [97, 111, 132], "docstr": [97, 111], "re": [97, 111], "cach": [97, 111], "highest_observed_budget_onli": [97, 111], "get_min_cost": [97, 111], "min_cost": [97, 111], "get_running_config": [97, 111], "get_running_tri": [97, 111], "has_config": [97, 111], "ids_config": [97, 111], "incremental_update_cost": [97, 111], "increment": [97, 111], "disk": [97, 111], "scaral": [97, 111], "json": [97, 111], "sum_cost": [97, 111], "update_cost": [97, 111], "_cost_per_config": [97, 111], "_num_trials_per_config": [97, 111], "scratch": [97, 111], "accordingli": [97, 111, 134], "update_from_json": [97, 111], "intenum": [97, 109], "memoryout": [99, 100, 102, 103, 105, 106, 107], "lower_budget_st": [99, 100, 102, 103, 105, 106, 107], "scale_percentag": [99, 100, 102, 103, 105, 106, 107], "noqa": [99, 100], "e501": [99, 100], "percentil": [99, 100], "sub": [99, 100], "typeerror": [99, 100], "get_configur": [99, 100], "represent": [99, 100], "append": [99, 100, 137], "configs_arrai": [99, 100], "transform_response_valu": [99, 100, 102, 103, 104, 105, 106, 107, 108], "transformed_valu": [99, 100], "runhistoryeipsencod": [99, 102], "runhistoryinversescaledencod": [99, 104], "linearli": [99, 104, 106, 107, 108], "invers": [99, 104], "runhistorylogencod": [99, 105], "runhistoryscaledencod": [99, 107], "runhistorysqrtscaledencod": [99, 108], "squar": [99, 108, 141], "notevaluatederror": 110, "runtimeerror": 110, "required_argu": [112, 113, 114, 117, 118], "perspect": [112, 113], "submit_run": [112, 113, 115], "run_wrapp": [112, 113, 115], "among": [112, 113], "realli": [112, 113], "translat": [112, 113], "iter_result": [112, 113, 114, 115], "consum": [112, 113], "decis": [112, 113, 114, 115], "abl": [112, 113, 130], "count_available_work": [112, 113, 114, 115], "is_run": [112, 113, 114, 115], "instantli": [112, 113, 114, 115], "pend": [112, 113, 114, 115], "popul": [112, 113, 114, 115], "_results_queu": [112, 113, 114, 115], "get_finish": [112, 113, 114, 115], "produc": [112, 113, 114, 115], "aka": [112, 113, 115], "repres": [112, 113, 115, 117, 118, 123, 138, 150], "took": [112, 113, 115, 117, 118], "dask_data_to_scatt": [112, 113, 115, 117], "around": [112, 113], "encapsul": [112, 113], "simplifi": [112, 113], "isol": [112, 113], "submit_tri": [112, 113, 114, 115], "embed": [112, 113, 115], "eventu": [112, 113], "fifo": [112, 113], "dictat": [112, 113, 115], "submiss": [112, 113], "endeavor": [112, 113], "daskparallelrunn": [112, 115], "single_work": [112, 115], "patienc": [112, 115], "intend": [112, 115], "compli": [112, 115], "bridg": [112, 115], "pattern": [112, 115], "wrap": [112, 115], "baserunn": [112, 115], "precis": [112, 115], "task": [112, 114, 115, 119, 134], "pickl": [112, 115], "manag": [112, 115, 119], "Will": [112, 115], "__del__": [112, 115], "forc": [112, 115], "dynam": [112, 115], "resourc": [112, 115, 117], "alloc": [112, 115, 137], "procedur": [112, 115], "firstruncrashedexcept": [112, 116], "targetalgorithmabortexcept": [112, 116], "abort": [112, 116, 133], "suggest": [112, 116], "targetfunctionrunn": [112, 117], "abstractserialrunn": [112, 114, 117, 118], "element": [112, 117], "algorithm_kwarg": [112, 117, 118], "wall": [112, 117], "properli": 114, "immedi": 114, "subprocess": 118, "posixpath": 119, "smac3_output": 119, "crash_cost": 119, "cputime_limit": 119, "trial_walltime_limit": 119, "trial_memory_limit": 119, "use_default_config": 119, "frame": 119, "constraint": [119, 138], "mb": [119, 136, 140, 144, 147], "histor": 119, "benchmark": [119, 130], "fewer": 119, "count_instance_featur": 119, "count_object": 119, "make_serializ": 119, "serializ": 119, "convert_configurations_to_arrai": 121, "imput": 121, "get_conditional_hyperparamet": 121, "get_config_hash": 121, "char": 121, "get_typ": 121, "rtype": 121, "print_config_chang": 121, "chunk": 122, "recursively_compare_dict": 122, "diff": 122, "recurs": 122, "get_logg": 123, "logger_nam": 123, "setup_log": 123, "normalized_cost": 124, "config_instance_seed_budget_kei": 125, "basi": 125, "sort_by_crowding_dist": 125, "anyoptim": 125, "pymoo": 125, "blob": 125, "20abef1ade71915352217400c11ece4c2f35163": 125, "nsga2": 125, "py": [125, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147], "sorted_list": 125, "download": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148], "numer": 129, "abstract_initial_design": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "147": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "abstract_intensifi": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "305": [129, 133, 141, 145], "515": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "3ce33d": [129, 133], "590": [129, 130, 131, 133, 134, 137, 138, 145], "c53710": [129, 133], "175": [129, 130, 131, 133, 134, 137, 138, 145], "331214789301157": [129, 133], "1608731895685196": [129, 133], "50b580": [129, 133], "4316552169620991": [129, 133], "d16e41": [129, 133], "3100988641381264": [129, 133], "4dcc97": [129, 133], "22015188896172422": [129, 133], "4d21be": [129, 133], "1481212818284119": [129, 133], "348898": [129, 133], "13225703373856135": [129, 133], "c56201": [129, 133], "008886632260822758": [129, 133], "b6eee0": [129, 133], "00353744136744627": [129, 133], "06e28a": [129, 133], "0029625967410442655": [129, 133], "4026d1": [129, 133], "0009114180407276962": [129, 133], "025ea5": [129, 133], "00032238773647641494": [129, 133], "319": [129, 130, 131, 133, 137, 138, 141], "342683": 129, "0002551446012351022": 129, "860384": 129, "682757473086554e": 129, "327": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "exhaust": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "328": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "329": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "330": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "465924744409418e": 129, "09": 129, "matplotlib": [129, 137, 141, 142], "pyplot": [129, 137, 141, 142], "plt": [129, 137, 141, 142], "__copyright__": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "copyright": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "freiburg": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "hannov": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "__license__": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "quadraticfunct": [129, 133], "add_hyperparamet": [129, 130, 131, 132, 133, 134, 137, 138, 142], "figur": [129, 137, 141], "ground": 129, "truth": 129, "linspac": 129, "blue": [129, 141], "alpha": [129, 134, 138, 141], "zorder": [129, 141], "9999": 129, "marker": [129, 137, 141, 142], "o": [129, 141], "red": [129, 141, 142], "__name__": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "__main__": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "default_cost": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "get_default_configur": [129, 130, 131, 133, 134, 137, 138, 141, 142, 145], "incumbent_cost": [129, 130, 131, 133, 134, 137, 138, 145], "too": 129, "556": [129, 136], "1_quadratic_funct": [129, 136], "jupyt": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148], "notebook": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145, 148], "ipynb": [129, 130, 131, 132, 133, 134, 137, 138, 141, 142, 145], "mix": 130, "eb23b4": 130, "60c7ff": 130, "03992740880515713": 130, "2760639488343621": 130, "linear": 130, "shrink": 130, "03333333333333344": 130, "013333333333333308": 130, "incondit": [130, 137, 142], "wide": [130, 134], "poli": 130, "sigmoid": 130, "001": [130, 137, 142], "degre": 130, "coef": 130, "coef0": 130, "auto": 130, "gamma_valu": 130, "0001": [130, 137, 142], "Then": 130, "use_degre": 130, "parent": [130, 137, 142], "use_coef": 130, "use_gamma": 130, "use_gamma_valu": 130, "add_condit": [130, 137, 142], "config_dict": 130, "get_dictionari": [130, 132], "pop": 130, "204": [130, 136], "2_svm_cv": [130, 136], "98ccec": 131, "94dccd": 131, "x0": [131, 132, 145], "9968221839517355": [131, 132], "03135360777378082": [131, 132], "x1": [131, 132], "30847043171525": [131, 132], "21179260686039925": [131, 132], "94b2fe": 131, "8422549832482282": 131, "526509233029728": 131, "026b73": 131, "10203668300079549": 131, "1151862278387501": 131, "5db1de": 131, "10138875906166067": 131, "10325090860241648": 131, "c89070": 131, "08653325483166885": 131, "08549815086526724": 131, "f3174e": 131, "05367820946404134": 131, "07009655254860192": 131, "458538": 131, "08292029094844988": 131, "06495875484764024": 131, "d95598": 131, "08393076270018529": 131, "034451435520161944": 131, "2b7962": 131, "07805927091208886": 131, "0059357711510132916": 131, "16916": 131, "8499771879028607": 131, "rosenbrock2d": [131, 132], "rosenbrock": 131, "toi": 131, "serv": 131, "minimium": 131, "x_i": 131, "domain": 131, "interv": 131, "x2": [131, 132], "_": [131, 138], "assert": [131, 132, 133, 137], "90": 131, "022": [131, 136], "3_ask_and_tel": [131, 136], "easieast": 132, "1102": 132, "7877872130716": 132, "465623793958126": 132, "__future__": [132, 133, 138, 141, 142], "annot": [132, 133, 138, 141, 142], "__init__": [132, 133, 138], "trials_count": 132, "999999": 132, "143": [132, 136], "4_callback": [132, 136], "quadrat": [133, 135, 136, 148], "224": 133, "332": 133, "shut": 133, "down": 133, "493": 133, "287": 133, "209652396": 133, "09616130553975616": 133, "0393385263038637e": 133, "07": 133, "stopcallback": 133, "stop_aft": 133, "_stop_aft": 133, "And": [133, 134], "incumbent2": 133, "832": [133, 136], "5_continu": [133, 136], "layer": [134, 138, 139, 140, 148], "perceptron": [134, 138, 139, 140, 148], "mlp": [134, 137, 138, 142], "knowledg": 134, "similar": 134, "intuit": 134, "gain": 134, "categoricalhyperparamet": 134, "optimizt": 134, "stick": 134, "prior_acqusition_funct": 134, "107": 134, "fec0cb": 134, "34b1eb": 134, "logist": [134, 137, 142], "relu": [134, 137, 142], "batch_siz": [134, 137, 142], "324": 134, "128": 134, "learning_rate_init": [134, 137, 142], "1134996369914405": 134, "0010000000000000002": 134, "n_layer": [134, 137, 142], "n_neuron": [134, 137, 142], "157": 134, "108": 134, "sgd": [134, 137, 138, 142], "adam": [134, 137, 142], "34ee2a": 134, "83": 134, "066046": 134, "71": [134, 142], "7424fb": 134, "27": [134, 138], "105": 134, "038952336737852145": 134, "026719281956050667": 134, "betaintegerhyperparamet": 134, "normalfloathyperparamet": 134, "uniformintegerhyperparamet": 134, "load_digit": [134, 137, 138, 142], "convergencewarn": 134, "stratifiedkfold": [134, 137, 138, 142], "neural_network": [134, 137, 142], "mlpclassifi": [134, 137, 142], "digit": [134, 137, 138, 142], "illustr": [134, 137], "educ": 134, "believ": 134, "rel": 134, "skew": 134, "toward": 134, "wider": 134, "256": [134, 137, 142], "60": [134, 137], "tanh": [134, 137, 142], "default_valu": 134, "opinion": 134, "leav": 134, "512": 134, "center": 134, "catch_warn": [134, 137, 138, 142], "filterwarn": [134, 137, 138, 142], "categori": 134, "hidden_layer_s": [134, 137, 142], "solver": [134, 137, 142], "max_it": [134, 137, 138, 142], "fold": [134, 137, 142], "n_split": [134, 137, 138, 142], "error_scor": [134, 137, 142], "default_config": 134, "conduct": 134, "proven": 134, "29": [134, 136], "235": [134, 136], "6_prior": [134, 136], "00": [136, 140, 141, 144, 147], "36": [136, 142, 144], "992": 136, "examples_1_bas": 136, "03": [136, 140, 141], "02": [136, 140], "advantag": 137, "choic": 137, "abstract_facad": [137, 142], "198": 137, "successive_halv": [137, 138], "164": [137, 138], "323": [137, 138], "325": [137, 138], "7777777777777777": 137, "333333333333332": 137, "8ea495": 137, "704d44": 137, "214": 137, "31": 137, "005599223654063347": 137, "0038549874043245355": 137, "66": 137, "87": 137, "867bd1": 137, "004679235679993789": 137, "179": 137, "9512288570404053": 137, "383": 137, "36672856700711853": 137, "017254719900959392": 137, "82": 137, "hostedtoolcach": 137, "x64": 137, "lib": 137, "site": 137, "182": 137, "userwarn": 137, "port": 137, "8787": 137, "perhap": 137, "host": 137, "server": 137, "35659": 137, "15f702": 137, "202": 137, "0020466650158121676": 137, "56": 137, "054112911224365234": 137, "446": 137, "987522": 137, "002137678567522291": 137, "135": 137, "1518bd": 137, "244": 137, "004540507635127548": 137, "026159083874961353": 137, "equalscondit": [137, 142], "lbfg": [137, 142], "300": [137, 138, 142], "invscal": [137, 138, 142], "restrict": 137, "use_lr": [137, 142], "use_lr_init": [137, 142], "use_batch_s": [137, 142], "deactiv": 137, "virtu": 137, "placehold": 137, "lr": [137, 142], "lr_init": [137, 142], "ceil": [137, 142], "plot_trajectori": 137, "titl": [137, 141, 142, 150], "xlabel": [137, 141, 142], "ylabel": [137, 141, 142], "ylim": 137, "label": [137, 141, 142], "__class__": 137, "legend": [137, 141, 142], "intensifier_object": 137, "39": [137, 140], "316": [137, 140], "1_mlp_epoch": [137, 140], "wlog": 138, "had": 138, "binari": 138, "6666666666666665": 138, "15": 138, "588a4c": 138, "d431b1": 138, "5488135039273248": 138, "6027633760716439": 138, "eta0": 138, "0006273927602293597": 138, "03077201812975574": 138, "l1_ratio": 138, "317983179393976": 138, "06414749634878436": 138, "d7ee7": 138, "02021839744032572": 138, "018430691395340162": 138, "5865129348100832": 138, "150": [138, 141], "250": 138, "03509020805358887": 138, "4689": 138, "15489347419148672": 138, "006249006102246613": 138, "itertool": 138, "linear_model": 138, "sgdclassifi": 138, "digitsdataset": 138, "_data": 138, "get_inst": 138, "classa": 138, "classb": 138, "target_nam": 138, "get_instance_featur": 138, "get_instance_data": 138, "logical_or": 138, "00001": 138, "clf": 138, "penalti": 138, "elasticnet": 138, "early_stop": 138, "38": [138, 140], "633": [138, 140], "2_sgd_dataset": [138, 140], "descent": [139, 140, 148], "17": 140, "950": 140, "examples_2_multi_fidel": 140, "shown": [141, 142], "priorit": 141, "8a8909": 141, "598": [141, 142], "3a64dd": 141, "c865cf": 141, "9c7523": 141, "1c02c1": 141, "555ee4": 141, "a21a9d": 141, "726247": 141, "15d504": 141, "2b6ad4": 141, "914391": 141, "623": 141, "bf8bea": 141, "d05e80": 141, "df4cbd": 141, "8ba166": 141, "a50db0": 141, "346c91": 141, "c40dc1": 141, "003ffb": 141, "54cbf0": 141, "478ad0": 141, "74f0dd": 141, "ab860b": 141, "460755": 141, "d94cdf": 141, "178c1b": 141, "e7e8b7": 141, "85de3f": 141, "e837bf": 141, "2c9ff3": 141, "df9292": 141, "b3f2de": 141, "7d5595": 141, "b9185b": 141, "b90a99": 141, "e4a69b": 141, "4816bf": 141, "4558f3": 141, "b50fcc": 141, "1dc67b": 141, "74d2ac": 141, "6955fb": 141, "977060": 141, "b0a618": 141, "4e6b25": 141, "ce64ab": 141, "85f2cf": 141, "003f9a": 141, "af0c3f": 141, "36e58": 141, "993356": 141, "094fd4": 141, "3ff59b": 141, "36ae0d": 141, "ecb618": 141, "0f8a3a": 141, "6962d0": 141, "782459": 141, "80e42c": 141, "1869d6": 141, "456310": 141, "0021ff": 141, "ea381b": 141, "41b92b": 141, "57f079": 141, "25cbd8": 141, "95052f": 141, "70707c": 141, "f6e131": 141, "e1cf58": 141, "584c42": 141, "047685": 141, "b67a4d": 141, "1e8dd4": 141, "05127f": 141, "7a4361": 141, "e7fcea": 141, "f8de06": 141, "549803": 141, "71481f": 141, "232333": 141, "5cb077": 141, "6e86f8": 141, "b55ebe": 141, "ce7af0": 141, "9718a3": 141, "981229": 141, "191e0a": 141, "59c51b": 141, "0ffdff": 141, "35d45b": 141, "a7ed9": 141, "1bf099": 141, "4925ae": 141, "445f11": 141, "181e78": 141, "f660f5": 141, "8cb608": 141, "25257b": 141, "0c8f8e": 141, "d8ea27": 141, "fceb3d": 141, "20d65b": 141, "cbca1d": 141, "f5155a": 141, "accc3c": 141, "ce9297": 141, "81b9ac": 141, "0c11a6": 141, "5706ae": 141, "c81c9a": 141, "d14060": 141, "481bd6": 141, "d74a3e": 141, "b80c96": 141, "4e664": 141, "cbcc66": 141, "5dc22c": 141, "98c70e": 141, "206fc8": 141, "cedbe5": 141, "5ce981": 141, "3bfad0": 141, "3b1777": 141, "bd5424": 141, "d710c6": 141, "8f0869": 141, "2715ad": 141, "3bb3a3": 141, "18173d": 141, "a3edd7": 141, "3132a2": 141, "86b17f": 141, "9f4f72": 141, "63b5d0": 141, "8c6c08": 141, "ed3fe5": 141, "f741ba": 141, "860fa6": 141, "9c786d": 141, "c75780": 141, "c5167c": 141, "33cfef": 141, "854545": 141, "97176f": 141, "ccdc50": 141, "33c795": 141, "f33294": 141, "82d292": 141, "70f1b6": 141, "01538581": 141, "51922763": 141, "81477017e": 141, "19551629e": 141, "66494111": 141, "40318427": 141, "28063773": 141, "16162765": 141, "21948125": 141, "80227625": 141, "09228592": 141, "87714199": 141, "16368713": 141, "04898446": 141, "51598724": 141, "17124171": 141, "60303937": 141, "53859173": 141, "0255363": 141, "33268282": 141, "metric1": 141, "metric2": 141, "plot_from_smac": 141, "enumer": 141, "3000": 141, "943": [141, 144], "1_schaffer": [141, 144], "target_function_runn": 142, "97ef22": 142, "f88a6b": 142, "d77b40": 142, "d2d477": 142, "317d5f": 142, "5075609683990479": 142, "172": 142, "60155834": 142, "24724472": 142, "88924791": 142, "30281878": 142, "02616063": 142, "73300385": 142, "03952105": 142, "69087923": 142, "0253242": 142, "74936557": 142, "multi_object": 142, "start_tim": 142, "plot_pareto": 142, "average_pareto_cost": 142, "vstack": 142, "pareto_cost": 142, "argsort": 142, "costs_x": 142, "costs_i": 142, "pareto_costs_x": 142, "pareto_costs_i": 142, "tolist": 142, "linestyl": 142, "195": [142, 144], "2_parego": [142, 144], "2d": [143, 144, 148], "schaffer": [143, 144, 148], "47": 144, "138": 144, "examples_3_multi_object": 144, "content": 145, "95": 145, "33ba44": 145, "249a5c": 145, "267": 145, "144": 145, "17babd": 145, "98": 145, "6bd331": 145, "471": [145, 147], "1_call_target_function_script": [145, 147], "examples_5_commandlin": 147, "varieti": 148, "examples_python": 148, "zip": 148, "examples_jupyt": 148, "miro": 149, "Its": 150, "cite": 150, "articl": 150, "jmlr22a": 150, "author": 150, "katharina": 150, "eggensperg": 150, "matthia": 150, "feurer": 150, "andr\u00e9": 150, "biedenkapp": 150, "difan": 150, "deng": 150, "carolin": 150, "benjamin": 150, "tim": 150, "ruhkopf": 150, "ren\u00e9": 150, "sass": 150, "versatil": 150, "research": 150, "year": 150, "2022": 150, "volum": 150, "23": 150, "54": 150, "url": 150, "v23": 150, "21": 150, "0888": 150, "hoo": 150, "h": 150, "leyton": 150, "brown": 150, "proceed": 150, "confer": 150, "intellig": 150, "lion": 150, "visit": 150, "guidelin": 150}, "objects": {"smac": [[22, 0, 0, "-", "acquisition"], [38, 0, 0, "-", "callback"], [41, 0, 0, "-", "facade"], [49, 0, 0, "-", "initial_design"], [56, 0, 0, "-", "intensifier"], [61, 0, 0, "-", "main"], [64, 0, 0, "-", "model"], [88, 0, 0, "-", "multi_objective"], [92, 0, 0, "-", "random_design"], [97, 0, 0, "-", "runhistory"], [112, 0, 0, "-", "runner"], [119, 0, 0, "-", "scenario"], [120, 0, 0, "-", "utils"]], "smac.acquisition": [[23, 0, 0, "-", "function"], [31, 0, 0, "-", "maximizer"]], "smac.acquisition.function": [[23, 1, 1, "", "AbstractAcquisitionFunction"], [23, 1, 1, "", "EI"], [23, 1, 1, "", "EIPS"], [23, 1, 1, "", "IntegratedAcquisitionFunction"], [23, 1, 1, "", "LCB"], [23, 1, 1, "", "PI"], [23, 1, 1, "", "PriorAcquisitionFunction"], [23, 1, 1, "", "TS"], [24, 0, 0, "-", "abstract_acquisition_function"], [25, 0, 0, "-", "confidence_bound"], [26, 0, 0, "-", "expected_improvement"], [27, 0, 0, "-", "integrated_acquisition_function"], [28, 0, 0, "-", "prior_acqusition_function"], [29, 0, 0, "-", "probability_improvement"], [30, 0, 0, "-", "thompson"]], "smac.acquisition.function.AbstractAcquisitionFunction": [[23, 2, 1, "", "__call__"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "model"], [23, 3, 1, "", "name"], [23, 2, 1, "", "update"]], "smac.acquisition.function.EI": [[23, 4, 1, "", "_eta"], [23, 4, 1, "", "_log"], [23, 4, 1, "", "_xi"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.EIPS": [[23, 3, 1, "", "name"]], "smac.acquisition.function.IntegratedAcquisitionFunction": [[23, 4, 1, "", "_acquisition_function"], [23, 4, 1, "", "_eta"], [23, 4, 1, "", "_functions"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.LCB": [[23, 4, 1, "", "_beta"], [23, 4, 1, "", "_num_data"], [23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.PI": [[23, 3, 1, "", "meta"], [23, 3, 1, "", "name"]], "smac.acquisition.function.PriorAcquisitionFunction": [[23, 3, 1, "", "meta"], [23, 3, 1, "", "model"], [23, 3, 1, "", "name"]], "smac.acquisition.function.TS": [[23, 3, 1, "", "name"]], "smac.acquisition.function.abstract_acquisition_function": [[24, 1, 1, "", "AbstractAcquisitionFunction"]], "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction": [[24, 2, 1, "", "__call__"], [24, 3, 1, "", "meta"], [24, 3, 1, "", "model"], [24, 3, 1, "", "name"], [24, 2, 1, "", "update"]], "smac.acquisition.function.confidence_bound": [[25, 1, 1, "", "LCB"]], "smac.acquisition.function.confidence_bound.LCB": [[25, 4, 1, "", "_beta"], [25, 4, 1, "", "_num_data"], [25, 3, 1, "", "meta"], [25, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement": [[26, 1, 1, "", "EI"], [26, 1, 1, "", "EIPS"]], "smac.acquisition.function.expected_improvement.EI": [[26, 4, 1, "", "_eta"], [26, 4, 1, "", "_log"], [26, 4, 1, "", "_xi"], [26, 3, 1, "", "meta"], [26, 3, 1, "", "name"]], "smac.acquisition.function.expected_improvement.EIPS": [[26, 3, 1, "", "name"]], "smac.acquisition.function.integrated_acquisition_function": [[27, 1, 1, "", "IntegratedAcquisitionFunction"]], "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction": [[27, 4, 1, "", "_acquisition_function"], [27, 4, 1, "", "_eta"], [27, 4, 1, "", "_functions"], [27, 3, 1, "", "meta"], [27, 3, 1, "", "name"]], "smac.acquisition.function.prior_acqusition_function": [[28, 1, 1, "", "PriorAcquisitionFunction"]], "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction": [[28, 3, 1, "", "meta"], [28, 3, 1, "", "model"], [28, 3, 1, "", "name"]], "smac.acquisition.function.probability_improvement": [[29, 1, 1, "", "PI"]], "smac.acquisition.function.probability_improvement.PI": [[29, 3, 1, "", "meta"], [29, 3, 1, "", "name"]], "smac.acquisition.function.thompson": [[30, 1, 1, "", "TS"]], "smac.acquisition.function.thompson.TS": [[30, 3, 1, "", "name"]], "smac.acquisition.maximizer": [[31, 1, 1, "", "AbstractAcquisitionMaximizer"], [31, 1, 1, "", "DifferentialEvolution"], [31, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [31, 1, 1, "", "LocalAndSortedRandomSearch"], [31, 1, 1, "", "LocalSearch"], [31, 1, 1, "", "RandomSearch"], [32, 0, 0, "-", "abstract_acqusition_maximizer"], [33, 0, 0, "-", "differential_evolution"], [34, 0, 0, "-", "helpers"], [35, 0, 0, "-", "local_and_random_search"], [36, 0, 0, "-", "local_search"], [37, 0, 0, "-", "random_search"]], "smac.acquisition.maximizer.AbstractAcquisitionMaximizer": [[31, 3, 1, "", "acquisition_function"], [31, 2, 1, "", "maximize"], [31, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalAndSortedRandomSearch": [[31, 3, 1, "", "acquisition_function"], [31, 3, 1, "", "meta"]], "smac.acquisition.maximizer.LocalSearch": [[31, 3, 1, "", "meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[32, 1, 1, "", "AbstractAcquisitionMaximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer": [[32, 3, 1, "", "acquisition_function"], [32, 2, 1, "", "maximize"], [32, 3, 1, "", "meta"]], "smac.acquisition.maximizer.differential_evolution": [[33, 1, 1, "", "DifferentialEvolution"]], "smac.acquisition.maximizer.helpers": [[34, 1, 1, "", "ChallengerList"]], "smac.acquisition.maximizer.local_and_random_search": [[35, 1, 1, "", "LocalAndSortedPriorRandomSearch"], [35, 1, 1, "", "LocalAndSortedRandomSearch"]], "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch": [[35, 3, 1, "", "acquisition_function"], [35, 3, 1, "", "meta"]], "smac.acquisition.maximizer.local_search": [[36, 1, 1, "", "LocalSearch"]], "smac.acquisition.maximizer.local_search.LocalSearch": [[36, 3, 1, "", "meta"]], "smac.acquisition.maximizer.random_search": [[37, 1, 1, "", "RandomSearch"]], "smac.callback": [[38, 1, 1, "", "Callback"], [38, 1, 1, "", "MetadataCallback"], [39, 0, 0, "-", "callback"], [40, 0, 0, "-", "metadata_callback"]], "smac.callback.Callback": [[38, 2, 1, "", "on_ask_end"], [38, 2, 1, "", "on_ask_start"], [38, 2, 1, "", "on_end"], [38, 2, 1, "", "on_iteration_end"], [38, 2, 1, "", "on_iteration_start"], [38, 2, 1, "", "on_next_configurations_end"], [38, 2, 1, "", "on_next_configurations_start"], [38, 2, 1, "", "on_start"], [38, 2, 1, "", "on_tell_end"], [38, 2, 1, "", "on_tell_start"]], "smac.callback.MetadataCallback": [[38, 2, 1, "", "on_start"]], "smac.callback.callback": [[39, 1, 1, "", "Callback"]], "smac.callback.callback.Callback": [[39, 2, 1, "", "on_ask_end"], [39, 2, 1, "", "on_ask_start"], [39, 2, 1, "", "on_end"], [39, 2, 1, "", "on_iteration_end"], [39, 2, 1, "", "on_iteration_start"], [39, 2, 1, "", "on_next_configurations_end"], [39, 2, 1, "", "on_next_configurations_start"], [39, 2, 1, "", "on_start"], [39, 2, 1, "", "on_tell_end"], [39, 2, 1, "", "on_tell_start"]], "smac.callback.metadata_callback": [[40, 1, 1, "", "MetadataCallback"]], "smac.callback.metadata_callback.MetadataCallback": [[40, 2, 1, "", "on_start"]], "smac.facade": [[41, 1, 1, "", "AbstractFacade"], [41, 1, 1, "", "AlgorithmConfigurationFacade"], [41, 1, 1, "", "BlackBoxFacade"], [41, 1, 1, "", "HyperbandFacade"], [41, 1, 1, "", "HyperparameterOptimizationFacade"], [41, 1, 1, "", "MultiFidelityFacade"], [41, 1, 1, "", "RandomFacade"], [42, 0, 0, "-", "abstract_facade"], [43, 0, 0, "-", "algorithm_configuration_facade"], [44, 0, 0, "-", "blackbox_facade"], [45, 0, 0, "-", "hyperband_facade"], [46, 0, 0, "-", "hyperparameter_optimization_facade"], [47, 0, 0, "-", "multi_fidelity_facade"], [48, 0, 0, "-", "random_facade"]], "smac.facade.AbstractFacade": [[41, 2, 1, "", "ask"], [41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_config_selector"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"], [41, 3, 1, "", "intensifier"], [41, 3, 1, "", "meta"], [41, 2, 1, "", "optimize"], [41, 3, 1, "", "optimizer"], [41, 3, 1, "", "runhistory"], [41, 3, 1, "", "scenario"], [41, 2, 1, "", "tell"], [41, 2, 1, "", "validate"]], "smac.facade.AlgorithmConfigurationFacade": [[41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.BlackBoxFacade": [[41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_kernel"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.HyperbandFacade": [[41, 2, 1, "", "get_intensifier"]], "smac.facade.HyperparameterOptimizationFacade": [[41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.MultiFidelityFacade": [[41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"]], "smac.facade.RandomFacade": [[41, 2, 1, "", "get_acquisition_function"], [41, 2, 1, "", "get_acquisition_maximizer"], [41, 2, 1, "", "get_initial_design"], [41, 2, 1, "", "get_intensifier"], [41, 2, 1, "", "get_model"], [41, 2, 1, "", "get_multi_objective_algorithm"], [41, 2, 1, "", "get_random_design"], [41, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.abstract_facade": [[42, 1, 1, "", "AbstractFacade"]], "smac.facade.abstract_facade.AbstractFacade": [[42, 2, 1, "", "ask"], [42, 2, 1, "", "get_acquisition_function"], [42, 2, 1, "", "get_acquisition_maximizer"], [42, 2, 1, "", "get_config_selector"], [42, 2, 1, "", "get_initial_design"], [42, 2, 1, "", "get_intensifier"], [42, 2, 1, "", "get_model"], [42, 2, 1, "", "get_multi_objective_algorithm"], [42, 2, 1, "", "get_random_design"], [42, 2, 1, "", "get_runhistory_encoder"], [42, 3, 1, "", "intensifier"], [42, 3, 1, "", "meta"], [42, 2, 1, "", "optimize"], [42, 3, 1, "", "optimizer"], [42, 3, 1, "", "runhistory"], [42, 3, 1, "", "scenario"], [42, 2, 1, "", "tell"], [42, 2, 1, "", "validate"]], "smac.facade.algorithm_configuration_facade": [[43, 1, 1, "", "AlgorithmConfigurationFacade"]], "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade": [[43, 2, 1, "", "get_acquisition_function"], [43, 2, 1, "", "get_acquisition_maximizer"], [43, 2, 1, "", "get_initial_design"], [43, 2, 1, "", "get_intensifier"], [43, 2, 1, "", "get_model"], [43, 2, 1, "", "get_multi_objective_algorithm"], [43, 2, 1, "", "get_random_design"], [43, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[44, 1, 1, "", "BlackBoxFacade"]], "smac.facade.blackbox_facade.BlackBoxFacade": [[44, 2, 1, "", "get_acquisition_function"], [44, 2, 1, "", "get_acquisition_maximizer"], [44, 2, 1, "", "get_initial_design"], [44, 2, 1, "", "get_intensifier"], [44, 2, 1, "", "get_kernel"], [44, 2, 1, "", "get_model"], [44, 2, 1, "", "get_multi_objective_algorithm"], [44, 2, 1, "", "get_random_design"], [44, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.hyperband_facade": [[45, 1, 1, "", "HyperbandFacade"]], "smac.facade.hyperband_facade.HyperbandFacade": [[45, 2, 1, "", "get_intensifier"]], "smac.facade.hyperparameter_optimization_facade": [[46, 1, 1, "", "HyperparameterOptimizationFacade"]], "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade": [[46, 2, 1, "", "get_acquisition_function"], [46, 2, 1, "", "get_acquisition_maximizer"], [46, 2, 1, "", "get_initial_design"], [46, 2, 1, "", "get_intensifier"], [46, 2, 1, "", "get_model"], [46, 2, 1, "", "get_multi_objective_algorithm"], [46, 2, 1, "", "get_random_design"], [46, 2, 1, "", "get_runhistory_encoder"]], "smac.facade.multi_fidelity_facade": [[47, 1, 1, "", "MultiFidelityFacade"]], "smac.facade.multi_fidelity_facade.MultiFidelityFacade": [[47, 2, 1, "", "get_initial_design"], [47, 2, 1, "", "get_intensifier"]], "smac.facade.random_facade": [[48, 1, 1, "", "RandomFacade"]], "smac.facade.random_facade.RandomFacade": [[48, 2, 1, "", "get_acquisition_function"], [48, 2, 1, "", "get_acquisition_maximizer"], [48, 2, 1, "", "get_initial_design"], [48, 2, 1, "", "get_intensifier"], [48, 2, 1, "", "get_model"], [48, 2, 1, "", "get_multi_objective_algorithm"], [48, 2, 1, "", "get_random_design"], [48, 2, 1, "", "get_runhistory_encoder"]], "smac.initial_design": [[49, 1, 1, "", "AbstractInitialDesign"], [49, 1, 1, "", "DefaultInitialDesign"], [49, 1, 1, "", "FactorialInitialDesign"], [49, 1, 1, "", "LatinHypercubeInitialDesign"], [49, 1, 1, "", "RandomInitialDesign"], [49, 1, 1, "", "SobolInitialDesign"], [50, 0, 0, "-", "abstract_initial_design"], [51, 0, 0, "-", "default_design"], [52, 0, 0, "-", "factorial_design"], [53, 0, 0, "-", "latin_hypercube_design"], [54, 0, 0, "-", "random_design"], [55, 0, 0, "-", "sobol_design"]], "smac.initial_design.AbstractInitialDesign": [[49, 3, 1, "", "meta"], [49, 2, 1, "", "select_configurations"]], "smac.initial_design.abstract_initial_design": [[50, 1, 1, "", "AbstractInitialDesign"]], "smac.initial_design.abstract_initial_design.AbstractInitialDesign": [[50, 3, 1, "", "meta"], [50, 2, 1, "", "select_configurations"]], "smac.initial_design.default_design": [[51, 1, 1, "", "DefaultInitialDesign"]], "smac.initial_design.factorial_design": [[52, 1, 1, "", "FactorialInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[53, 1, 1, "", "LatinHypercubeInitialDesign"]], "smac.initial_design.random_design": [[54, 1, 1, "", "RandomInitialDesign"]], "smac.initial_design.sobol_design": [[55, 1, 1, "", "SobolInitialDesign"]], "smac.intensifier": [[56, 1, 1, "", "AbstractIntensifier"], [56, 1, 1, "", "Hyperband"], [56, 1, 1, "", "Intensifier"], [56, 1, 1, "", "SuccessiveHalving"], [57, 0, 0, "-", "abstract_intensifier"], [58, 0, 0, "-", "hyperband"], [59, 0, 0, "-", "intensifier"], [60, 0, 0, "-", "successive_halving"]], "smac.intensifier.AbstractIntensifier": [[56, 2, 1, "", "__iter__"], [56, 2, 1, "", "__post_init__"], [56, 3, 1, "", "config_generator"], [56, 3, 1, "", "config_selector"], [56, 2, 1, "", "get_callback"], [56, 2, 1, "", "get_incumbent"], [56, 2, 1, "", "get_incumbent_instance_seed_budget_key_differences"], [56, 2, 1, "", "get_incumbent_instance_seed_budget_keys"], [56, 2, 1, "", "get_incumbents"], [56, 2, 1, "", "get_instance_seed_budget_keys"], [56, 2, 1, "", "get_instance_seed_keys_of_interest"], [56, 2, 1, "", "get_rejected_configs"], [56, 2, 1, "", "get_state"], [56, 2, 1, "", "get_trials_of_interest"], [56, 3, 1, "", "incumbents_changed"], [56, 2, 1, "", "load"], [56, 3, 1, "", "meta"], [56, 2, 1, "", "reset"], [56, 3, 1, "", "runhistory"], [56, 2, 1, "", "save"], [56, 2, 1, "", "set_state"], [56, 3, 1, "", "trajectory"], [56, 2, 1, "", "update_incumbents"], [56, 3, 1, "", "used_walltime"], [56, 3, 1, "", "uses_budgets"], [56, 3, 1, "", "uses_instances"], [56, 3, 1, "", "uses_seeds"]], "smac.intensifier.Hyperband": [[56, 2, 1, "", "get_state"], [56, 2, 1, "", "reset"], [56, 2, 1, "", "set_state"]], "smac.intensifier.Intensifier": [[56, 2, 1, "", "__iter__"], [56, 2, 1, "", "get_state"], [56, 2, 1, "", "reset"], [56, 2, 1, "", "set_state"], [56, 3, 1, "", "uses_budgets"], [56, 3, 1, "", "uses_instances"], [56, 3, 1, "", "uses_seeds"]], "smac.intensifier.SuccessiveHalving": [[56, 2, 1, "", "__post_init__"], [56, 2, 1, "", "get_instance_seed_budget_keys"], [56, 2, 1, "", "get_state"], [56, 2, 1, "", "get_trials_of_interest"], [56, 3, 1, "", "meta"], [56, 2, 1, "", "print_tracker"], [56, 2, 1, "", "reset"], [56, 2, 1, "", "set_state"], [56, 3, 1, "", "uses_budgets"], [56, 3, 1, "", "uses_instances"], [56, 3, 1, "", "uses_seeds"]], "smac.intensifier.abstract_intensifier": [[57, 1, 1, "", "AbstractIntensifier"]], "smac.intensifier.abstract_intensifier.AbstractIntensifier": [[57, 2, 1, "", "__iter__"], [57, 2, 1, "", "__post_init__"], [57, 3, 1, "", "config_generator"], [57, 3, 1, "", "config_selector"], [57, 2, 1, "", "get_callback"], [57, 2, 1, "", "get_incumbent"], [57, 2, 1, "", "get_incumbent_instance_seed_budget_key_differences"], [57, 2, 1, "", "get_incumbent_instance_seed_budget_keys"], [57, 2, 1, "", "get_incumbents"], [57, 2, 1, "", "get_instance_seed_budget_keys"], [57, 2, 1, "", "get_instance_seed_keys_of_interest"], [57, 2, 1, "", "get_rejected_configs"], [57, 2, 1, "", "get_state"], [57, 2, 1, "", "get_trials_of_interest"], [57, 3, 1, "", "incumbents_changed"], [57, 2, 1, "", "load"], [57, 3, 1, "", "meta"], [57, 2, 1, "", "reset"], [57, 3, 1, "", "runhistory"], [57, 2, 1, "", "save"], [57, 2, 1, "", "set_state"], [57, 3, 1, "", "trajectory"], [57, 2, 1, "", "update_incumbents"], [57, 3, 1, "", "used_walltime"], [57, 3, 1, "", "uses_budgets"], [57, 3, 1, "", "uses_instances"], [57, 3, 1, "", "uses_seeds"]], "smac.intensifier.hyperband": [[58, 1, 1, "", "Hyperband"]], "smac.intensifier.hyperband.Hyperband": [[58, 2, 1, "", "get_state"], [58, 2, 1, "", "reset"], [58, 2, 1, "", "set_state"]], "smac.intensifier.intensifier": [[59, 1, 1, "", "Intensifier"]], "smac.intensifier.intensifier.Intensifier": [[59, 2, 1, "", "__iter__"], [59, 2, 1, "", "get_state"], [59, 2, 1, "", "reset"], [59, 2, 1, "", "set_state"], [59, 3, 1, "", "uses_budgets"], [59, 3, 1, "", "uses_instances"], [59, 3, 1, "", "uses_seeds"]], "smac.intensifier.successive_halving": [[60, 1, 1, "", "SuccessiveHalving"]], "smac.intensifier.successive_halving.SuccessiveHalving": [[60, 2, 1, "", "__post_init__"], [60, 2, 1, "", "get_instance_seed_budget_keys"], [60, 2, 1, "", "get_state"], [60, 2, 1, "", "get_trials_of_interest"], [60, 3, 1, "", "meta"], [60, 2, 1, "", "print_tracker"], [60, 2, 1, "", "reset"], [60, 2, 1, "", "set_state"], [60, 3, 1, "", "uses_budgets"], [60, 3, 1, "", "uses_instances"], [60, 3, 1, "", "uses_seeds"]], "smac.main": [[62, 0, 0, "-", "config_selector"], [63, 0, 0, "-", "smbo"]], "smac.main.config_selector": [[62, 1, 1, "", "ConfigSelector"]], "smac.main.config_selector.ConfigSelector": [[62, 2, 1, "", "__iter__"], [62, 3, 1, "", "meta"]], "smac.main.smbo": [[63, 1, 1, "", "SMBO"]], "smac.main.smbo.SMBO": [[63, 2, 1, "", "ask"], [63, 3, 1, "", "budget_exhausted"], [63, 2, 1, "", "exists"], [63, 3, 1, "", "intensifier"], [63, 2, 1, "", "load"], [63, 2, 1, "", "optimize"], [63, 2, 1, "", "print_stats"], [63, 2, 1, "", "register_callback"], [63, 3, 1, "", "remaining_cputime"], [63, 3, 1, "", "remaining_trials"], [63, 3, 1, "", "remaining_walltime"], [63, 2, 1, "", "reset"], [63, 3, 1, "", "runhistory"], [63, 2, 1, "", "save"], [63, 2, 1, "", "tell"], [63, 2, 1, "", "update_acquisition_function"], [63, 2, 1, "", "update_model"], [63, 3, 1, "", "used_target_function_walltime"], [63, 3, 1, "", "used_walltime"], [63, 2, 1, "", "validate"]], "smac.model": [[64, 1, 1, "", "AbstractModel"], [64, 1, 1, "", "MultiObjectiveModel"], [64, 1, 1, "", "RandomModel"], [65, 0, 0, "-", "abstract_model"], [66, 0, 0, "-", "gaussian_process"], [83, 0, 0, "-", "multi_objective_model"], [84, 0, 0, "-", "random_forest"], [87, 0, 0, "-", "random_model"]], "smac.model.AbstractModel": [[64, 3, 1, "", "meta"], [64, 2, 1, "", "predict"], [64, 2, 1, "", "predict_marginalized"], [64, 2, 1, "", "train"]], "smac.model.MultiObjectiveModel": [[64, 3, 1, "", "models"], [64, 2, 1, "", "predict_marginalized"]], "smac.model.abstract_model": [[65, 1, 1, "", "AbstractModel"]], "smac.model.abstract_model.AbstractModel": [[65, 3, 1, "", "meta"], [65, 2, 1, "", "predict"], [65, 2, 1, "", "predict_marginalized"], [65, 2, 1, "", "train"]], "smac.model.gaussian_process": [[66, 1, 1, "", "AbstractGaussianProcess"], [66, 1, 1, "", "GaussianProcess"], [66, 1, 1, "", "MCMCGaussianProcess"], [67, 0, 0, "-", "abstract_gaussian_process"], [68, 0, 0, "-", "gaussian_process"], [69, 0, 0, "-", "gpytorch_gaussian_process"], [70, 0, 0, "-", "kernels"], [76, 0, 0, "-", "mcmc_gaussian_process"], [77, 0, 0, "-", "priors"]], "smac.model.gaussian_process.AbstractGaussianProcess": [[66, 3, 1, "", "meta"]], "smac.model.gaussian_process.GaussianProcess": [[66, 3, 1, "", "meta"], [66, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.MCMCGaussianProcess": [[66, 3, 1, "", "meta"], [66, 3, 1, "", "models"]], "smac.model.gaussian_process.abstract_gaussian_process": [[67, 1, 1, "", "AbstractGaussianProcess"]], "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess": [[67, 3, 1, "", "meta"]], "smac.model.gaussian_process.gaussian_process": [[68, 1, 1, "", "GaussianProcess"]], "smac.model.gaussian_process.gaussian_process.GaussianProcess": [[68, 3, 1, "", "meta"], [68, 2, 1, "", "sample_functions"]], "smac.model.gaussian_process.kernels": [[70, 1, 1, "", "AbstractKernel"], [70, 1, 1, "", "ConstantKernel"], [70, 1, 1, "", "HammingKernel"], [70, 1, 1, "", "MaternKernel"], [70, 1, 1, "", "ProductKernel"], [70, 1, 1, "", "RBFKernel"], [70, 1, 1, "", "SumKernel"], [70, 1, 1, "", "WhiteKernel"], [71, 0, 0, "-", "base_kernels"], [72, 0, 0, "-", "hamming_kernel"], [73, 0, 0, "-", "matern_kernel"], [74, 0, 0, "-", "rbf_kernel"], [75, 0, 0, "-", "white_kernel"]], "smac.model.gaussian_process.kernels.AbstractKernel": [[70, 2, 1, "", "__call__"], [70, 2, 1, "", "get_params"], [70, 4, 1, "", "has_conditions"], [70, 3, 1, "", "hyperparameters"], [70, 3, 1, "", "meta"], [70, 3, 1, "", "n_dims"], [70, 4, 1, "", "operate_on"], [70, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.ConstantKernel": [[70, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.HammingKernel": [[70, 3, 1, "", "hyperparameter_length_scale"], [70, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.ProductKernel": [[70, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.SumKernel": [[70, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels": [[71, 1, 1, "", "AbstractKernel"], [71, 1, 1, "", "ConstantKernel"], [71, 1, 1, "", "ProductKernel"], [71, 1, 1, "", "SumKernel"]], "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel": [[71, 2, 1, "", "__call__"], [71, 2, 1, "", "get_params"], [71, 4, 1, "", "has_conditions"], [71, 3, 1, "", "hyperparameters"], [71, 3, 1, "", "meta"], [71, 3, 1, "", "n_dims"], [71, 4, 1, "", "operate_on"], [71, 4, 1, "", "prior"]], "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.ProductKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.base_kernels.SumKernel": [[71, 2, 1, "", "__call__"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[72, 1, 1, "", "HammingKernel"]], "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel": [[72, 3, 1, "", "hyperparameter_length_scale"], [72, 3, 1, "", "meta"]], "smac.model.gaussian_process.kernels.matern_kernel": [[73, 1, 1, "", "MaternKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[74, 1, 1, "", "RBFKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[75, 1, 1, "", "WhiteKernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[76, 1, 1, "", "MCMCGaussianProcess"]], "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess": [[76, 3, 1, "", "meta"], [76, 3, 1, "", "models"]], "smac.model.gaussian_process.priors": [[77, 1, 1, "", "GammaPrior"], [77, 1, 1, "", "HorseshoePrior"], [77, 1, 1, "", "LogNormalPrior"], [77, 1, 1, "", "SoftTopHatPrior"], [77, 1, 1, "", "TophatPrior"], [78, 0, 0, "-", "abstract_prior"], [79, 0, 0, "-", "gamma_prior"], [80, 0, 0, "-", "horseshoe_prior"], [81, 0, 0, "-", "log_normal_prior"], [82, 0, 0, "-", "tophat_prior"]], "smac.model.gaussian_process.priors.GammaPrior": [[77, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.HorseshoePrior": [[77, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.LogNormalPrior": [[77, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.SoftTopHatPrior": [[77, 2, 1, "", "get_gradient"], [77, 2, 1, "", "get_log_probability"], [77, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.TophatPrior": [[77, 2, 1, "", "get_gradient"], [77, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.abstract_prior": [[78, 1, 1, "", "AbstractPrior"]], "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior": [[78, 2, 1, "", "get_gradient"], [78, 2, 1, "", "get_log_probability"], [78, 3, 1, "", "meta"], [78, 2, 1, "", "sample_from_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[79, 1, 1, "", "GammaPrior"]], "smac.model.gaussian_process.priors.gamma_prior.GammaPrior": [[79, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[80, 1, 1, "", "HorseshoePrior"]], "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior": [[80, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[81, 1, 1, "", "LogNormalPrior"]], "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior": [[81, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[82, 1, 1, "", "SoftTopHatPrior"], [82, 1, 1, "", "TophatPrior"]], "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior": [[82, 2, 1, "", "get_gradient"], [82, 2, 1, "", "get_log_probability"], [82, 3, 1, "", "meta"]], "smac.model.gaussian_process.priors.tophat_prior.TophatPrior": [[82, 2, 1, "", "get_gradient"], [82, 3, 1, "", "meta"]], "smac.model.multi_objective_model": [[83, 1, 1, "", "MultiObjectiveModel"]], "smac.model.multi_objective_model.MultiObjectiveModel": [[83, 3, 1, "", "models"], [83, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest": [[84, 1, 1, "", "AbstractRandomForest"], [84, 1, 1, "", "RandomForest"], [85, 0, 0, "-", "abstract_random_forest"], [86, 0, 0, "-", "random_forest"]], "smac.model.random_forest.RandomForest": [[84, 3, 1, "", "meta"], [84, 2, 1, "", "predict_marginalized"]], "smac.model.random_forest.abstract_random_forest": [[85, 1, 1, "", "AbstractRandomForest"]], "smac.model.random_forest.random_forest": [[86, 1, 1, "", "RandomForest"]], "smac.model.random_forest.random_forest.RandomForest": [[86, 3, 1, "", "meta"], [86, 2, 1, "", "predict_marginalized"]], "smac.model.random_model": [[87, 1, 1, "", "RandomModel"]], "smac.multi_objective": [[88, 1, 1, "", "AbstractMultiObjectiveAlgorithm"], [88, 1, 1, "", "MeanAggregationStrategy"], [88, 1, 1, "", "ParEGO"], [89, 0, 0, "-", "abstract_multi_objective_algorithm"], [90, 0, 0, "-", "aggregation_strategy"], [91, 0, 0, "-", "parego"]], "smac.multi_objective.AbstractMultiObjectiveAlgorithm": [[88, 2, 1, "", "__call__"], [88, 3, 1, "", "meta"], [88, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.MeanAggregationStrategy": [[88, 2, 1, "", "__call__"], [88, 3, 1, "", "meta"]], "smac.multi_objective.ParEGO": [[88, 2, 1, "", "__call__"], [88, 3, 1, "", "meta"], [88, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[89, 1, 1, "", "AbstractMultiObjectiveAlgorithm"]], "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm": [[89, 2, 1, "", "__call__"], [89, 3, 1, "", "meta"], [89, 2, 1, "", "update_on_iteration_start"]], "smac.multi_objective.aggregation_strategy": [[90, 1, 1, "", "MeanAggregationStrategy"]], "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy": [[90, 2, 1, "", "__call__"], [90, 3, 1, "", "meta"]], "smac.multi_objective.parego": [[91, 1, 1, "", "ParEGO"]], "smac.multi_objective.parego.ParEGO": [[91, 2, 1, "", "__call__"], [91, 3, 1, "", "meta"], [91, 2, 1, "", "update_on_iteration_start"]], "smac.random_design": [[92, 1, 1, "", "AbstractRandomDesign"], [92, 1, 1, "", "CosineAnnealingRandomDesign"], [92, 1, 1, "", "DynamicModulusRandomDesign"], [92, 1, 1, "", "DynamicProbabilityRandomDesign"], [92, 1, 1, "", "ModulusRandomDesign"], [92, 1, 1, "", "ProbabilityRandomDesign"], [93, 0, 0, "-", "abstract_random_design"], [94, 0, 0, "-", "annealing_design"], [95, 0, 0, "-", "modulus_design"], [96, 0, 0, "-", "probability_design"]], "smac.random_design.AbstractRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "next_iteration"]], "smac.random_design.CosineAnnealingRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicModulusRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "next_iteration"]], "smac.random_design.DynamicProbabilityRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"], [92, 2, 1, "", "next_iteration"]], "smac.random_design.ModulusRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"]], "smac.random_design.ProbabilityRandomDesign": [[92, 2, 1, "", "check"], [92, 3, 1, "", "meta"]], "smac.random_design.abstract_random_design": [[93, 1, 1, "", "AbstractRandomDesign"]], "smac.random_design.abstract_random_design.AbstractRandomDesign": [[93, 2, 1, "", "check"], [93, 3, 1, "", "meta"], [93, 2, 1, "", "next_iteration"]], "smac.random_design.annealing_design": [[94, 1, 1, "", "CosineAnnealingRandomDesign"]], "smac.random_design.annealing_design.CosineAnnealingRandomDesign": [[94, 2, 1, "", "check"], [94, 3, 1, "", "meta"], [94, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design": [[95, 1, 1, "", "DynamicModulusRandomDesign"], [95, 1, 1, "", "ModulusRandomDesign"]], "smac.random_design.modulus_design.DynamicModulusRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"], [95, 2, 1, "", "next_iteration"]], "smac.random_design.modulus_design.ModulusRandomDesign": [[95, 2, 1, "", "check"], [95, 3, 1, "", "meta"]], "smac.random_design.probability_design": [[96, 1, 1, "", "DynamicProbabilityRandomDesign"], [96, 1, 1, "", "ProbabilityRandomDesign"]], "smac.random_design.probability_design.DynamicProbabilityRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"], [96, 2, 1, "", "next_iteration"]], "smac.random_design.probability_design.ProbabilityRandomDesign": [[96, 2, 1, "", "check"], [96, 3, 1, "", "meta"]], "smac.runhistory": [[97, 1, 1, "", "InstanceSeedBudgetKey"], [97, 1, 1, "", "InstanceSeedKey"], [97, 1, 1, "", "RunHistory"], [97, 1, 1, "", "StatusType"], [97, 1, 1, "", "TrialInfo"], [97, 1, 1, "", "TrialKey"], [97, 1, 1, "", "TrialValue"], [98, 0, 0, "-", "dataclasses"], [99, 0, 0, "-", "encoder"], [109, 0, 0, "-", "enumerations"], [110, 0, 0, "-", "errors"], [111, 0, 0, "-", "runhistory"]], "smac.runhistory.InstanceSeedBudgetKey": [[97, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.RunHistory": [[97, 2, 1, "", "__contains__"], [97, 2, 1, "", "__eq__"], [97, 2, 1, "", "__getitem__"], [97, 2, 1, "", "__iter__"], [97, 2, 1, "", "__len__"], [97, 2, 1, "", "add"], [97, 2, 1, "", "add_running_trial"], [97, 2, 1, "", "add_trial"], [97, 2, 1, "", "average_cost"], [97, 3, 1, "", "config_ids"], [97, 2, 1, "", "empty"], [97, 3, 1, "", "finished"], [97, 2, 1, "", "get_config"], [97, 2, 1, "", "get_config_id"], [97, 2, 1, "", "get_configs"], [97, 2, 1, "", "get_configs_per_budget"], [97, 2, 1, "", "get_cost"], [97, 2, 1, "", "get_instance_seed_budget_keys"], [97, 2, 1, "", "get_min_cost"], [97, 2, 1, "", "get_running_configs"], [97, 2, 1, "", "get_running_trials"], [97, 2, 1, "", "get_trials"], [97, 2, 1, "", "has_config"], [97, 3, 1, "", "ids_config"], [97, 2, 1, "", "incremental_update_cost"], [97, 2, 1, "", "load"], [97, 2, 1, "", "min_cost"], [97, 3, 1, "", "multi_objective_algorithm"], [97, 3, 1, "", "objective_bounds"], [97, 2, 1, "", "reset"], [97, 3, 1, "", "running"], [97, 2, 1, "", "save"], [97, 3, 1, "", "submitted"], [97, 2, 1, "", "sum_cost"], [97, 2, 1, "", "update"], [97, 2, 1, "", "update_cost"], [97, 2, 1, "", "update_costs"], [97, 2, 1, "", "update_from_json"]], "smac.runhistory.TrialInfo": [[97, 2, 1, "", "get_instance_seed_budget_key"], [97, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.dataclasses": [[98, 1, 1, "", "InstanceSeedBudgetKey"], [98, 1, 1, "", "InstanceSeedKey"], [98, 1, 1, "", "TrajectoryItem"], [98, 1, 1, "", "TrialInfo"], [98, 1, 1, "", "TrialKey"], [98, 1, 1, "", "TrialValue"]], "smac.runhistory.dataclasses.InstanceSeedBudgetKey": [[98, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.dataclasses.TrialInfo": [[98, 2, 1, "", "get_instance_seed_budget_key"], [98, 2, 1, "", "get_instance_seed_key"]], "smac.runhistory.encoder": [[99, 1, 1, "", "AbstractRunHistoryEncoder"], [99, 1, 1, "", "RunHistoryEIPSEncoder"], [99, 1, 1, "", "RunHistoryEncoder"], [99, 1, 1, "", "RunHistoryInverseScaledEncoder"], [99, 1, 1, "", "RunHistoryLogEncoder"], [99, 1, 1, "", "RunHistoryLogScaledEncoder"], [99, 1, 1, "", "RunHistoryScaledEncoder"], [99, 1, 1, "", "RunHistorySqrtScaledEncoder"], [100, 0, 0, "-", "abstract_encoder"], [101, 0, 0, "-", "boing_encoder"], [102, 0, 0, "-", "eips_encoder"], [103, 0, 0, "-", "encoder"], [104, 0, 0, "-", "inverse_scaled_encoder"], [105, 0, 0, "-", "log_encoder"], [106, 0, 0, "-", "log_scaled_encoder"], [107, 0, 0, "-", "scaled_encoder"], [108, 0, 0, "-", "sqrt_scaled_encoder"]], "smac.runhistory.encoder.AbstractRunHistoryEncoder": [[99, 2, 1, "", "get_configurations"], [99, 3, 1, "", "meta"], [99, 3, 1, "", "multi_objective_algorithm"], [99, 3, 1, "", "runhistory"], [99, 2, 1, "", "transform"], [99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEIPSEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryInverseScaledEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryLogScaledEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistoryScaledEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.RunHistorySqrtScaledEncoder": [[99, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.abstract_encoder": [[100, 1, 1, "", "AbstractRunHistoryEncoder"]], "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder": [[100, 2, 1, "", "get_configurations"], [100, 3, 1, "", "meta"], [100, 3, 1, "", "multi_objective_algorithm"], [100, 3, 1, "", "runhistory"], [100, 2, 1, "", "transform"], [100, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.eips_encoder": [[102, 1, 1, "", "RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder": [[102, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.encoder": [[103, 1, 1, "", "RunHistoryEncoder"]], "smac.runhistory.encoder.encoder.RunHistoryEncoder": [[103, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[104, 1, 1, "", "RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder": [[104, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_encoder": [[105, 1, 1, "", "RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder": [[105, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.log_scaled_encoder": [[106, 1, 1, "", "RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder": [[106, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.scaled_encoder": [[107, 1, 1, "", "RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder": [[107, 2, 1, "", "transform_response_values"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[108, 1, 1, "", "RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder": [[108, 2, 1, "", "transform_response_values"]], "smac.runhistory.enumerations": [[109, 1, 1, "", "StatusType"]], "smac.runhistory.errors": [[110, 5, 1, "", "NotEvaluatedError"]], "smac.runhistory.runhistory": [[111, 1, 1, "", "RunHistory"]], "smac.runhistory.runhistory.RunHistory": [[111, 2, 1, "", "__contains__"], [111, 2, 1, "", "__eq__"], [111, 2, 1, "", "__getitem__"], [111, 2, 1, "", "__iter__"], [111, 2, 1, "", "__len__"], [111, 2, 1, "", "add"], [111, 2, 1, "", "add_running_trial"], [111, 2, 1, "", "add_trial"], [111, 2, 1, "", "average_cost"], [111, 3, 1, "", "config_ids"], [111, 2, 1, "", "empty"], [111, 3, 1, "", "finished"], [111, 2, 1, "", "get_config"], [111, 2, 1, "", "get_config_id"], [111, 2, 1, "", "get_configs"], [111, 2, 1, "", "get_configs_per_budget"], [111, 2, 1, "", "get_cost"], [111, 2, 1, "", "get_instance_seed_budget_keys"], [111, 2, 1, "", "get_min_cost"], [111, 2, 1, "", "get_running_configs"], [111, 2, 1, "", "get_running_trials"], [111, 2, 1, "", "get_trials"], [111, 2, 1, "", "has_config"], [111, 3, 1, "", "ids_config"], [111, 2, 1, "", "incremental_update_cost"], [111, 2, 1, "", "load"], [111, 2, 1, "", "min_cost"], [111, 3, 1, "", "multi_objective_algorithm"], [111, 3, 1, "", "objective_bounds"], [111, 2, 1, "", "reset"], [111, 3, 1, "", "running"], [111, 2, 1, "", "save"], [111, 3, 1, "", "submitted"], [111, 2, 1, "", "sum_cost"], [111, 2, 1, "", "update"], [111, 2, 1, "", "update_cost"], [111, 2, 1, "", "update_costs"], [111, 2, 1, "", "update_from_json"]], "smac.runner": [[112, 1, 1, "", "AbstractRunner"], [112, 1, 1, "", "DaskParallelRunner"], [112, 5, 1, "", "FirstRunCrashedException"], [112, 5, 1, "", "TargetAlgorithmAbortException"], [112, 1, 1, "", "TargetFunctionRunner"], [113, 0, 0, "-", "abstract_runner"], [114, 0, 0, "-", "abstract_serial_runner"], [115, 0, 0, "-", "dask_runner"], [116, 0, 0, "-", "exceptions"], [117, 0, 0, "-", "target_function_runner"], [118, 0, 0, "-", "target_function_script_runner"]], "smac.runner.AbstractRunner": [[112, 2, 1, "", "count_available_workers"], [112, 2, 1, "", "is_running"], [112, 2, 1, "", "iter_results"], [112, 3, 1, "", "meta"], [112, 2, 1, "", "run"], [112, 2, 1, "", "run_wrapper"], [112, 2, 1, "", "submit_trial"], [112, 2, 1, "", "wait"]], "smac.runner.DaskParallelRunner": [[112, 2, 1, "", "__del__"], [112, 2, 1, "", "close"], [112, 2, 1, "", "count_available_workers"], [112, 2, 1, "", "is_running"], [112, 2, 1, "", "iter_results"], [112, 2, 1, "", "run"], [112, 2, 1, "", "submit_trial"], [112, 2, 1, "", "wait"]], "smac.runner.TargetFunctionRunner": [[112, 2, 1, "", "__call__"], [112, 3, 1, "", "meta"], [112, 2, 1, "", "run"]], "smac.runner.abstract_runner": [[113, 1, 1, "", "AbstractRunner"]], "smac.runner.abstract_runner.AbstractRunner": [[113, 2, 1, "", "count_available_workers"], [113, 2, 1, "", "is_running"], [113, 2, 1, "", "iter_results"], [113, 3, 1, "", "meta"], [113, 2, 1, "", "run"], [113, 2, 1, "", "run_wrapper"], [113, 2, 1, "", "submit_trial"], [113, 2, 1, "", "wait"]], "smac.runner.abstract_serial_runner": [[114, 1, 1, "", "AbstractSerialRunner"]], "smac.runner.abstract_serial_runner.AbstractSerialRunner": [[114, 2, 1, "", "count_available_workers"], [114, 2, 1, "", "is_running"], [114, 2, 1, "", "iter_results"], [114, 2, 1, "", "submit_trial"], [114, 2, 1, "", "wait"]], "smac.runner.dask_runner": [[115, 1, 1, "", "DaskParallelRunner"]], "smac.runner.dask_runner.DaskParallelRunner": [[115, 2, 1, "", "__del__"], [115, 2, 1, "", "close"], [115, 2, 1, "", "count_available_workers"], [115, 2, 1, "", "is_running"], [115, 2, 1, "", "iter_results"], [115, 2, 1, "", "run"], [115, 2, 1, "", "submit_trial"], [115, 2, 1, "", "wait"]], "smac.runner.exceptions": [[116, 5, 1, "", "FirstRunCrashedException"], [116, 5, 1, "", "TargetAlgorithmAbortException"]], "smac.runner.target_function_runner": [[117, 1, 1, "", "TargetFunctionRunner"]], "smac.runner.target_function_runner.TargetFunctionRunner": [[117, 2, 1, "", "__call__"], [117, 3, 1, "", "meta"], [117, 2, 1, "", "run"]], "smac.runner.target_function_script_runner": [[118, 1, 1, "", "TargetFunctionScriptRunner"]], "smac.runner.target_function_script_runner.TargetFunctionScriptRunner": [[118, 2, 1, "", "__call__"], [118, 3, 1, "", "meta"], [118, 2, 1, "", "run"]], "smac.scenario": [[119, 1, 1, "", "Scenario"]], "smac.scenario.Scenario": [[119, 2, 1, "", "__post_init__"], [119, 2, 1, "", "count_instance_features"], [119, 2, 1, "", "count_objectives"], [119, 2, 1, "", "load"], [119, 2, 1, "", "make_serializable"], [119, 3, 1, "", "meta"], [119, 2, 1, "", "save"]], "smac.utils": [[121, 0, 0, "-", "configspace"], [122, 0, 0, "-", "data_structures"], [123, 0, 0, "-", "logging"], [124, 0, 0, "-", "multi_objective"], [125, 0, 0, "-", "pareto_front"], [126, 0, 0, "-", "subspaces"]], "smac.utils.configspace": [[121, 6, 1, "", "convert_configurations_to_array"], [121, 6, 1, "", "get_conditional_hyperparameters"], [121, 6, 1, "", "get_config_hash"], [121, 6, 1, "", "get_types"], [121, 6, 1, "", "print_config_changes"]], "smac.utils.data_structures": [[122, 6, 1, "", "batch"], [122, 6, 1, "", "recursively_compare_dicts"]], "smac.utils.logging": [[123, 6, 1, "", "get_logger"], [123, 6, 1, "", "setup_logging"]], "smac.utils.multi_objective": [[124, 6, 1, "", "normalize_costs"]], "smac.utils.pareto_front": [[125, 6, 1, "", "calculate_pareto_front"], [125, 6, 1, "", "sort_by_crowding_distance"]], "smac.utils.subspaces": [[127, 0, 0, "-", "boing_subspace"], [128, 0, 0, "-", "turbo_subspace"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"instal": 0, "requir": 0, "anaconda": 0, "conda": 0, "forg": 0, "packag": 1, "overview": [1, 149], "featur": 1, "comparison": 1, "get": 2, "start": [2, 17], "configur": [2, 12], "space": 2, "target": [2, 17, 145], "function": [2, 12, 17, 23, 24, 25, 26, 27, 28, 29, 30, 121, 122, 123, 124, 125, 129, 141, 145], "scenario": [2, 119], "facad": [2, 41, 42, 43, 44, 45, 46, 47, 48], "minim": 3, "exampl": [3, 148], "api": 4, "refer": [4, 5], "glossari": 6, "f": 7, "A": 7, "q": 7, "licens": 8, "continu": [9, 133], "reproduc": 10, "optim": [11, 13, 14, 15, 17, 133], "compon": 12, "surrog": 12, "model": [12, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "acquisit": [12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "maxim": [12, 31, 32, 33, 34, 35, 36, 37], "initi": 12, "design": 12, "random": 12, "intensifi": [12, 56, 57, 58, 59, 60], "selector": 12, "multi": [12, 13, 14, 137, 139, 143, 148], "object": [12, 14, 141, 143, 148], "algorithm": 12, "runhistori": [12, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "encod": [12, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "callback": [12, 38, 39, 40, 132], "fidel": [13, 139, 148], "across": 15, "instanc": [15, 139, 148], "ask": [16, 131], "tell": [16, 131], "interfac": [16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 146, 148], "command": [17, 146, 148], "line": [17, 146, 148], "call": [17, 145], "return": 17, "stop": 18, "criteria": 18, "termin": 18, "cost": 18, "threshold": 18, "automat": 18, "log": [19, 123], "level": 19, "custom": [19, 132], "file": 19, "parallel": 20, "run": 20, "cluster": 20, "advanc": 21, "usag": 21, "navig": 21, "smac": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128], "modul": [22, 23, 31, 38, 41, 49, 56, 61, 64, 66, 70, 77, 84, 88, 92, 97, 99, 112, 120, 126], "abstract_acquisition_funct": 24, "class": [24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 67, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119], "confidence_bound": 25, "expected_improv": 26, "integrated_acquisition_funct": 27, "prior_acqusition_funct": 28, "probability_improv": 29, "thompson": 30, "abstract_acqusition_maxim": 32, "differential_evolut": 33, "helper": 34, "local_and_random_search": 35, "local_search": 36, "random_search": 37, "metadata_callback": 40, "abstract_facad": 42, "algorithm_configuration_facad": 43, "blackbox_facad": 44, "hyperband_facad": 45, "hyperparameter_optimization_facad": 46, "multi_fidelity_facad": 47, "random_facad": 48, "initial_design": [49, 50, 51, 52, 53, 54, 55], "abstract_initial_design": 50, "default_design": 51, "factorial_design": 52, "latin_hypercube_design": 53, "random_design": [54, 92, 93, 94, 95, 96], "sobol_design": 55, "abstract_intensifi": 57, "hyperband": 58, "successive_halv": 60, "main": [61, 62, 63], "config_selector": 62, "smbo": 63, "abstract_model": 65, "gaussian_process": [66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82], "abstract_gaussian_process": 67, "gpytorch_gaussian_process": 69, "kernel": [70, 71, 72, 73, 74, 75], "base_kernel": 71, "hamming_kernel": 72, "matern_kernel": 73, "rbf_kernel": 74, "white_kernel": 75, "mcmc_gaussian_process": 76, "prior": [77, 78, 79, 80, 81, 82, 134], "abstract_prior": 78, "gamma_prior": 79, "horseshoe_prior": 80, "log_normal_prior": 81, "tophat_prior": 82, "multi_objective_model": 83, "random_forest": [84, 85, 86], "abstract_random_forest": 85, "random_model": 87, "multi_object": [88, 89, 90, 91, 124], "abstract_multi_objective_algorithm": 89, "aggregation_strategi": 90, "parego": [91, 142], "abstract_random_design": 93, "annealing_design": 94, "modulus_design": 95, "probability_design": 96, "dataclass": 98, "abstract_encod": 100, "boing_encod": 101, "eips_encod": 102, "inverse_scaled_encod": 104, "log_encod": 105, "log_scaled_encod": 106, "scaled_encod": 107, "sqrt_scaled_encod": 108, "enumer": 109, "error": 110, "except": [110, 116], "runner": [112, 113, 114, 115, 116, 117, 118], "abstract_runn": 113, "abstract_serial_runn": 114, "dask_runn": 115, "target_function_runn": 117, "target_function_script_runn": 118, "util": [120, 121, 122, 123, 124, 125, 126, 127, 128], "configspac": 121, "data_structur": 122, "pareto_front": 125, "subspac": [126, 127, 128], "boing_subspac": 127, "turbo_subspac": 128, "quadrat": 129, "support": 130, "vector": 130, "machin": 130, "cross": 130, "valid": 130, "an": 133, "user": 134, "over": 134, "optimum": 134, "basic": [135, 148], "comput": [136, 140, 144, 147], "time": [136, 140, 144, 147], "layer": 137, "perceptron": 137, "us": 137, "multipl": [137, 138], "epoch": 137, "stochast": 138, "gradient": 138, "descent": 138, "On": 138, "dataset": 138, "2d": 141, "schaffer": 141, "weight": 141, "from": 145, "script": 145, "figur": 149, "home": 150, "contact": 150}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Installation": [[0, "installation"]], "Requirements": [[0, "requirements"]], "Anaconda": [[0, "anaconda"]], "Conda-forge": [[0, "conda-forge"]], "Package Overview": [[1, "package-overview"]], "Features": [[1, "features"]], "Comparison": [[1, "comparison"]], "Getting Started": [[2, "getting-started"]], "Configuration Space": [[2, "configuration-space"]], "Target Function": [[2, "target-function"]], "Scenario": [[2, "scenario"]], "Facade": [[2, "facade"]], "Minimal Example": [[3, "minimal-example"]], "API References": [[4, "api-references"]], "References": [[5, "references"]], "Glossary": [[6, "glossary"]], "F.A.Q.": [[7, "f-a-q"]], "License": [[8, "license"]], "Continue": [[9, "continue"]], "Reproducibility": [[10, "reproducibility"]], "Optimizations": [[11, "optimizations"]], "Components": [[12, "components"]], "Surrogate Model": [[12, "surrogate-model"]], "Acquisition Function": [[12, "acquisition-function"]], "Acquisition Maximizer": [[12, "acquisition-maximizer"]], "Initial Design": [[12, "initial-design"]], "Random Design": [[12, "random-design"]], "Intensifier": [[12, "intensifier"]], "Configuration Selector": [[12, "configuration-selector"]], "Multi-Objective Algorithm": [[12, "multi-objective-algorithm"]], "RunHistory": [[12, "runhistory"]], "RunHistory Encoder": [[12, "runhistory-encoder"]], "Callback": [[12, "callback"]], "Multi-Fidelity Optimization": [[13, "multi-fidelity-optimization"]], "Multi-Objective Optimization": [[14, "multi-objective-optimization"]], "Optimization across Instances": [[15, "optimization-across-instances"]], "Ask-and-Tell Interface": [[16, "ask-and-tell-interface"]], "Command-Line Interface": [[17, "command-line-interface"], [146, "command-line-interface"], [148, "command-line-interface"]], "Call of the Target Function": [[17, "call-of-the-target-function"]], "Return of the Target Function": [[17, "return-of-the-target-function"]], "Start the Optimization": [[17, "start-the-optimization"]], "Stopping Criteria": [[18, "stopping-criteria"]], "Termination Cost Threshold": [[18, "termination-cost-threshold"]], "Automatically Stopping": [[18, "automatically-stopping"]], "Logging": [[19, "logging"]], "Level": [[19, "level"]], "Custom File": [[19, "custom-file"]], "Parallelism": [[20, "parallelism"]], "Running on a Cluster": [[20, "running-on-a-cluster"]], "Advanced Usage": [[21, "advanced-usage"]], "Navigation": [[21, "navigation"]], "smac.acquisition": [[22, "module-smac.acquisition"]], "Interfaces": [[22, "interfaces"], [23, "interfaces"], [24, "interfaces"], [25, "interfaces"], [26, "interfaces"], [27, "interfaces"], [28, "interfaces"], [29, "interfaces"], [30, "interfaces"], [31, "interfaces"], [32, "interfaces"], [33, "interfaces"], [34, "interfaces"], [35, "interfaces"], [36, "interfaces"], [37, "interfaces"], [38, "interfaces"], [39, "interfaces"], [40, "interfaces"], [41, "interfaces"], [42, "interfaces"], [43, "interfaces"], [44, "interfaces"], [45, "interfaces"], [46, "interfaces"], [47, "interfaces"], [48, "interfaces"], [49, "interfaces"], [50, "interfaces"], [51, "interfaces"], [52, "interfaces"], [53, "interfaces"], [54, "interfaces"], [55, "interfaces"], [56, "interfaces"], [57, "interfaces"], [58, "interfaces"], [59, "interfaces"], [60, "interfaces"], [61, "interfaces"], [62, "interfaces"], [63, "interfaces"], [64, "interfaces"], [65, "interfaces"], [66, "interfaces"], [67, "interfaces"], [68, "interfaces"], [69, "interfaces"], [70, "interfaces"], [71, "interfaces"], [72, "interfaces"], [73, "interfaces"], [74, "interfaces"], [75, "interfaces"], [76, "interfaces"], [77, "interfaces"], [78, "interfaces"], [79, "interfaces"], [80, "interfaces"], [81, "interfaces"], [82, "interfaces"], [83, "interfaces"], [84, "interfaces"], [85, "interfaces"], [86, "interfaces"], [87, "interfaces"], [88, "interfaces"], [89, "interfaces"], [90, "interfaces"], [91, "interfaces"], [92, "interfaces"], [93, "interfaces"], [94, "interfaces"], [95, "interfaces"], [96, "interfaces"], [97, "interfaces"], [98, "interfaces"], [99, "interfaces"], [100, "interfaces"], [101, "interfaces"], [102, "interfaces"], [103, "interfaces"], [104, "interfaces"], [105, "interfaces"], [106, "interfaces"], [107, "interfaces"], [108, "interfaces"], [109, "interfaces"], [110, "interfaces"], [111, "interfaces"], [112, "interfaces"], [113, "interfaces"], [114, "interfaces"], [115, "interfaces"], [116, "interfaces"], [117, "interfaces"], [118, "interfaces"], [119, "interfaces"], [120, "interfaces"], [121, "interfaces"], [122, "interfaces"], [123, "interfaces"], [124, "interfaces"], [125, "interfaces"], [126, "interfaces"], [127, "interfaces"], [128, "interfaces"]], "Modules": [[22, "modules"], [23, "modules"], [31, "modules"], [38, "modules"], [41, "modules"], [49, "modules"], [56, "modules"], [61, "modules"], [64, "modules"], [66, "modules"], [70, "modules"], [77, "modules"], [84, "modules"], [88, "modules"], [92, "modules"], [97, "modules"], [99, "modules"], [112, "modules"], [120, "modules"], [126, "modules"]], "smac.acquisition.function": [[23, "module-smac.acquisition.function"]], "smac.acquisition.function.abstract_acquisition_function": [[24, "module-smac.acquisition.function.abstract_acquisition_function"]], "Classes": [[24, "classes"], [25, "classes"], [26, "classes"], [27, "classes"], [28, "classes"], [29, "classes"], [30, "classes"], [32, "classes"], [33, "classes"], [34, "classes"], [35, "classes"], [36, "classes"], [37, "classes"], [39, "classes"], [40, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [62, "classes"], [63, "classes"], [65, "classes"], [67, "classes"], [68, "classes"], [71, "classes"], [72, "classes"], [73, "classes"], [74, "classes"], [75, "classes"], [76, "classes"], [78, "classes"], [79, "classes"], [80, "classes"], [81, "classes"], [82, "classes"], [83, "classes"], [85, "classes"], [86, "classes"], [87, "classes"], [89, "classes"], [90, "classes"], [91, "classes"], [93, "classes"], [94, "classes"], [95, "classes"], [96, "classes"], [98, "classes"], [100, "classes"], [102, "classes"], [103, "classes"], [104, "classes"], [105, "classes"], [106, "classes"], [107, "classes"], [108, "classes"], [109, "classes"], [111, "classes"], [113, "classes"], [114, "classes"], [115, "classes"], [117, "classes"], [118, "classes"], [119, "classes"]], "smac.acquisition.function.confidence_bound": [[25, "module-smac.acquisition.function.confidence_bound"]], "smac.acquisition.function.expected_improvement": [[26, "module-smac.acquisition.function.expected_improvement"]], "smac.acquisition.function.integrated_acquisition_function": [[27, "module-smac.acquisition.function.integrated_acquisition_function"]], "smac.acquisition.function.prior_acqusition_function": [[28, "module-smac.acquisition.function.prior_acqusition_function"]], "smac.acquisition.function.probability_improvement": [[29, "module-smac.acquisition.function.probability_improvement"]], "smac.acquisition.function.thompson": [[30, "module-smac.acquisition.function.thompson"]], "smac.acquisition.maximizer": [[31, "module-smac.acquisition.maximizer"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[32, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "smac.acquisition.maximizer.differential_evolution": [[33, "module-smac.acquisition.maximizer.differential_evolution"]], "smac.acquisition.maximizer.helpers": [[34, "module-smac.acquisition.maximizer.helpers"]], "smac.acquisition.maximizer.local_and_random_search": [[35, "module-smac.acquisition.maximizer.local_and_random_search"]], "smac.acquisition.maximizer.local_search": [[36, "module-smac.acquisition.maximizer.local_search"]], "smac.acquisition.maximizer.random_search": [[37, "module-smac.acquisition.maximizer.random_search"]], "smac.callback": [[38, "module-smac.callback"]], "smac.callback.callback": [[39, "module-smac.callback.callback"]], "smac.callback.metadata_callback": [[40, "module-smac.callback.metadata_callback"]], "smac.facade": [[41, "module-smac.facade"]], "smac.facade.abstract_facade": [[42, "module-smac.facade.abstract_facade"]], "smac.facade.algorithm_configuration_facade": [[43, "module-smac.facade.algorithm_configuration_facade"]], "smac.facade.blackbox_facade": [[44, "module-smac.facade.blackbox_facade"]], "smac.facade.hyperband_facade": [[45, "module-smac.facade.hyperband_facade"]], "smac.facade.hyperparameter_optimization_facade": [[46, "module-smac.facade.hyperparameter_optimization_facade"]], "smac.facade.multi_fidelity_facade": [[47, "module-smac.facade.multi_fidelity_facade"]], "smac.facade.random_facade": [[48, "module-smac.facade.random_facade"]], "smac.initial_design": [[49, "module-smac.initial_design"]], "smac.initial_design.abstract_initial_design": [[50, "module-smac.initial_design.abstract_initial_design"]], "smac.initial_design.default_design": [[51, "module-smac.initial_design.default_design"]], "smac.initial_design.factorial_design": [[52, "module-smac.initial_design.factorial_design"]], "smac.initial_design.latin_hypercube_design": [[53, "module-smac.initial_design.latin_hypercube_design"]], "smac.initial_design.random_design": [[54, "module-smac.initial_design.random_design"]], "smac.initial_design.sobol_design": [[55, "module-smac.initial_design.sobol_design"]], "smac.intensifier": [[56, "module-smac.intensifier"]], "smac.intensifier.abstract_intensifier": [[57, "module-smac.intensifier.abstract_intensifier"]], "smac.intensifier.hyperband": [[58, "module-smac.intensifier.hyperband"]], "smac.intensifier.intensifier": [[59, "module-smac.intensifier.intensifier"]], "smac.intensifier.successive_halving": [[60, "module-smac.intensifier.successive_halving"]], "smac.main": [[61, "module-smac.main"]], "smac.main.config_selector": [[62, "module-smac.main.config_selector"]], "smac.main.smbo": [[63, "module-smac.main.smbo"]], "smac.model": [[64, "module-smac.model"]], "smac.model.abstract_model": [[65, "module-smac.model.abstract_model"]], "smac.model.gaussian_process": [[66, "module-smac.model.gaussian_process"]], "smac.model.gaussian_process.abstract_gaussian_process": [[67, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "smac.model.gaussian_process.gaussian_process": [[68, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[69, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "smac.model.gaussian_process.kernels": [[70, "module-smac.model.gaussian_process.kernels"]], "smac.model.gaussian_process.kernels.base_kernels": [[71, "module-smac.model.gaussian_process.kernels.base_kernels"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[72, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[73, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[74, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[75, "module-smac.model.gaussian_process.kernels.white_kernel"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[76, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "smac.model.gaussian_process.priors": [[77, "module-smac.model.gaussian_process.priors"]], "smac.model.gaussian_process.priors.abstract_prior": [[78, "module-smac.model.gaussian_process.priors.abstract_prior"]], "smac.model.gaussian_process.priors.gamma_prior": [[79, "module-smac.model.gaussian_process.priors.gamma_prior"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[80, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "smac.model.gaussian_process.priors.log_normal_prior": [[81, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "smac.model.gaussian_process.priors.tophat_prior": [[82, "module-smac.model.gaussian_process.priors.tophat_prior"]], "smac.model.multi_objective_model": [[83, "module-smac.model.multi_objective_model"]], "smac.model.random_forest": [[84, "module-smac.model.random_forest"]], "smac.model.random_forest.abstract_random_forest": [[85, "module-smac.model.random_forest.abstract_random_forest"]], "smac.model.random_forest.random_forest": [[86, "module-smac.model.random_forest.random_forest"]], "smac.model.random_model": [[87, "module-smac.model.random_model"]], "smac.multi_objective": [[88, "module-smac.multi_objective"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[89, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "smac.multi_objective.aggregation_strategy": [[90, "module-smac.multi_objective.aggregation_strategy"]], "smac.multi_objective.parego": [[91, "module-smac.multi_objective.parego"]], "smac.random_design": [[92, "module-smac.random_design"]], "smac.random_design.abstract_random_design": [[93, "module-smac.random_design.abstract_random_design"]], "smac.random_design.annealing_design": [[94, "module-smac.random_design.annealing_design"]], "smac.random_design.modulus_design": [[95, "module-smac.random_design.modulus_design"]], "smac.random_design.probability_design": [[96, "module-smac.random_design.probability_design"]], "smac.runhistory": [[97, "module-smac.runhistory"]], "smac.runhistory.dataclasses": [[98, "module-smac.runhistory.dataclasses"]], "smac.runhistory.encoder": [[99, "module-smac.runhistory.encoder"]], "smac.runhistory.encoder.abstract_encoder": [[100, "module-smac.runhistory.encoder.abstract_encoder"]], "smac.runhistory.encoder.boing_encoder": [[101, "module-smac.runhistory.encoder.boing_encoder"]], "smac.runhistory.encoder.eips_encoder": [[102, "module-smac.runhistory.encoder.eips_encoder"]], "smac.runhistory.encoder.encoder": [[103, "module-smac.runhistory.encoder.encoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[104, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "smac.runhistory.encoder.log_encoder": [[105, "module-smac.runhistory.encoder.log_encoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[106, "module-smac.runhistory.encoder.log_scaled_encoder"]], "smac.runhistory.encoder.scaled_encoder": [[107, "module-smac.runhistory.encoder.scaled_encoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[108, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "smac.runhistory.enumerations": [[109, "module-smac.runhistory.enumerations"]], "smac.runhistory.errors": [[110, "module-smac.runhistory.errors"]], "Exceptions": [[110, "exceptions"], [116, "exceptions"]], "smac.runhistory.runhistory": [[111, "module-smac.runhistory.runhistory"]], "smac.runner": [[112, "module-smac.runner"]], "smac.runner.abstract_runner": [[113, "module-smac.runner.abstract_runner"]], "smac.runner.abstract_serial_runner": [[114, "module-smac.runner.abstract_serial_runner"]], "smac.runner.dask_runner": [[115, "module-smac.runner.dask_runner"]], "smac.runner.exceptions": [[116, "module-smac.runner.exceptions"]], "smac.runner.target_function_runner": [[117, "module-smac.runner.target_function_runner"]], "smac.runner.target_function_script_runner": [[118, "module-smac.runner.target_function_script_runner"]], "smac.scenario": [[119, "module-smac.scenario"]], "smac.utils": [[120, "module-smac.utils"]], "smac.utils.configspace": [[121, "module-smac.utils.configspace"]], "Functions": [[121, "functions"], [122, "functions"], [123, "functions"], [124, "functions"], [125, "functions"]], "smac.utils.data_structures": [[122, "module-smac.utils.data_structures"]], "smac.utils.logging": [[123, "module-smac.utils.logging"]], "smac.utils.multi_objective": [[124, "module-smac.utils.multi_objective"]], "smac.utils.pareto_front": [[125, "module-smac.utils.pareto_front"]], "smac.utils.subspaces": [[126, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[127, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[128, "module-smac.utils.subspaces.turbo_subspace"]], "Quadratic Function": [[129, "quadratic-function"]], "Support Vector Machine with Cross-Validation": [[130, "support-vector-machine-with-cross-validation"]], "Ask-and-Tell": [[131, "ask-and-tell"]], "Custom Callback": [[132, "custom-callback"]], "Continue an Optimization": [[133, "continue-an-optimization"]], "User Priors over the Optimum": [[134, "user-priors-over-the-optimum"]], "Basics": [[135, "basics"], [148, "basics"]], "Computation times": [[136, "computation-times"], [140, "computation-times"], [144, "computation-times"], [147, "computation-times"]], "Multi-Layer Perceptron Using Multiple Epochs": [[137, "multi-layer-perceptron-using-multiple-epochs"]], "Stochastic Gradient Descent On Multiple Datasets": [[138, "stochastic-gradient-descent-on-multiple-datasets"]], "Multi-Fidelity and Multi-Instances": [[139, "multi-fidelity-and-multi-instances"], [148, "multi-fidelity-and-multi-instances"]], "2D Schaffer Function with Objective Weights": [[141, "d-schaffer-function-with-objective-weights"]], "ParEGO": [[142, "parego"]], "Multi-Objective": [[143, "multi-objective"], [148, "multi-objective"]], "Call Target Function From Script": [[145, "call-target-function-from-script"]], "Examples": [[148, "examples"]], "Overview Figure": [[149, "overview-figure"]], "Home": [[150, "home"]], "Contact": [[150, "contact"]]}, "indexentries": {"bb": [[6, "term-BB"]], "bo": [[6, "term-BO"]], "bohb": [[6, "term-BOHB"]], "bayesian optimization": [[6, "term-Bayesian-Optimization"]], "black-box": [[6, "term-Black-Box"]], "budget": [[6, "term-Budget"]], "cli": [[6, "term-CLI"]], "cv": [[6, "term-CV"]], "gp": [[6, "term-GP"]], "gp-mcmc": [[6, "term-GP-MCMC"]], "hb": [[6, "term-HB"]], "hp": [[6, "term-HP"]], "hyperband": [[6, "term-Hyperband"]], "incumbent": [[6, "term-Incumbent"]], "instances": [[6, "term-Instances"]], "intensification": [[6, "term-Intensification"]], "mf": [[6, "term-MF"]], "multi-fidelity": [[6, "term-Multi-Fidelity"]], "multi-objective": [[6, "term-Multi-Objective"]], "objective": [[6, "term-Objective"]], "rf": [[6, "term-RF"]], "roar": [[6, "term-ROAR"]], "random online adaptive racing": [[6, "term-Random-Online-Adaptive-Racing"]], "smac": [[6, "term-SMAC"]], "smbo": [[6, "term-SMBO"]], "target function": [[6, "term-Target-Function"]], "trial": [[6, "term-Trial"]], "module": [[22, "module-smac.acquisition"], [23, "module-smac.acquisition.function"], [24, "module-smac.acquisition.function.abstract_acquisition_function"], [25, "module-smac.acquisition.function.confidence_bound"], [26, "module-smac.acquisition.function.expected_improvement"], [27, "module-smac.acquisition.function.integrated_acquisition_function"], [28, "module-smac.acquisition.function.prior_acqusition_function"], [29, "module-smac.acquisition.function.probability_improvement"], [30, "module-smac.acquisition.function.thompson"], [31, "module-smac.acquisition.maximizer"], [32, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"], [33, "module-smac.acquisition.maximizer.differential_evolution"], [34, "module-smac.acquisition.maximizer.helpers"], [35, "module-smac.acquisition.maximizer.local_and_random_search"], [36, "module-smac.acquisition.maximizer.local_search"], [37, "module-smac.acquisition.maximizer.random_search"], [38, "module-smac.callback"], [39, "module-smac.callback.callback"], [40, "module-smac.callback.metadata_callback"], [41, "module-smac.facade"], [42, "module-smac.facade.abstract_facade"], [43, "module-smac.facade.algorithm_configuration_facade"], [44, "module-smac.facade.blackbox_facade"], [45, "module-smac.facade.hyperband_facade"], [46, "module-smac.facade.hyperparameter_optimization_facade"], [47, "module-smac.facade.multi_fidelity_facade"], [48, "module-smac.facade.random_facade"], [49, "module-smac.initial_design"], [50, "module-smac.initial_design.abstract_initial_design"], [51, "module-smac.initial_design.default_design"], [52, "module-smac.initial_design.factorial_design"], [53, "module-smac.initial_design.latin_hypercube_design"], [54, "module-smac.initial_design.random_design"], [55, "module-smac.initial_design.sobol_design"], [56, "module-smac.intensifier"], [57, "module-smac.intensifier.abstract_intensifier"], [58, "module-smac.intensifier.hyperband"], [59, "module-smac.intensifier.intensifier"], [60, "module-smac.intensifier.successive_halving"], [61, "module-smac.main"], [62, "module-smac.main.config_selector"], [63, "module-smac.main.smbo"], [64, "module-smac.model"], [65, "module-smac.model.abstract_model"], [66, "module-smac.model.gaussian_process"], [67, "module-smac.model.gaussian_process.abstract_gaussian_process"], [68, "module-smac.model.gaussian_process.gaussian_process"], [69, "module-smac.model.gaussian_process.gpytorch_gaussian_process"], [70, "module-smac.model.gaussian_process.kernels"], [71, "module-smac.model.gaussian_process.kernels.base_kernels"], [72, "module-smac.model.gaussian_process.kernels.hamming_kernel"], [73, "module-smac.model.gaussian_process.kernels.matern_kernel"], [74, "module-smac.model.gaussian_process.kernels.rbf_kernel"], [75, "module-smac.model.gaussian_process.kernels.white_kernel"], [76, "module-smac.model.gaussian_process.mcmc_gaussian_process"], [77, "module-smac.model.gaussian_process.priors"], [78, "module-smac.model.gaussian_process.priors.abstract_prior"], [79, "module-smac.model.gaussian_process.priors.gamma_prior"], [80, "module-smac.model.gaussian_process.priors.horseshoe_prior"], [81, "module-smac.model.gaussian_process.priors.log_normal_prior"], [82, "module-smac.model.gaussian_process.priors.tophat_prior"], [83, "module-smac.model.multi_objective_model"], [84, "module-smac.model.random_forest"], [85, "module-smac.model.random_forest.abstract_random_forest"], [86, "module-smac.model.random_forest.random_forest"], [87, "module-smac.model.random_model"], [88, "module-smac.multi_objective"], [89, "module-smac.multi_objective.abstract_multi_objective_algorithm"], [90, "module-smac.multi_objective.aggregation_strategy"], [91, "module-smac.multi_objective.parego"], [92, "module-smac.random_design"], [93, "module-smac.random_design.abstract_random_design"], [94, "module-smac.random_design.annealing_design"], [95, "module-smac.random_design.modulus_design"], [96, "module-smac.random_design.probability_design"], [97, "module-smac.runhistory"], [98, "module-smac.runhistory.dataclasses"], [99, "module-smac.runhistory.encoder"], [100, "module-smac.runhistory.encoder.abstract_encoder"], [101, "module-smac.runhistory.encoder.boing_encoder"], [102, "module-smac.runhistory.encoder.eips_encoder"], [103, "module-smac.runhistory.encoder.encoder"], [104, "module-smac.runhistory.encoder.inverse_scaled_encoder"], [105, "module-smac.runhistory.encoder.log_encoder"], [106, "module-smac.runhistory.encoder.log_scaled_encoder"], [107, "module-smac.runhistory.encoder.scaled_encoder"], [108, "module-smac.runhistory.encoder.sqrt_scaled_encoder"], [109, "module-smac.runhistory.enumerations"], [110, "module-smac.runhistory.errors"], [111, "module-smac.runhistory.runhistory"], [112, "module-smac.runner"], [113, "module-smac.runner.abstract_runner"], [114, "module-smac.runner.abstract_serial_runner"], [115, "module-smac.runner.dask_runner"], [116, "module-smac.runner.exceptions"], [117, "module-smac.runner.target_function_runner"], [118, "module-smac.runner.target_function_script_runner"], [119, "module-smac.scenario"], [120, "module-smac.utils"], [121, "module-smac.utils.configspace"], [122, "module-smac.utils.data_structures"], [123, "module-smac.utils.logging"], [124, "module-smac.utils.multi_objective"], [125, "module-smac.utils.pareto_front"], [126, "module-smac.utils.subspaces"], [127, "module-smac.utils.subspaces.boing_subspace"], [128, "module-smac.utils.subspaces.turbo_subspace"]], "smac.acquisition": [[22, "module-smac.acquisition"]], "abstractacquisitionfunction (class in smac.acquisition.function)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction"]], "ei (class in smac.acquisition.function)": [[23, "smac.acquisition.function.EI"]], "eips (class in smac.acquisition.function)": [[23, "smac.acquisition.function.EIPS"]], "integratedacquisitionfunction (class in smac.acquisition.function)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction"]], "lcb (class in smac.acquisition.function)": [[23, "smac.acquisition.function.LCB"]], "pi (class in smac.acquisition.function)": [[23, "smac.acquisition.function.PI"]], "prioracquisitionfunction (class in smac.acquisition.function)": [[23, "smac.acquisition.function.PriorAcquisitionFunction"]], "ts (class in smac.acquisition.function)": [[23, "smac.acquisition.function.TS"]], "__call__() (smac.acquisition.function.abstractacquisitionfunction method)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.__call__"]], "_acquisition_function (smac.acquisition.function.integratedacquisitionfunction attribute)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction._acquisition_function"]], "_beta (smac.acquisition.function.lcb attribute)": [[23, "smac.acquisition.function.LCB._beta"]], "_eta (smac.acquisition.function.ei attribute)": [[23, "smac.acquisition.function.EI._eta"]], "_eta (smac.acquisition.function.integratedacquisitionfunction attribute)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction._eta"]], "_functions (smac.acquisition.function.integratedacquisitionfunction attribute)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction._functions"]], "_log (smac.acquisition.function.ei attribute)": [[23, "smac.acquisition.function.EI._log"]], "_num_data (smac.acquisition.function.lcb attribute)": [[23, "smac.acquisition.function.LCB._num_data"]], "_xi (smac.acquisition.function.ei attribute)": [[23, "smac.acquisition.function.EI._xi"]], "meta (smac.acquisition.function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.meta"]], "meta (smac.acquisition.function.ei property)": [[23, "smac.acquisition.function.EI.meta"]], "meta (smac.acquisition.function.integratedacquisitionfunction property)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction.meta"]], "meta (smac.acquisition.function.lcb property)": [[23, "smac.acquisition.function.LCB.meta"]], "meta (smac.acquisition.function.pi property)": [[23, "smac.acquisition.function.PI.meta"]], "meta (smac.acquisition.function.prioracquisitionfunction property)": [[23, "smac.acquisition.function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.model"]], "model (smac.acquisition.function.prioracquisitionfunction property)": [[23, "smac.acquisition.function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.abstractacquisitionfunction property)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.name"]], "name (smac.acquisition.function.ei property)": [[23, "smac.acquisition.function.EI.name"]], "name (smac.acquisition.function.eips property)": [[23, "smac.acquisition.function.EIPS.name"]], "name (smac.acquisition.function.integratedacquisitionfunction property)": [[23, "smac.acquisition.function.IntegratedAcquisitionFunction.name"]], "name (smac.acquisition.function.lcb property)": [[23, "smac.acquisition.function.LCB.name"]], "name (smac.acquisition.function.pi property)": [[23, "smac.acquisition.function.PI.name"]], "name (smac.acquisition.function.prioracquisitionfunction property)": [[23, "smac.acquisition.function.PriorAcquisitionFunction.name"]], "name (smac.acquisition.function.ts property)": [[23, "smac.acquisition.function.TS.name"]], "smac.acquisition.function": [[23, "module-smac.acquisition.function"]], "update() (smac.acquisition.function.abstractacquisitionfunction method)": [[23, "smac.acquisition.function.AbstractAcquisitionFunction.update"]], "abstractacquisitionfunction (class in smac.acquisition.function.abstract_acquisition_function)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction"]], "__call__() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.__call__"]], "meta (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.meta"]], "model (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.model"]], "name (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction property)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.name"]], "smac.acquisition.function.abstract_acquisition_function": [[24, "module-smac.acquisition.function.abstract_acquisition_function"]], "update() (smac.acquisition.function.abstract_acquisition_function.abstractacquisitionfunction method)": [[24, "smac.acquisition.function.abstract_acquisition_function.AbstractAcquisitionFunction.update"]], "lcb (class in smac.acquisition.function.confidence_bound)": [[25, "smac.acquisition.function.confidence_bound.LCB"]], "_beta (smac.acquisition.function.confidence_bound.lcb attribute)": [[25, "smac.acquisition.function.confidence_bound.LCB._beta"]], "_num_data (smac.acquisition.function.confidence_bound.lcb attribute)": [[25, "smac.acquisition.function.confidence_bound.LCB._num_data"]], "meta (smac.acquisition.function.confidence_bound.lcb property)": [[25, "smac.acquisition.function.confidence_bound.LCB.meta"]], "name (smac.acquisition.function.confidence_bound.lcb property)": [[25, "smac.acquisition.function.confidence_bound.LCB.name"]], "smac.acquisition.function.confidence_bound": [[25, "module-smac.acquisition.function.confidence_bound"]], "ei (class in smac.acquisition.function.expected_improvement)": [[26, "smac.acquisition.function.expected_improvement.EI"]], "eips (class in smac.acquisition.function.expected_improvement)": [[26, "smac.acquisition.function.expected_improvement.EIPS"]], "_eta (smac.acquisition.function.expected_improvement.ei attribute)": [[26, "smac.acquisition.function.expected_improvement.EI._eta"]], "_log (smac.acquisition.function.expected_improvement.ei attribute)": [[26, "smac.acquisition.function.expected_improvement.EI._log"]], "_xi (smac.acquisition.function.expected_improvement.ei attribute)": [[26, "smac.acquisition.function.expected_improvement.EI._xi"]], "meta (smac.acquisition.function.expected_improvement.ei property)": [[26, "smac.acquisition.function.expected_improvement.EI.meta"]], "name (smac.acquisition.function.expected_improvement.ei property)": [[26, "smac.acquisition.function.expected_improvement.EI.name"]], "name (smac.acquisition.function.expected_improvement.eips property)": [[26, "smac.acquisition.function.expected_improvement.EIPS.name"]], "smac.acquisition.function.expected_improvement": [[26, "module-smac.acquisition.function.expected_improvement"]], "integratedacquisitionfunction (class in smac.acquisition.function.integrated_acquisition_function)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction"]], "_acquisition_function (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._acquisition_function"]], "_eta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._eta"]], "_functions (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction attribute)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction._functions"]], "meta (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.meta"]], "name (smac.acquisition.function.integrated_acquisition_function.integratedacquisitionfunction property)": [[27, "smac.acquisition.function.integrated_acquisition_function.IntegratedAcquisitionFunction.name"]], "smac.acquisition.function.integrated_acquisition_function": [[27, "module-smac.acquisition.function.integrated_acquisition_function"]], "prioracquisitionfunction (class in smac.acquisition.function.prior_acqusition_function)": [[28, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction"]], "meta (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[28, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.meta"]], "model (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[28, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.model"]], "name (smac.acquisition.function.prior_acqusition_function.prioracquisitionfunction property)": [[28, "smac.acquisition.function.prior_acqusition_function.PriorAcquisitionFunction.name"]], "smac.acquisition.function.prior_acqusition_function": [[28, "module-smac.acquisition.function.prior_acqusition_function"]], "pi (class in smac.acquisition.function.probability_improvement)": [[29, "smac.acquisition.function.probability_improvement.PI"]], "meta (smac.acquisition.function.probability_improvement.pi property)": [[29, "smac.acquisition.function.probability_improvement.PI.meta"]], "name (smac.acquisition.function.probability_improvement.pi property)": [[29, "smac.acquisition.function.probability_improvement.PI.name"]], "smac.acquisition.function.probability_improvement": [[29, "module-smac.acquisition.function.probability_improvement"]], "ts (class in smac.acquisition.function.thompson)": [[30, "smac.acquisition.function.thompson.TS"]], "name (smac.acquisition.function.thompson.ts property)": [[30, "smac.acquisition.function.thompson.TS.name"]], "smac.acquisition.function.thompson": [[30, "module-smac.acquisition.function.thompson"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer"]], "differentialevolution (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.DifferentialEvolution"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.LocalAndSortedRandomSearch"]], "localsearch (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.LocalSearch"]], "randomsearch (class in smac.acquisition.maximizer)": [[31, "smac.acquisition.maximizer.RandomSearch"]], "acquisition_function (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[31, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "acquisition_function (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[31, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstractacquisitionmaximizer method)": [[31, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstractacquisitionmaximizer property)": [[31, "smac.acquisition.maximizer.AbstractAcquisitionMaximizer.meta"]], "meta (smac.acquisition.maximizer.localandsortedrandomsearch property)": [[31, "smac.acquisition.maximizer.LocalAndSortedRandomSearch.meta"]], "meta (smac.acquisition.maximizer.localsearch property)": [[31, "smac.acquisition.maximizer.LocalSearch.meta"]], "smac.acquisition.maximizer": [[31, "module-smac.acquisition.maximizer"]], "abstractacquisitionmaximizer (class in smac.acquisition.maximizer.abstract_acqusition_maximizer)": [[32, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer"]], "acquisition_function (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[32, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.acquisition_function"]], "maximize() (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer method)": [[32, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.maximize"]], "meta (smac.acquisition.maximizer.abstract_acqusition_maximizer.abstractacquisitionmaximizer property)": [[32, "smac.acquisition.maximizer.abstract_acqusition_maximizer.AbstractAcquisitionMaximizer.meta"]], "smac.acquisition.maximizer.abstract_acqusition_maximizer": [[32, "module-smac.acquisition.maximizer.abstract_acqusition_maximizer"]], "differentialevolution (class in smac.acquisition.maximizer.differential_evolution)": [[33, "smac.acquisition.maximizer.differential_evolution.DifferentialEvolution"]], "smac.acquisition.maximizer.differential_evolution": [[33, "module-smac.acquisition.maximizer.differential_evolution"]], "challengerlist (class in smac.acquisition.maximizer.helpers)": [[34, "smac.acquisition.maximizer.helpers.ChallengerList"]], "smac.acquisition.maximizer.helpers": [[34, "module-smac.acquisition.maximizer.helpers"]], "localandsortedpriorrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[35, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedPriorRandomSearch"]], "localandsortedrandomsearch (class in smac.acquisition.maximizer.local_and_random_search)": [[35, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch"]], "acquisition_function (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[35, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.acquisition_function"]], "meta (smac.acquisition.maximizer.local_and_random_search.localandsortedrandomsearch property)": [[35, "smac.acquisition.maximizer.local_and_random_search.LocalAndSortedRandomSearch.meta"]], "smac.acquisition.maximizer.local_and_random_search": [[35, "module-smac.acquisition.maximizer.local_and_random_search"]], "localsearch (class in smac.acquisition.maximizer.local_search)": [[36, "smac.acquisition.maximizer.local_search.LocalSearch"]], "meta (smac.acquisition.maximizer.local_search.localsearch property)": [[36, "smac.acquisition.maximizer.local_search.LocalSearch.meta"]], "smac.acquisition.maximizer.local_search": [[36, "module-smac.acquisition.maximizer.local_search"]], "randomsearch (class in smac.acquisition.maximizer.random_search)": [[37, "smac.acquisition.maximizer.random_search.RandomSearch"]], "smac.acquisition.maximizer.random_search": [[37, "module-smac.acquisition.maximizer.random_search"]], "callback (class in smac.callback)": [[38, "smac.callback.Callback"]], "metadatacallback (class in smac.callback)": [[38, "smac.callback.MetadataCallback"]], "on_ask_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_start"]], "on_start() (smac.callback.metadatacallback method)": [[38, "smac.callback.MetadataCallback.on_start"]], "on_tell_end() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback method)": [[38, "smac.callback.Callback.on_tell_start"]], "smac.callback": [[38, "module-smac.callback"]], "callback (class in smac.callback.callback)": [[39, "smac.callback.callback.Callback"]], "on_ask_end() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_ask_end"]], "on_ask_start() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_ask_start"]], "on_end() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_end"]], "on_iteration_end() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_iteration_end"]], "on_iteration_start() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_iteration_start"]], "on_next_configurations_end() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_next_configurations_end"]], "on_next_configurations_start() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_next_configurations_start"]], "on_start() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_start"]], "on_tell_end() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_tell_end"]], "on_tell_start() (smac.callback.callback.callback method)": [[39, "smac.callback.callback.Callback.on_tell_start"]], "smac.callback.callback": [[39, "module-smac.callback.callback"]], "metadatacallback (class in smac.callback.metadata_callback)": [[40, "smac.callback.metadata_callback.MetadataCallback"]], "on_start() (smac.callback.metadata_callback.metadatacallback method)": [[40, "smac.callback.metadata_callback.MetadataCallback.on_start"]], "smac.callback.metadata_callback": [[40, "module-smac.callback.metadata_callback"]], "abstractfacade (class in smac.facade)": [[41, "smac.facade.AbstractFacade"]], "algorithmconfigurationfacade (class in smac.facade)": [[41, "smac.facade.AlgorithmConfigurationFacade"]], "blackboxfacade (class in smac.facade)": [[41, "smac.facade.BlackBoxFacade"]], "hyperbandfacade (class in smac.facade)": [[41, "smac.facade.HyperbandFacade"]], "hyperparameteroptimizationfacade (class in smac.facade)": [[41, "smac.facade.HyperparameterOptimizationFacade"]], "multifidelityfacade (class in smac.facade)": [[41, "smac.facade.MultiFidelityFacade"]], "randomfacade (class in smac.facade)": [[41, "smac.facade.RandomFacade"]], "ask() (smac.facade.abstractfacade method)": [[41, "smac.facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_function() (smac.facade.randomfacade static method)": [[41, "smac.facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_acquisition_maximizer() (smac.facade.randomfacade static method)": [[41, "smac.facade.RandomFacade.get_acquisition_maximizer"]], "get_config_selector() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_config_selector"]], "get_initial_design() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_initial_design"]], "get_initial_design() (smac.facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_initial_design() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_initial_design"]], "get_initial_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_initial_design() (smac.facade.multifidelityfacade static method)": [[41, "smac.facade.MultiFidelityFacade.get_initial_design"]], "get_initial_design() (smac.facade.randomfacade static method)": [[41, "smac.facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_intensifier"]], "get_intensifier() (smac.facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_intensifier() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperbandfacade static method)": [[41, "smac.facade.HyperbandFacade.get_intensifier"]], "get_intensifier() (smac.facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_intensifier() (smac.facade.multifidelityfacade static method)": [[41, "smac.facade.MultiFidelityFacade.get_intensifier"]], "get_intensifier() (smac.facade.randomfacade static method)": [[41, "smac.facade.RandomFacade.get_intensifier"]], "get_kernel() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_model"]], "get_model() (smac.facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.AlgorithmConfigurationFacade.get_model"]], "get_model() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_model"]], "get_model() (smac.facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.HyperparameterOptimizationFacade.get_model"]], "get_model() (smac.facade.randomfacade static method)": [[41, "smac.facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_multi_objective_algorithm() (smac.facade.randomfacade static method)": [[41, "smac.facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_random_design"]], "get_random_design() (smac.facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.AlgorithmConfigurationFacade.get_random_design"]], "get_random_design() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_random_design"]], "get_random_design() (smac.facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.HyperparameterOptimizationFacade.get_random_design"]], "get_random_design() (smac.facade.randomfacade static method)": [[41, "smac.facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstractfacade static method)": [[41, "smac.facade.AbstractFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.algorithmconfigurationfacade static method)": [[41, "smac.facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.blackboxfacade static method)": [[41, "smac.facade.BlackBoxFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.hyperparameteroptimizationfacade static method)": [[41, "smac.facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "get_runhistory_encoder() (smac.facade.randomfacade static method)": [[41, "smac.facade.RandomFacade.get_runhistory_encoder"]], "intensifier (smac.facade.abstractfacade property)": [[41, "smac.facade.AbstractFacade.intensifier"]], "meta (smac.facade.abstractfacade property)": [[41, "smac.facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstractfacade method)": [[41, "smac.facade.AbstractFacade.optimize"]], "optimizer (smac.facade.abstractfacade property)": [[41, "smac.facade.AbstractFacade.optimizer"]], "runhistory (smac.facade.abstractfacade property)": [[41, "smac.facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstractfacade property)": [[41, "smac.facade.AbstractFacade.scenario"]], "smac.facade": [[41, "module-smac.facade"]], "tell() (smac.facade.abstractfacade method)": [[41, "smac.facade.AbstractFacade.tell"]], "validate() (smac.facade.abstractfacade method)": [[41, "smac.facade.AbstractFacade.validate"]], "abstractfacade (class in smac.facade.abstract_facade)": [[42, "smac.facade.abstract_facade.AbstractFacade"]], "ask() (smac.facade.abstract_facade.abstractfacade method)": [[42, "smac.facade.abstract_facade.AbstractFacade.ask"]], "get_acquisition_function() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_acquisition_maximizer"]], "get_config_selector() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_config_selector"]], "get_initial_design() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_initial_design"]], "get_intensifier() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_intensifier"]], "get_model() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.abstract_facade.abstractfacade static method)": [[42, "smac.facade.abstract_facade.AbstractFacade.get_runhistory_encoder"]], "intensifier (smac.facade.abstract_facade.abstractfacade property)": [[42, "smac.facade.abstract_facade.AbstractFacade.intensifier"]], "meta (smac.facade.abstract_facade.abstractfacade property)": [[42, "smac.facade.abstract_facade.AbstractFacade.meta"]], "optimize() (smac.facade.abstract_facade.abstractfacade method)": [[42, "smac.facade.abstract_facade.AbstractFacade.optimize"]], "optimizer (smac.facade.abstract_facade.abstractfacade property)": [[42, "smac.facade.abstract_facade.AbstractFacade.optimizer"]], "runhistory (smac.facade.abstract_facade.abstractfacade property)": [[42, "smac.facade.abstract_facade.AbstractFacade.runhistory"]], "scenario (smac.facade.abstract_facade.abstractfacade property)": [[42, "smac.facade.abstract_facade.AbstractFacade.scenario"]], "smac.facade.abstract_facade": [[42, "module-smac.facade.abstract_facade"]], "tell() (smac.facade.abstract_facade.abstractfacade method)": [[42, "smac.facade.abstract_facade.AbstractFacade.tell"]], "validate() (smac.facade.abstract_facade.abstractfacade method)": [[42, "smac.facade.abstract_facade.AbstractFacade.validate"]], "algorithmconfigurationfacade (class in smac.facade.algorithm_configuration_facade)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade"]], "get_acquisition_function() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_initial_design"]], "get_intensifier() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_intensifier"]], "get_model() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.algorithm_configuration_facade.algorithmconfigurationfacade static method)": [[43, "smac.facade.algorithm_configuration_facade.AlgorithmConfigurationFacade.get_runhistory_encoder"]], "smac.facade.algorithm_configuration_facade": [[43, "module-smac.facade.algorithm_configuration_facade"]], "blackboxfacade (class in smac.facade.blackbox_facade)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade"]], "get_acquisition_function() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_initial_design"]], "get_intensifier() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_intensifier"]], "get_kernel() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_kernel"]], "get_model() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.blackbox_facade.blackboxfacade static method)": [[44, "smac.facade.blackbox_facade.BlackBoxFacade.get_runhistory_encoder"]], "smac.facade.blackbox_facade": [[44, "module-smac.facade.blackbox_facade"]], "hyperbandfacade (class in smac.facade.hyperband_facade)": [[45, "smac.facade.hyperband_facade.HyperbandFacade"]], "get_intensifier() (smac.facade.hyperband_facade.hyperbandfacade static method)": [[45, "smac.facade.hyperband_facade.HyperbandFacade.get_intensifier"]], "smac.facade.hyperband_facade": [[45, "module-smac.facade.hyperband_facade"]], "hyperparameteroptimizationfacade (class in smac.facade.hyperparameter_optimization_facade)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade"]], "get_acquisition_function() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_initial_design"]], "get_intensifier() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_intensifier"]], "get_model() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.hyperparameter_optimization_facade.hyperparameteroptimizationfacade static method)": [[46, "smac.facade.hyperparameter_optimization_facade.HyperparameterOptimizationFacade.get_runhistory_encoder"]], "smac.facade.hyperparameter_optimization_facade": [[46, "module-smac.facade.hyperparameter_optimization_facade"]], "multifidelityfacade (class in smac.facade.multi_fidelity_facade)": [[47, "smac.facade.multi_fidelity_facade.MultiFidelityFacade"]], "get_initial_design() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[47, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_initial_design"]], "get_intensifier() (smac.facade.multi_fidelity_facade.multifidelityfacade static method)": [[47, "smac.facade.multi_fidelity_facade.MultiFidelityFacade.get_intensifier"]], "smac.facade.multi_fidelity_facade": [[47, "module-smac.facade.multi_fidelity_facade"]], "randomfacade (class in smac.facade.random_facade)": [[48, "smac.facade.random_facade.RandomFacade"]], "get_acquisition_function() (smac.facade.random_facade.randomfacade static method)": [[48, "smac.facade.random_facade.RandomFacade.get_acquisition_function"]], "get_acquisition_maximizer() (smac.facade.random_facade.randomfacade static method)": [[48, "smac.facade.random_facade.RandomFacade.get_acquisition_maximizer"]], "get_initial_design() (smac.facade.random_facade.randomfacade static method)": [[48, "smac.facade.random_facade.RandomFacade.get_initial_design"]], "get_intensifier() (smac.facade.random_facade.randomfacade static method)": [[48, "smac.facade.random_facade.RandomFacade.get_intensifier"]], "get_model() (smac.facade.random_facade.randomfacade static method)": [[48, "smac.facade.random_facade.RandomFacade.get_model"]], "get_multi_objective_algorithm() (smac.facade.random_facade.randomfacade static method)": [[48, "smac.facade.random_facade.RandomFacade.get_multi_objective_algorithm"]], "get_random_design() (smac.facade.random_facade.randomfacade static method)": [[48, "smac.facade.random_facade.RandomFacade.get_random_design"]], "get_runhistory_encoder() (smac.facade.random_facade.randomfacade static method)": [[48, "smac.facade.random_facade.RandomFacade.get_runhistory_encoder"]], "smac.facade.random_facade": [[48, "module-smac.facade.random_facade"]], "abstractinitialdesign (class in smac.initial_design)": [[49, "smac.initial_design.AbstractInitialDesign"]], "defaultinitialdesign (class in smac.initial_design)": [[49, "smac.initial_design.DefaultInitialDesign"]], "factorialinitialdesign (class in smac.initial_design)": [[49, "smac.initial_design.FactorialInitialDesign"]], "latinhypercubeinitialdesign (class in smac.initial_design)": [[49, "smac.initial_design.LatinHypercubeInitialDesign"]], "randominitialdesign (class in smac.initial_design)": [[49, "smac.initial_design.RandomInitialDesign"]], "sobolinitialdesign (class in smac.initial_design)": [[49, "smac.initial_design.SobolInitialDesign"]], "meta (smac.initial_design.abstractinitialdesign property)": [[49, "smac.initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstractinitialdesign method)": [[49, "smac.initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design": [[49, "module-smac.initial_design"]], "abstractinitialdesign (class in smac.initial_design.abstract_initial_design)": [[50, "smac.initial_design.abstract_initial_design.AbstractInitialDesign"]], "meta (smac.initial_design.abstract_initial_design.abstractinitialdesign property)": [[50, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.meta"]], "select_configurations() (smac.initial_design.abstract_initial_design.abstractinitialdesign method)": [[50, "smac.initial_design.abstract_initial_design.AbstractInitialDesign.select_configurations"]], "smac.initial_design.abstract_initial_design": [[50, "module-smac.initial_design.abstract_initial_design"]], "defaultinitialdesign (class in smac.initial_design.default_design)": [[51, "smac.initial_design.default_design.DefaultInitialDesign"]], "smac.initial_design.default_design": [[51, "module-smac.initial_design.default_design"]], "factorialinitialdesign (class in smac.initial_design.factorial_design)": [[52, "smac.initial_design.factorial_design.FactorialInitialDesign"]], "smac.initial_design.factorial_design": [[52, "module-smac.initial_design.factorial_design"]], "latinhypercubeinitialdesign (class in smac.initial_design.latin_hypercube_design)": [[53, "smac.initial_design.latin_hypercube_design.LatinHypercubeInitialDesign"]], "smac.initial_design.latin_hypercube_design": [[53, "module-smac.initial_design.latin_hypercube_design"]], "randominitialdesign (class in smac.initial_design.random_design)": [[54, "smac.initial_design.random_design.RandomInitialDesign"]], "smac.initial_design.random_design": [[54, "module-smac.initial_design.random_design"]], "sobolinitialdesign (class in smac.initial_design.sobol_design)": [[55, "smac.initial_design.sobol_design.SobolInitialDesign"]], "smac.initial_design.sobol_design": [[55, "module-smac.initial_design.sobol_design"]], "abstractintensifier (class in smac.intensifier)": [[56, "smac.intensifier.AbstractIntensifier"]], "hyperband (class in smac.intensifier)": [[56, "smac.intensifier.Hyperband"]], "intensifier (class in smac.intensifier)": [[56, "smac.intensifier.Intensifier"]], "successivehalving (class in smac.intensifier)": [[56, "smac.intensifier.SuccessiveHalving"]], "__iter__() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.__iter__"]], "__iter__() (smac.intensifier.intensifier method)": [[56, "smac.intensifier.Intensifier.__iter__"]], "__post_init__() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.__post_init__"]], "__post_init__() (smac.intensifier.successivehalving method)": [[56, "smac.intensifier.SuccessiveHalving.__post_init__"]], "config_generator (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.config_generator"]], "config_selector (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.config_selector"]], "get_callback() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_callback"]], "get_incumbent() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_incumbent"]], "get_incumbent_instance_seed_budget_key_differences() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_key_differences"]], "get_incumbent_instance_seed_budget_keys() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_keys"]], "get_incumbents() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_incumbents"]], "get_instance_seed_budget_keys() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_instance_seed_budget_keys"]], "get_instance_seed_budget_keys() (smac.intensifier.successivehalving method)": [[56, "smac.intensifier.SuccessiveHalving.get_instance_seed_budget_keys"]], "get_instance_seed_keys_of_interest() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_instance_seed_keys_of_interest"]], "get_rejected_configs() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_rejected_configs"]], "get_state() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_state"]], "get_state() (smac.intensifier.hyperband method)": [[56, "smac.intensifier.Hyperband.get_state"]], "get_state() (smac.intensifier.intensifier method)": [[56, "smac.intensifier.Intensifier.get_state"]], "get_state() (smac.intensifier.successivehalving method)": [[56, "smac.intensifier.SuccessiveHalving.get_state"]], "get_trials_of_interest() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.get_trials_of_interest"]], "get_trials_of_interest() (smac.intensifier.successivehalving method)": [[56, "smac.intensifier.SuccessiveHalving.get_trials_of_interest"]], "incumbents_changed (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.incumbents_changed"]], "load() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.load"]], "meta (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.meta"]], "meta (smac.intensifier.successivehalving property)": [[56, "smac.intensifier.SuccessiveHalving.meta"]], "print_tracker() (smac.intensifier.successivehalving method)": [[56, "smac.intensifier.SuccessiveHalving.print_tracker"]], "reset() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.reset"]], "reset() (smac.intensifier.hyperband method)": [[56, "smac.intensifier.Hyperband.reset"]], "reset() (smac.intensifier.intensifier method)": [[56, "smac.intensifier.Intensifier.reset"]], "reset() (smac.intensifier.successivehalving method)": [[56, "smac.intensifier.SuccessiveHalving.reset"]], "runhistory (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.runhistory"]], "save() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.save"]], "set_state() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.set_state"]], "set_state() (smac.intensifier.hyperband method)": [[56, "smac.intensifier.Hyperband.set_state"]], "set_state() (smac.intensifier.intensifier method)": [[56, "smac.intensifier.Intensifier.set_state"]], "set_state() (smac.intensifier.successivehalving method)": [[56, "smac.intensifier.SuccessiveHalving.set_state"]], "smac.intensifier": [[56, "module-smac.intensifier"]], "trajectory (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.trajectory"]], "update_incumbents() (smac.intensifier.abstractintensifier method)": [[56, "smac.intensifier.AbstractIntensifier.update_incumbents"]], "used_walltime (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.used_walltime"]], "uses_budgets (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.uses_budgets"]], "uses_budgets (smac.intensifier.intensifier property)": [[56, "smac.intensifier.Intensifier.uses_budgets"]], "uses_budgets (smac.intensifier.successivehalving property)": [[56, "smac.intensifier.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.uses_instances"]], "uses_instances (smac.intensifier.intensifier property)": [[56, "smac.intensifier.Intensifier.uses_instances"]], "uses_instances (smac.intensifier.successivehalving property)": [[56, "smac.intensifier.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.abstractintensifier property)": [[56, "smac.intensifier.AbstractIntensifier.uses_seeds"]], "uses_seeds (smac.intensifier.intensifier property)": [[56, "smac.intensifier.Intensifier.uses_seeds"]], "uses_seeds (smac.intensifier.successivehalving property)": [[56, "smac.intensifier.SuccessiveHalving.uses_seeds"]], "abstractintensifier (class in smac.intensifier.abstract_intensifier)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier"]], "__iter__() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.__iter__"]], "__post_init__() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.__post_init__"]], "config_generator (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.config_generator"]], "config_selector (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.config_selector"]], "get_callback() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_callback"]], "get_incumbent() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent"]], "get_incumbent_instance_seed_budget_key_differences() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_key_differences"]], "get_incumbent_instance_seed_budget_keys() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbent_instance_seed_budget_keys"]], "get_incumbents() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_incumbents"]], "get_instance_seed_budget_keys() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_instance_seed_budget_keys"]], "get_instance_seed_keys_of_interest() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_instance_seed_keys_of_interest"]], "get_rejected_configs() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_rejected_configs"]], "get_state() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_state"]], "get_trials_of_interest() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.get_trials_of_interest"]], "incumbents_changed (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.incumbents_changed"]], "load() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.load"]], "meta (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.meta"]], "reset() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.reset"]], "runhistory (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.runhistory"]], "save() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.save"]], "set_state() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.set_state"]], "smac.intensifier.abstract_intensifier": [[57, "module-smac.intensifier.abstract_intensifier"]], "trajectory (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.trajectory"]], "update_incumbents() (smac.intensifier.abstract_intensifier.abstractintensifier method)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.update_incumbents"]], "used_walltime (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.used_walltime"]], "uses_budgets (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_budgets"]], "uses_instances (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_instances"]], "uses_seeds (smac.intensifier.abstract_intensifier.abstractintensifier property)": [[57, "smac.intensifier.abstract_intensifier.AbstractIntensifier.uses_seeds"]], "hyperband (class in smac.intensifier.hyperband)": [[58, "smac.intensifier.hyperband.Hyperband"]], "get_state() (smac.intensifier.hyperband.hyperband method)": [[58, "smac.intensifier.hyperband.Hyperband.get_state"]], "reset() (smac.intensifier.hyperband.hyperband method)": [[58, "smac.intensifier.hyperband.Hyperband.reset"]], "set_state() (smac.intensifier.hyperband.hyperband method)": [[58, "smac.intensifier.hyperband.Hyperband.set_state"]], "smac.intensifier.hyperband": [[58, "module-smac.intensifier.hyperband"]], "intensifier (class in smac.intensifier.intensifier)": [[59, "smac.intensifier.intensifier.Intensifier"]], "__iter__() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.__iter__"]], "get_state() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.get_state"]], "reset() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.reset"]], "set_state() (smac.intensifier.intensifier.intensifier method)": [[59, "smac.intensifier.intensifier.Intensifier.set_state"]], "smac.intensifier.intensifier": [[59, "module-smac.intensifier.intensifier"]], "uses_budgets (smac.intensifier.intensifier.intensifier property)": [[59, "smac.intensifier.intensifier.Intensifier.uses_budgets"]], "uses_instances (smac.intensifier.intensifier.intensifier property)": [[59, "smac.intensifier.intensifier.Intensifier.uses_instances"]], "uses_seeds (smac.intensifier.intensifier.intensifier property)": [[59, "smac.intensifier.intensifier.Intensifier.uses_seeds"]], "successivehalving (class in smac.intensifier.successive_halving)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving"]], "__post_init__() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.__post_init__"]], "get_instance_seed_budget_keys() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.get_instance_seed_budget_keys"]], "get_state() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.get_state"]], "get_trials_of_interest() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.get_trials_of_interest"]], "meta (smac.intensifier.successive_halving.successivehalving property)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.meta"]], "print_tracker() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.print_tracker"]], "reset() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.reset"]], "set_state() (smac.intensifier.successive_halving.successivehalving method)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.set_state"]], "smac.intensifier.successive_halving": [[60, "module-smac.intensifier.successive_halving"]], "uses_budgets (smac.intensifier.successive_halving.successivehalving property)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.uses_budgets"]], "uses_instances (smac.intensifier.successive_halving.successivehalving property)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.uses_instances"]], "uses_seeds (smac.intensifier.successive_halving.successivehalving property)": [[60, "smac.intensifier.successive_halving.SuccessiveHalving.uses_seeds"]], "smac.main": [[61, "module-smac.main"]], "configselector (class in smac.main.config_selector)": [[62, "smac.main.config_selector.ConfigSelector"]], "__iter__() (smac.main.config_selector.configselector method)": [[62, "smac.main.config_selector.ConfigSelector.__iter__"]], "meta (smac.main.config_selector.configselector property)": [[62, "smac.main.config_selector.ConfigSelector.meta"]], "smac.main.config_selector": [[62, "module-smac.main.config_selector"]], "smbo (class in smac.main.smbo)": [[63, "smac.main.smbo.SMBO"]], "ask() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.ask"]], "budget_exhausted (smac.main.smbo.smbo property)": [[63, "smac.main.smbo.SMBO.budget_exhausted"]], "exists() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.exists"]], "intensifier (smac.main.smbo.smbo property)": [[63, "smac.main.smbo.SMBO.intensifier"]], "load() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.load"]], "optimize() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.optimize"]], "print_stats() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.print_stats"]], "register_callback() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.register_callback"]], "remaining_cputime (smac.main.smbo.smbo property)": [[63, "smac.main.smbo.SMBO.remaining_cputime"]], "remaining_trials (smac.main.smbo.smbo property)": [[63, "smac.main.smbo.SMBO.remaining_trials"]], "remaining_walltime (smac.main.smbo.smbo property)": [[63, "smac.main.smbo.SMBO.remaining_walltime"]], "reset() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.reset"]], "runhistory (smac.main.smbo.smbo property)": [[63, "smac.main.smbo.SMBO.runhistory"]], "save() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.save"]], "smac.main.smbo": [[63, "module-smac.main.smbo"]], "tell() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.tell"]], "update_acquisition_function() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.update_acquisition_function"]], "update_model() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.update_model"]], "used_target_function_walltime (smac.main.smbo.smbo property)": [[63, "smac.main.smbo.SMBO.used_target_function_walltime"]], "used_walltime (smac.main.smbo.smbo property)": [[63, "smac.main.smbo.SMBO.used_walltime"]], "validate() (smac.main.smbo.smbo method)": [[63, "smac.main.smbo.SMBO.validate"]], "abstractmodel (class in smac.model)": [[64, "smac.model.AbstractModel"]], "multiobjectivemodel (class in smac.model)": [[64, "smac.model.MultiObjectiveModel"]], "randommodel (class in smac.model)": [[64, "smac.model.RandomModel"]], "meta (smac.model.abstractmodel property)": [[64, "smac.model.AbstractModel.meta"]], "models (smac.model.multiobjectivemodel property)": [[64, "smac.model.MultiObjectiveModel.models"]], "predict() (smac.model.abstractmodel method)": [[64, "smac.model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstractmodel method)": [[64, "smac.model.AbstractModel.predict_marginalized"]], "predict_marginalized() (smac.model.multiobjectivemodel method)": [[64, "smac.model.MultiObjectiveModel.predict_marginalized"]], "smac.model": [[64, "module-smac.model"]], "train() (smac.model.abstractmodel method)": [[64, "smac.model.AbstractModel.train"]], "abstractmodel (class in smac.model.abstract_model)": [[65, "smac.model.abstract_model.AbstractModel"]], "meta (smac.model.abstract_model.abstractmodel property)": [[65, "smac.model.abstract_model.AbstractModel.meta"]], "predict() (smac.model.abstract_model.abstractmodel method)": [[65, "smac.model.abstract_model.AbstractModel.predict"]], "predict_marginalized() (smac.model.abstract_model.abstractmodel method)": [[65, "smac.model.abstract_model.AbstractModel.predict_marginalized"]], "smac.model.abstract_model": [[65, "module-smac.model.abstract_model"]], "train() (smac.model.abstract_model.abstractmodel method)": [[65, "smac.model.abstract_model.AbstractModel.train"]], "abstractgaussianprocess (class in smac.model.gaussian_process)": [[66, "smac.model.gaussian_process.AbstractGaussianProcess"]], "gaussianprocess (class in smac.model.gaussian_process)": [[66, "smac.model.gaussian_process.GaussianProcess"]], "mcmcgaussianprocess (class in smac.model.gaussian_process)": [[66, "smac.model.gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.abstractgaussianprocess property)": [[66, "smac.model.gaussian_process.AbstractGaussianProcess.meta"]], "meta (smac.model.gaussian_process.gaussianprocess property)": [[66, "smac.model.gaussian_process.GaussianProcess.meta"]], "meta (smac.model.gaussian_process.mcmcgaussianprocess property)": [[66, "smac.model.gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmcgaussianprocess property)": [[66, "smac.model.gaussian_process.MCMCGaussianProcess.models"]], "sample_functions() (smac.model.gaussian_process.gaussianprocess method)": [[66, "smac.model.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process": [[66, "module-smac.model.gaussian_process"]], "abstractgaussianprocess (class in smac.model.gaussian_process.abstract_gaussian_process)": [[67, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess"]], "meta (smac.model.gaussian_process.abstract_gaussian_process.abstractgaussianprocess property)": [[67, "smac.model.gaussian_process.abstract_gaussian_process.AbstractGaussianProcess.meta"]], "smac.model.gaussian_process.abstract_gaussian_process": [[67, "module-smac.model.gaussian_process.abstract_gaussian_process"]], "gaussianprocess (class in smac.model.gaussian_process.gaussian_process)": [[68, "smac.model.gaussian_process.gaussian_process.GaussianProcess"]], "meta (smac.model.gaussian_process.gaussian_process.gaussianprocess property)": [[68, "smac.model.gaussian_process.gaussian_process.GaussianProcess.meta"]], "sample_functions() (smac.model.gaussian_process.gaussian_process.gaussianprocess method)": [[68, "smac.model.gaussian_process.gaussian_process.GaussianProcess.sample_functions"]], "smac.model.gaussian_process.gaussian_process": [[68, "module-smac.model.gaussian_process.gaussian_process"]], "smac.model.gaussian_process.gpytorch_gaussian_process": [[69, "module-smac.model.gaussian_process.gpytorch_gaussian_process"]], "abstractkernel (class in smac.model.gaussian_process.kernels)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels)": [[70, "smac.model.gaussian_process.kernels.ConstantKernel"]], "hammingkernel (class in smac.model.gaussian_process.kernels)": [[70, "smac.model.gaussian_process.kernels.HammingKernel"]], "maternkernel (class in smac.model.gaussian_process.kernels)": [[70, "smac.model.gaussian_process.kernels.MaternKernel"]], "productkernel (class in smac.model.gaussian_process.kernels)": [[70, "smac.model.gaussian_process.kernels.ProductKernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels)": [[70, "smac.model.gaussian_process.kernels.RBFKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels)": [[70, "smac.model.gaussian_process.kernels.SumKernel"]], "whitekernel (class in smac.model.gaussian_process.kernels)": [[70, "smac.model.gaussian_process.kernels.WhiteKernel"]], "__call__() (smac.model.gaussian_process.kernels.abstractkernel method)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.constantkernel method)": [[70, "smac.model.gaussian_process.kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.productkernel method)": [[70, "smac.model.gaussian_process.kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.sumkernel method)": [[70, "smac.model.gaussian_process.kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.abstractkernel method)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel.has_conditions"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hammingkernel property)": [[70, "smac.model.gaussian_process.kernels.HammingKernel.hyperparameter_length_scale"]], "hyperparameters (smac.model.gaussian_process.kernels.abstractkernel property)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.abstractkernel property)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel.meta"]], "meta (smac.model.gaussian_process.kernels.hammingkernel property)": [[70, "smac.model.gaussian_process.kernels.HammingKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.abstractkernel property)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.abstractkernel attribute)": [[70, "smac.model.gaussian_process.kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels": [[70, "module-smac.model.gaussian_process.kernels"]], "abstractkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel"]], "constantkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[71, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel"]], "productkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[71, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel"]], "sumkernel (class in smac.model.gaussian_process.kernels.base_kernels)": [[71, "smac.model.gaussian_process.kernels.base_kernels.SumKernel"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.constantkernel method)": [[71, "smac.model.gaussian_process.kernels.base_kernels.ConstantKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.productkernel method)": [[71, "smac.model.gaussian_process.kernels.base_kernels.ProductKernel.__call__"]], "__call__() (smac.model.gaussian_process.kernels.base_kernels.sumkernel method)": [[71, "smac.model.gaussian_process.kernels.base_kernels.SumKernel.__call__"]], "get_params() (smac.model.gaussian_process.kernels.base_kernels.abstractkernel method)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.get_params"]], "has_conditions (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.has_conditions"]], "hyperparameters (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.hyperparameters"]], "meta (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.meta"]], "n_dims (smac.model.gaussian_process.kernels.base_kernels.abstractkernel property)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.n_dims"]], "operate_on (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.operate_on"]], "prior (smac.model.gaussian_process.kernels.base_kernels.abstractkernel attribute)": [[71, "smac.model.gaussian_process.kernels.base_kernels.AbstractKernel.prior"]], "smac.model.gaussian_process.kernels.base_kernels": [[71, "module-smac.model.gaussian_process.kernels.base_kernels"]], "hammingkernel (class in smac.model.gaussian_process.kernels.hamming_kernel)": [[72, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel"]], "hyperparameter_length_scale (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[72, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.hyperparameter_length_scale"]], "meta (smac.model.gaussian_process.kernels.hamming_kernel.hammingkernel property)": [[72, "smac.model.gaussian_process.kernels.hamming_kernel.HammingKernel.meta"]], "smac.model.gaussian_process.kernels.hamming_kernel": [[72, "module-smac.model.gaussian_process.kernels.hamming_kernel"]], "maternkernel (class in smac.model.gaussian_process.kernels.matern_kernel)": [[73, "smac.model.gaussian_process.kernels.matern_kernel.MaternKernel"]], "smac.model.gaussian_process.kernels.matern_kernel": [[73, "module-smac.model.gaussian_process.kernels.matern_kernel"]], "rbfkernel (class in smac.model.gaussian_process.kernels.rbf_kernel)": [[74, "smac.model.gaussian_process.kernels.rbf_kernel.RBFKernel"]], "smac.model.gaussian_process.kernels.rbf_kernel": [[74, "module-smac.model.gaussian_process.kernels.rbf_kernel"]], "whitekernel (class in smac.model.gaussian_process.kernels.white_kernel)": [[75, "smac.model.gaussian_process.kernels.white_kernel.WhiteKernel"]], "smac.model.gaussian_process.kernels.white_kernel": [[75, "module-smac.model.gaussian_process.kernels.white_kernel"]], "mcmcgaussianprocess (class in smac.model.gaussian_process.mcmc_gaussian_process)": [[76, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess"]], "meta (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[76, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.meta"]], "models (smac.model.gaussian_process.mcmc_gaussian_process.mcmcgaussianprocess property)": [[76, "smac.model.gaussian_process.mcmc_gaussian_process.MCMCGaussianProcess.models"]], "smac.model.gaussian_process.mcmc_gaussian_process": [[76, "module-smac.model.gaussian_process.mcmc_gaussian_process"]], "gammaprior (class in smac.model.gaussian_process.priors)": [[77, "smac.model.gaussian_process.priors.GammaPrior"]], "horseshoeprior (class in smac.model.gaussian_process.priors)": [[77, "smac.model.gaussian_process.priors.HorseshoePrior"]], "lognormalprior (class in smac.model.gaussian_process.priors)": [[77, "smac.model.gaussian_process.priors.LogNormalPrior"]], "softtophatprior (class in smac.model.gaussian_process.priors)": [[77, "smac.model.gaussian_process.priors.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors)": [[77, "smac.model.gaussian_process.priors.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.softtophatprior method)": [[77, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophatprior method)": [[77, "smac.model.gaussian_process.priors.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.softtophatprior method)": [[77, "smac.model.gaussian_process.priors.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.gammaprior property)": [[77, "smac.model.gaussian_process.priors.GammaPrior.meta"]], "meta (smac.model.gaussian_process.priors.horseshoeprior property)": [[77, "smac.model.gaussian_process.priors.HorseshoePrior.meta"]], "meta (smac.model.gaussian_process.priors.lognormalprior property)": [[77, "smac.model.gaussian_process.priors.LogNormalPrior.meta"]], "meta (smac.model.gaussian_process.priors.softtophatprior property)": [[77, "smac.model.gaussian_process.priors.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophatprior property)": [[77, "smac.model.gaussian_process.priors.TophatPrior.meta"]], "smac.model.gaussian_process.priors": [[77, "module-smac.model.gaussian_process.priors"]], "abstractprior (class in smac.model.gaussian_process.priors.abstract_prior)": [[78, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior"]], "get_gradient() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[78, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[78, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.abstract_prior.abstractprior property)": [[78, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.meta"]], "sample_from_prior() (smac.model.gaussian_process.priors.abstract_prior.abstractprior method)": [[78, "smac.model.gaussian_process.priors.abstract_prior.AbstractPrior.sample_from_prior"]], "smac.model.gaussian_process.priors.abstract_prior": [[78, "module-smac.model.gaussian_process.priors.abstract_prior"]], "gammaprior (class in smac.model.gaussian_process.priors.gamma_prior)": [[79, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior"]], "meta (smac.model.gaussian_process.priors.gamma_prior.gammaprior property)": [[79, "smac.model.gaussian_process.priors.gamma_prior.GammaPrior.meta"]], "smac.model.gaussian_process.priors.gamma_prior": [[79, "module-smac.model.gaussian_process.priors.gamma_prior"]], "horseshoeprior (class in smac.model.gaussian_process.priors.horseshoe_prior)": [[80, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior"]], "meta (smac.model.gaussian_process.priors.horseshoe_prior.horseshoeprior property)": [[80, "smac.model.gaussian_process.priors.horseshoe_prior.HorseshoePrior.meta"]], "smac.model.gaussian_process.priors.horseshoe_prior": [[80, "module-smac.model.gaussian_process.priors.horseshoe_prior"]], "lognormalprior (class in smac.model.gaussian_process.priors.log_normal_prior)": [[81, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior"]], "meta (smac.model.gaussian_process.priors.log_normal_prior.lognormalprior property)": [[81, "smac.model.gaussian_process.priors.log_normal_prior.LogNormalPrior.meta"]], "smac.model.gaussian_process.priors.log_normal_prior": [[81, "module-smac.model.gaussian_process.priors.log_normal_prior"]], "softtophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[82, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior"]], "tophatprior (class in smac.model.gaussian_process.priors.tophat_prior)": [[82, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[82, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_gradient"]], "get_gradient() (smac.model.gaussian_process.priors.tophat_prior.tophatprior method)": [[82, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.get_gradient"]], "get_log_probability() (smac.model.gaussian_process.priors.tophat_prior.softtophatprior method)": [[82, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.get_log_probability"]], "meta (smac.model.gaussian_process.priors.tophat_prior.softtophatprior property)": [[82, "smac.model.gaussian_process.priors.tophat_prior.SoftTopHatPrior.meta"]], "meta (smac.model.gaussian_process.priors.tophat_prior.tophatprior property)": [[82, "smac.model.gaussian_process.priors.tophat_prior.TophatPrior.meta"]], "smac.model.gaussian_process.priors.tophat_prior": [[82, "module-smac.model.gaussian_process.priors.tophat_prior"]], "multiobjectivemodel (class in smac.model.multi_objective_model)": [[83, "smac.model.multi_objective_model.MultiObjectiveModel"]], "models (smac.model.multi_objective_model.multiobjectivemodel property)": [[83, "smac.model.multi_objective_model.MultiObjectiveModel.models"]], "predict_marginalized() (smac.model.multi_objective_model.multiobjectivemodel method)": [[83, "smac.model.multi_objective_model.MultiObjectiveModel.predict_marginalized"]], "smac.model.multi_objective_model": [[83, "module-smac.model.multi_objective_model"]], "abstractrandomforest (class in smac.model.random_forest)": [[84, "smac.model.random_forest.AbstractRandomForest"]], "randomforest (class in smac.model.random_forest)": [[84, "smac.model.random_forest.RandomForest"]], "meta (smac.model.random_forest.randomforest property)": [[84, "smac.model.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.randomforest method)": [[84, "smac.model.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest": [[84, "module-smac.model.random_forest"]], "abstractrandomforest (class in smac.model.random_forest.abstract_random_forest)": [[85, "smac.model.random_forest.abstract_random_forest.AbstractRandomForest"]], "smac.model.random_forest.abstract_random_forest": [[85, "module-smac.model.random_forest.abstract_random_forest"]], "randomforest (class in smac.model.random_forest.random_forest)": [[86, "smac.model.random_forest.random_forest.RandomForest"]], "meta (smac.model.random_forest.random_forest.randomforest property)": [[86, "smac.model.random_forest.random_forest.RandomForest.meta"]], "predict_marginalized() (smac.model.random_forest.random_forest.randomforest method)": [[86, "smac.model.random_forest.random_forest.RandomForest.predict_marginalized"]], "smac.model.random_forest.random_forest": [[86, "module-smac.model.random_forest.random_forest"]], "randommodel (class in smac.model.random_model)": [[87, "smac.model.random_model.RandomModel"]], "smac.model.random_model": [[87, "module-smac.model.random_model"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective)": [[88, "smac.multi_objective.AbstractMultiObjectiveAlgorithm"]], "meanaggregationstrategy (class in smac.multi_objective)": [[88, "smac.multi_objective.MeanAggregationStrategy"]], "parego (class in smac.multi_objective)": [[88, "smac.multi_objective.ParEGO"]], "__call__() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[88, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.__call__"]], "__call__() (smac.multi_objective.meanaggregationstrategy method)": [[88, "smac.multi_objective.MeanAggregationStrategy.__call__"]], "__call__() (smac.multi_objective.parego method)": [[88, "smac.multi_objective.ParEGO.__call__"]], "meta (smac.multi_objective.abstractmultiobjectivealgorithm property)": [[88, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.meta"]], "meta (smac.multi_objective.meanaggregationstrategy property)": [[88, "smac.multi_objective.MeanAggregationStrategy.meta"]], "meta (smac.multi_objective.parego property)": [[88, "smac.multi_objective.ParEGO.meta"]], "smac.multi_objective": [[88, "module-smac.multi_objective"]], "update_on_iteration_start() (smac.multi_objective.abstractmultiobjectivealgorithm method)": [[88, "smac.multi_objective.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "update_on_iteration_start() (smac.multi_objective.parego method)": [[88, "smac.multi_objective.ParEGO.update_on_iteration_start"]], "abstractmultiobjectivealgorithm (class in smac.multi_objective.abstract_multi_objective_algorithm)": [[89, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm"]], "__call__() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[89, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.__call__"]], "meta (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm property)": [[89, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.meta"]], "smac.multi_objective.abstract_multi_objective_algorithm": [[89, "module-smac.multi_objective.abstract_multi_objective_algorithm"]], "update_on_iteration_start() (smac.multi_objective.abstract_multi_objective_algorithm.abstractmultiobjectivealgorithm method)": [[89, "smac.multi_objective.abstract_multi_objective_algorithm.AbstractMultiObjectiveAlgorithm.update_on_iteration_start"]], "meanaggregationstrategy (class in smac.multi_objective.aggregation_strategy)": [[90, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy"]], "__call__() (smac.multi_objective.aggregation_strategy.meanaggregationstrategy method)": [[90, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.__call__"]], "meta (smac.multi_objective.aggregation_strategy.meanaggregationstrategy property)": [[90, "smac.multi_objective.aggregation_strategy.MeanAggregationStrategy.meta"]], "smac.multi_objective.aggregation_strategy": [[90, "module-smac.multi_objective.aggregation_strategy"]], "parego (class in smac.multi_objective.parego)": [[91, "smac.multi_objective.parego.ParEGO"]], "__call__() (smac.multi_objective.parego.parego method)": [[91, "smac.multi_objective.parego.ParEGO.__call__"]], "meta (smac.multi_objective.parego.parego property)": [[91, "smac.multi_objective.parego.ParEGO.meta"]], "smac.multi_objective.parego": [[91, "module-smac.multi_objective.parego"]], "update_on_iteration_start() (smac.multi_objective.parego.parego method)": [[91, "smac.multi_objective.parego.ParEGO.update_on_iteration_start"]], "abstractrandomdesign (class in smac.random_design)": [[92, "smac.random_design.AbstractRandomDesign"]], "cosineannealingrandomdesign (class in smac.random_design)": [[92, "smac.random_design.CosineAnnealingRandomDesign"]], "dynamicmodulusrandomdesign (class in smac.random_design)": [[92, "smac.random_design.DynamicModulusRandomDesign"]], "dynamicprobabilityrandomdesign (class in smac.random_design)": [[92, "smac.random_design.DynamicProbabilityRandomDesign"]], "modulusrandomdesign (class in smac.random_design)": [[92, "smac.random_design.ModulusRandomDesign"]], "probabilityrandomdesign (class in smac.random_design)": [[92, "smac.random_design.ProbabilityRandomDesign"]], "check() (smac.random_design.abstractrandomdesign method)": [[92, "smac.random_design.AbstractRandomDesign.check"]], "check() (smac.random_design.cosineannealingrandomdesign method)": [[92, "smac.random_design.CosineAnnealingRandomDesign.check"]], "check() (smac.random_design.dynamicmodulusrandomdesign method)": [[92, "smac.random_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.dynamicprobabilityrandomdesign method)": [[92, "smac.random_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.modulusrandomdesign method)": [[92, "smac.random_design.ModulusRandomDesign.check"]], "check() (smac.random_design.probabilityrandomdesign method)": [[92, "smac.random_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.abstractrandomdesign property)": [[92, "smac.random_design.AbstractRandomDesign.meta"]], "meta (smac.random_design.cosineannealingrandomdesign property)": [[92, "smac.random_design.CosineAnnealingRandomDesign.meta"]], "meta (smac.random_design.dynamicmodulusrandomdesign property)": [[92, "smac.random_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.dynamicprobabilityrandomdesign property)": [[92, "smac.random_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.modulusrandomdesign property)": [[92, "smac.random_design.ModulusRandomDesign.meta"]], "meta (smac.random_design.probabilityrandomdesign property)": [[92, "smac.random_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.abstractrandomdesign method)": [[92, "smac.random_design.AbstractRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.cosineannealingrandomdesign method)": [[92, "smac.random_design.CosineAnnealingRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicmodulusrandomdesign method)": [[92, "smac.random_design.DynamicModulusRandomDesign.next_iteration"]], "next_iteration() (smac.random_design.dynamicprobabilityrandomdesign method)": [[92, "smac.random_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design": [[92, "module-smac.random_design"]], "abstractrandomdesign (class in smac.random_design.abstract_random_design)": [[93, "smac.random_design.abstract_random_design.AbstractRandomDesign"]], "check() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[93, "smac.random_design.abstract_random_design.AbstractRandomDesign.check"]], "meta (smac.random_design.abstract_random_design.abstractrandomdesign property)": [[93, "smac.random_design.abstract_random_design.AbstractRandomDesign.meta"]], "next_iteration() (smac.random_design.abstract_random_design.abstractrandomdesign method)": [[93, "smac.random_design.abstract_random_design.AbstractRandomDesign.next_iteration"]], "smac.random_design.abstract_random_design": [[93, "module-smac.random_design.abstract_random_design"]], "cosineannealingrandomdesign (class in smac.random_design.annealing_design)": [[94, "smac.random_design.annealing_design.CosineAnnealingRandomDesign"]], "check() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[94, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.check"]], "meta (smac.random_design.annealing_design.cosineannealingrandomdesign property)": [[94, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.meta"]], "next_iteration() (smac.random_design.annealing_design.cosineannealingrandomdesign method)": [[94, "smac.random_design.annealing_design.CosineAnnealingRandomDesign.next_iteration"]], "smac.random_design.annealing_design": [[94, "module-smac.random_design.annealing_design"]], "dynamicmodulusrandomdesign (class in smac.random_design.modulus_design)": [[95, "smac.random_design.modulus_design.DynamicModulusRandomDesign"]], "modulusrandomdesign (class in smac.random_design.modulus_design)": [[95, "smac.random_design.modulus_design.ModulusRandomDesign"]], "check() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[95, "smac.random_design.modulus_design.DynamicModulusRandomDesign.check"]], "check() (smac.random_design.modulus_design.modulusrandomdesign method)": [[95, "smac.random_design.modulus_design.ModulusRandomDesign.check"]], "meta (smac.random_design.modulus_design.dynamicmodulusrandomdesign property)": [[95, "smac.random_design.modulus_design.DynamicModulusRandomDesign.meta"]], "meta (smac.random_design.modulus_design.modulusrandomdesign property)": [[95, "smac.random_design.modulus_design.ModulusRandomDesign.meta"]], "next_iteration() (smac.random_design.modulus_design.dynamicmodulusrandomdesign method)": [[95, "smac.random_design.modulus_design.DynamicModulusRandomDesign.next_iteration"]], "smac.random_design.modulus_design": [[95, "module-smac.random_design.modulus_design"]], "dynamicprobabilityrandomdesign (class in smac.random_design.probability_design)": [[96, "smac.random_design.probability_design.DynamicProbabilityRandomDesign"]], "probabilityrandomdesign (class in smac.random_design.probability_design)": [[96, "smac.random_design.probability_design.ProbabilityRandomDesign"]], "check() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[96, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.check"]], "check() (smac.random_design.probability_design.probabilityrandomdesign method)": [[96, "smac.random_design.probability_design.ProbabilityRandomDesign.check"]], "meta (smac.random_design.probability_design.dynamicprobabilityrandomdesign property)": [[96, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.meta"]], "meta (smac.random_design.probability_design.probabilityrandomdesign property)": [[96, "smac.random_design.probability_design.ProbabilityRandomDesign.meta"]], "next_iteration() (smac.random_design.probability_design.dynamicprobabilityrandomdesign method)": [[96, "smac.random_design.probability_design.DynamicProbabilityRandomDesign.next_iteration"]], "smac.random_design.probability_design": [[96, "module-smac.random_design.probability_design"]], "instanceseedbudgetkey (class in smac.runhistory)": [[97, "smac.runhistory.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory)": [[97, "smac.runhistory.InstanceSeedKey"]], "runhistory (class in smac.runhistory)": [[97, "smac.runhistory.RunHistory"]], "statustype (class in smac.runhistory)": [[97, "smac.runhistory.StatusType"]], "trialinfo (class in smac.runhistory)": [[97, "smac.runhistory.TrialInfo"]], "trialkey (class in smac.runhistory)": [[97, "smac.runhistory.TrialKey"]], "trialvalue (class in smac.runhistory)": [[97, "smac.runhistory.TrialValue"]], "__contains__() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.add"]], "add_running_trial() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.add_running_trial"]], "add_trial() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.add_trial"]], "average_cost() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory property)": [[97, "smac.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.empty"]], "finished (smac.runhistory.runhistory property)": [[97, "smac.runhistory.RunHistory.finished"]], "get_config() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_config"]], "get_config_id() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_config_id"]], "get_configs() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_cost"]], "get_instance_seed_budget_key() (smac.runhistory.trialinfo method)": [[97, "smac.runhistory.TrialInfo.get_instance_seed_budget_key"]], "get_instance_seed_budget_keys() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_instance_seed_budget_keys"]], "get_instance_seed_key() (smac.runhistory.instanceseedbudgetkey method)": [[97, "smac.runhistory.InstanceSeedBudgetKey.get_instance_seed_key"]], "get_instance_seed_key() (smac.runhistory.trialinfo method)": [[97, "smac.runhistory.TrialInfo.get_instance_seed_key"]], "get_min_cost() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_min_cost"]], "get_running_configs() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_running_configs"]], "get_running_trials() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_running_trials"]], "get_trials() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.get_trials"]], "has_config() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.has_config"]], "ids_config (smac.runhistory.runhistory property)": [[97, "smac.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.incremental_update_cost"]], "load() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.load"]], "min_cost() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory property)": [[97, "smac.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory property)": [[97, "smac.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.reset"]], "running (smac.runhistory.runhistory property)": [[97, "smac.runhistory.RunHistory.running"]], "save() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.save"]], "smac.runhistory": [[97, "module-smac.runhistory"]], "submitted (smac.runhistory.runhistory property)": [[97, "smac.runhistory.RunHistory.submitted"]], "sum_cost() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory method)": [[97, "smac.runhistory.RunHistory.update_from_json"]], "instanceseedbudgetkey (class in smac.runhistory.dataclasses)": [[98, "smac.runhistory.dataclasses.InstanceSeedBudgetKey"]], "instanceseedkey (class in smac.runhistory.dataclasses)": [[98, "smac.runhistory.dataclasses.InstanceSeedKey"]], "trajectoryitem (class in smac.runhistory.dataclasses)": [[98, "smac.runhistory.dataclasses.TrajectoryItem"]], "trialinfo (class in smac.runhistory.dataclasses)": [[98, "smac.runhistory.dataclasses.TrialInfo"]], "trialkey (class in smac.runhistory.dataclasses)": [[98, "smac.runhistory.dataclasses.TrialKey"]], "trialvalue (class in smac.runhistory.dataclasses)": [[98, "smac.runhistory.dataclasses.TrialValue"]], "get_instance_seed_budget_key() (smac.runhistory.dataclasses.trialinfo method)": [[98, "smac.runhistory.dataclasses.TrialInfo.get_instance_seed_budget_key"]], "get_instance_seed_key() (smac.runhistory.dataclasses.instanceseedbudgetkey method)": [[98, "smac.runhistory.dataclasses.InstanceSeedBudgetKey.get_instance_seed_key"]], "get_instance_seed_key() (smac.runhistory.dataclasses.trialinfo method)": [[98, "smac.runhistory.dataclasses.TrialInfo.get_instance_seed_key"]], "smac.runhistory.dataclasses": [[98, "module-smac.runhistory.dataclasses"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder)": [[99, "smac.runhistory.encoder.AbstractRunHistoryEncoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder)": [[99, "smac.runhistory.encoder.RunHistoryEIPSEncoder"]], "runhistoryencoder (class in smac.runhistory.encoder)": [[99, "smac.runhistory.encoder.RunHistoryEncoder"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder)": [[99, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder"]], "runhistorylogencoder (class in smac.runhistory.encoder)": [[99, "smac.runhistory.encoder.RunHistoryLogEncoder"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder)": [[99, "smac.runhistory.encoder.RunHistoryLogScaledEncoder"]], "runhistoryscaledencoder (class in smac.runhistory.encoder)": [[99, "smac.runhistory.encoder.RunHistoryScaledEncoder"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder)": [[99, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder"]], "get_configurations() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[99, "smac.runhistory.encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[99, "smac.runhistory.encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[99, "smac.runhistory.encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "runhistory (smac.runhistory.encoder.abstractrunhistoryencoder property)": [[99, "smac.runhistory.encoder.AbstractRunHistoryEncoder.runhistory"]], "smac.runhistory.encoder": [[99, "module-smac.runhistory.encoder"]], "transform() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[99, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstractrunhistoryencoder method)": [[99, "smac.runhistory.encoder.AbstractRunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryeipsencoder method)": [[99, "smac.runhistory.encoder.RunHistoryEIPSEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryencoder method)": [[99, "smac.runhistory.encoder.RunHistoryEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryinversescaledencoder method)": [[99, "smac.runhistory.encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogencoder method)": [[99, "smac.runhistory.encoder.RunHistoryLogEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorylogscaledencoder method)": [[99, "smac.runhistory.encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistoryscaledencoder method)": [[99, "smac.runhistory.encoder.RunHistoryScaledEncoder.transform_response_values"]], "transform_response_values() (smac.runhistory.encoder.runhistorysqrtscaledencoder method)": [[99, "smac.runhistory.encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "abstractrunhistoryencoder (class in smac.runhistory.encoder.abstract_encoder)": [[100, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder"]], "get_configurations() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.get_configurations"]], "meta (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[100, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.meta"]], "multi_objective_algorithm (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[100, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.multi_objective_algorithm"]], "runhistory (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder property)": [[100, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.runhistory"]], "smac.runhistory.encoder.abstract_encoder": [[100, "module-smac.runhistory.encoder.abstract_encoder"]], "transform() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform"]], "transform_response_values() (smac.runhistory.encoder.abstract_encoder.abstractrunhistoryencoder method)": [[100, "smac.runhistory.encoder.abstract_encoder.AbstractRunHistoryEncoder.transform_response_values"]], "smac.runhistory.encoder.boing_encoder": [[101, "module-smac.runhistory.encoder.boing_encoder"]], "runhistoryeipsencoder (class in smac.runhistory.encoder.eips_encoder)": [[102, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder"]], "smac.runhistory.encoder.eips_encoder": [[102, "module-smac.runhistory.encoder.eips_encoder"]], "transform_response_values() (smac.runhistory.encoder.eips_encoder.runhistoryeipsencoder method)": [[102, "smac.runhistory.encoder.eips_encoder.RunHistoryEIPSEncoder.transform_response_values"]], "runhistoryencoder (class in smac.runhistory.encoder.encoder)": [[103, "smac.runhistory.encoder.encoder.RunHistoryEncoder"]], "smac.runhistory.encoder.encoder": [[103, "module-smac.runhistory.encoder.encoder"]], "transform_response_values() (smac.runhistory.encoder.encoder.runhistoryencoder method)": [[103, "smac.runhistory.encoder.encoder.RunHistoryEncoder.transform_response_values"]], "runhistoryinversescaledencoder (class in smac.runhistory.encoder.inverse_scaled_encoder)": [[104, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder"]], "smac.runhistory.encoder.inverse_scaled_encoder": [[104, "module-smac.runhistory.encoder.inverse_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.inverse_scaled_encoder.runhistoryinversescaledencoder method)": [[104, "smac.runhistory.encoder.inverse_scaled_encoder.RunHistoryInverseScaledEncoder.transform_response_values"]], "runhistorylogencoder (class in smac.runhistory.encoder.log_encoder)": [[105, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder"]], "smac.runhistory.encoder.log_encoder": [[105, "module-smac.runhistory.encoder.log_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_encoder.runhistorylogencoder method)": [[105, "smac.runhistory.encoder.log_encoder.RunHistoryLogEncoder.transform_response_values"]], "runhistorylogscaledencoder (class in smac.runhistory.encoder.log_scaled_encoder)": [[106, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder"]], "smac.runhistory.encoder.log_scaled_encoder": [[106, "module-smac.runhistory.encoder.log_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.log_scaled_encoder.runhistorylogscaledencoder method)": [[106, "smac.runhistory.encoder.log_scaled_encoder.RunHistoryLogScaledEncoder.transform_response_values"]], "runhistoryscaledencoder (class in smac.runhistory.encoder.scaled_encoder)": [[107, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder"]], "smac.runhistory.encoder.scaled_encoder": [[107, "module-smac.runhistory.encoder.scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.scaled_encoder.runhistoryscaledencoder method)": [[107, "smac.runhistory.encoder.scaled_encoder.RunHistoryScaledEncoder.transform_response_values"]], "runhistorysqrtscaledencoder (class in smac.runhistory.encoder.sqrt_scaled_encoder)": [[108, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder"]], "smac.runhistory.encoder.sqrt_scaled_encoder": [[108, "module-smac.runhistory.encoder.sqrt_scaled_encoder"]], "transform_response_values() (smac.runhistory.encoder.sqrt_scaled_encoder.runhistorysqrtscaledencoder method)": [[108, "smac.runhistory.encoder.sqrt_scaled_encoder.RunHistorySqrtScaledEncoder.transform_response_values"]], "statustype (class in smac.runhistory.enumerations)": [[109, "smac.runhistory.enumerations.StatusType"]], "smac.runhistory.enumerations": [[109, "module-smac.runhistory.enumerations"]], "notevaluatederror": [[110, "smac.runhistory.errors.NotEvaluatedError"]], "smac.runhistory.errors": [[110, "module-smac.runhistory.errors"]], "runhistory (class in smac.runhistory.runhistory)": [[111, "smac.runhistory.runhistory.RunHistory"]], "__contains__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__contains__"]], "__eq__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__eq__"]], "__getitem__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__getitem__"]], "__iter__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__iter__"]], "__len__() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.__len__"]], "add() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.add"]], "add_running_trial() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.add_running_trial"]], "add_trial() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.add_trial"]], "average_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.average_cost"]], "config_ids (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.config_ids"]], "empty() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.empty"]], "finished (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.finished"]], "get_config() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_config"]], "get_config_id() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_config_id"]], "get_configs() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_configs"]], "get_configs_per_budget() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_configs_per_budget"]], "get_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_cost"]], "get_instance_seed_budget_keys() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_instance_seed_budget_keys"]], "get_min_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_min_cost"]], "get_running_configs() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_running_configs"]], "get_running_trials() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_running_trials"]], "get_trials() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.get_trials"]], "has_config() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.has_config"]], "ids_config (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.ids_config"]], "incremental_update_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.incremental_update_cost"]], "load() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.load"]], "min_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.min_cost"]], "multi_objective_algorithm (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.multi_objective_algorithm"]], "objective_bounds (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.objective_bounds"]], "reset() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.reset"]], "running (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.running"]], "save() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.save"]], "smac.runhistory.runhistory": [[111, "module-smac.runhistory.runhistory"]], "submitted (smac.runhistory.runhistory.runhistory property)": [[111, "smac.runhistory.runhistory.RunHistory.submitted"]], "sum_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.sum_cost"]], "update() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.update"]], "update_cost() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.update_cost"]], "update_costs() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.update_costs"]], "update_from_json() (smac.runhistory.runhistory.runhistory method)": [[111, "smac.runhistory.runhistory.RunHistory.update_from_json"]], "abstractrunner (class in smac.runner)": [[112, "smac.runner.AbstractRunner"]], "daskparallelrunner (class in smac.runner)": [[112, "smac.runner.DaskParallelRunner"]], "firstruncrashedexception": [[112, "smac.runner.FirstRunCrashedException"], [116, "smac.runner.exceptions.FirstRunCrashedException"]], "targetalgorithmabortexception": [[112, "smac.runner.TargetAlgorithmAbortException"], [116, "smac.runner.exceptions.TargetAlgorithmAbortException"]], "targetfunctionrunner (class in smac.runner)": [[112, "smac.runner.TargetFunctionRunner"]], "__call__() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.__call__"]], "__del__() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.__del__"]], "close() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.count_available_workers"]], "count_available_workers() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.is_running"]], "is_running() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.iter_results"]], "iter_results() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.iter_results"]], "meta (smac.runner.abstractrunner property)": [[112, "smac.runner.AbstractRunner.meta"]], "meta (smac.runner.targetfunctionrunner property)": [[112, "smac.runner.TargetFunctionRunner.meta"]], "run() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.run"]], "run() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.run"]], "run() (smac.runner.targetfunctionrunner method)": [[112, "smac.runner.TargetFunctionRunner.run"]], "run_wrapper() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.run_wrapper"]], "smac.runner": [[112, "module-smac.runner"]], "submit_trial() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.submit_trial"]], "submit_trial() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.abstractrunner method)": [[112, "smac.runner.AbstractRunner.wait"]], "wait() (smac.runner.daskparallelrunner method)": [[112, "smac.runner.DaskParallelRunner.wait"]], "abstractrunner (class in smac.runner.abstract_runner)": [[113, "smac.runner.abstract_runner.AbstractRunner"]], "count_available_workers() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.count_available_workers"]], "is_running() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.is_running"]], "iter_results() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.iter_results"]], "meta (smac.runner.abstract_runner.abstractrunner property)": [[113, "smac.runner.abstract_runner.AbstractRunner.meta"]], "run() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.run"]], "run_wrapper() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.run_wrapper"]], "smac.runner.abstract_runner": [[113, "module-smac.runner.abstract_runner"]], "submit_trial() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.submit_trial"]], "wait() (smac.runner.abstract_runner.abstractrunner method)": [[113, "smac.runner.abstract_runner.AbstractRunner.wait"]], "abstractserialrunner (class in smac.runner.abstract_serial_runner)": [[114, "smac.runner.abstract_serial_runner.AbstractSerialRunner"]], "count_available_workers() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[114, "smac.runner.abstract_serial_runner.AbstractSerialRunner.count_available_workers"]], "is_running() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[114, "smac.runner.abstract_serial_runner.AbstractSerialRunner.is_running"]], "iter_results() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[114, "smac.runner.abstract_serial_runner.AbstractSerialRunner.iter_results"]], "smac.runner.abstract_serial_runner": [[114, "module-smac.runner.abstract_serial_runner"]], "submit_trial() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[114, "smac.runner.abstract_serial_runner.AbstractSerialRunner.submit_trial"]], "wait() (smac.runner.abstract_serial_runner.abstractserialrunner method)": [[114, "smac.runner.abstract_serial_runner.AbstractSerialRunner.wait"]], "daskparallelrunner (class in smac.runner.dask_runner)": [[115, "smac.runner.dask_runner.DaskParallelRunner"]], "__del__() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.__del__"]], "close() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.close"]], "count_available_workers() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.count_available_workers"]], "is_running() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.is_running"]], "iter_results() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.iter_results"]], "run() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.run"]], "smac.runner.dask_runner": [[115, "module-smac.runner.dask_runner"]], "submit_trial() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.submit_trial"]], "wait() (smac.runner.dask_runner.daskparallelrunner method)": [[115, "smac.runner.dask_runner.DaskParallelRunner.wait"]], "smac.runner.exceptions": [[116, "module-smac.runner.exceptions"]], "targetfunctionrunner (class in smac.runner.target_function_runner)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner"]], "__call__() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.__call__"]], "meta (smac.runner.target_function_runner.targetfunctionrunner property)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.meta"]], "run() (smac.runner.target_function_runner.targetfunctionrunner method)": [[117, "smac.runner.target_function_runner.TargetFunctionRunner.run"]], "smac.runner.target_function_runner": [[117, "module-smac.runner.target_function_runner"]], "targetfunctionscriptrunner (class in smac.runner.target_function_script_runner)": [[118, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner"]], "__call__() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[118, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.__call__"]], "meta (smac.runner.target_function_script_runner.targetfunctionscriptrunner property)": [[118, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.meta"]], "run() (smac.runner.target_function_script_runner.targetfunctionscriptrunner method)": [[118, "smac.runner.target_function_script_runner.TargetFunctionScriptRunner.run"]], "smac.runner.target_function_script_runner": [[118, "module-smac.runner.target_function_script_runner"]], "scenario (class in smac.scenario)": [[119, "smac.scenario.Scenario"]], "__post_init__() (smac.scenario.scenario method)": [[119, "smac.scenario.Scenario.__post_init__"]], "count_instance_features() (smac.scenario.scenario method)": [[119, "smac.scenario.Scenario.count_instance_features"]], "count_objectives() (smac.scenario.scenario method)": [[119, "smac.scenario.Scenario.count_objectives"]], "load() (smac.scenario.scenario static method)": [[119, "smac.scenario.Scenario.load"]], "make_serializable() (smac.scenario.scenario static method)": [[119, "smac.scenario.Scenario.make_serializable"]], "meta (smac.scenario.scenario property)": [[119, "smac.scenario.Scenario.meta"]], "save() (smac.scenario.scenario method)": [[119, "smac.scenario.Scenario.save"]], "smac.scenario": [[119, "module-smac.scenario"]], "smac.utils": [[120, "module-smac.utils"]], "convert_configurations_to_array() (in module smac.utils.configspace)": [[121, "smac.utils.configspace.convert_configurations_to_array"]], "get_conditional_hyperparameters() (in module smac.utils.configspace)": [[121, "smac.utils.configspace.get_conditional_hyperparameters"]], "get_config_hash() (in module smac.utils.configspace)": [[121, "smac.utils.configspace.get_config_hash"]], "get_types() (in module smac.utils.configspace)": [[121, "smac.utils.configspace.get_types"]], "print_config_changes() (in module smac.utils.configspace)": [[121, "smac.utils.configspace.print_config_changes"]], "smac.utils.configspace": [[121, "module-smac.utils.configspace"]], "batch() (in module smac.utils.data_structures)": [[122, "smac.utils.data_structures.batch"]], "recursively_compare_dicts() (in module smac.utils.data_structures)": [[122, "smac.utils.data_structures.recursively_compare_dicts"]], "smac.utils.data_structures": [[122, "module-smac.utils.data_structures"]], "get_logger() (in module smac.utils.logging)": [[123, "smac.utils.logging.get_logger"]], "setup_logging() (in module smac.utils.logging)": [[123, "smac.utils.logging.setup_logging"]], "smac.utils.logging": [[123, "module-smac.utils.logging"]], "normalize_costs() (in module smac.utils.multi_objective)": [[124, "smac.utils.multi_objective.normalize_costs"]], "smac.utils.multi_objective": [[124, "module-smac.utils.multi_objective"]], "calculate_pareto_front() (in module smac.utils.pareto_front)": [[125, "smac.utils.pareto_front.calculate_pareto_front"]], "smac.utils.pareto_front": [[125, "module-smac.utils.pareto_front"]], "sort_by_crowding_distance() (in module smac.utils.pareto_front)": [[125, "smac.utils.pareto_front.sort_by_crowding_distance"]], "smac.utils.subspaces": [[126, "module-smac.utils.subspaces"]], "smac.utils.subspaces.boing_subspace": [[127, "module-smac.utils.subspaces.boing_subspace"]], "smac.utils.subspaces.turbo_subspace": [[128, "module-smac.utils.subspaces.turbo_subspace"]]}})